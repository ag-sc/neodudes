id,question,sparql,prompt
1,List all boardgames by GMT.,"```sparql
SELECT ?game
WHERE {
  ?game rdf:type dbo:BoardGame ;
        dbo:publisher dbr:GMT_Games .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
2,Who developed Skype?,"```sparql
SELECT ?developer
WHERE {
  ?skype dbo:developer ?developer .
  FILTER regex(str(?developer), ""Skype"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
3,Which people were born in Heraklion?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
4,In which U.S. state is Area 51 located?,"```sparql
SELECT ?stateLabel
WHERE {
    <http://dbpedia.org/resource/Area_51> dbp:location ?state .
    ?state rdfs:label ?stateLabel .
    FILTER(LANG(?stateLabel) = 'en')
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
5,Who is the mayor of New York City?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/New_York_City> dbo:leaderName ?mayor
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
6,Which countries have places with more than two caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?place rdf:type dbo:Place .
  ?place dbo:location ?country .
  ?place rdf:type dbo:Cave .
}
GROUP BY ?country
HAVING (COUNT(?place) > 2)
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
7,Where did Abraham Lincoln die?,"```sparql
SELECT ?place
WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
8,Which airports does Air China serve?,"```sparql
SELECT DISTINCT ?airport
WHERE {
  ?airline a dbo:Airline ;
           dbo:targetAirport ?airport ;
           foaf:name ""Air China""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
9,Give me all actors starring in movies directed by and starring William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:director <http://dbpedia.org/resource/William_Shatner> .
  ?movie dbo:starring <http://dbpedia.org/resource/William_Shatner> .
  ?actor a dbo:Actor .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
10,What are the official languages of the Philippines?,"```sparql
SELECT ?language
WHERE {
  dbr:Philippines dbo:officialLanguage ?language .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
11,Give me all Danish films.,"```sparql
SELECT ?film
WHERE {
  ?film a dbo:Film ;
        dbo:country dbr:Denmark .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?movie
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Brad_Pitt> ;
         dbo:director <http://dbpedia.org/resource/Guy_Ritchie> .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
13,Give me the grandchildren of Bruce Lee.,"```sparql
SELECT ?grandchild
WHERE {
  dbr:Bruce_Lee dbo:child/dbo:child ?grandchild .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
14,Which other weapons did the designer of the Uzi develop?,"```sparql
SELECT DISTINCT ?otherWeapon
WHERE {
  ?uzi dbo:designer ?designer .
  ?designer dbo:designer ?otherDesigner .
  ?otherDesigner dbo:designed ?otherWeapon .
  FILTER (?otherWeapon != dbo:Uzi)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
15,Who is the owner of Universal Studios?,"```sparql
SELECT ?owner
WHERE {
  dbr:Universal_Studios dbo:owner ?owner .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
16,Which state of the USA has the highest population density?,"```sparql
SELECT ?state ?populationDensity
WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?populationDensity .
}
ORDER BY DESC(?populationDensity)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
17,Which monarchs were married to a German?,"```sparql
SELECT DISTINCT ?monarch
WHERE {
  ?monarch a dbo:Monarch ;
          dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  FILTER regex(str(?birthPlace), ""Germany"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
18,Which organizations were founded in 1950?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:formationYear ""1950""^^xsd:gYear .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
19,Who created the comic Captain America?,"SELECT ?creator
WHERE {
  ?comic dbo:creator ?creator .
  ?comic dbo:wikiPageID ?id .
  FILTER (?id = 151470) 
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
20,Give me the Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut dbo:teamMember dbr:Apollo_14 .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
21,Who wrote the book The pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
22,Which state of the United States of America has the highest density?,"```sparql
SELECT ?state
WHERE {
  ?state a dbo:State ;
         dbp:densityrank ?density .
}
ORDER BY DESC(?density)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
23,Which spaceflights were launched from Baikonur?,"```sparql
SELECT ?spaceflight
WHERE {
  ?spaceflight dbo:launchPad dbr:Baikonur_Cosmodrome .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
24,Give me a list of all trumpet players that were bandleaders.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet ;
              dbo:occupation dbr:Bandleader .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
25,Which U.S. states are in the same timezone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timezone .
  ?state dbpedia-owl:timeZone ?timezone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
26,Which U.S. states possess gold minerals?,"```sparql
SELECT DISTINCT ?state
WHERE {
  ?state dbo:placeType dbr:State .
  ?state dbo:product dbr:Gold .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
27,Who is the daughter of Ingrid Bergman married to?,"```sparql
SELECT ?daughter ?spouse
WHERE {
  ?daughter dbo:child <http://dbpedia.org/resource/Ingrid_Bergman> .
  ?daughter dbo:spouse ?spouse .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
28,How deep is Lake Placid?,"```sparql
SELECT ?depth
WHERE {
  dbr:Lake_Placid dbo:maximumDepth ?depth
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
29,Show me all museums in London.,"```sparql
SELECT ?museum
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:London .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
30,Which caves have more than 3 entrances?,"```sparql
SELECT ?cave
WHERE {
  ?cave dbo:entranceCount ?count .
  FILTER (?count > 3)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
31,Who is the tallest player of the Atlanta Falcons?,"```sparql
SELECT ?player ?height
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
          dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
32,What are the top-10 action role-playing video games according to IGN?,"```sparql
SELECT DISTINCT ?game ?rank
WHERE {
  ?game rdf:type dbo:VideoGame ;
        dbo:genre dbr:Action_role-playing_game ;
        dbo:publisher dbr:IGN .
  ?game dbo:IGNRank ?rank .
}
ORDER BY ?rank
LIMIT 10
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
SELECT ?writer ?name
WHERE {
  ?writer a dbo:Writer ;
          dbo:award dbr:Nobel_Prize_in_Literature ;
          foaf:name ?name .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
34,Show me all basketball players that are higher than 2 meters.,"```sparql
SELECT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:height ?height .
  FILTER (?height > 2)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
35,When was the Statue of Liberty built?,"SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Statue_of_Liberty> <http://dbpedia.org/ontology/completionDate> ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
36,Which states border Illinois?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbr:Illinois dbo:borderingStates ?state .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
37,Who developed Minecraft?,"```sparql
SELECT ?developer
WHERE {
  ?game dbo:developer ?developer ;
        rdfs:label ""Minecraft""@en .
  ?developer a dbo:Company .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
38,Where did Hillel Slovak die?,"```sparql
SELECT ?place
WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?place .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
39,What movies does Jesse Eisenberg play in?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
40,Give all swimmers that were born in Moscow.,"```sparql
SELECT ?swimmer
WHERE {
  ?swimmer a dbo:Person ;
           dbo:birthPlace dbr:Moscow ;
           dbo:occupation dbr:Swimming .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
41,Give me all cosmonauts.,"```sparql
SELECT ?cosmonaut
WHERE {
  ?cosmonaut a <http://dbpedia.org/ontology/Cosmonaut> .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
42,Give me all Swiss non-profit organizations.,"```sparql
SELECT ?organization
WHERE {
  ?organization a <http://dbpedia.org/ontology/Nonprofit> ;
               dct:subject dbc:Non-profit_organisations_based_in_Switzerland .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
43,Which presidents were born in 1945?,"```sparql
SELECT DISTINCT ?presidentName
WHERE {
  ?president a dbpedia-owl:President ;
             dbpprop:birthDate ?birthDate ;
             rdfs:label ?presidentName .
  FILTER (regex(str(?birthDate), ""1945""))
  FILTER (lang(?presidentName) = 'en')
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
44,What kind of music did Lou Reed play?,"```sparql
SELECT DISTINCT ?genre
WHERE {
  ?artist dbo:genre ?genre .
  FILTER (?artist = dbr:Lou_Reed)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
45,Where do the Red Sox play?,"```sparql
SELECT ?team ?stadium
WHERE {
  ?team a dbo:SportsTeam ;
        dbo:ground ?stadium ;
        rdfs:label ""Boston Red Sox""@en .
  ?stadium a dbo:Stadium ;
           rdfs:label ?stadiumName .
  FILTER (lang(?stadiumName) = 'en')
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
46,Show a list of soccer clubs that play in the Bundesliga.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league dbr:Bundesliga .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
47,Which volcanos in Japan erupted since 2000?,"```sparql
SELECT DISTINCT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:eruptionYear ?year .
  FILTER (?year >= 2000 && ?year <= 2016)
  FILTER regex(str(?volcano), ""Japan"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
48,Which bridges cross the Seine?,"```sparql
SELECT DISTINCT ?bridge
WHERE {
  ?bridge dbo:crosses dbr:Seine .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
49,What is the official color of the University of Oxford?,"```sparql
SELECT ?color
WHERE {
  dbr:University_of_Oxford dbo:officialSchoolColour ?color
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
50,How many films did Hal Roach produce?,"```sparql
SELECT (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film a dbo:Film .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
51,Give me all Danish movies.,"```sparql
SELECT ?movie
WHERE {
  ?movie a dbo:Film ;
         dbo:country dbr:Denmark .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
52,What is the most frequent cause of death?,"```sparql
SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
  ?person dbo:deathCause ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
53,Who are the four youngest MVP basketball players?,"```sparql
SELECT DISTINCT ?player ?name ?birthDate
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:birthDate ?birthDate ;
          rdfs:label ?name .
  FILTER (LANG(?name) = 'en' && ?birthDate != 'NULL' && ?birthDate != '' && ?name != 'NULL' && ?name != '')
}
ORDER BY ?birthDate
LIMIT 4
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
54,Give me all companies in Munich.,"```sparql
SELECT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:location dbr:Munich .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
55,Give me the capitals of all countries that the Himalayas run through.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?capital
WHERE {
  ?country dbo:capital ?capital ;
           dbo:area ?area .
  FILTER regex(str(?area), ""Himalayas"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
56,How many movies did Park Chan-wook direct?,"```sparql
SELECT (COUNT(?movie) AS ?count)
WHERE {
  ?movie dbo:director dbr:Park_Chan-wook .
  ?movie rdf:type dbo:Film .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
57,Which rivers flow into a German lake?,"```sparql
SELECT DISTINCT ?river ?riverName
WHERE {
  ?river dbo:inflow ?lake .
  ?lake dbo:country dbr:Germany .
  ?river rdfs:label ?riverName .
  FILTER (LANG(?riverName) = 'en')
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
58,How many airlines are there?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
59,Give me all islands that belong to Japan.,"```sparql
SELECT ?island
WHERE {
  ?island rdf:type dbo:Island .
  ?island dbo:country dbr:Japan .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
60,How many inhabitants does Maribor have?,"SELECT ?population
WHERE {
  dbr:Maribor dbo:populationTotal ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
61,Give me all Apollo 14 astronauts.,"SELECT ?astronaut
WHERE {
  ?astronaut dbo:teamMember dbr:Apollo_14
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
62,Which companies have more than 1 million employees?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
63,In which films directed by Garry Marshall was Julia Roberts starring?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts ;
        dbo:director dbr:Garry_Marshall .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
64,Give me all soccer clubs in the Premier League.,"```sparql
SELECT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league dbr:Premier_League .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
65,What is the highest place of the Urals?,"```sparql
SELECT ?place ?elevation
WHERE {
  ?place dbo:location ?location .
  ?location dbo:locatedInArea dbr:Ural_Mountains .
  ?place dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
66,Who is the governor of Wyoming?,"```sparql
SELECT ?governor
WHERE {
  ?governor a dbo:Person ;
            dbo:position/dbp:title ""Governor of Wyoming"" ;
            dbo:region dbr:Wyoming .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
67,Where did the architect of the Eiffel Tower study?,"```sparql
SELECT ?university
WHERE {
  ?architect dbo:architect dbr:Gustave_Eiffel .
  ?architect dbo:almaMater ?university .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
68,Give me all world heritage sites designated within the past two years.,"```sparql
SELECT ?site ?siteLabel ?designationDate
WHERE {
  ?site rdf:type dbo:WorldHeritageSite ;
        dbo:designationDate ?designationDate .
  FILTER (YEAR(?designationDate) >= YEAR(NOW()) - 2)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
69,Give me all actors who were born in Paris after 1950.,"```sparql
SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace/dbo:location/dbo:location ?birthPlace .
  ?birthPlace dbo:location/dbo:location/dbo:location ?city .
  ?city rdfs:label ""Paris""@en .
  ?actor dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) > 1950)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
70,Which movies star both Liz Taylor and Richard Burton?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
71,Give me all Australian nonprofit organizations.,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a <http://dbpedia.org/ontology/NonprofitOrganisation> ;
               dct:subject dbc:Non-profit_organisations_based_in_Australia .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
72,Which pope succeeded John Paul II?,"SELECT ?successor
WHERE {
  dbr:Pope_John_Paul_II dbo:successor ?successor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
73,Give me all ESA astronauts.,"```sparql
SELECT DISTINCT ?astronaut ?name
WHERE {
  ?astronaut a dbo:Astronaut ;
             foaf:name ?name ;
             dbo:agency dbr:European_Space_Agency .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
74,Who was president of Pakistan in 1978?,"SELECT ?president
WHERE {
  ?president dbo:office ?office .
  ?office dbo:incumbent/dbo:positionTitle ?positionTitle .
  FILTER (regex(?positionTitle, ""President of Pakistan"", ""i"")) .
  ?office dbo:startDate ?startDate .
  ?office dbo:endDate ?endDate .
  FILTER (xsd:date(?startDate) <= xsd:date(""1978-01-01"") && xsd:date(?endDate) >= xsd:date(""1978-12-31""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
75,Who is the owner of Rolls-Royce?,"```sparql
SELECT ?owner
WHERE {
  dbr:Rolls-Royce dbo:owner ?owner .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
76,How many museums does Paris have?,"```sparql
SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:Paris .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
77,Where was JFK assassinated?,"```sparql
SELECT ?place
WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?place .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
78,Give me all federal chancellors of Germany.,"```sparql
SELECT ?chancellor
WHERE {
  ?chancellor a dbo:Person ;
             dbo:title ""Federal Chancellor of Germany"" .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
79,Show me everyone who was born on Halloween.,"```sparql
SELECT ?person ?name
WHERE {
  ?person dbo:birthDate ""10-31""@en ;
          foaf:name ?name .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
80,Which beer originated in Ireland?,"```sparql
SELECT DISTINCT ?beer
WHERE {
    ?beer dbo:origin <http://dbpedia.org/resource/Ireland> .
    ?beer a dbo:Beer .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
81,To which countries does the Himalayan mountain system extend?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?mountainSystem dbo:location ?country ;
                  dbo:locatedInArea dbr:Himalayas .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
82,Which actors were born in Germany?,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace/dbo:country dbr:Germany .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
83,How much carbs does peanut butter have?,"SELECT ?carbs
WHERE {
  dbr:Peanut_butter dbp:carbs ?carbs
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
84,Who produced the most films?,"```sparql
SELECT ?producer (COUNT(?film) AS ?numFilmsProduced)
WHERE {
  ?producer a dbo:Person .
  ?film dbo:producer ?producer .
} 
GROUP BY ?producer
ORDER BY DESC(?numFilmsProduced)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
85,How many employees does Google have?,"SELECT ?numberOfEmployees
WHERE {
  dbpedia:Google dbo:numberOfEmployees ?numberOfEmployees
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
86,Give me all actors who were born in Berlin.,"```sparql
SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Berlin .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
87,Who created Goofy?,"```sparql
SELECT ?creator
WHERE {
  dbr:Goofy dbo:creator ?creator
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
88,Which music albums contain the song Last Christmas?,"```sparql
SELECT DISTINCT ?album
WHERE {
  ?song dbo:album ?album .
  ?song foaf:name ""Last Christmas""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
89,When was Alberta admitted as province?,"```sparql
SELECT ?admittanceDate
WHERE {
  dbr:Alberta dbp:admittanceDate ?admittanceDate
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
90,How many missions does the Soyuz programme have?,"```sparql
SELECT (COUNT(?mission) AS ?numMissions)
WHERE {
  ?mission dct:type dbc:Soyuz_programme_missions .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
91,Give me all the TV shows with Neil Patrick Harris.,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris .
  ?show rdf:type dbo:TelevisionShow .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
92,When were the Hells Angels founded?,"SELECT ?foundingDate
WHERE {
  dbr:Hells_Angels dbo:foundingDate ?foundingDate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
93,What is the net income of Apple?,"SELECT ?netIncome
WHERE {
  dbpedia:Apple dbo:netIncome ?netIncome
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
94,Give me all Swedish holidays.,"```sparql
SELECT ?holiday
WHERE {
  ?holiday rdf:type dbo:Holiday ;
           dbo:country dbr:Sweden .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
95,In which city was the former Dutch queen Juliana buried?,"```sparql
SELECT ?city
WHERE {
  dbr:Juliana_of_the_Netherlands dbp:burialPlace ?city .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
96,List all the musicals with music by Leonard Bernstein.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical a dbo:Musical ;
           dbo:musicBy dbr:Leonard_Bernstein .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
97,Give me all companies in the advertising industry.,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:industry dbr:Advertising.
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
98,What is the largest metropolitan area in Washington state?,"```sparql
SELECT ?metropolitanArea ?metropolitanAreaName
WHERE {
  ?metropolitanArea a dbo:PopulatedPlace ;
                   dbo:isPartOf <http://dbpedia.org/resource/Washington_(state)> ;
                   dbo:populationTotal ?population .
  ?metropolitanArea rdfs:label ?metropolitanAreaName .
  FILTER(langMatches(lang(?metropolitanAreaName), ""en""))
}
ORDER BY DESC(?population)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
99,Who killed John Lennon?,"```sparql
SELECT ?killer
WHERE {
  dbr:John_Lennon dbo:deathCause ?cause .
  ?killer dbo:conviction dbr:John_Lennon .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
100,Which writers studied in Istanbul?,"```sparql
SELECT DISTINCT ?writer
WHERE {
  ?writer a dbo:Writer .
  ?writer dbo:education/dbo:location dbr:Istanbul
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
101,Give me all Australian metalcore bands.,"```sparql
SELECT DISTINCT ?band
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:genre dbr:Metalcore ;
        dct:subject dbc:Australian_metalcore_musical_groups .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
102,Which countries adopted the Euro?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country a dbo:Country ;
           dbo:currency dbr:Euro .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
103,Give me all types of eating disorders.,"```sparql
SELECT DISTINCT ?disorder
WHERE {
  ?disorder dct:subject dbc:Eating_disorders .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
104,Was Marc Chagall a jew?,"```sparql
SELECT ?person ?personName
WHERE {
  ?person rdf:type dbo:Person .
  ?person foaf:name ?personName .
  ?person dbo:religion dbr:Judaism .
  FILTER (?personName = ""Marc Chagall"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
105,What was Brazil's lowest rank in the FIFA World Ranking?,"```sparql
SELECT ?rank
WHERE {
  dbpedia:Brazil dbp:fifaMin ?rank .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
106,How many films did Leonardo DiCaprio star in?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
107,Was Margaret Thatcher a chemist?,"```sparql
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Margaret Thatcher""@en .
  ?person dbo:profession dbr:Chemist .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
108,Which U.S. states are in the same time zone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbp:timeZone ?timeZone .
  ?state dbp:timeZone ?timeZone .
  ?state a dbo:State .
  FILTER (?state != dbpedia:Utah)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
109,Give me all books written by Danielle Steel.,"```sparql
SELECT ?book
WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
110,Which country has the most official languages?,"```sparql
SELECT ?country (COUNT(?language) AS ?numLanguages)
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
}
GROUP BY ?country
ORDER BY DESC(?numLanguages)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
111,What is the total amount of men and women serving in the FDNY?,"```sparql
SELECT (SUM(?maleCount) as ?totalMen) (SUM(?femaleCount) as ?totalWomen)
WHERE {
  ?fdny a dbo:Fire_Department .
  ?fdny dbp:employees ?employees .
  ?employees dbo:person ?person .
  ?person dbo:gender ?gender .
  ?person dbo:occupation ?occupation .
  FILTER(?occupation = ""Firefighter"")
  BIND(IF(?gender = ""Male"", 1, 0) AS ?maleCount)
  BIND(IF(?gender = ""Female"", 1, 0) AS ?femaleCount)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
112,Which actor played Chewbacca?,"```sparql
SELECT ?actor
WHERE {
  ?chewbacca dbo:characterPortrayed dbr:Chewbacca ;
              dbo:portrayer ?actor .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
113,Give me all libraries established earlier than 1400.,"```sparql
SELECT DISTINCT ?library ?name ?established
WHERE {
  ?library a dbo:Library ;
           foaf:name ?name ;
           dbp:established ?established .
  FILTER (?established < ""1400-01-01""^^xsd:date)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
114,Which programming languages were influenced by Perl?,"```sparql
SELECT DISTINCT ?language
WHERE {
    ?language dbo:influenced dbo:Perl .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
115,In which U.S. state is Mount McKinley located?,"```sparql
SELECT ?state
WHERE {
    <http://dbpedia.org/resource/Mount_McKinley> dbo:locatedInArea ?state .
    ?state a dbo:State
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
116,What airlines are part of the SkyTeam alliance?,"```sparql
SELECT ?airline
WHERE {
  ?airline dbo:alliance dbr:SkyTeam
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
117,Which ships were called after Benjamin Franklin?,"```sparql
SELECT ?ship
WHERE {
  ?ship dbp:shipNamesake dbr:Benjamin_Franklin .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
118,Give me all Methodist politicians.,"```sparql
SELECT DISTINCT ?politician
WHERE {
  ?politician a <http://dbpedia.org/ontology/Politician> ;
              dcterms:subject <http://dbpedia.org/resource/Category:Methodist_politicians> .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
119,What other books have been written by the author of The Fault in Our Stars?,"```sparql
SELECT DISTINCT ?book
WHERE {
  ?author a dbo:Person ;
          foaf:name ""John Green"" .
  ?book a dbo:Book ;
        dbo:author ?author .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
120,What is the highest mountain?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
121,Which poet wrote the most books?,"```sparql
SELECT ?poet (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a dbo:Writer .
  ?poet dbo:author ?book .
} 
GROUP BY ?poet
ORDER BY DESC(?numBooks)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
122,Which programming languages influenced Javascript?,"```sparql
SELECT DISTINCT ?influencingLanguage
WHERE {
  ?programmingLanguage dbo:influenced dbo:JavaScript .
  ?programmingLanguage a dbo:ProgrammingLanguage .
  ?programmingLanguage rdfs:label ?influencingLanguage .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
123,Which musician wrote the most books?,"```sparql
SELECT ?musician (COUNT(?book) AS ?numBooks)
WHERE {
  ?musician a dbo:Musician ;
            dbo:author ?book .
}
GROUP BY ?musician
ORDER BY DESC(?numBooks)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
124,Which films starring Clint Eastwood did he direct himself?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?film
WHERE {
  ?film dbo:director <http://dbpedia.org/resource/Clint_Eastwood> .
  ?film dbo:starring <http://dbpedia.org/resource/Clint_Eastwood> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
125,Which software has been developed by organizations founded in California?,"```sparql
SELECT DISTINCT ?software
WHERE {
  ?org dbo:location dbr:California .
  ?org dbo:product ?software .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
126,Which instruments does Cat Stevens play?,"```sparql
SELECT ?instrument
WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
127,How many airlines are members of the Star Alliance?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline ;
           dbo:alliance dbr:Star_Alliance .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
128,Give me all actors called Baldwin.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?name .
  FILTER regex(?name, ""Baldwin"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
129,Who wrote The Hunger Games?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
        rdfs:label ""The Hunger Games""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
130,For which label did Elvis record his first album?,"SELECT ?label
WHERE {
  ?album rdf:type dbo:Album ;
         dbo:artist dbr:Elvis_Presley ;
         rdfs:label ?label .
}
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
131,Is Christian Bale starring in Batman Begins?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  FILTER regex(str(?film), ""Batman Begins"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
132,Where is the residence of the prime minister of Spain?,"SELECT ?residence WHERE {
  dbr:Prime_Minister_of_Spain dbp:residence ?residence
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
133,Which actor was casted in the most movies?,"```sparql
SELECT ?actor (COUNT(?movie) AS ?numMovies)
WHERE {
  ?movie dbo:starring ?actor .
}
GROUP BY ?actor
ORDER BY DESC(?numMovies)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
134,Which countries have more than two official languages?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?lang1, ?lang2 .
  FILTER (?lang1 != ?lang2)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
135,Which countries have more than ten caves?,"```sparql
SELECT ?country
WHERE {
  ?cave a dbo:Cave .
  ?cave dbo:location ?country .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 10)
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"```sparql
SELECT ?song
WHERE {
  ?song a dbo:Song ;
        dbo:artist dbr:Bruce_Springsteen ;
        dbo:releaseDate ?date .
  FILTER (xsd:integer(SUBSTR(str(?date), 1, 4)) >= 1980 && xsd:integer(SUBSTR(str(?date), 1, 4)) <= 1990)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
137,Which television shows were created by John Cleese?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show rdf:type dbo:TelevisionShow .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
138,When did Latvia join the EU?,"```sparql
SELECT ?date
WHERE {
  dbr:Latvia dbo:accessioneudate ?date
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
139,Which soccer players were born on Malta?,"```sparql
SELECT DISTINCT ?player
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthPlace/dbo:country dbr:Malta .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
140,How many politicians graduated from Columbia University?,"```sparql
SELECT (COUNT(?politician) AS ?countPoliticians)
WHERE {
  ?politician a dbo:Person ;
              dbo:almaMater dbr:Columbia_University .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
141,Give me the birthdays of all actors of the television show Charmed.,"```sparql
SELECT ?actor ?birthday
WHERE {
  ?charmed dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
  FILTER regex(str(?charmed), ""Charmed"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
142,Which telecommunications organizations are located in Belgium?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation ;
               dbo:location dbr:Belgium ;
               dbp:industry dbr:Telecommunications .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
143,Give me a list of all lakes in Denmark.,"```sparql
SELECT ?lake
WHERE {
  ?lake a dbo:Lake ;
        dbo:country dbr:Denmark .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
144,How many children does Eddie Murphy have?,"```sparql
SELECT (COUNT(?child) as ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Eddie_Murphy> dbpedia-owl:child ?child .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
145,Show me all English Gothic buildings in Kent.,"```sparql
SELECT ?building
WHERE {
  ?building a dbo:Building ;
           dbo:location dbr:Kent ;
           dbo:architecturalStyle dbr:English_Gothic_architecture .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
146,Who is the manager of Real Madrid?,"```sparql
SELECT ?manager
WHERE {
  dbr:Real_Madrid dbo:manager ?manager .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
147,In which countries can you pay using the West African CFA franc?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
148,Which holidays are celebrated around the world?,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
149,What is the longest river?,"```sparql
SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
150,Which organizations were founded in 1930?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:formationYear 1930
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
151,What is the birth name of Angela Merkel?,"```sparql
SELECT ?birthName
WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
152,Who has Tom Cruise been married to?,"```sparql
SELECT ?spouse
WHERE {
  dbr:Tom_Cruise dbo:spouse ?spouse .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
153,Which weapons did Heckler & Koch develop?,"SELECT DISTINCT ?weapon
WHERE {
  ?weapon dbo:developer dbr:Heckler_&_Koch .
  ?weapon rdf:type dbo:Weapon .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
154,What is the smallest city by area in Germany?,"```sparql
SELECT ?city ?area
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:Germany ;
        dbo:areaTotal ?area .
}
ORDER BY ?area
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
155,What is the ruling party in Lisbon?,"```sparql
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Lisbon> dbp:leaderParty ?party .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
156,How heavy is Jupiter's lightest moon?,"```sparql
SELECT ?moon ?mass
WHERE {
  ?moon dbo:planet dbr:Jupiter ;
        dbo:mass ?mass .
}
ORDER BY ASC(?mass)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
157,How many employees does IBM have?,"```sparql
SELECT ?numberOfEmployees
WHERE {
  dbr:IBM dbo:numberOfEmployees ?numberOfEmployees
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
158,List all episodes of the first season of the HBO television series The Sopranos!,"```sparql
SELECT ?episode
WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber ""1"" .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
159,What does ICRO stand for?,"```sparql
SELECT ?definition
WHERE {
  dbr:ICRO dbo:abbreviation ?definition
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
160,Does the new Battlestar Galactica series have more episodes than the old one?,"```sparql
SELECT ?newEpisodes ?oldEpisodes
WHERE {
  {
    SELECT (SUM(?episodes) AS ?newEpisodes)
    WHERE {
      ?newSeries dbo:numberOfEpisodes ?episodes .
      ?newSeries rdf:type dbo:TelevisionShow .
      ?newSeries foaf:name ""Battlestar Galactica"" .
      FILTER(langMatches(lang(?newSeries), ""en""))
    }
  }
  {
    SELECT (SUM(?episodes) AS ?oldEpisodes)
    WHERE {
      ?oldSeries dbo:numberOfEpisodes ?episodes .
      ?oldSeries rdf:type dbo:TelevisionShow .
      ?oldSeries foaf:name ""Battlestar Galactica"" .
      FILTER(langMatches(lang(?oldSeries), ""en""))
    }
  }
}
```
",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
161,Give me all films produced by Hal Roach.,"```sparql
SELECT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
162,Who played Agent Smith in Matrix?,"```sparql
SELECT ?actor
WHERE {
  dbpedia:Agent_Smith dbo:starring ?actor .
  ?actor a dbo:Person .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
163,Which Greek parties are pro-European?,"```sparql
SELECT DISTINCT ?party
WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:alliance ?alliance .
  ?alliance rdfs:label ?allianceLabel .
  FILTER(REGEX(?allianceLabel, ""pro-European"", ""i"")) .
  FILTER(REGEX(?party, ""Greek"", ""i"")) .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
164,Give me a list of all bandleaders that play trumpet.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet .
  FILTER EXISTS { ?bandleader dbo:occupation dbr:Bandleader }
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
165,What is the second highest mountain on Earth?,"```sparql
SELECT DISTINCT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 2
OFFSET 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
166,Is Egypts largest city also its capital?,"```sparql
SELECT ?capital ?largestCity
WHERE {
  dbr:Egypt dbo:capital ?capital ;
            dbo:largestCity ?largestCity .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
167,Which rockets were launched from Baikonur?,"SELECT ?rocket
WHERE {
  ?rocket dbpedia-owl:launchSite dbr:Baikonur_Cosmodrome .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
168,How many programming languages are there?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
169,Which Chess players died in the same place they were born in?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?player ?birthPlace ?deathPlace
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
170,Who is the owner of Facebook?,"SELECT ?owner
WHERE {
  dbr:Facebook dbo:foundedBy ?owner .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
171,Give me all movies with Tom Cruise.,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
172,In which U.S. state is Fort Knox located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Fort_Knox> dbp:location ?state .
  ?state a dbo:State
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"```sparql
SELECT ?city
WHERE {
  ?city a dbo:City ;
        dbo:isPartOf <http://dbpedia.org/resource/New_Jersey> ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
174,Which mountains are higher than the Nanga Parbat?,"SELECT DISTINCT ?higher_mountains
WHERE {
  ?higher_mountains dbo:elevation ?elevation .
  FILTER (?elevation > (SELECT ?elevation_nanga_parbat WHERE { dbr:Nanga_Parbat dbo:elevation ?elevation_nanga_parbat }))
  FILTER (?higher_mountains != dbr:Nanga_Parbat)
}
ORDER BY ?elevation",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
175,Give me all B-sides of the Ramones.,"```sparql
SELECT ?bSide
WHERE {
  ?song dbo:bSide ?bSide .
  ?song dbo:artist dbr:Ramones .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
176,What are the specialities of the UNC Health Care?,"```sparql
SELECT ?speciality
WHERE {
  dbr:UNC_Health_Care dbo:speciality ?speciality
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
177,When was Olof Palme shot?,"```sparql
SELECT ?date
WHERE {
  dbr:Olof_Palme dbo:deathDate ?date
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
178,List the seven kings of Rome.,"SELECT ?king
WHERE {
  ?king a dbo:Monarch ;
        dbo:title ""King of Rome"" .
}
LIMIT 7",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
179,Give me all people that were born in Vienna and died in Berlin.,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Vienna ;
         dbo:deathPlace dbr:Berlin .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
180,Is Darth Vader Luke’s father?,"SELECT ?father
WHERE {
  dbr:Darth_Vader dbo:child ?father .
  ?father dbo:child dbr:Luke_Skywalker .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
181,Show me all the breweries in Australia.,"```sparql
SELECT ?brewery
WHERE {
  ?brewery a dbo:Brewery ;
           dbo:location dbr:Australia .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Steven_Spielberg .
  ?film dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
183,Give me all soccer clubs in Spain.,"```sparql
SELECT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:ground ?place .
  ?place dbo:country dbr:Spain .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
184,Who produced films starring Natalie Portman?,"```sparql
SELECT DISTINCT ?producer
WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
185,Give me all breeds of the German Shepherd dog.,"```sparql
SELECT DISTINCT ?breed
WHERE {
  ?breed rdf:type dbo:DogBreed .
  ?breed dbo:wikiPageRedirects dbr:German_Shepherd .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
186,Who is the heaviest player of the Chicago Bulls?,"```sparql
SELECT ?player ?weight
WHERE {
  ?player dbo:team dbr:Chicago_Bulls ;
          dbo:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
187,Which languages are spoken in Estonia?,"```sparql
SELECT DISTINCT ?language
WHERE {
  dbr:Estonia dbo:spokenIn ?language .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
188,What is the largest country in the world?,"```sparql
SELECT ?country ?area
WHERE {
  ?country a dbo:Country ;
           dbo:areaTotal ?area .
}
ORDER BY DESC(?area)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
189,What is the largest city in america?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:United_States ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
190,Who was the pope that founded the Vatican Television?,"SELECT ?pope
WHERE {
    ?pope dbo:founded <http://dbpedia.org/resource/Vatican_Television>
    FILTER regex(str(?pope), ""Pope"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
191,Who discovered Ceres?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Ceres dbo:discoverer ?discoverer .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
192,Who is the king of the Netherlands?,"SELECT ?king
WHERE {
  ?king a dbo:Person ;
        dbo:leader dbr:Monarchy_of_the_Netherlands .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
193,Is Cola a beverage?,"```sparql
SELECT DISTINCT ?beverage
WHERE {
  ?beverage rdf:type dbo:Beverage .
  ?beverage rdfs:label ?label .
  FILTER regex(?label, ""Cola"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"```sparql
SELECT ?almaMater
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?almaMater .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
195,Who wrote the book Les Piliers de la terre?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Les Piliers de la terre""@fr .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
196,Which airports does Yeti Airlines serve?,"```sparql
SELECT ?airport
WHERE {
  ?airline a dbo:Airline ;
           dbo:targetAirport ?airport ;
           rdfs:label ""Yeti Airlines""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
197,Where is the birthplace of Goethe?,"```sparql
SELECT ?birthplace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

ASK {
  dct:Cuban_Missile_Crisis dbo:startDate ?crisisStart .
  dct:Bay_of_Pigs_Invasion dbo:startDate ?invasionStart .
  FILTER (?crisisStart < ?invasionStart)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
199,Which ingredients do I need for carrot cake?,"SELECT ?ingredient
WHERE {
  ?cake dbo:ingredient ?ingredient .
  ?cake rdfs:label ""Carrot cake""@en
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
200,Who created Wikipedia?,"```sparql
SELECT ?creator
WHERE {
    dbr:Wikipedia dct:creator ?creator
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
201,What is the highest mountain in Saxony Germany?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
  ?mountain dbo:locatedInArea dbr:Saxony .
  ?mountain dbo:locatedInArea dbr:Germany .
}
ORDER BY DESC(?elevation)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
202,Who is the current federal minister of finance in Germany?,"```sparql
SELECT ?minister
WHERE {
  ?minister a dbo:Person ;
           dbo:position/dbo:incumbentOn/dbo:positionTitle ?title ;
           dbo:position/dbo:incumbentOn/dbo:office/dbo:country dbr:Germany ;
           dbo:position/dbo:incumbentOn/dbo:office/dbo:department dbr:Federal_Ministry_of_Finance .
  FILTER(CONTAINS(STR(?title), ""Federal Minister of Finance""))
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
203,In which country is Mecca located?,"```sparql
SELECT ?country WHERE {
  ?place dbo:wikiPageID dbr:Mecca ;
         dbo:country ?country .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor
WHERE {
  ?actor dbp:starring dbr:Giancarlo_Esposito ;
         dbp:role dbr:Gus_Fring .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
205,In which country does the Nile start?,"```sparql
SELECT ?country
WHERE {
  ?river dbo:sourceCountry ?country ;
         dbo:RiverStart ?start .
  FILTER regex(str(?start), ""Nile"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
206,In which state Penn State University is located?,"```sparql
SELECT ?state
WHERE {
  dbr:Pennsylvania_State_University dbo:state ?state
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
207,What is the biggest stadium in Spain?,"```sparql
SELECT ?stadium ?name ?capacity
WHERE {
  ?stadium a dbo:Stadium ;
           dbo:country dbr:Spain ;
           dbo:seatingCapacity ?capacity ;
           rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
ORDER BY DESC(?capacity)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
208,Who is the coach of Ankara's ice hockey team?,"```sparql
SELECT ?coach
WHERE {
  ?team rdf:type dbo:IceHockeyTeam .
  ?team dbo:city dbr:Ankara .
  ?team dbo:coach ?coach .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
209,How large is the area of UK?,"SELECT ?areaTotal
WHERE {
  dbr:United_Kingdom dbo:areaTotal ?areaTotal
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
210,Who created Batman?,"SELECT ?creator
WHERE {
  dbr:Batman dbo:creator ?creator
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
211,Was Sigmund Freud married?,"```sparql
SELECT ?spouse
WHERE {
  dbr:Sigmund_Freud dbo:spouse ?spouse
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
212,Who are the developers of DBpedia?,"```sparql
SELECT ?developer
WHERE {
  ?dbpedia dbo:developer ?developer .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
213,Give me all movies directed by Francis Ford Coppola.,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
214,Are tree frogs a type of amphibian?,"```sparql
SELECT ?typeLabel
WHERE {
  dbr:Tree_frog dbo:wikiPageRedirects ?treeFrog .
  ?treeFrog dct:subject ?type .
  ?type rdfs:label ?typeLabel
  FILTER(lang(?typeLabel) = 'en' && ?type = dbc:Amphibians)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
215,What is the location of the Houses of Parliament?,"```sparql
SELECT ?location
WHERE {
  dbr:Houses_of_Parliament dbo:location ?location .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
216,how much is the elevation of Düsseldorf Airport ?,"```sparql
SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
217,How much is the population of mexico city ?,"SELECT ?population
WHERE {
  dbr:Mexico_City dbo:populationTotal ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
218,when was the founding date of french fifth republic?,"SELECT ?date
WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
219,Who was the first King of England?,"```sparql
SELECT ?king
WHERE {
  ?king a dbo:Monarch ;
        dbo:title dbr:King_of_England .
}
ORDER BY ?king
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
220,Who is the editor of Forbes?,"```sparql
SELECT ?editor
WHERE {
  ?editor dbo:editor of dbr:Forbes
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
221,Which awards did Douglas Hofstadter win?,"```sparql
SELECT ?award
WHERE {
  ?person dbo:award ?award .
  FILTER (?person = dbr:Douglas_Hofstadter)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
222,Who is the youngest Darts player?,"```sparql
SELECT ?player ?name ?birthdate
WHERE {
  ?player a dbo:DartsPlayer .
  ?player foaf:name ?name .
  ?player dbo:birthDate ?birthdate .
}
ORDER BY ?birthdate
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
223,Is horse racing a sport?,"```sparql
SELECT ?sportLabel
WHERE {
  ?sport rdf:type dbo:Sport ;
         rdfs:label ?sportLabel .
  FILTER regex(?sportLabel, ""horse racing"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
224,Which river does the Brooklyn Bridge cross?,"```sparql
SELECT ?river
WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
225,How many people live in Poland?,"```sparql
SELECT ?population
WHERE {
  dbr:Poland dbo:populationTotal ?population
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
226,When was the last episode of the TV series Friends aired?,"SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Friends> <http://dbpedia.org/ontology/lastAiredEpisode> ?episode .
  ?episode <http://dbpedia.org/ontology/airDate> ?date .
}
ORDER BY DESC(?date)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
227,Is the wife of president Obama called Michelle?,"```sparql
SELECT ?wifeName
WHERE {
  ?president a dbo:Person ;
             dbo:spouse ?wife .
  ?wife foaf:name ?wifeName .
  FILTER (?wifeName = ""Michelle Obama"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
229,Who is 8th president of US?,"```
SELECT ?president
WHERE {
  ?president a dbo:President ;
            dbo:number 8 .
  FILTER regex(str(?president), ""United_States"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
230,how much is the total population of  european union?,"```sparql
SELECT (SUM(?population) as ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:continent dbr:Europe ;
           dbo:populationTotal ?population .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
231,Give me all launch pads operated by NASA.,"```sparql
SELECT ?launchPad
WHERE {
  ?launchPad a dbo:LaunchPad ;
             dbo:operator <http://dbpedia.org/resource/NASA> .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
232,Who developed the video game World of Warcraft?,"```sparql
SELECT ?developer
WHERE {
  ?videoGame dbo:developer ?developer ;
             rdfs:label ""World of Warcraft""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
233,What is the birth name of Adele?,"```sparql
SELECT ?birthName
WHERE {
  dbr:Adele dbp:birthName ?birthName
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
234,What is the population of Cairo?,"SELECT ?population
WHERE {
  dbr:Cairo dbo:populationTotal ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
235,Is Frank Herbert still alive?,"```sparql
SELECT ?person ?name ?date_of_birth ?date_of_death
WHERE {
  ?person rdf:type dbo:Person ;
          foaf:name ?name ;
          dbo:birthDate ?date_of_birth .
  OPTIONAL { ?person dbo:deathDate ?date_of_death }
  FILTER (?name = ""Frank Herbert"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
236,What is the last work of Dan Brown?,"SELECT ?work
WHERE {
  ?author foaf:name ""Dan Brown""@en .
  ?author dbp:notableWork ?work .
}
ORDER BY DESC(?work)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
237,Where is Sungkyunkwan University?,"SELECT ?location 
WHERE {
  dbpedia:Sungkyunkwan_University dbpedia-owl:location ?location .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
238,Who is the author of the interpretation of dreams?,"```sparql
SELECT ?author
WHERE {
  ?work dbo:author ?author .
  ?work foaf:name ""The Interpretation of Dreams""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
239,When was the death  of  Shakespeare?,"SELECT ?date
WHERE {
  dbr:William_Shakespeare dbo:deathDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
241,Who developed Slack?,"```sparql
SELECT ?developer
WHERE {
  ?company dbo:developer ?developer ;
           rdfs:label ""Slack"" .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
242,Where is the origin of Carolina reaper?,"SELECT ?origin
WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
243,In which year was Rachel Stevens born?,"```sparql
SELECT ?birthYear
WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
244,How often did Jane Fonda marry?,"SELECT (COUNT(?spouse) as ?marriage_count)
WHERE {
  dbr:Jane_Fonda dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
245,Was the wife of president Lincoln called Mary?,"```sparql
SELECT ?wifeName
WHERE {
  ?president a dbo:Person ;
             foaf:name ""Abraham Lincoln"" ;
             dbo:spouse ?wife .
  ?wife foaf:name ?wifeName .
  FILTER (regex(?wifeName, ""Mary"", ""i""))
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
246,Which cities does the Weser flow through?,"```sparql
SELECT DISTINCT ?city
WHERE {
  ?river dbo:city ?city .
  FILTER regex(str(?river), ""Weser"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
247,In which programming language is GIMP written?,"```sparql
SELECT ?language
WHERE {
  ?gimp dbo:programmingLanguage ?language .
  FILTER (?gimp = dbr:GNU_Image_Manipulation_Program)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
248,Which university did Angela Merkel attend?,"```sparql
SELECT ?university
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
249,List all the musicals with music by Elton John.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical a dbo:Musical ;
           dbo:musicBy dbr:Elton_John .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
250,How many Aldi stores are there?,"```sparql
SELECT (SUM(?numStores) as ?totalStores)
WHERE {
  ?company a dbo:Company ;
           dbo:numberOfLocations ?numStores .
  FILTER regex(str(?company), ""Aldi"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
251,What is the longest river in the world?,"```sparql
SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
252,When was John Adams born?,"SELECT ?birthDate
WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthDate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
253,Which companies produce hovercrafts?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:product/dbo:automobileType dbr:Hovercraft .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
254,Who was the wife of U.S. president Lincoln?,"```sparql
SELECT ?wife
WHERE {
  ?president a dbo:President ;
             foaf:name ""Abraham Lincoln""@en ;
             dbo:spouse ?wife .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
255,Which species does an elephant belong?,"SELECT ?species
WHERE {
  dbpedia:Elephant dct:subject ?species .
  ?species skos:broader category:Species .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
256,How many people live in the capital of Australia?,"SELECT ?population
WHERE {
  ?capital rdf:type dbo:City ;
           dbo:country dbr:Australia ;
           dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
257,In which ancient empire could you pay with cocoa beans?,"```sparql
SELECT DISTINCT ?empire
WHERE {
  ?empire dbo:currency dbr:Cocoa_bean .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
258,How many theories did Albert Einstein come up with?,"```sparql
SELECT (COUNT(?theory) AS ?numTheories)
WHERE {
  ?einstein dbo:knownFor ?theory .
  FILTER (?einstein = dbr:Albert_Einstein)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
259,Who composed the soundtrack for Cameron's Titanic?,"```sparql
SELECT ?composer
WHERE {
  ?film dbo:composer ?composer .
  ?film foaf:name ""Titanic""@en .
  ?film dbo:director ?director .
  ?director foaf:name ""James Cameron""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
260,Give me the runtime of Toy Story.,"```sparql
SELECT ?runtime
WHERE {
  <http://dbpedia.org/resource/Toy_Story> dbo:runtime ?runtime
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
262,With how many countries Iran has borders?,"```sparql
SELECT (COUNT(?country) AS ?borderingCountries)
WHERE {
  dbr:Iran dbo:borders ?country .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
263,Which electronics companies were founded in Beijing?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company rdf:type dbo:Company .
  ?company dbo:industry dbr:Electronics_industry .
  ?company dbo:foundationPlace dbr:Beijing .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
264,Who was the successor of John F. Kennedy?,"```sparql
SELECT ?successor
WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
265,Who is the mayor of Paris?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Paris> dbo:mayor ?mayor .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
266,Did Arnold Schwarzenegger attend a university?,"```sparql
SELECT ?university
WHERE {
  dbpedia:Arnold_Schwarzenegger dbo:almaMater ?university .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
267,Is James Bond married?,"```sparql
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          dbo:spouse ?spouse .
  FILTER (?person = dbr:James_Bond)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
268,Does the Isar flow into a lake?,"```sparql
SELECT ?lake
WHERE {
  ?lake rdf:type dbo:Lake .
  ?river rdf:type dbo:River .
  ?river dbo:inflow ?lake .
  FILTER (?river = dbr:Isar)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
269,Which Indian company has the most employees?,"```sparql
SELECT ?company ?numberOfEmployees
WHERE {
  ?company dbo:numberOfEmployees ?numberOfEmployees .
  ?company a dbo:Company .
}
ORDER BY DESC(?numberOfEmployees)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
270,Who was John F. Kennedy's vice president?,"SELECT ?vicePresident
WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
271,Which country does the creator of Miffy come from?,"```sparql
SELECT ?country
WHERE {
  ?creator dbo:birthPlace ?birthPlace.
  ?birthPlace dbo:country ?country.
  ?creator foaf:name ""Dick Bruna""@en.
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
273,In what city is the Heineken brewery?,"```sparql
SELECT ?city WHERE {
  ?brewery rdf:type dbo:Brewery ;
           dbo:location ?city .
  ?city rdf:type dbo:City .
  FILTER regex(str(?brewery), ""Heineken"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
274,Is Barack Obama a democrat?,"```sparql
SELECT ?party
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  FILTER (?party = dbpedia:Democratic_Party_(United_States))
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
275,List the children of Margaret Thatcher.,"SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
276,From which region is the Melon de Bourgogne?,"SELECT ?region
WHERE {
  ?wine a dbo:Grape ;
        dbo:region ?region .
  FILTER (?wine = dbr:Melon_de_Bourgogne)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
278,how big is the total area of North Rhine- Westphalia?,"```sparql
SELECT ?areaTotal
WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?areaTotal
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
279,Which city has the most inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
280,What is Donald Trump's main business?,"SELECT ?business
WHERE {
  dbr:Donald_Trump dbo:owner ?business .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
281,When will start the final match of the football world cup 2018?,"SELECT ?date
WHERE {
  dbpedia:2018_FIFA_World_Cup dbo:startDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
282,Which films did Stanley Kubrick direct?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
283,how much is the population  Iraq?,"```sparql
SELECT ?population
WHERE {
  dbr:Iraq dbo:populationTotal ?population
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
284,How many inhabitants does the largest city in Canada have?,"```sparql
SELECT ?population
WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:country dbr:Canada .
  ?city dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
285,Who is the mayor of the capital of French Polynesia?,"```sparql
SELECT ?mayor
WHERE {
  ?capital dbo:country dbr:French_Polynesia .
  ?capital dbo:mayor ?mayor .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
286,Give me all actors starring in movies directed by William Shatner.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director <http://dbpedia.org/resource/William_Shatner> .
  ?movie dbo:starring ?actor .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
287,How tall is Claudia Schiffer?,"```sparql
SELECT ?height
WHERE {
  dbr:Claudia_Schiffer dbo:height ?height
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
288,how much is the population densty rank of germany?,"```sparql
SELECT ?populationDensityRank
WHERE {
  dbr:Germany dbp:populationDensityRank ?populationDensityRank
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
289,What is the highest mountain in Italy?,"SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:country dbr:Italy .
  ?mountain dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
290,List all games by GMT.,"```sparql
SELECT ?game
WHERE {
  ?game rdf:type dbo:VideoGame .
  ?game dbo:publisher dbr:GMT_Games .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
291,What is the official language of Suriname?,"```sparql
SELECT ?language
WHERE {
  dbr:Suriname dbo:officialLanguage ?language .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
292,In which city did Nikos Kazantzakis die?,"```sparql
SELECT ?city WHERE {
  ?person rdf:type dbo:Writer .
  ?person dbo:deathPlace ?city .
  FILTER (?person = dbr:Nikos_Kazantzakis)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
293,What is in a chocolate chip cookie?,"```sparql
SELECT ?ingredient
WHERE {
  <http://dbpedia.org/resource/Chocolate_chip_cookie> dbo:ingredient ?ingredient .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
294,In which country is the Limerick Lake?,"```sparql
SELECT ?country WHERE {
  ?lake rdf:type dbo:Lake .
  ?lake dbo:country ?country .
  FILTER (?lake = dbr:Limerick_Lake)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
295,Give me all video games published by Mean Hamster Software.,"```sparql
SELECT ?game
WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game a dbo:VideoGame .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
296,Give me all members of Prodigy.,"```sparql
SELECT ?member
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:bandMember ?member .
  FILTER regex(str(?band), ""Prodigy"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
297,In which time zone is Rome?,"```sparql
SELECT ?timeZone
WHERE {
  dbr:Rome dbo:timeZone ?timeZone
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
298,How high is the lighthouse in Colombo?,"```sparql
SELECT ?height
WHERE {
  dbr:Colombo dbo:height ?height .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
299,Who are the writers of the Wall album of Pink Floyd?,"```sparql
SELECT ?writer
WHERE {
  ?album dbo:artist dbr:Pink_Floyd ;
        dbp:title ""The_Wall"" ;
        dbp:writer ?writer .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
300,Who is the mayor of Rotterdam?,"```sparql
SELECT ?mayor
WHERE {
  dbr:Rotterdam dbo:leaderName ?mayor .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
301,What is the largest city in Australia?,"```sparql
SELECT ?cityName
WHERE {
  ?country a dbo:Country ;
           dbo:largestCity ?city .
  ?city rdfs:label ?cityName .
  FILTER (lang(?cityName) = 'en')
  FILTER (?country = dbr:Australia)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
302,Who was married to president Chirac?,"```sparql
SELECT ?spouse
WHERE {
  ?president a dbo:President ;
             dbo:spouse ?spouse ;
             foaf:name ""Jacques Chirac""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
303,What form of government is found in South Africa?,"```sparql
SELECT ?governmentType
WHERE {
  dbr:South_Africa dbo:governmentType ?governmentType
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
304,How high is the Yokohama Marine Tower?,"```sparql
SELECT ?height
WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
305,Which holidays are celebrated around the world? test2,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
306,Who is the tallest basketball player?,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer .
  ?player dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
307,How many languages are spoken in Turkmenistan?,"```sparql
SELECT (COUNT(DISTINCT ?language) AS ?numLanguages)
WHERE {
  ?country dbo:country <http://dbpedia.org/resource/Turkmenistan> .
  ?language dbo:spokenIn ?country .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
308,Did Che Guevara have children?,"```sparql
SELECT ?child
WHERE {
  dbr:Che_Guevara dbo:child ?child .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:award dbr:Grand_Prix_(Cannes)
  FILTER regex(str(?film), ""Kaurismäki"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
310,To which party does the mayor of Paris belong?,"```sparql
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Paris> dbo:mayor ?mayor .
  ?mayor dbo:party ?party .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
311,Who is the Formula 1 race driver with the most races?,"```sparql
SELECT ?driver ?name (COUNT(?race) AS ?numRaces)
WHERE {
  ?driver a dbo:FormulaOneRacer ;
          foaf:name ?name ;
          dbo:races ?race .
}
GROUP BY ?driver ?name
ORDER BY DESC(?numRaces)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
312,What country is Sitecore from?,"```sparql
SELECT ?country
WHERE {
  dbpedia:Sitecore dbpedia-owl:location ?country .
  ?country a dbpedia-owl:Country .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
314,Is Christian Bale starring in Velvet Goldmine?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor ;
        rdfs:label ""Velvet Goldmine""@en .
  ?actor rdfs:label ""Christian Bale""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_and_Cher .
  ?son a dbo:Person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
316,How many ethnic groups live in Slovenia?,"```sparql
SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  ?ethnicGroup a dbo:EthnicGroup ;
              dbo:country dbr:Slovenia .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
317,What is the capital of Cameroon?,"SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Cameroon> dbo:capital ?capital
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
318,Was Natalie Portman born in the United States?,"```sparql
SELECT ?person ?birthPlace
WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace ?birthPlace .
  FILTER (?person = dbr:Natalie_Portman && ?birthPlace = dbr:United_States)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
319,How many pages does War and Peace have?,"```sparql
SELECT ?numberOfPages
WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?numberOfPages
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
320,Who is the oldest child of Meryl Streep?,"```sparql
SELECT ?childName
WHERE {
  dbr:Meryl_Streep dbo:child ?child .
  ?child foaf:name ?childName .
}
ORDER BY ?childName
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
321,Which television shows were created by Walt Disney?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show a dbo:TelevisionShow ;
        dbo:creator dbr:Walt_Disney .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
322,What does IYCM stand for?,"```sparql
SELECT ?definition
WHERE {
  ?s dbo:abbreviation ""IYCM""@en .
  ?s rdfs:comment ?definition .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
323,Which types of grapes grow in Oregon?,"```sparql
SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType dbo:growingGrape dbr:Oregon .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
324,Was U.S. president Jackson involved in a war?,"```sparql
SELECT ?war
WHERE {
  ?president a dbo:President ;
             foaf:name ""Andrew Jackson""@en ;
             dbo:commander ?war .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
325,When was the Titanic completed?,"SELECT ?completionDate
WHERE {
  dbr:Titanic dbo:completionDate ?completionDate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
326,Did Tesla win a nobel prize in physics?,"```sparql
SELECT ?scientist ?award
WHERE {
  ?scientist a dbo:Scientist ;
             dbo:award ?award .
  FILTER (?scientist = dbr:Nikola_Tesla)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
327,How many states are in Mexico?,"SELECT (COUNT(?state) AS ?count)
WHERE {
  ?state a dbo:State ;
         dbo:country dbr:Mexico .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"```sparql
SELECT ?scientist
WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project ;
             dbo:knownFor dbr:Nobel_Peace_Prize .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
329,How much did the Lego Movie cost?,"```sparql
SELECT ?budget
WHERE {
  ?film dbo:budget ?budget .
  ?film foaf:name ""The Lego Movie""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
330,Who composed the music for Harold and Maude?,"SELECT ?composer
WHERE {
  ?film dbo:workTitle ""Harold and Maude""@en .
  ?film dbo:musicComposer ?composer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
331,List all episodes of the first season of the HBO television series The Sopranos.,"```sparql
SELECT ?episode
WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber ""1"" .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
332,Which city has the least inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ?population
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
333,Where is Syngman Rhee buried?,"```sparql
SELECT ?burialPlace
WHERE {
  dbr:Syngman_Rhee dbo:restingPlace ?burialPlace
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
334,Does Neymar play for Real Madrid?,"```sparql
SELECT ?team
WHERE {
  dbr:Neymar dbo:team ?team .
  FILTER regex(str(?team), ""Real Madrid"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
335,Who wrote the book The Pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Pillars of the Earth""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
336,Do Prince Harry and Prince William have the same parents?,"```sparql
SELECT ?parent1 ?parent2
WHERE {
  ?person1 a dbo:Person ;
           foaf:name ""Prince Harry"" ;
           dbo:parent ?parent1 .
  
  ?person2 a dbo:Person ;
           foaf:name ""Prince William"" ;
           dbo:parent ?parent2 .
  
  FILTER(?parent1 = ?parent2)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
337,Who was the doctoral supervisor of Albert Einstein?,"```sparql
SELECT ?supervisor
WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
338,Does Breaking Bad have more episodes than Game of Thrones?,"```sparql
SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes
WHERE {
  {
    SELECT (xsd:integer(?breakingBadEpisodes) AS ?breakingBadEpisodes)
    WHERE {
      dbr:Breaking_Bad dbo:numberOfEpisodes ?breakingBadEpisodes .
    }
  }
  {
    SELECT (xsd:integer(?gameOfThronesEpisodes) AS ?gameOfThronesEpisodes)
    WHERE {
      dbr:Game_of_Thrones dbo:numberOfEpisodes ?gameOfThronesEpisodes .
    }
  }
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
339,Who was Vincent van Gogh inspired by?,"```sparql
SELECT DISTINCT ?inspiredBy
WHERE {
  dbr:Vincent_van_Gogh dbo:influenced ?inspiredBy .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
340,Which building after the Burj Khalifa has the most floors?,"```sparql
SELECT ?building ?name ?floorCount
WHERE {
  ?building rdf:type dbo:Building .
  ?building dbo:floorCount ?floorCount .
  FILTER (?floorCount > 163) .
  FILTER (?building != dbr:Burj_Khalifa) .
  OPTIONAL { ?building foaf:name ?name }
}
ORDER BY DESC(?floorCount)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
341,What was the final result of the War of the Roses?,"```sparql
SELECT ?result
WHERE {
  ?event dbo:result ?result .
  ?event rdf:type dbo:War_of_the_Roses .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
342,How much did Pulp Fiction cost?,"SELECT ?budget
WHERE {
  dbr:Pulp_Fiction dbo:budget ?budget
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
343,Is proinsulin a protein?,"SELECT DISTINCT ?protein
WHERE {
  ?protein rdf:type dbo:Protein .
  ?protein rdfs:label ?label .
  FILTER (regex(?label, ""proinsulin"", ""i""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
344,Do Urdu and Persian have a common root?,"```sparql
SELECT ?language1 ?language2
WHERE {
  ?language1 dbo:languageFamily ?family .
  ?language2 dbo:languageFamily ?family .
  FILTER(?language1 = dbr:Urdu && ?language2 = dbr:Persian)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
345,Who is starring in Spanish movies produced by Benicio del Toro?,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:producer <http://dbpedia.org/resource/Benicio_del_Toro> .
  ?movie dbo:language dbr:Spanish .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
346,Is Lake Baikal bigger than the Great Bear Lake?,"SELECT ?lake1 ?area1 ?lake2 ?area2
WHERE {
  ?lake1 a dbo:Lake ;
         dbo:areaTotal ?area1 ;
         rdfs:label ""Lake Baikal""@en .
  
  ?lake2 a dbo:Lake ;
         dbo:areaTotal ?area2 ;
         rdfs:label ""Great Bear Lake""@en .
  
  FILTER (?area1 > ?area2)
}
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
347,Show me all books in Asimov's Foundation series.,"```sparql
SELECT ?book
WHERE {
  ?book dct:subject dbc:Foundation_series_books
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
348,Where was Bach born?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
349,Which city has the oldest running metro?,"```sparql
SELECT ?city ?openingYear
WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:isPartOf ?country .
  ?country rdf:type dbo:Country .
  ?city dbo:openingYear ?openingYear .
  FILTER EXISTS {
    ?metro rdf:type dbo:City .
    ?metro dbo:isPartOf ?city .
    ?metro rdf:type dbo:RapidTransit .
  }
}
ORDER BY ?openingYear
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
350,Who designed the Brooklyn Bridge?,"```sparql
SELECT ?architect
WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?architect .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
351,How many people live in Eurasia?,"```sparql
SELECT (SUM(?population) as ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:populationTotal ?population ;
           dct:subject dbc:Countries_in_Eurasia .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
352,Who is the host of the BBC Wildlife Specials?,"```sparql
SELECT ?presenter
WHERE {
  ?show dbo:presenter ?presenter .
  ?show rdfs:label ""BBC Wildlife Specials""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
353,"What is the total population of Melbourne, Florida?","SELECT ?population
WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
354,What country is Mount Everest in?,"```sparql
SELECT ?country WHERE {
  dbr:Mount_Everest dbo:country ?country .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
355,To which artistic movement did the painter of The Three Dancers belong?,"```sparql
SELECT ?movement
WHERE {
  ?painter dbo:movement ?movement .
  ?painter foaf:name ""The Three Dancers""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
356,When did Operation Overlord commence?,"```sparql
SELECT ?date
WHERE {
  dbr:Operation_Overlord dbo:date ?date
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
357,What is the bridge with the longest span?,"```sparql
SELECT ?bridge ?span
WHERE {
  ?bridge a dbo:Bridge ;
          dbo:mainSpan ?span .
}
ORDER BY DESC(?span)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
358,Is there a video game called Battle Chess?,"```sparql
SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
359,Who was buried in the Great Pyramid of Giza?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:restingPlace dbr:Great_Pyramid_of_Giza .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"SELECT ?company ?plant
WHERE {
  ?company rdf:type dbo:Company ;
           rdfs:label ""Ford Motor Company""@en .
  
  ?plant rdf:type dbo:Plant ;
         dbo:location dbr:Malaysia ;
         dbo:owner ?company .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
361,Did Socrates influence Aristotle?,"```sparql
SELECT ?influencer ?influencee
WHERE {
  ?influencer dbo:influencedBy dbr:Socrates .
  ?influencee dbo:influencedBy dbr:Aristotle .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
362,How many children did Benjamin Franklin have?,"```sparql
SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Benjamin_Franklin> dbo:child ?child .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
363,How tall is Michael Jordan?,"```sparql
SELECT ?height
WHERE {
  dbr:Michael_Jordan dbo:height ?height
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
364,In which UK city are the headquarters of the MI6?,"```sparql
SELECT ?city
WHERE {
  dbr:MI6 dbo:headquarter ?hq .
  ?hq dbo:location ?city .
  ?city a dbo:City .
  FILTER (langMatches(lang(?city), ""en""))
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
365,Who created Family Guy?,"```sparql
SELECT ?creator
WHERE {
  ?familyGuy dbo:creator ?creator .
  FILTER regex(str(?familyGuy), ""Family_Guy"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
366,In which city does the Chile Route 68 end?,"```sparql
SELECT ?city
WHERE {
  ?route a dbo:RouteOfTransportation ;
         dbo:routeEnd ?city ;
         dbo:country dbr:Chile .
  FILTER regex(str(?route), ""Route_68"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
367,Give me the grandchildren of Elvis Presley.,"```sparql
SELECT ?grandchild
WHERE {
  dbr:Elvis_Presley dbo:child/dbo:child ?grandchild .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
368,When did the Ming dynasty dissolve?,"```sparql
SELECT ?dissolutionDate
WHERE {
  dbr:Ming_Dynasty dbo:dissolutionDate ?dissolutionDate
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
369,In which military conflicts did Lawrence of Arabia participate?,"```sparql
SELECT ?conflict
WHERE {
  ?lawrence dbo:militaryConflict ?conflict .
  FILTER (?lawrence = dbr:T._E._Lawrence)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
370,What is the timezone in San Pedro de Atacama?,"```sparql
SELECT ?timezone
WHERE {
  dbpedia:San_Pedro_de_Atacama dbpedia-owl:timezone ?timezone .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
371,Give me all books by William Goldman with more than 300 pages.,"```sparql
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:William_Goldman ;
        dbo:numberOfPages ?pages .
  FILTER (?pages > 300)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
372,What did Bruce Carver die from?,"```sparql
SELECT ?causeOfDeath
WHERE {
  dbpedia:Bruce_Carver dbo:causeOfDeath ?causeOfDeath .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"```sparql
SELECT ?subsidiary
WHERE {
  ?subsidiary dbo:subsidiary <http://dbpedia.org/resource/Lufthansa> ;
              dbo:operates <http://dbpedia.org/resource/Dortmund_Airport> ,
                          <http://dbpedia.org/resource/Berlin_Tegel_Airport> .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
374,Does Abraham Lincoln's death place have a website?,"SELECT ?website
WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace.
  ?deathPlace dbo:website ?website.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
375,Did Elvis Presley have children?,"```sparql
SELECT ?child
WHERE {
  dbr:Elvis_Presley dbo:child ?child .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
376,Is Michelle Obama the wife of Barack Obama?,"```sparql
SELECT ?wife
WHERE {
  ?wife dbo:spouse dbr:Barack_Obama .
  FILTER (?wife = dbr:Michelle_Obama)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
377,In which city does Sylvester Stallone live?,"SELECT ?city
WHERE {
  ?person dbo:residence ?city .
  FILTER (?person = dbr:Sylvester_Stallone)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
378,Which books by Kerouac were published by Viking Press?,"```sparql
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Jack_Kerouac ;
        dbo:publisher dbr:Viking_Press .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
379,Who wrote the song Hotel California?,"```sparql
SELECT ?artist
WHERE {
  ?song dbo:writer ?artist ;
        rdfs:label ""Hotel California""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
380,What is the capital of Canada?,"SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Canada> dbo:capital ?capital
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
381,Who is the mayor of Tel Aviv?,"```sparql
SELECT ?mayor
WHERE {
  dbr:Tel_Aviv dbo:leaderName ?mayor .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
382,What form of government does Russia have?,"SELECT ?governmentType
WHERE {
  dbr:Russia dbo:governmentType ?governmentType
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
383,Show me the book that Muhammad Ali wrote.,"```sparql
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Muhammad_Ali .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
384,Who was the first to climb Mount Everest?,"```sparql
SELECT ?climber
WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?climber .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
385,How many languages are spoken in Colombia?,"```sparql
SELECT (COUNT(DISTINCT ?language) AS ?numLanguages)
WHERE {
  ?language a dbo:Language ;
            dbo:spokenIn dbr:Colombia .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
386,What is the currency of the Czech Republic?,"```sparql
SELECT ?currencyLabel
WHERE {
  dbr:Czech_Republic dbo:currency ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER(LANG(?currencyLabel) = 'en')
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
387,Where in France is sparkling wine produced?,"```sparql
SELECT DISTINCT ?region
WHERE {
  ?wine a dbo:SparklingWine ;
        dbo:region ?region .
  FILTER regex(?region, ""France"", ""i"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
388,When did Boris Becker end his active career?,"```sparql
SELECT ?endDate
WHERE {
  ?person dbo:activeYearsEndDate ?endDate.
  FILTER (?person = dbr:Boris_Becker)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?movie
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Mickey_Rourke> ;
         dbo:director <http://dbpedia.org/resource/Guy_Ritchie> .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
390,In which films did Julia Roberts as well as Richard Gere play?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
391,Show me Hemingway's autobiography.,"```sparql
SELECT ?autobiography
WHERE {
  ?autobiography a dbo:Autobiography ;
                 dbo:author dbr:Ernest_Hemingway .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
392,How tall is Amazon Eve?,"```sparql
SELECT ?height
WHERE {
  dbr:Amazon_Eve dbo:height ?height
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
393,What are the five boroughs of New York?,"```sparql
SELECT ?boroughName
WHERE {
  ?borough a dbo:Borough ;
           rdfs:label ?boroughName .
  FILTER(langMatches(lang(?boroughName), ""en""))
}
LIMIT 5
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
394,Give me all Canadian Grunge record labels.,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?label a dbo:RecordLabel ;
         dbo:country dbr:Canada ;
         dbo:genre dbr:Grunge .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
395,In which country does the Ganges start?,"```sparql
SELECT ?country
WHERE {
  dbr:Ganges dbo:sourceCountry ?country
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
396,Who is the founder of Penguin Books?,"```sparql
SELECT ?founder
WHERE {
  dbr:Penguin_Books dbo:founder ?founder .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
397,Who wrote the Game of Thrones theme?,"```sparql
SELECT ?composer
WHERE {
  ?gameOfThrones dbo:composer ?composer .
  ?gameOfThrones rdf:type dbo:TelevisionShow .
  FILTER regex(str(?gameOfThrones), ""Game_of_Thrones"")
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
398,Who is the president of Eritrea?,"```sparql
SELECT ?president
WHERE {
  ?country dbo:leader ?president ;
           rdfs:label ""Eritrea""@en .
  ?president a dbo:Person .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
399,In which city did John F. Kennedy die?,"```sparql
SELECT ?city WHERE {
  ?person rdf:type dbo:Person .
  ?person foaf:name ""John F. Kennedy"" .
  ?person dbo:deathPlace ?cityResource .
  ?cityResource rdf:type dbo:City .
  ?city dbo:isPartOf ?cityResource .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
400,What is the highest mountain in Australia?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
  ?mountain dbo:country dbr:Australia .
}
ORDER BY DESC(?elevation)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
401,Who writes the Farmers' Almanac?,"```sparql
SELECT ?writer
WHERE {
  ?writer dbo:editor dbr:Farmers'_Almanac .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
402,Give me the currency of China.,"```sparql
SELECT ?currencyLabel
WHERE {
  dbr:China dbo:currency ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER(LANG(?currencyLabel) = 'en')
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
403,Give me all Swedish oceanographers.,"SELECT DISTINCT ?oceanographer
WHERE {
  ?oceanographer a <http://dbpedia.org/ontology/Oceanographer> ;
                 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Sweden> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
404,In which city are the headquarters of the United Nations?,"```sparql
SELECT ?cityName
WHERE {
  <http://dbpedia.org/resource/United_Nations> dbo:headquarter ?hq .
  ?hq dbo:location ?city .
  ?city rdfs:label ?cityName .
  FILTER(LANG(?cityName) = """" || LANGMATCHES(LANG(?cityName), ""en""))
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
405,Is Rita Wilson the wife of Tom Hanks?,"```sparql
SELECT ?wife
WHERE {
  ?wife dbo:spouse dbr:Tom_Hanks .
  FILTER (?wife = dbr:Rita_Wilson)
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
406,In which countries do people speak Japanese?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?country dbo:language ?language .
  ?language rdfs:label ""Japanese""@en
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film .
  ?film dbo:director dbr:Tim_Burton .
  ?film dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
408,Which museum in New York has the most visitors?,"```sparql
SELECT ?museum ?visitors
WHERE {
  ?museum a dbo:Museum ;
          dbo:numberOfVisitors ?visitors .
}
ORDER BY DESC(?visitors)
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
409,What was the first Queen album?,"```sparql
SELECT ?album ?albumName
WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Queen ;
         foaf:name ?albumName .
}
ORDER BY ?album
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
410,What was the first name of the band Queens of the Stone Age?,"```sparql
SELECT ?bandName
WHERE {
  ?band dbo:alias ?bandName .
  ?band rdf:type dbo:Band .
  FILTER regex(?bandName, ""Queens of the Stone Age"", ""i"")
}
LIMIT 1
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
411,What was the last movie with Alec Guinness?,"SELECT ?movie ?date
WHERE {
  ?movie dbo:starring dbr:Alec_Guinness .
  ?movie dbo:releaseDate ?date
}
ORDER BY DESC(?date)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
412,Give me all actors starring in Last Action Hero.,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""Last Action Hero""@en .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
413,Who discovered Pluto?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discoverer .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
1,List all boardgames by GMT.,"```sparql
SELECT ?boardgame
WHERE {
  ?boardgame rdf:type dbo:BoardGame ;
             dbo:publisher dbr:GMT_Games .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
2,Who developed Skype?,"```sparql
SELECT ?developer
WHERE {
  ?skype dbo:developer ?developer .
  FILTER regex(?developer, ""Skype"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
3,Which people were born in Heraklion?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
4,In which U.S. state is Area 51 located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Area_51> dbp:location ?location .
  ?location dbo:country ?country .
  ?country a dbo:Country ;
           dbp:commonName ?state .
  FILTER(langMatches(lang(?state), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
5,Who is the mayor of New York City?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/New_York_City> dbo:leaderName ?mayor
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
6,Which countries have places with more than two caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?place rdf:type dbo:Place .
  ?place dbo:location ?country .
  ?place rdf:type dbo:Cave .
}
GROUP BY ?country
HAVING (COUNT(?place) > 2)
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
7,Where did Abraham Lincoln die?,"```sparql
SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
8,Which airports does Air China serve?,"```sparql
SELECT ?airport
WHERE {
  ?airline a dbo:Airline ;
           dbo:targetAirport ?airport ;
           foaf:name ""Air China""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
9,Give me all actors starring in movies directed by and starring William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director <http://dbpedia.org/resource/William_Shatner> ;
         dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
10,What are the official languages of the Philippines?,"```sparql
SELECT ?language
WHERE {
  dbr:Philippines dbo:officialLanguage ?language .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
11,Give me all Danish films.,"```sparql
SELECT ?film
WHERE {
  ?film a dbo:Film ;
        dbo:country dbr:Denmark .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Brad_Pitt> ;
         dbo:director <http://dbpedia.org/resource/Guy_Ritchie> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
13,Give me the grandchildren of Bruce Lee.,"```sparql
SELECT ?grandchild
WHERE {
  dbr:Bruce_Lee dbo:child/dbo:child ?grandchild .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
14,Which other weapons did the designer of the Uzi develop?,"```sparql
SELECT ?otherWeapon
WHERE {
  ?uzi dbo:designer ?designer .
  ?designer dbo:designer ?otherDesigner .
  ?otherDesigner dbo:designed ?otherWeapon .
  FILTER (?otherWeapon != dbo:Uzi)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
15,Who is the owner of Universal Studios?,"```sparql
SELECT ?owner
WHERE {
  dbr:Universal_Studios dbo:owner ?owner .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
16,Which state of the USA has the highest population density?,"```sparql
SELECT ?state ?populationDensity
WHERE {
  ?state a dbo:PopulatedPlace ;
         dbo:country dbr:United_States ;
         dbp:densityrank ?populationDensity .
}
ORDER BY DESC(?populationDensity)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
17,Which monarchs were married to a German?,"```sparql
SELECT DISTINCT ?monarch
WHERE {
  ?monarch a dbo:Monarch ;
          dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
18,Which organizations were founded in 1950?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:foundingYear ""1950""^^xsd:gYear
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
19,Who created the comic Captain America?,"```sparql
SELECT ?creator
WHERE {
  ?comic dbo:creator ?creator ;
         rdfs:label ""Captain America""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
20,Give me the Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut dbo:occupation dbr:Astronaut ;
             dbo:team ?team .
  ?team dbo:mission dbr:Apollo_14 .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
21,Who wrote the book The pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
        rdfs:label ""The Pillars of the Earth""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
22,Which state of the United States of America has the highest density?,"```sparql
SELECT ?state ?density
WHERE {
  ?state a dbo:State ;
         dbp:densityrank ?density .
}
ORDER BY DESC(?density)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
23,Which spaceflights were launched from Baikonur?,"```sparql
SELECT ?spaceflight
WHERE {
  ?spaceflight dbo:launchPad dbr:Baikonur_Cosmodrome .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
24,Give me a list of all trumpet players that were bandleaders.,"```sparql
SELECT DISTINCT ?musician
WHERE {
  ?musician a dbo:Person ;
            dbo:instrument dbr:Trumpet ;
            dbo:occupation dbr:Bandleader .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
25,Which U.S. states are in the same timezone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  ?state a dbo:AdministrativeRegion ;
         dbo:timeZone dbr:Mountain_Time_Zone .
  FILTER (?state != dbr:Utah)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
26,Which U.S. states possess gold minerals?,"```sparql
SELECT DISTINCT ?state
WHERE {
  ?state dbo:placeType dbr:U.S._state ;
         dbo:currency ?mineral .
  FILTER regex(?mineral, ""gold"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
27,Who is the daughter of Ingrid Bergman married to?,"```sparql
SELECT ?daughter ?spouse
WHERE {
  ?daughter dbo:child dbr:Ingrid_Bergman ;
           dbo:spouse ?spouse .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
28,How deep is Lake Placid?,"```sparql
SELECT ?depth
WHERE {
  dbr:Lake_Placid dbo:maximumDepth ?depth
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
29,Show me all museums in London.,"```sparql
SELECT ?museum
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:London .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
30,Which caves have more than 3 entrances?,"```sparql
SELECT ?cave
WHERE {
  ?cave a dbo:Cave ;
        dbp:entranceCount ?entranceCount .
  FILTER (?entranceCount > 3)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
31,Who is the tallest player of the Atlanta Falcons?,"```sparql
SELECT ?player ?height
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
          dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
32,What are the top-10 action role-playing video games according to IGN?,"```sparql
SELECT DISTINCT ?game ?rank
WHERE {
  ?game dbp:genre dbr:Action_role-playing_video_game ;
       dbp:rank ?rank .
}
ORDER BY ?rank
LIMIT 10
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
SELECT DISTINCT ?writer ?name
WHERE {
  ?writer a dbo:Writer ;
          dbo:award dbr:Nobel_Prize_in_Literature ;
          foaf:name ?name .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
34,Show me all basketball players that are higher than 2 meters.,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:height ?height .
  FILTER (?height > 2)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
35,When was the Statue of Liberty built?,"```sparql
SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Statue_of_Liberty> <http://dbpedia.org/ontology/completionDate> ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
36,Which states border Illinois?,"```sparql
SELECT DISTINCT ?stateName
WHERE {
  dbr:Illinois dbp:borderingStates ?state .
  ?state rdfs:label ?stateName .
  FILTER (lang(?stateName) = 'en')
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
37,Who developed Minecraft?,"```sparql
SELECT ?developer
WHERE {
  ?game dbo:developer ?developer ;
        rdfs:label ""Minecraft""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
38,Where did Hillel Slovak die?,"```sparql
SELECT ?placeOfDeath
WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?placeOfDeath
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
39,What movies does Jesse Eisenberg play in?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
40,Give all swimmers that were born in Moscow.,"```sparql
SELECT DISTINCT ?swimmer
WHERE {
  ?swimmer a dbo:Person ;
           dbo:birthPlace dbr:Moscow ;
           dbo:occupation dbr:Swimming .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
41,Give me all cosmonauts.,"```sparql
SELECT ?cosmonaut
WHERE {
  ?cosmonaut a <http://dbpedia.org/ontology/Cosmonaut> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
42,Give me all Swiss non-profit organizations.,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a <http://dbpedia.org/ontology/NonprofitOrganisation> ;
               dct:subject dbc:Non-profit_organizations_based_in_Switzerland .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
43,Which presidents were born in 1945?,"```sparql
SELECT DISTINCT ?presidentName
WHERE {
  ?president a dbpedia-owl:President ;
             dbpprop:birthDate ?birthDate ;
             rdfs:label ?presidentName .
  FILTER (regex(str(?birthDate), ""1945""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
44,What kind of music did Lou Reed play?,"```sparql
SELECT DISTINCT ?genre
WHERE {
  ?artist dbo:genre ?genre ;
          foaf:name ""Lou Reed""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
45,Where do the Red Sox play?,"```sparql
SELECT ?team ?stadium
WHERE {
  ?team a dbo:SportsTeam ;
        dbo:ground ?stadium .
  FILTER regex(?team, ""Red Sox"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
46,Show a list of soccer clubs that play in the Bundesliga.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league dbr:Bundesliga .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
47,Which volcanos in Japan erupted since 2000?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:eruptionYear ?year .
  FILTER (?year >= 2000)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
48,Which bridges cross the Seine?,"```sparql
SELECT DISTINCT ?bridge
WHERE {
  ?bridge a dbo:Bridge ;
          dbo:crosses <http://dbpedia.org/resource/Seine> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
49,What is the official color of the University of Oxford?,"```sparql
SELECT ?color
WHERE {
  dbr:University_of_Oxford dbo:officialSchoolColour ?color
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
50,How many films did Hal Roach produce?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film a dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
51,Give me all Danish movies.,"```sparql
SELECT ?movie
WHERE {
  ?movie a dbo:Film ;
         dbp:country ""Denmark""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
52,What is the most frequent cause of death?,"```sparql
SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
  ?person dbo:deathCause ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
53,Who are the four youngest MVP basketball players?,"```sparql
SELECT DISTINCT ?player ?name ?birthDate
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:birthDate ?birthDate ;
          rdfs:label ?name .
  FILTER(langMatches(lang(?name), ""en""))
}
ORDER BY ?birthDate
LIMIT 4
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
54,Give me all companies in Munich.,"```sparql
SELECT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:location dbr:Munich .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
55,Give me the capitals of all countries that the Himalayas run through.,"```sparql
SELECT DISTINCT ?capital
WHERE {
  ?country dbo:capital ?capital ;
           dbo:location ?location .
  ?location dbo:locatedInArea <http://dbpedia.org/resource/Himalayas> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
56,How many movies did Park Chan-wook direct?,"```sparql
SELECT (COUNT(?movie) AS ?count)
WHERE {
  ?movie dbo:director dbr:Park_Chan-wook .
  ?movie a dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
57,Which rivers flow into a German lake?,"```sparql
SELECT DISTINCT ?river ?riverName ?lake ?lakeName
WHERE {
  ?river a dbo:River ;
         dbo:inflow ?lake ;
         dbo:country dbr:Germany .
  ?lake a dbo:Lake .
  ?river rdfs:label ?riverName .
  ?lake rdfs:label ?lakeName .
  FILTER(LANG(?riverName) = 'en' && LANG(?lakeName) = 'en')
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
58,How many airlines are there?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
59,Give me all islands that belong to Japan.,"```sparql
SELECT ?island
WHERE {
  ?island rdf:type dbo:Island .
  ?island dbo:country dbr:Japan .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
60,How many inhabitants does Maribor have?,"```sparql
SELECT ?population
WHERE {
  dbr:Maribor dbo:populationTotal ?population
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
61,Give me all Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut dbo:position/dbc:mission dbr:Apollo_14 .
  ?astronaut a dbo:Person .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
62,Which companies have more than 1 million employees?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
63,In which films directed by Garry Marshall was Julia Roberts starring?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts ;
        dbo:director dbr:Garry_Marshall .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
64,Give me all soccer clubs in the Premier League.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league ?league .
  ?league rdfs:label ""Premier League""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
65,What is the highest place of the Urals?,"```sparql
SELECT ?place ?elevation
WHERE {
  ?place a dbo:Mountain ;
         dbp:highest ?elevation .
  FILTER (?elevation > 0)
}
ORDER BY DESC(?elevation)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
66,Who is the governor of Wyoming?,"```sparql
SELECT ?governor
WHERE {
  ?state a dbo:Place ;
         dbp:governor ?governor ;
         rdfs:label ""Wyoming""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
67,Where did the architect of the Eiffel Tower study?,"```sparql
SELECT ?university
WHERE {
  ?architect dbo:architecturalStructure dbr:Eiffel_Tower .
  ?architect dbo:almaMater ?university .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
68,Give me all world heritage sites designated within the past two years.,"```sparql
SELECT ?site ?siteLabel ?designationDate
WHERE {
  ?site a dbo:WorldHeritageSite ;
        dbo:designationDate ?designationDate .
  FILTER (YEAR(?designationDate) >= YEAR(NOW()) - 2)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
69,Give me all actors who were born in Paris after 1950.,"```sparql
SELECT DISTINCT ?actor ?actorName ?birthDate
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?actorName ;
         dbo:birthPlace/dbo:location dbr:Paris ;
         dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) > 1950)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
70,Which movies star both Liz Taylor and Richard Burton?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
71,Give me all Australian nonprofit organizations.,"```sparql
SELECT DISTINCT ?org
WHERE {
  ?org a <http://dbpedia.org/ontology/NonprofitOrganisation> ;
       dct:subject dbc:Non-profit_organisations_based_in_Australia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
72,Which pope succeeded John Paul II?,"```sparql
SELECT ?successor
WHERE {
  <http://dbpedia.org/resource/Pope_John_Paul_II> dbpedia-owl:successor ?successor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
73,Give me all ESA astronauts.,"```sparql
SELECT DISTINCT ?astronaut
WHERE {
  ?astronaut a <http://dbpedia.org/ontology/Astronaut> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
74,Who was president of Pakistan in 1978?,"```sparql
SELECT ?president
WHERE {
  ?president a dbo:President ;
             dbo:office ?office .
  FILTER (regex(str(?office), ""Pakistan"") && regex(str(?office), ""1978""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
75,Who is the owner of Rolls-Royce?,"```sparql
SELECT ?owner
WHERE {
  dbr:Rolls-Royce dbo:owner ?owner .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
76,How many museums does Paris have?,"```sparql
SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:Paris .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
77,Where was JFK assassinated?,"```sparql
SELECT ?place
WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?place .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
78,Give me all federal chancellors of Germany.,"```sparql
SELECT ?chancellor
WHERE {
  ?chancellor a dbo:Person ;
             dbo:title ""Federal Chancellor of Germany"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
79,Show me everyone who was born on Halloween.,"```sparql
SELECT ?person ?name
WHERE {
  ?person dbo:birthDate ""10-31""^^xsd:date .
  ?person foaf:name ?name .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
80,Which beer originated in Ireland?,"```sparql
SELECT DISTINCT ?beer
WHERE {
  ?beer dbo:origin <http://dbpedia.org/resource/Ireland> .
  ?beer a dbo:Beer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
81,To which countries does the Himalayan mountain system extend?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?mountainSystem dbo:location ?country .
  ?mountainSystem rdf:type dbo:Mountain .
  FILTER regex(str(?mountainSystem), ""Himalayan"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
82,Which actors were born in Germany?,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace/dbo:country dbr:Germany .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
83,How much carbs does peanut butter have?,"```sparql
SELECT ?carbsAmount
WHERE {
  dbr:Peanut_butter dbp:carbs ?carbsAmount
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
84,Who produced the most films?,"```sparql
SELECT ?producer (COUNT(?film) AS ?numFilmsProduced)
WHERE {
  ?film a dbo:Film .
  ?film dbo:producer ?producer .
}
GROUP BY ?producer
ORDER BY DESC(?numFilmsProduced)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
85,How many employees does Google have?,"```sparql
SELECT ?numberOfEmployees
WHERE {
  dbr:Google dbo:numberOfEmployees ?numberOfEmployees
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
86,Give me all actors who were born in Berlin.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace/dbo:location dbr:Berlin .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
87,Who created Goofy?,"```sparql
SELECT ?creator
WHERE {
  ?goofy dbo:creator ?creator .
  FILTER (?goofy = dbr:Goofy)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
88,Which music albums contain the song Last Christmas?,"```sparql
SELECT DISTINCT ?album
WHERE {
  ?song dbo:album ?album ;
        rdfs:label ""Last Christmas""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
89,When was Alberta admitted as province?,"```sparql
SELECT ?admittanceDate
WHERE {
  dbr:Alberta dbo:admittanceDate ?admittanceDate
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
90,How many missions does the Soyuz programme have?,"```sparql
SELECT (COUNT(?mission) AS ?numMissions)
WHERE {
  ?mission dct:type dbc:Soyuz_programme_missions .
}
```
",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
91,Give me all the TV shows with Neil Patrick Harris.,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris .
  ?show rdf:type dbo:TelevisionShow .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
92,When were the Hells Angels founded?,"```sparql
SELECT ?date
WHERE {
  dbr:Hells_Angels dbo:formationDate ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
93,What is the net income of Apple?,"```sparql
SELECT ?netIncome
WHERE {
  ?company rdf:type dbo:Company ;
           rdfs:label ""Apple Inc.""@en ;
           dbo:netIncome ?netIncome .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
94,Give me all Swedish holidays.,"```sparql
SELECT ?holiday
WHERE {
  ?holiday rdf:type dbo:Holiday ;
           dbo:country dbr:Sweden .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
95,In which city was the former Dutch queen Juliana buried?,"```sparql
SELECT ?city
WHERE {
  dbr:Juliana_of_the_Netherlands dbp:burialPlace ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
96,List all the musicals with music by Leonard Bernstein.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical a dbo:Musical ;
           dbo:musicBy dbr:Leonard_Bernstein .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
97,Give me all companies in the advertising industry.,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:industry dbr:Advertising_industry .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
98,What is the largest metropolitan area in Washington state?,"```sparql
SELECT ?metropolitanArea ?population
WHERE {
  ?metropolitanArea a dbo:PopulatedPlace ;
                   dbo:country dbr:United_States ;
                   dbo:populationTotal ?population ;
                   dbo:isPartOf dbr:Washington_(state) .
}
ORDER BY DESC(?population)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
99,Who killed John Lennon?,"```sparql
SELECT ?killer
WHERE {
  dbr:John_Lennon dbo:deathCause ?cause .
  ?killer dbo:conviction dbr:Murder
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
100,Which writers studied in Istanbul?,"```sparql
SELECT DISTINCT ?writer
WHERE {
  ?writer a dbo:Writer ;
          dbo:education/dbo:location dbr:Istanbul .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
101,Give me all Australian metalcore bands.,"```sparql
SELECT DISTINCT ?band
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:genre dbr:Metalcore ;
        dbo:country dbr:Australia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
102,Which countries adopted the Euro?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbo:currency dbr:Euro
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
103,Give me all types of eating disorders.,"```sparql
SELECT DISTINCT ?eatingDisorder
WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
104,Was Marc Chagall a jew?,"```sparql
SELECT ?person ?label
WHERE {
  ?person a dbo:Person ;
          rdfs:label ?label .
  FILTER regex(?label, ""Marc Chagall"", ""i"") .
  FILTER regex(?label, ""jew"", ""i"") .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
105,What was Brazil's lowest rank in the FIFA World Ranking?,"```sparql
SELECT ?rank
WHERE {
  dbr:Brazil dbp:fifaMin ?rank
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
106,How many films did Leonardo DiCaprio star in?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
107,Was Margaret Thatcher a chemist?,"```sparql
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Margaret Thatcher"" ;
          dbo:profession dbr:Chemist .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
108,Which U.S. states are in the same time zone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  ?state a dbo:State ;
         dbo:timeZone ""Mountain Time Zone"" .
  FILTER (?state != dbr:Utah)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
109,Give me all books written by Danielle Steel.,"```sparql
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Danielle_Steel .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
110,Which country has the most official languages?,"```sparql
SELECT ?country ?numLanguages
WHERE {
  ?country a dbo:Country ;
           dbo:numberOfOfficialLanguages ?numLanguages .
}
ORDER BY DESC(?numLanguages)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
111,What is the total amount of men and women serving in the FDNY?,"```sparql
SELECT (COUNT(?person) AS ?total)
WHERE {
  ?person a dbo:Person ;
          dbo:occupation dbr:Firefighter ;
          dbo:employer dbr:New_York_City_Fire_Department .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
112,Which actor played Chewbacca?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring dbr:Chewbacca ;
       dbo:starring ?actor .
  FILTER (?actor != dbr:Chewbacca)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
113,Give me all libraries established earlier than 1400.,"```sparql
SELECT DISTINCT ?library ?establishedYear
WHERE {
  ?library a dbo:Library ;
           dbp:established ?establishedYear .
  FILTER (?establishedYear < ""1400""^^xsd:gYear)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
114,Which programming languages were influenced by Perl?,"```sparql
SELECT DISTINCT ?language
WHERE {
    ?language dbo:influenced <http://dbpedia.org/resource/Perl> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
115,In which U.S. state is Mount McKinley located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Mount_McKinley> dbo:locatedInArea ?state .
  ?state a dbo:State
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
116,What airlines are part of the SkyTeam alliance?,"```sparql
SELECT ?airline
WHERE {
  ?airline dbo:alliance dbr:SkyTeam .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
117,Which ships were called after Benjamin Franklin?,"```sparql
SELECT ?ship
WHERE {
  ?ship dbo:shipNamesake dbr:Benjamin_Franklin
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
118,Give me all Methodist politicians.,"```sparql
SELECT DISTINCT ?politician
WHERE {
  ?politician a <http://dbpedia.org/ontology/Politician> ;
              dcterms:subject <http://dbpedia.org/resource/Category:Methodist_politicians> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
119,What other books have been written by the author of The Fault in Our Stars?,"```sparql
SELECT ?bookTitle
WHERE {
  ?author foaf:name ""John Green"" .
  ?book dbo:author ?author ;
       rdfs:label ?bookTitle .
  FILTER (?book != <http://dbpedia.org/resource/The_Fault_in_Our_Stars>)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
120,What is the highest mountain?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain a dbo:Mountain ;
            dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
121,Which poet wrote the most books?,"```sparql
SELECT ?poet (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a dbo:Writer .
  ?poet dbo:author ?book .
} 
GROUP BY ?poet
ORDER BY DESC(?numBooks)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
122,Which programming languages influenced Javascript?,"```sparql
SELECT DISTINCT ?influencedLanguage
WHERE {
  ?programmingLanguage dbo:influenced ?influencedLanguage .
  FILTER (?programmingLanguage = dbr:JavaScript)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
123,Which musician wrote the most books?,"```sparql
SELECT ?musician ?count
WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:author ?book .
  {
    SELECT ?musician (COUNT(?book) AS ?count)
    WHERE {
      ?musician a dbo:MusicalArtist ;
                dbo:author ?book .
    } GROUP BY ?musician
  }
  ORDER BY DESC(?count)
  LIMIT 1
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
124,Which films starring Clint Eastwood did he direct himself?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film a dbo:Film ;
        dbo:director <http://dbpedia.org/resource/Clint_Eastwood> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
125,Which software has been developed by organizations founded in California?,"```sparql
SELECT DISTINCT ?software
WHERE {
  ?org dbo:location dbr:California ;
       dbo:product ?software .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
126,Which instruments does Cat Stevens play?,"```sparql
SELECT ?instrument
WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
127,How many airlines are members of the Star Alliance?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline ;
           dbo:alliance dbr:Star_Alliance .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
128,Give me all actors called Baldwin.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?name .
  FILTER regex(?name, ""Baldwin"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
129,Who wrote The Hunger Games?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
        rdfs:label ""The Hunger Games""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
130,For which label did Elvis record his first album?,"```sparql
SELECT ?label
WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Elvis_Presley ;
         rdfs:label ?label .
  FILTER regex(?label, ""first album"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
131,Is Christian Bale starring in Batman Begins?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor ;
        rdfs:label ""Batman Begins""@en .
  ?actor rdfs:label ""Christian Bale""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
132,Where is the residence of the prime minister of Spain?,"```sparql
SELECT ?residence
WHERE {
  dbr:Prime_Minister_of_Spain dbp:residence ?residence
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
133,Which actor was casted in the most movies?,"```sparql
SELECT ?actor (COUNT(?movie) AS ?movieCount)
WHERE {
  ?movie dbo:starring ?actor .
}
GROUP BY ?actor
ORDER BY DESC(?movieCount)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
134,Which countries have more than two official languages?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?lang1, ?lang2 .
  FILTER (?lang1 != ?lang2)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
135,Which countries have more than ten caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?cave a dbo:Cave ;
        dbo:location ?country .
  ?country a dbo:Country .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 10)
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"```sparql
SELECT ?song
WHERE {
  ?song a dbo:Song ;
        dbo:artist dbr:Bruce_Springsteen ;
        dbo:releaseDate ?date .
  FILTER (xsd:integer(SUBSTR(str(?date), 1, 4)) >= 1980 && xsd:integer(SUBSTR(str(?date), 1, 4)) <= 1990)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
137,Which television shows were created by John Cleese?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show a dbo:TelevisionShow .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
138,When did Latvia join the EU?,"```sparql
SELECT ?date
WHERE {
  dbr:Latvia dbo:accessioneudate ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
139,Which soccer players were born on Malta?,"```sparql
SELECT DISTINCT ?player
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthPlace/dbo:country dbr:Malta .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
140,How many politicians graduated from Columbia University?,"```sparql
SELECT (COUNT(?politician) AS ?countPoliticians)
WHERE {
  ?politician a dbo:Politician ;
              dbo:almaMater dbr:Columbia_University .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
141,Give me the birthdays of all actors of the television show Charmed.,"```sparql
SELECT ?actor ?birthday
WHERE {
  ?charmed dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
  FILTER regex(str(?charmed), ""Charmed"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
142,Which telecommunications organizations are located in Belgium?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a dbo:Organisation ;
               dbo:location dbr:Belgium .
  FILTER regex(str(?organization), ""telecommunication"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
143,Give me a list of all lakes in Denmark.,"```sparql
SELECT ?lake
WHERE {
  ?lake a dbo:Lake ;
        dbo:country dbr:Denmark .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
144,How many children does Eddie Murphy have?,"```sparql
SELECT (COUNT(?child) AS ?numberOfChildren)
WHERE {
  <http://dbpedia.org/resource/Eddie_Murphy> dbpedia-owl:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
145,Show me all English Gothic buildings in Kent.,"```sparql
SELECT DISTINCT ?building
WHERE {
  ?building a dbo:Building ;
           dbo:architecturalStyle dbr:English_Gothic_architecture ;
           dbo:location dbr:Kent .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
146,Who is the manager of Real Madrid?,"```sparql
SELECT ?manager
WHERE {
  <http://dbpedia.org/resource/Real_Madrid> dbo:manager ?manager
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
147,In which countries can you pay using the West African CFA franc?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
148,Which holidays are celebrated around the world?,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:Holiday ?holiday .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
149,What is the longest river?,"```sparql
SELECT ?river ?length
WHERE {
  ?river a dbo:River ;
         dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
150,Which organizations were founded in 1930?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:foundingYear ""1930""^^xsd:gYear .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
151,What is the birth name of Angela Merkel?,"```sparql
SELECT ?birthName
WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
152,Who has Tom Cruise been married to?,"```sparql
SELECT ?spouse
WHERE {
  dbr:Tom_Cruise dbo:spouse ?spouse .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
153,Which weapons did Heckler & Koch develop?,"```sparql
SELECT DISTINCT ?weapon
WHERE {
  ?company dbo:developer <http://dbpedia.org/resource/Heckler_&_Koch> ;
          dbo:product ?weapon .
  FILTER regex(str(?weapon), ""weapon"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
154,What is the smallest city by area in Germany?,"```sparql
SELECT ?city ?area
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:Germany ;
        dbo:areaTotal ?area .
}
ORDER BY ?area
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
155,What is the ruling party in Lisbon?,"```sparql
SELECT ?party
WHERE {
  ?city dbo:leaderParty ?party ;
        rdfs:label ""Lisbon""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
156,How heavy is Jupiter's lightest moon?,"```sparql
SELECT ?moon ?mass
WHERE {
  ?moon dbo:isPartOf <http://dbpedia.org/resource/Jupiter> ;
        dbo:mass ?mass .
}
ORDER BY ASC(?mass)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
157,How many employees does IBM have?,"```sparql
SELECT ?numberOfEmployees
WHERE {
  dbr:IBM dbo:numberOfEmployees ?numberOfEmployees
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
158,List all episodes of the first season of the HBO television series The Sopranos!,"```sparql
SELECT ?episode
WHERE {
  ?episode dbo:series <http://dbpedia.org/resource/The_Sopranos> ;
           dbo:seasonNumber ""1"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
159,What does ICRO stand for?,"```sparql
SELECT ?definition
WHERE {
  dbr:ICRO dbo:abbreviation ?definition
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
160,Does the new Battlestar Galactica series have more episodes than the old one?,"```sparql
SELECT ?newEpisodes ?oldEpisodes
WHERE {
  ?newSeries dbo:numberOfEpisodes ?newEpisodes ;
             rdfs:label ""Battlestar Galactica""@en .
  
  ?oldSeries dbo:numberOfEpisodes ?oldEpisodes ;
             rdfs:label ""Battlestar Galactica (1978 TV series)""@en .
  
  FILTER (?newEpisodes > ?oldEpisodes)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
161,Give me all films produced by Hal Roach.,"```sparql
SELECT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
162,Who played Agent Smith in Matrix?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor ;
       rdfs:label ""The Matrix""@en .
  ?actor dbo:wikiPageRedirects* ?actorRedirect .
  ?actorRedirect foaf:name ""Hugo Weaving""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
163,Which Greek parties are pro-European?,"```sparql
SELECT DISTINCT ?party
WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:alliance ?alliance .
  ?alliance rdfs:label ?allianceLabel .
  FILTER(REGEX(?allianceLabel, ""pro-European"", ""i"")) .
  FILTER(langMatches(lang(?allianceLabel), ""en"")) .
  FILTER(REGEX(?party, ""Greek"", ""i"")) .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
164,Give me a list of all bandleaders that play trumpet.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
165,What is the second highest mountain on Earth?,"```sparql
SELECT DISTINCT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 2
OFFSET 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
166,Is Egypts largest city also its capital?,"```sparql
SELECT ?capital ?largestCity
WHERE {
  dbr:Egypt dbo:capital ?capital ;
            dbo:largestCity ?largestCity .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
167,Which rockets were launched from Baikonur?,"```sparql
SELECT DISTINCT ?rocket
WHERE {
  ?rocket rdf:type dbo:Rocket ;
          dbo:launchPad dbr:Baikonur_Cosmodrome .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
168,How many programming languages are there?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
169,Which Chess players died in the same place they were born in?,"```sparql
SELECT DISTINCT ?player ?birthPlace ?deathPlace
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
170,Who is the owner of Facebook?,"```sparql
SELECT ?owner
WHERE {
  dbr:Facebook dbo:foundedBy ?owner .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
171,Give me all movies with Tom Cruise.,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie a dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
172,In which U.S. state is Fort Knox located?,"```sparql
SELECT ?state
WHERE {
  ?fort a dbo:MilitaryBase ;
        dbo:location ?state .
  FILTER regex(str(?fort), ""Fort_Knox"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"```sparql
SELECT ?city
WHERE {
  ?city a dbo:City ;
        dbo:isPartOf dbr:New_Jersey ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
174,Which mountains are higher than the Nanga Parbat?,"```sparql
SELECT DISTINCT ?higherMountain
WHERE {
  ?higherMountain a dbo:Mountain ;
                 dbo:elevation ?elevation .
  FILTER (?elevation > (SELECT ?elevationNangaParbat WHERE {
                          dbr:Nanga_Parbat dbo:elevation ?elevationNangaParbat
                        }))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
175,Give me all B-sides of the Ramones.,"```sparql
SELECT ?bSide
WHERE {
  ?album dbo:artist dbr:Ramones ;
         dbo:bSide ?bSide .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
176,What are the specialities of the UNC Health Care?,"```sparql
SELECT ?speciality
WHERE {
  dbr:UNC_Health_Care dbp:speciality ?speciality
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
177,When was Olof Palme shot?,"```sparql
SELECT ?date
WHERE {
  dbr:Olof_Palme dbo:deathDate ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
178,List the seven kings of Rome.,"```sparql
SELECT ?king ?name
WHERE {
  ?king a dbo:Monarch ;
        dbo:title ?name ;
        dbo:reignStart ?start .
  FILTER (?start < ""509-01-01""^^xsd:date)
}
ORDER BY ?start
LIMIT 7
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
179,Give me all people that were born in Vienna and died in Berlin.,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Vienna ;
         dbo:deathPlace dbr:Berlin .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
180,Is Darth Vader Luke’s father?,"```sparql
SELECT ?father
WHERE {
  dbr:Darth_Vader dbo:child ?father .
  ?father dbo:child dbr:Luke_Skywalker .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
181,Show me all the breweries in Australia.,"```sparql
SELECT DISTINCT ?brewery
WHERE {
  ?brewery a dbo:Brewery ;
           dbo:location dbr:Australia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"```sparql
SELECT ?film
WHERE {
  ?film rdf:type dbo:Film .
  ?film dbo:director dbr:Steven_Spielberg .
  ?film dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
183,Give me all soccer clubs in Spain.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:ground ?ground .
  ?ground dbo:location dbr:Spain .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
184,Who produced films starring Natalie Portman?,"```sparql
SELECT DISTINCT ?producer
WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
185,Give me all breeds of the German Shepherd dog.,"```sparql
SELECT ?breed
WHERE {
  ?breed rdf:type dbo:DogBreed ;
         rdfs:label ?label .
  FILTER regex(?label, ""German Shepherd"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
186,Who is the heaviest player of the Chicago Bulls?,"```sparql
SELECT ?player ?weight
WHERE {
  ?player dbo:team dbr:Chicago_Bulls ;
          dbo:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
187,Which languages are spoken in Estonia?,"```sparql
SELECT DISTINCT ?language
WHERE {
  ?language dbo:spokenIn dbr:Estonia
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
188,What is the largest country in the world?,"```sparql
SELECT ?country ?area
WHERE {
  ?country a dbo:Country ;
           dbo:areaTotal ?area .
}
ORDER BY DESC(?area)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
189,What is the largest city in america?,"```sparql
SELECT ?cityName
WHERE {
  ?country a dbo:Country ;
           dbo:largestCity ?city .
  ?city rdfs:label ?cityName .
  FILTER(LANG(?cityName) = ""en"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
190,Who was the pope that founded the Vatican Television?,"```sparql
SELECT ?pope
WHERE {
  ?pope a dbo:Pope ;
        dbo:founded <http://dbpedia.org/resource/Vatican_Television> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
191,Who discovered Ceres?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Ceres dbo:discoverer ?discoverer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
192,Who is the king of the Netherlands?,"```sparql
SELECT ?king
WHERE {
  ?king a dbo:Person ;
        dbo:leader dbr:Monarchy_of_the_Netherlands .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
193,Is Cola a beverage?,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?beverage a dbo:Beverage ;
            rdfs:label ?label .
  FILTER regex(?label, ""Cola"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"```sparql
SELECT ?almaMater
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?almaMater .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
195,Who wrote the book Les Piliers de la terre?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
       rdfs:label ""Les Piliers de la terre""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
196,Which airports does Yeti Airlines serve?,"```sparql
SELECT ?airport
WHERE {
  ?airline a dbo:Airline ;
           dbo:targetAirport ?airport ;
           rdfs:label ""Yeti Airlines""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
197,Where is the birthplace of Goethe?,"```sparql
SELECT ?birthplace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"```sparql
SELECT ?event1 ?event2
WHERE {
  dbr:Cuban_Missile_Crisis dct:subject ?event1 .
  dbr:Bay_of_Pigs_Invasion dct:subject ?event2 .
  FILTER (?event1 < ?event2)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
199,Which ingredients do I need for carrot cake?,"```sparql
SELECT ?ingredientName
WHERE {
  ?cake dbo:ingredient ?ingredient .
  ?ingredient rdfs:label ?ingredientName .
  FILTER(langMatches(lang(?ingredientName), ""en""))
  FILTER(CONTAINS(?ingredientName, ""carrot cake""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
200,Who created Wikipedia?,"```sparql
SELECT ?creator
WHERE {
  ?wikipedia dbo:creator ?creator .
  FILTER regex(str(?wikipedia), ""Wikipedia"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
201,What is the highest mountain in Saxony Germany?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:country dbr:Saxony_Germany ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
202,Who is the current federal minister of finance in Germany?,"```sparql
SELECT ?minister
WHERE {
  ?minister a dbo:Person ;
           dbo:leader dbr:Germany ;
           dbo:title ""Federal Minister of Finance"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
203,In which country is Mecca located?,"```sparql
SELECT ?country WHERE {
  dbpedia:Mecca dbo:country ?country
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
204,Who played Gus Fring in Breaking Bad?,"```sparql
SELECT ?actor
WHERE {
  ?actor dbp:character ?character .
  FILTER regex(?character, ""Gus Fring"", ""i"") .
  ?actor a dbo:Person .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
205,In which country does the Nile start?,"```sparql
SELECT ?country
WHERE {
  ?river dbo:sourceCountry ?country ;
         rdfs:label ""Nile""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
206,In which state Penn State University is located?,"```sparql
SELECT ?state
WHERE {
  dbr:Pennsylvania_State_University dbo:state ?state
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
207,What is the biggest stadium in Spain?,"```sparql
SELECT ?stadium ?name ?capacity
WHERE {
  ?stadium a dbo:Stadium ;
           dbo:country dbr:Spain ;
           dbo:seatingCapacity ?capacity ;
           rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
ORDER BY DESC(?capacity)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
208,Who is the coach of Ankara's ice hockey team?,"```sparql
SELECT ?coach
WHERE {
  ?team dbo:city dbr:Ankara ;
        dbo:coach ?coach .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
209,How large is the area of UK?,"```sparql
SELECT ?area
WHERE {
  dbr:United_Kingdom dbo:areaTotal ?area
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
210,Who created Batman?,"```sparql
SELECT ?creator
WHERE {
  ?batman dbo:creator ?creator .
  FILTER regex(?creator, ""Batman"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
211,Was Sigmund Freud married?,"```sparql
SELECT ?spouse
WHERE {
  dbr:Sigmund_Freud dbo:spouse ?spouse
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
212,Who are the developers of DBpedia?,"```sparql
SELECT ?developer
WHERE {
  ?developer a dbo:Agent ;
            dbo:developerOf <http://dbpedia.org/resource/DBpedia> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
213,Give me all movies directed by Francis Ford Coppola.,"```sparql
SELECT ?movie
WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:director dbr:Francis_Ford_Coppola .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
214,Are tree frogs a type of amphibian?,"```sparql
SELECT ?typeLabel
WHERE {
  dbr:Tree_frog dbo:wikiPageRedirects ?frog .
  ?frog dct:subject ?type .
  ?type rdfs:label ?typeLabel
  FILTER (LANG(?typeLabel) = 'en' && ?type = dbc:Amphibians)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
215,What is the location of the Houses of Parliament?,"```sparql
SELECT ?location
WHERE {
  dbr:Houses_of_Parliament dbo:location ?location
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
216,how much is the elevation of Düsseldorf Airport ?,"```sparql
SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
217,How much is the population of mexico city ?,"```sparql
SELECT ?population
WHERE {
  dbr:Mexico_City dbo:populationTotal ?population
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
218,when was the founding date of french fifth republic?,"```sparql
SELECT ?date
WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
219,Who was the first King of England?,"```sparql
SELECT ?king ?kingName
WHERE {
  ?king a dbpedia-owl:Monarch ;
        dbpedia-owl:predecessor ?predecessor .
  ?predecessor a dbpedia-owl:Monarch .
  FILTER NOT EXISTS { ?predecessor dbpedia-owl:predecessor ?anotherPredecessor }
  ?king foaf:name ?kingName .
}
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
220,Who is the editor of Forbes?,"```sparql
SELECT ?editor
WHERE {
  ?editor a dbo:Person ;
          dbo:editor of <http://dbpedia.org/resource/Forbes> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
221,Which awards did Douglas Hofstadter win?,"```sparql
SELECT ?award
WHERE {
  ?person foaf:name ""Douglas Hofstadter""@en .
  ?person dbo:award ?award .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
222,Who is the youngest Darts player?,"```sparql
SELECT ?player ?name ?birthDate
WHERE {
  ?player a dbo:DartsPlayer ;
          foaf:name ?name ;
          dbo:birthDate ?birthDate .
}
ORDER BY ?birthDate
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
223,Is horse racing a sport?,"```sparql
SELECT ?sportLabel
WHERE {
  ?sport a dbo:Sport ;
         rdfs:label ?sportLabel .
  FILTER(REGEX(?sportLabel, ""horse racing"", ""i""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
224,Which river does the Brooklyn Bridge cross?,"```sparql
SELECT ?river
WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
  ?river a dbo:River .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
225,How many people live in Poland?,"```sparql
SELECT ?population
WHERE {
  dbr:Poland dbo:populationTotal ?population
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
226,When was the last episode of the TV series Friends aired?,"```sparql
SELECT ?airDate
WHERE {
  ?tvSeries dbo:seriesName ""Friends""@en .
  ?episode dbo:series ?tvSeries .
  ?episode dbo:airDate ?airDate .
}
ORDER BY DESC(?airDate)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
227,Is the wife of president Obama called Michelle?,"```sparql
SELECT ?wifeName
WHERE {
  ?president a dbo:Person ;
             dbo:spouse ?wife .
  ?wife foaf:name ?wifeName .
  FILTER (?wifeName = ""Michelle Obama"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
229,Who is 8th president of US?,"```sparql
SELECT ?president
WHERE {
  ?president a dbpedia-owl:President ;
            dbpprop:number 8 .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
230,how much is the total population of  european union?,"```sparql
SELECT (SUM(?population) as ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:populationTotal ?population .
  FILTER (?country IN (dbr:Member_states_of_the_European_Union))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
231,Give me all launch pads operated by NASA.,"```sparql
SELECT ?launchPad
WHERE {
  ?launchPad a dbo:LaunchPad ;
             dbo:operator <http://dbpedia.org/resource/NASA> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
232,Who developed the video game World of Warcraft?,"```sparql
SELECT ?developer
WHERE {
  ?videoGame dbo:developer ?developer ;
             rdfs:label ""World of Warcraft""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
233,What is the birth name of Adele?,"```sparql
SELECT ?birthName
WHERE {
  dbr:Adele dbp:birthName ?birthName
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
234,What is the population of Cairo?,"```sparql
SELECT ?population
WHERE {
  dbr:Cairo dbo:populationTotal ?population
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
235,Is Frank Herbert still alive?,"```sparql
SELECT ?person ?name ?birthdate ?deathdate
WHERE {
  ?person foaf:name ?name ;
          dbo:birthDate ?birthdate .
  OPTIONAL { ?person dbo:deathDate ?deathdate }
  FILTER (?name = ""Frank Herbert"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
236,What is the last work of Dan Brown?,"```sparql
SELECT ?work
WHERE {
  ?author foaf:name ""Dan Brown""@en .
  ?author dbp:notableWork ?work .
}
ORDER BY DESC(?work)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
237,Where is Sungkyunkwan University?,"```sparql
SELECT ?location
WHERE {
  dbpedia:Sungkyunkwan_University dbpedia-owl:location ?location .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
238,Who is the author of the interpretation of dreams?,"```sparql
SELECT ?author
WHERE {
  ?work dbo:author ?author .
  ?work rdfs:label ""The Interpretation of Dreams""@en
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
239,When was the death  of  Shakespeare?,"```sparql
SELECT ?deathDate
WHERE {
  dbr:William_Shakespeare dbo:deathDate ?deathDate
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
241,Who developed Slack?,"```sparql
SELECT ?developer
WHERE {
  ?company dbo:product dbr:Slack ;
           dbo:developer ?developer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
242,Where is the origin of Carolina reaper?,"```sparql
SELECT ?origin
WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
243,In which year was Rachel Stevens born?,"```sparql
SELECT ?birthYear
WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
244,How often did Jane Fonda marry?,"```sparql
SELECT (COUNT(?marriage) AS ?marriageCount)
WHERE {
  ?person dbo:spouse ?marriage.
  FILTER (?person = dbr:Jane_Fonda)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
245,Was the wife of president Lincoln called Mary?,"```sparql
SELECT ?wifeName
WHERE {
  ?president a dbo:Person ;
             dbo:spouse ?wife ;
             foaf:name ""Abraham Lincoln""@en .
  ?wife foaf:name ?wifeName .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
246,Which cities does the Weser flow through?,"```sparql
SELECT DISTINCT ?city
WHERE {
  ?river dbo:city ?city ;
         rdfs:label ""Weser""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
247,In which programming language is GIMP written?,"```sparql
SELECT ?language
WHERE {
  ?gimp dbo:programmingLanguage ?language .
  FILTER regex(?gimp, ""GIMP"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
248,Which university did Angela Merkel attend?,"```sparql
SELECT ?university
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
249,List all the musicals with music by Elton John.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:musicBy dbr:Elton_John .
  ?musical a dbo:Musical .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
250,How many Aldi stores are there?,"```sparql
SELECT (SUM(?numStores) AS ?totalStores)
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:numberOfLocations ?numStores .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
251,What is the longest river in the world?,"```sparql
SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
252,When was John Adams born?,"```sparql
SELECT ?birthDate
WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthDate
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
253,Which companies produce hovercrafts?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:product ?product .
  ?product dbo:productCategory dbr:Hovercraft .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
254,Who was the wife of U.S. president Lincoln?,"```sparql
SELECT ?wife
WHERE {
  ?president a dbo:President ;
             foaf:name ""Abraham Lincoln""@en ;
             dbo:spouse ?wife .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
255,Which species does an elephant belong?,"```sparql
SELECT ?species
WHERE {
  <http://dbpedia.org/resource/Elephant> dbo:species ?species .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
256,How many people live in the capital of Australia?,"```sparql
SELECT ?population
WHERE {
  ?capital dbo:country dbr:Australia ;
           dbo:populationTotal ?population .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
257,In which ancient empire could you pay with cocoa beans?,"```sparql
SELECT ?empire
WHERE {
  ?empire dbo:currency dbr:Cocoa_bean .
  ?empire rdf:type dbo:HistoricalCountry .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
258,How many theories did Albert Einstein come up with?,"```sparql
SELECT (COUNT(?theory) AS ?numTheories)
WHERE {
  ?einstein dbo:knownFor ?theory .
  FILTER regex(?theory, ""theory"", ""i"")
  FILTER (?einstein = dbr:Albert_Einstein)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
259,Who composed the soundtrack for Cameron's Titanic?,"```sparql
SELECT ?composer
WHERE {
  ?film dbo:workTitle ""Titanic""@en ;
       dbo:musicComposer ?composer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
260,Give me the runtime of Toy Story.,"```sparql
SELECT ?film ?runtime
WHERE {
  ?film rdf:type dbo:Film ;
        foaf:name ""Toy Story""@en ;
        dbo:runtime ?runtime .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
262,With how many countries Iran has borders?,"```sparql
SELECT (COUNT(?country) AS ?borderingCountries)
WHERE {
  dbr:Iran dbp:borders ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
263,Which electronics companies were founded in Beijing?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:industry dbr:Electronics_industry ;
           dbo:foundationPlace dbr:Beijing .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
264,Who was the successor of John F. Kennedy?,"```sparql
SELECT ?successor
WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
265,Who is the mayor of Paris?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Paris> dbo:mayor ?mayor
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
266,Did Arnold Schwarzenegger attend a university?,"```sparql
SELECT ?university
WHERE {
  dbpedia:Arnold_Schwarzenegger dbo:almaMater ?university .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
267,Is James Bond married?,"```sparql
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          dbo:spouse ?spouse .
  FILTER (?person = dbr:James_Bond)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
268,Does the Isar flow into a lake?,"```sparql
SELECT ?lake
WHERE {
  ?lake rdf:type dbo:Lake .
  ?river dbo:inflow ?lake .
  FILTER regex(str(?river), ""Isar"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
269,Which Indian company has the most employees?,"```sparql
SELECT ?company ?numberOfEmployees
WHERE {
  ?company a dbo:Company ;
           dbo:numberOfEmployees ?numberOfEmployees .
}
ORDER BY DESC(?numberOfEmployees)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
270,Who was John F. Kennedy's vice president?,"```sparql
SELECT ?vicePresident
WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
271,Which country does the creator of Miffy come from?,"```sparql
SELECT ?country
WHERE {
  ?creator dbo:creator dbr:Miffy .
  ?creator dbo:nationality ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
273,In what city is the Heineken brewery?,"```sparql
SELECT ?city WHERE {
  ?brewery a dbo:Brewery ;
           dbo:location ?city .
  ?city a dbo:City .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
274,Is Barack Obama a democrat?,"```sparql
SELECT ?party
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
275,List the children of Margaret Thatcher.,"```sparql
SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
276,From which region is the Melon de Bourgogne?,"```sparql
SELECT ?region
WHERE {
  ?wine a dbo:Grape ;
        dbo:region ?region ;
        rdfs:label ""Melon de Bourgogne""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
278,how big is the total area of North Rhine- Westphalia?,"```sparql
SELECT ?areaTotal
WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?areaTotal
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
279,Which city has the most inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
280,What is Donald Trump's main business?,"```sparql
SELECT ?business
WHERE {
  dbr:Donald_Trump dbo:owner ?business .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
281,When will start the final match of the football world cup 2018?,"```sparql
SELECT ?date
WHERE {
  dbpedia:2018_FIFA_World_Cup dbpedia-owl:finalMatch ?finalMatch .
  ?finalMatch dbpedia-owl:date ?date .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
282,Which films did Stanley Kubrick direct?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
283,how much is the population  Iraq?,"```sparql
SELECT ?population
WHERE {
  dbr:Iraq dbo:populationTotal ?population
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
284,How many inhabitants does the largest city in Canada have?,"```sparql
SELECT ?population
WHERE {
  ?city dbo:country dbr:Canada .
  ?city dbo:populationTotal ?population .
  FILTER EXISTS { 
    SELECT ?largestCity
    WHERE {
      dbr:Canada dbo:largestCity ?largestCity .
      ?largestCity a dbo:City .
    }
  }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
285,Who is the mayor of the capital of French Polynesia?,"```sparql
SELECT ?mayor
WHERE {
  ?capital dbo:country dbr:French_Polynesia ;
           dbo:mayor ?mayor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
286,Give me all actors starring in movies directed by William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director <http://dbpedia.org/resource/William_Shatner> .
  ?movie dbo:starring ?actor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
287,How tall is Claudia Schiffer?,"```sparql
SELECT ?height
WHERE {
  dbr:Claudia_Schiffer dbo:height ?height
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
288,how much is the population densty rank of germany?,"```sparql
SELECT ?populationDensityRank
WHERE {
  dbr:Germany dbp:populationDensityRank ?populationDensityRank
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
289,What is the highest mountain in Italy?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:country dbr:Italy .
  ?mountain dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
290,List all games by GMT.,"```sparql
SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        dbo:publisher ?publisher .
  ?publisher foaf:name ""GMT"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
291,What is the official language of Suriname?,"```sparql
SELECT ?language
WHERE {
  dbr:Suriname dbo:officialLanguage ?language
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
292,In which city did Nikos Kazantzakis die?,"```sparql
SELECT ?city WHERE {
  ?person rdf:type dbo:Writer .
  ?person dbo:deathPlace ?city .
  ?person foaf:name ""Nikos Kazantzakis""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
293,What is in a chocolate chip cookie?,"```sparql
SELECT ?ingredient
WHERE {
  <http://dbpedia.org/resource/Chocolate_chip_cookie> dbpedia-owl:ingredient ?ingredient .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
294,In which country is the Limerick Lake?,"```sparql
SELECT ?country WHERE {
  ?lake rdf:type dbo:Lake ;
        dbo:country ?country ;
        rdfs:label ""Limerick Lake""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
295,Give me all video games published by Mean Hamster Software.,"```sparql
SELECT ?game
WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game a dbo:VideoGame .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
296,Give me all members of Prodigy.,"```sparql
SELECT ?member
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:bandMember ?member .
  ?member rdf:type dbo:MusicalArtist .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
297,In which time zone is Rome?,"```sparql
SELECT ?timeZone
WHERE {
  dbr:Rome dbo:timeZone ?timeZone
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
298,How high is the lighthouse in Colombo?,"```sparql
SELECT ?height
WHERE {
  dbr:Colombo dbo:height ?height .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
299,Who are the writers of the Wall album of Pink Floyd?,"```sparql
SELECT ?writer
WHERE {
  ?album dbo:artist dbr:Pink_Floyd ;
        dbp:title ""The_Wall"" ;
        dbp:writer ?writer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
300,Who is the mayor of Rotterdam?,"```sparql
SELECT ?mayor
WHERE {
  dbr:Rotterdam dbo:leaderName ?mayor
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
301,What is the largest city in Australia?,"```sparql
SELECT ?cityName
WHERE {
  ?country a dbo:Country ;
           dbo:largestCity ?city .
  ?city rdfs:label ?cityName .
  FILTER(LANG(?cityName) = """" || LANGMATCHES(LANG(?cityName), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
302,Who was married to president Chirac?,"```sparql
SELECT ?spouse
WHERE {
  dbr:Jacques_Chirac dbo:spouse ?spouse .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
303,What form of government is found in South Africa?,"```sparql
SELECT ?governmentType
WHERE {
  dbr:South_Africa dbo:governmentType ?governmentType
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
304,How high is the Yokohama Marine Tower?,"```sparql
SELECT ?height
WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
305,Which holidays are celebrated around the world? test2,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:Holiday ?holiday .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
306,Who is the tallest basketball player?,"```sparql
SELECT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer .
  ?player dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
307,How many languages are spoken in Turkmenistan?,"```sparql
SELECT (COUNT(DISTINCT ?language) AS ?numLanguages)
WHERE {
  ?country dbo:officialLanguage ?language .
  FILTER (?country = dbr:Turkmenistan)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
308,Did Che Guevara have children?,"```sparql
SELECT ?child
WHERE {
  dbr:Che_Guevara dbo:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Aki_Kaurismäki .
  ?film dbo:award dbr:Grand_Prix_(Cannes) .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
310,To which party does the mayor of Paris belong?,"```sparql
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Paris> dbo:mayor ?mayor .
  ?mayor dbo:party ?party .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
311,Who is the Formula 1 race driver with the most races?,"```sparql
SELECT ?driver ?name ?races
WHERE {
  ?driver a dbo:FormulaOneRacer ;
          foaf:name ?name ;
          dbo:races ?races .
}
ORDER BY DESC(?races)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
312,What country is Sitecore from?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Sitecore> dbpedia-owl:location ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
313,Give me the birth place of Frank Sinatra.,"```sparql
SELECT ?birthPlace
WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
314,Is Christian Bale starring in Velvet Goldmine?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor ;
        rdfs:label ""Velvet Goldmine""@en .
  ?actor foaf:name ""Christian Bale""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
315,Who is the son of Sonny and Cher?,"```sparql
SELECT ?son
WHERE {
  ?son dbo:parent dbr:Sonny_and_Cher .
  ?son rdf:type dbo:Person .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
316,How many ethnic groups live in Slovenia?,"```sparql
SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  ?ethnicGroup a dbo:EthnicGroup ;
              dbo:country dbr:Slovenia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
317,What is the capital of Cameroon?,"```sparql
SELECT ?capital
WHERE {
  dbr:Cameroon dbo:capital ?capital .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
318,Was Natalie Portman born in the United States?,"```sparql
SELECT ?person ?birthPlace
WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace ?birthPlace .
  FILTER (?person = dbr:Natalie_Portman && ?birthPlace = dbr:United_States)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
319,How many pages does War and Peace have?,"```sparql
SELECT ?numberOfPages
WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?numberOfPages
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
320,Who is the oldest child of Meryl Streep?,"```sparql
SELECT ?childName
WHERE {
  dbr:Meryl_Streep dbo:child ?child .
  ?child foaf:name ?childName .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
321,Which television shows were created by Walt Disney?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show a dbo:TelevisionShow ;
        dbo:creator dbr:Walt_Disney .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
322,What does IYCM stand for?,"```sparql
SELECT ?definition
WHERE {
  ?iycm dbo:abbreviation ""IYCM"" .
  ?iycm rdfs:comment ?definition .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
323,Which types of grapes grow in Oregon?,"```sparql
SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType dbo:growingGrape ?region.
  ?region dbo:isPartOf dbr:Oregon.
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
324,Was U.S. president Jackson involved in a war?,"```sparql
SELECT ?war
WHERE {
  ?president a dbo:President ;
             foaf:name ""Andrew Jackson""@en ;
             dbo:commander ?war .
  ?war a dbo:MilitaryConflict .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
325,When was the Titanic completed?,"```sparql
SELECT ?completionDate
WHERE {
  dbr:Titanic dbo:completionDate ?completionDate
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
326,Did Tesla win a nobel prize in physics?,"```sparql
SELECT ?scientist ?award
WHERE {
  ?scientist a dbo:Scientist ;
             dbo:award ?award .
  FILTER regex(str(?scientist), ""Tesla"", ""i"")
  FILTER regex(str(?award), ""Nobel Prize in Physics"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
327,How many states are in Mexico?,"```sparql
SELECT (COUNT(?state) AS ?count)
WHERE {
  ?state a dbo:State ;
         dbo:country dbr:Mexico .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"```sparql
SELECT ?scientist
WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project ;
             dbo:knownFor dbr:Nobel_Peace_Prize .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
329,How much did the Lego Movie cost?,"```sparql
SELECT ?movie ?budget
WHERE {
  ?movie a dbo:Film ;
         dbo:budget ?budget ;
         rdfs:label ""The Lego Movie""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
330,Who composed the music for Harold and Maude?,"```sparql
SELECT ?composer
WHERE {
  ?film dbo:workTitle ""Harold and Maude""@en .
  ?film dbo:musicComposer ?composer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
331,List all episodes of the first season of the HBO television series The Sopranos.,"```sparql
SELECT ?episode
WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber ""1"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
332,Which city has the least inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
333,Where is Syngman Rhee buried?,"```sparql
SELECT ?person ?placeOfBurial
WHERE {
  ?person a dbo:Person ;
          dbo:restingPlace ?placeOfBurial .
  FILTER (?person = dbr:Syngman_Rhee)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
334,Does Neymar play for Real Madrid?,"```sparql
SELECT ?player ?team
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:team ?team .
  FILTER (?player = dbr:Neymar)
  FILTER regex(?team, ""Real Madrid"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
335,Who wrote the book The Pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Pillars of the Earth""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
336,Do Prince Harry and Prince William have the same parents?,"```sparql
SELECT ?parent1 ?parent2
WHERE {
  ?person1 a dbo:Person ;
           foaf:name ""Prince Harry"" ;
           dbo:parent ?parent1 .
  
  ?person2 a dbo:Person ;
           foaf:name ""Prince William"" ;
           dbo:parent ?parent2 .
  
  FILTER (?parent1 = ?parent2)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
337,Who was the doctoral supervisor of Albert Einstein?,"```sparql
SELECT ?supervisorName
WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor.
  ?supervisor foaf:name ?supervisorName.
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
338,Does Breaking Bad have more episodes than Game of Thrones?,"```sparql
SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes
WHERE {
  dbr:Breaking_Bad dbo:numberOfEpisodes ?breakingBadEpisodes .
  dbr:Game_of_Thrones dbo:numberOfEpisodes ?gameOfThronesEpisodes .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
339,Who was Vincent van Gogh inspired by?,"```sparql
SELECT DISTINCT ?inspiredBy
WHERE {
  ?artist dbo:influenced ?inspiredBy .
  FILTER (?artist = dbr:Vincent_van_Gogh)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
340,Which building after the Burj Khalifa has the most floors?,"```sparql
SELECT ?building ?floors
WHERE {
  ?building dbo:floorCount ?floors .
  FILTER(?floors > 163)  # 163 is the number of floors in the Burj Khalifa
}
ORDER BY DESC(?floors)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
341,What was the final result of the War of the Roses?,"```sparql
SELECT ?result
WHERE {
  ?event dbo:result ?result ;
         rdf:type dbo:War_of_the_Roses .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
342,How much did Pulp Fiction cost?,"```sparql
SELECT ?budget
WHERE {
  dbr:Pulp_Fiction dbo:budget ?budget
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
343,Is proinsulin a protein?,"```sparql
SELECT DISTINCT ?protein
WHERE {
  ?protein rdf:type dbo:Protein .
  FILTER regex(str(?protein), ""proinsulin"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
344,Do Urdu and Persian have a common root?,"```sparql
SELECT ?language1 ?language2
WHERE {
  ?language1 dbo:languageFamily ?root .
  ?language2 dbo:languageFamily ?root .
  FILTER (?language1 = dbr:Urdu && ?language2 = dbr:Persian)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
345,Who is starring in Spanish movies produced by Benicio del Toro?,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:producer <http://dbpedia.org/resource/Benicio_del_Toro> .
  ?movie dct:subject dbc:Spanish_films .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
346,Is Lake Baikal bigger than the Great Bear Lake?,"```sparql
SELECT ?lake ?areaTotal
WHERE {
  ?lake a dbo:Lake ;
        dbo:areaTotal ?areaTotal .
  FILTER (?lake = dbr:Lake_Baikal || ?lake = dbr:Great_Bear_Lake)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
347,Show me all books in Asimov's Foundation series.,"```sparql
SELECT ?book
WHERE {
  ?book dct:subject dbc:Foundation_series_books .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
348,Where was Bach born?,"```sparql
SELECT ?birthPlace WHERE {
  dbr:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
349,Which city has the oldest running metro?,"```sparql
SELECT ?city ?openingYear
WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:isPartOf ?country .
  ?country a dbo:Country .
  ?city dbo:openingYear ?openingYear .
  ?city dbo:network ?network .
  ?network rdf:type dbo:RapidTransit .
} ORDER BY ?openingYear
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
350,Who designed the Brooklyn Bridge?,"```sparql
SELECT ?architect
WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?architect .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
351,How many people live in Eurasia?,"```sparql
SELECT (SUM(?population) AS ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:populationTotal ?population .
  FILTER (?country IN (dbr:Eurasia))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
352,Who is the host of the BBC Wildlife Specials?,"```sparql
SELECT ?host
WHERE {
  ?show dbo:presenter ?host ;
       rdfs:label ""BBC Wildlife Specials""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
353,"What is the total population of Melbourne, Florida?","```sparql
SELECT ?population
WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
354,What country is Mount Everest in?,"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Mount_Everest> dbo:country ?country
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
355,To which artistic movement did the painter of The Three Dancers belong?,"```sparql
SELECT ?movement
WHERE {
  ?painter dbo:movement ?movement .
  ?painter foaf:name ""The Three Dancers""@en
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
356,When did Operation Overlord commence?,"```sparql
SELECT ?date
WHERE {
  ?event a dbo:Event ;
         rdfs:label ""Operation Overlord""@en ;
         dbo:commenceDate ?date .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
357,What is the bridge with the longest span?,"```sparql
SELECT ?bridge ?span
WHERE {
  ?bridge a dbo:Bridge ;
          dbo:mainSpan ?span .
}
ORDER BY DESC(?span)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
358,Is there a video game called Battle Chess?,"```sparql
SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
359,Who was buried in the Great Pyramid of Giza?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:restingPlace dbr:Great_Pyramid_of_Giza .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"```sparql
SELECT ?company ?plant
WHERE {
  ?company a dbpedia-owl:Company ;
           dbpedia-owl:industry ?industry .
  ?plant a dbpedia-owl:ManufacturingPlant ;
         dbpedia-owl:location dbpedia:Malaysia .
  FILTER regex(str(?company), ""Ford Motor Company"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
361,Did Socrates influence Aristotle?,"```sparql
SELECT ?influencer ?influencee
WHERE {
  ?influencer dbo:influencedBy ?influencee.
  FILTER (?influencer = dbr:Socrates && ?influencee = dbr:Aristotle)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
362,How many children did Benjamin Franklin have?,"```sparql
SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Benjamin_Franklin> dbo:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
363,How tall is Michael Jordan?,"```sparql
SELECT ?height
WHERE {
  dbr:Michael_Jordan dbo:height ?height
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
364,In which UK city are the headquarters of the MI6?,"```sparql
SELECT ?city
WHERE {
  dbr:MI6 dbo:headquarter ?hq .
  ?hq dbo:location ?building .
  ?building dbo:City ?city .
  FILTER(langMatches(lang(?city), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
365,Who created Family Guy?,"```sparql
SELECT ?creator
WHERE {
  ?familyGuy dbo:creator ?creator .
  FILTER regex(?creator, ""Seth MacFarlane"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
366,In which city does the Chile Route 68 end?,"```sparql
SELECT ?city
WHERE {
  ?route a dbo:RouteOfTransportation ;
         dbo:routeEnd ?city .
  FILTER regex(str(?route), ""Chile Route 68"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
367,Give me the grandchildren of Elvis Presley.,"```sparql
SELECT ?grandchild
WHERE {
  dbr:Elvis_Presley dbo:child/dbo:child ?grandchild .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
368,When did the Ming dynasty dissolve?,"```sparql
SELECT ?dissolutionDate
WHERE {
  dbr:Ming_Dynasty dbo:dissolutionDate ?dissolutionDate
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
369,In which military conflicts did Lawrence of Arabia participate?,"```sparql
SELECT ?conflict
WHERE {
  ?lawrence dbo:militaryConflict ?conflict .
  FILTER (?lawrence = dbr:Lawrence_of_Arabia)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
370,What is the timezone in San Pedro de Atacama?,"```sparql
SELECT ?timezone
WHERE {
  dbpedia:San_Pedro_de_Atacama dbpedia-owl:timezone ?timezone .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
371,Give me all books by William Goldman with more than 300 pages.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author <http://dbpedia.org/resource/William_Goldman> ;
        dbo:numberOfPages ?pages .
  FILTER (?pages > 300)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
372,What did Bruce Carver die from?,"```sparql
SELECT ?causeOfDeath
WHERE {
  dbpedia:Bruce_Carver dbo:causeOfDeath ?causeOfDeath
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"```sparql
SELECT ?airline
WHERE {
  ?airline a dbo:Airline ;
          dbo:targetAirport dbr:Dortmund_Airport, dbr:Berlin_Tegel_Airport .
  FILTER regex(str(?airline), ""Lufthansa"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
374,Does Abraham Lincoln's death place have a website?,"```sparql
SELECT ?website
WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace .
  ?deathPlace dbo:website ?website .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
375,Did Elvis Presley have children?,"```sparql
SELECT ?child
WHERE {
  dbr:Elvis_Presley dbo:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
376,Is Michelle Obama the wife of Barack Obama?,"```sparql
SELECT ?wife
WHERE {
  ?wife dbo:spouse dbr:Barack_Obama .
  FILTER (?wife = dbr:Michelle_Obama)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
377,In which city does Sylvester Stallone live?,"```sparql
SELECT ?city
WHERE {
  ?person foaf:name ""Sylvester Stallone"" .
  ?person dbo:residence ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
378,Which books by Kerouac were published by Viking Press?,"```sparql
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:publisher <http://dbpedia.org/resource/Viking_Press> ;
        dbo:author <http://dbpedia.org/resource/Jack_Kerouac> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
379,Who wrote the song Hotel California?,"```sparql
SELECT ?artist
WHERE {
  ?song dbo:writer ?artist ;
        rdfs:label ""Hotel California""@en .
  ?artist a dbo:Person .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
380,What is the capital of Canada?,"```sparql
SELECT ?capital
WHERE {
  <http://dbpedia.org/resource/Canada> dbo:capital ?capital
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
381,Who is the mayor of Tel Aviv?,"```sparql
SELECT ?mayor
WHERE {
  dbr:Tel_Aviv dbo:leaderName ?mayor
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
382,What form of government does Russia have?,"```sparql
SELECT ?governmentType
WHERE {
  dbr:Russia dbo:governmentType ?governmentType
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
383,Show me the book that Muhammad Ali wrote.,"```sparql
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Muhammad_Ali .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
384,Who was the first to climb Mount Everest?,"```sparql
SELECT ?climber
WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?climber .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
385,How many languages are spoken in Colombia?,"```sparql
SELECT (COUNT(DISTINCT ?language) AS ?numLanguages)
WHERE {
  ?language a dbo:Language ;
            dbo:spokenIn dbr:Colombia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
386,What is the currency of the Czech Republic?,"```sparql
SELECT ?currency
WHERE {
  <http://dbpedia.org/resource/Czech_Republic> dbo:currency ?currency
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
387,Where in France is sparkling wine produced?,"```sparql
SELECT DISTINCT ?wine ?location
WHERE {
  ?wine dbo:location ?location .
  ?wine rdf:type dbo:Wine .
  ?wine dbo:country dbr:France .
  ?wine rdf:type dbo:SparklingWine .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
388,When did Boris Becker end his active career?,"```sparql
SELECT ?endDate
WHERE {
  ?person dbo:activeYearsEndDate ?endDate ;
         foaf:name ""Boris Becker""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Mickey_Rourke> ;
         dbo:director <http://dbpedia.org/resource/Guy_Ritchie> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
390,In which films did Julia Roberts as well as Richard Gere play?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
391,Show me Hemingway's autobiography.,"```sparql
SELECT ?autobiography
WHERE {
  ?autobiography a dbo:Autobiography ;
                 dbo:author dbr:Ernest_Hemingway .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
392,How tall is Amazon Eve?,"```sparql
SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Amazon_Eve> dbo:height ?height
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
393,What are the five boroughs of New York?,"```sparql
SELECT ?borough
WHERE {
  ?borough a dbo:Borough ;
           dbo:isPartOf dbr:New_York_City .
}
LIMIT 5
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
394,Give me all Canadian Grunge record labels.,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?label a dbo:RecordLabel ;
         dbo:genre ""Grunge"" ;
         dbo:country dbr:Canada .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
395,In which country does the Ganges start?,"```sparql
SELECT ?country
WHERE {
  ?river dbo:sourceCountry ?country ;
         rdfs:label ""Ganges""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
396,Who is the founder of Penguin Books?,"```sparql
SELECT ?founder
WHERE {
  ?penguin dbo:founder ?founder .
  FILTER regex(str(?penguin), ""Penguin_Books"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
397,Who wrote the Game of Thrones theme?,"```sparql
SELECT ?composer
WHERE {
  ?gameOfThrones dbo:composer ?composer .
  ?gameOfThrones rdf:type dbo:TelevisionShow .
  FILTER regex(str(?gameOfThrones), ""Game of Thrones"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
398,Who is the president of Eritrea?,"```sparql
SELECT ?president
WHERE {
  ?country dbo:leader ?president ;
           rdfs:label ""Eritrea""@en .
  ?president a dbo:Person .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
399,In which city did John F. Kennedy die?,"```sparql
SELECT ?city WHERE {
  ?person rdf:type dbo:Person .
  ?person foaf:name ""John F. Kennedy""@en .
  ?person dbo:deathPlace ?cityResource .
  ?cityResource rdf:type dbo:City .
  ?city dbo:isPartOf ?cityResource .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
400,What is the highest mountain in Australia?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
  ?mountain dbo:country dbr:Australia .
}
ORDER BY DESC(?elevation)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
401,Who writes the Farmers' Almanac?,"```sparql
SELECT ?author
WHERE {
  ?almanac dbo:editor ?author ;
           rdfs:label ""Farmers' Almanac""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
402,Give me the currency of China.,"```sparql
SELECT ?currency
WHERE {
  <http://dbpedia.org/resource/China> dbo:currency ?currency
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
403,Give me all Swedish oceanographers.,"```sparql
SELECT DISTINCT ?oceanographer
WHERE {
  ?oceanographer a <http://dbpedia.org/ontology/Oceanographer> ;
                 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Sweden> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
404,In which city are the headquarters of the United Nations?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/United_Nations> dbo:headquarter ?hq .
  ?hq dbo:location ?city .
  ?city a dbo:City
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
405,Is Rita Wilson the wife of Tom Hanks?,"```sparql
SELECT ?wife
WHERE {
  ?wife dbo:spouse dbr:Tom_Hanks .
  FILTER (?wife = dbr:Rita_Wilson)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
406,In which countries do people speak Japanese?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?country dbo:officialLanguage dbr:Japanese .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
407,Which of Tim Burton's films had the highest budget?,"```sparql
SELECT ?film ?budget
WHERE {
  ?film a dbo:Film ;
        dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
408,Which museum in New York has the most visitors?,"```sparql
SELECT ?museum ?visitors
WHERE {
  ?museum a dbo:Museum ;
          dbo:numberOfVisitors ?visitors .
}
ORDER BY DESC(?visitors)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
409,What was the first Queen album?,"```sparql
SELECT ?album ?releaseDate
WHERE {
  ?album a dbo:Album ;
         dbo:releaseDate ?releaseDate .
}
ORDER BY ?releaseDate
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
410,What was the first name of the band Queens of the Stone Age?,"```sparql
SELECT ?bandName
WHERE {
  ?band dbo:alias ?bandName .
  FILTER regex(?bandName, ""Queens of the Stone Age"", ""i"")
}
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
411,What was the last movie with Alec Guinness?,"```sparql
SELECT ?movie ?date
WHERE {
  ?movie rdf:type dbo:Film ;
         dbp:starring dbr:Alec_Guinness ;
         dbo:releaseDate ?date .
}
ORDER BY DESC(?date)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
412,Give me all actors starring in Last Action Hero.,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Last Action Hero""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
413,Who discovered Pluto?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discoverer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
1,List all boardgames by GMT.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?boardgame
WHERE {
  ?boardgame a dbo:Game ;
             dbo:publisher <http://dbpedia.org/resource/GMT_Games> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
2,Who developed Skype?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?developer
WHERE {
  ?software dbo:developer ?developer .
  ?software dbo:product <http://dbpedia.org/resource/Skype> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
3,Which people were born in Heraklion?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
4,In which U.S. state is Area 51 located?,"```sparql
SELECT ?stateLabel
WHERE {
  ?area51 dbo:location ?state .
  ?state rdfs:label ?stateLabel .
  FILTER (LANG(?stateLabel) = 'en')
  FILTER regex(?stateLabel, ""^Area 51"", ""i"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
5,Who is the mayor of New York City?,"```sparql
SELECT ?mayor
WHERE {
  dbr:New_York_City dbo:leaderName ?mayor .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
6,Which countries have places with more than two caves?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?country
WHERE {
  ?place rdf:type dbo:Place .
  ?place dbo:location ?country .
  ?place rdf:type dbo:Cave .
  {
    SELECT ?country (COUNT(?cave) AS ?caveCount)
    WHERE {
      ?cave rdf:type dbo:Cave .
      ?cave dbo:location ?country .
    }
    GROUP BY ?country
    HAVING (COUNT(?cave) > 2)
  }
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
7,Where did Abraham Lincoln die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?place
WHERE {
  dbo:Abraham_Lincoln dbo:deathPlace ?place
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
8,Which airports does Air China serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport
WHERE {
  dbr:Air_China dbo:targetAirport ?airport .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
9,Give me all actors starring in movies directed by and starring William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:director ?director .
  ?director dbo:starring ?director .
  FILTER (?director = <http://dbpedia.org/resource/William_Shatner>)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
10,What are the official languages of the Philippines?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?language
WHERE {
  dbo:Philippines dbo:officialLanguage ?language
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
11,Give me all Danish films.,"```sparql
SELECT ?film
WHERE {
  ?film rdf:type dbo:Film .
  ?film dbp:country ""Denmark""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Brad_Pitt> ;
         dbo:director <http://dbpedia.org/resource/Guy_Ritchie> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
13,Give me the grandchildren of Bruce Lee.,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?grandchild
WHERE {
  ?bruceLee dbo:child ?child .
  ?child dbo:child ?grandchild .
  FILTER(?bruceLee = <http://dbpedia.org/resource/Bruce_Lee>)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
14,Which other weapons did the designer of the Uzi develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?otherWeapons
WHERE {
  ?uzi dbo:designer ?designer .
  ?designer dbp:designer ?otherWeapons .
  FILTER (?otherWeapons != ""Uzi"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
15,Who is the owner of Universal Studios?,"```sparql
SELECT ?owner
WHERE {
  dbr:Universal_Studios dbo:owner ?owner .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
16,Which state of the USA has the highest population density?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?state
WHERE {
  ?state a dbo:State ;
         dbp:densityrank ?density .
}
ORDER BY DESC(?density)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
17,Which monarchs were married to a German?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?monarch
WHERE {
  ?monarch dbo:spouse ?spouse .
  ?spouse a dbo:Person .
  ?spouse dbo:birthPlace dbr:Germany
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
18,Which organizations were founded in 1950?,"```sparql
SELECT ?organization
WHERE {
  ?organization dbo:formationYear ""1950"" .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
19,Who created the comic Captain America?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?creator
WHERE {
  ?comic dbo:creator ?creator .
  ?comic dbo:wikiPageID ?id .
  FILTER (?id = 151470) 
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
20,Give me the Apollo 14 astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?astronaut
WHERE {
  dbr:Apollo_14 dbo:astronaut ?astronaut .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
21,Who wrote the book The pillars of the Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author
WHERE {
  ?book a dbo:Book ;
        dbp:title ""The Pillars of the Earth""@en ;
        dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
22,Which state of the United States of America has the highest density?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?state
WHERE {
  ?state a dbo:State ;
         dbp:densityrank ?density .
}
ORDER BY DESC(?density)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
23,Which spaceflights were launched from Baikonur?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spaceflight
WHERE {
  ?spaceflight dbo:launchPad dbo:Baikonur_Cosmodrome .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
24,Give me a list of all trumpet players that were bandleaders.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?trumpetPlayer
WHERE {
  ?trumpetPlayer a dbo:Person ;
                 dbo:instrument <http://dbpedia.org/resource/Trumpet> ;
                 dbo:bandMember ?band ;
                 dbo:bandMember/dbo:leader ?trumpetPlayer .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
25,Which U.S. states are in the same timezone as Utah?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?state
WHERE {
  ?utah dbo:timeZone ?timezone .
  ?state dbo:timeZone ?timezone .
  FILTER(?state != <http://dbpedia.org/resource/Utah>)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
26,Which U.S. states possess gold minerals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?state
WHERE {
  ?state dbo:placeType dbo:State ;
         dbp:mineral ?mineral .
  FILTER regex(?mineral, ""gold"", ""i"")
}
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
27,Who is the daughter of Ingrid Bergman married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?daughter dbo:child <http://dbpedia.org/resource/Ingrid_Bergman> .
  ?daughter dbo:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
28,How deep is Lake Placid?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?depth
WHERE {
  dbo:Lake dbo:maximumDepth ?depth .
  FILTER (LANG(?depth) = """" || LANGMATCHES(LANG(?depth), ""en""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
29,Show me all museums in London.,"```sparql
SELECT ?museum
WHERE {
  ?museum rdf:type dbo:Museum .
  ?museum dbo:location dbr:London .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
30,Which caves have more than 3 entrances?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?cave
WHERE {
  ?cave a dbo:Cave ;
        dbp:entranceCount ?entranceCount .
  FILTER (?entranceCount > 3)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
31,Who is the tallest player of the Atlanta Falcons?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?player
WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Atlanta_Falcons> .
  ?player dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
32,What are the top-10 action role-playing video games according to IGN?,"```sparql
SELECT ?game ?rank
WHERE {
  ?game rdf:type dbo:VideoGame ;
        dbo:genre dbr:Action_role-playing_video_game ;
        dbo:IGNRank ?rank .
}
ORDER BY ?rank
LIMIT 10
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?writer
WHERE {
  ?writer a dbo:Writer .
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
34,Show me all basketball players that are higher than 2 meters.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?player
WHERE {
  ?player a dbo:BasketballPlayer .
  ?player dbo:height ?height .
  FILTER (?height > 2)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
35,When was the Statue of Liberty built?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?date
WHERE {
    <http://dbpedia.org/resource/Statue_of_Liberty> dbp/completionDate ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
36,Which states border Illinois?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?state
WHERE {
  dbr:Illinois dbo:borderingStates ?state .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
37,Who developed Minecraft?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?developer
WHERE {
  ?game a dbo:VideoGame ;
        dbo:developer ?developer ;
        rdfs:label ""Minecraft""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
38,Where did Hillel Slovak die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?place
WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?place
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
39,What movies does Jesse Eisenberg play in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?movie
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Jesse_Eisenberg>
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
40,Give all swimmers that were born in Moscow.,"```sparql
SELECT ?swimmer
WHERE {
  ?swimmer a dbo:Person ;
           dbo:birthPlace dbr:Moscow ;
           dbo:occupation dbr:Swimming .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
41,Give me all cosmonauts.,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?cosmonaut
WHERE {
  ?cosmonaut rdf:type dbo:Cosmonaut
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
42,Give me all Swiss non-profit organizations.,"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?organization
WHERE {
    ?organization rdf:type dbo:Organisation .
    ?organization dbp:country ""Switzerland""@en .
    ?organization dbo:type ""Non-profit organization""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
43,Which presidents were born in 1945?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?president
WHERE {
  ?president a dbo:President ;
            dbo:birthDate ?birthDate .
  FILTER (regex(str(?birthDate), ""1945""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
44,What kind of music did Lou Reed play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?genre
WHERE {
  ?artist dbo:genre ?genre .
  FILTER (?artist = dbo:Lou_Reed)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
45,Where do the Red Sox play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team ?stadium
WHERE {
  ?team dbo:ground ?stadium.
  ?team dbo:teamName ""Boston Red Sox""@en.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
46,Show a list of soccer clubs that play in the Bundesliga.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?club
WHERE {
  ?club dbo:league dbr:Bundesliga .
  ?club rdf:type dbo:SoccerClub .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
47,Which volcanos in Japan erupted since 2000?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano .
  ?volcano dbo:eruptionYear ?year .
  FILTER (?year >= ""2000""^^xsd:gYear)
  FILTER regex(str(?volcano), ""Japan"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
48,Which bridges cross the Seine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bridge
WHERE {
  ?bridge dbo:crosses dbr:Seine
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
49,What is the official color of the University of Oxford?,"```sparql
SELECT ?color
WHERE {
  dbr:University_of_Oxford dbo:officialSchoolColour ?color
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
50,How many films did Hal Roach produce?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:producer dbo:Hal_Roach .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
51,Give me all Danish movies.,"```sparql
SELECT ?movie
WHERE {
  ?movie a dbo:Film ;
         dbp:country ""Denmark""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
52,What is the most frequent cause of death?,"```sparql
SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
  ?person dbo:deathCause ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
53,Who are the four youngest MVP basketball players?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?name ?age
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:birthDate ?birthdate ;
          foaf:name ?name .
  BIND(now() - xsd:dateTime(?birthdate) AS ?age)
}
ORDER BY ?age
LIMIT 4","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
54,Give me all companies in Munich.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:location dbr:Munich .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
55,Give me the capitals of all countries that the Himalayas run through.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital
WHERE {
  ?country dbo:capital ?capital ;
           dbo:location dbr:Himalayas .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
56,How many movies did Park Chan-wook direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?movie) AS ?count)
WHERE {
  ?director dbo:director dbr:Park_Chan-wook .
  ?movie dbo:director ?director .
  ?movie a dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
57,Which rivers flow into a German lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?river
WHERE {
  ?river dbo:inflow ?lake .
  ?lake dbo:country dbr:Germany .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
58,How many airlines are there?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
59,Give me all islands that belong to Japan.,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?island
WHERE {
  ?island dbo:country <http://dbpedia.org/resource/Japan> .
  ?island a dbo:Island .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
60,How many inhabitants does Maribor have?,"```sparql
SELECT ?population
WHERE {
  dbr:Maribor dbo:populationTotal ?population
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
61,Give me all Apollo 14 astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?astronaut
WHERE {
  dbr:Apollo_14 dbo:astronaut ?astronaut .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
62,Which companies have more than 1 million employees?,"```sparql
SELECT DISTINCT ?company WHERE {
  ?company dbo:numberOfEmployees ?numEmployees .
  FILTER (?numEmployees > 1000000)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film
WHERE {
  ?film dbo:director dbr:Garry_Marshall .
  ?film dbo:starring dbr:Julia_Roberts .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
64,Give me all soccer clubs in the Premier League.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club
WHERE {
  ?club dbo:league dbr:Premier_League .
  ?club rdf:type dbo:SoccerClub .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
65,What is the highest place of the Urals?,"```sparql
SELECT ?place ?height
WHERE {
  ?place dbo:location ?location .
  ?location dbo:locatedInArea dbr:Ural_Mountains .
  ?place dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
66,Who is the governor of Wyoming?,"```sparql
SELECT ?governor
WHERE {
  ?state a dbo:State ;
         rdfs:label ""Wyoming""@en ;
         dbp:governor ?governor .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
67,Where did the architect of the Eiffel Tower study?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?university
WHERE {
  ?architect dbo:architecturalStructure ?eiffelTower .
  ?architect foaf:name ?architectName .
  ?architect dbo:almaMater ?university .
  FILTER (?architectName = ""Gustave Eiffel"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
68,Give me all world heritage sites designated within the past two years.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?site
WHERE {
  ?site a dbo:WorldHeritageSite ;
        dbo:designationDate ?date .
  FILTER (year(?date) >= year(now()) - 2)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
69,Give me all actors who were born in Paris after 1950.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:location <http://dbpedia.org/resource/Paris> ;
              dbo:timeZone ?timeZone .
  FILTER (YEAR(?timeZone) > 1950)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
70,Which movies star both Liz Taylor and Richard Burton?,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
71,Give me all Australian nonprofit organizations.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation .
  ?organization dbo:country dbr:Australia .
  ?organization dbo:type dbr:Nonprofit_organization .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
72,Which pope succeeded John Paul II?,"```sparql
SELECT ?successor WHERE {
  <http://dbpedia.org/resource/Pope_John_Paul_II> <http://dbpedia.org/ontology/successor> ?successor .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
73,Give me all ESA astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut a <http://dbpedia.org/ontology/Astronaut> .
  ?astronaut <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
74,Who was president of Pakistan in 1978?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?president
WHERE {
  ?president dbp:title ?title .
  FILTER regex(?title, ""President of Pakistan"") .
  FILTER regex(?title, ""1978"") .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
75,Who is the owner of Rolls-Royce?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner
WHERE {
  dbo:Rolls-Royce dbo:owner ?owner
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
76,How many museums does Paris have?,"```sparql
SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum rdf:type dbo:Museum .
  ?museum dbo:location dbr:Paris .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
77,Where was JFK assassinated?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?place
WHERE {
  dbo:John_F._Kennedy dbo:deathPlace ?place
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
78,Give me all federal chancellors of Germany.,"```sparql
SELECT ?chancellor
WHERE {
  ?chancellor a dbo:Person ;
             dbo:incumbent/dbo:office dbr:Federal_Chancellor_of_Germany .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
79,Show me everyone who was born on Halloween.,"```sparql
SELECT ?person ?name
WHERE {
  ?person dbo:birthDate ""10-31""^^xsd:date .
  ?person foaf:name ?name .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
80,Which beer originated in Ireland?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?beer
WHERE {
  ?beer dbo:origin dbr:Ireland .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
81,To which countries does the Himalayan mountain system extend?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?mountainSystem dbo:extends ?country .
  FILTER regex(str(?mountainSystem), ""Himalayan"", ""i"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
82,Which actors were born in Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Germany .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
83,How much carbs does peanut butter have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?carbs
WHERE {
  ?food dbo:abstract ?abstract.
  FILTER regex(?abstract, ""peanut butter"", ""i"").
  ?food dbp:carbs ?carbs.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
84,Who produced the most films?,"```sparql
SELECT ?producer (COUNT(?film) AS ?numFilmsProduced)
WHERE {
  ?film dbo:producer ?producer .
}
GROUP BY ?producer
ORDER BY DESC(?numFilmsProduced)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
85,How many employees does Google have?,"```sparql
SELECT ?employees
WHERE {
  <http://dbpedia.org/resource/Google> dbo:numberOfEmployees ?employees
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
86,Give me all actors who were born in Berlin.,"```sparql
SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Berlin .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
87,Who created Goofy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?creator
WHERE {
  ?character rdf:type dbo:FictionalCharacter.
  ?character dbo:creator ?creator.
  FILTER (?character = dbo:Goofy)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
88,Which music albums contain the song Last Christmas?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album
WHERE {
  ?album dbo:song dbr:Last_Christmas
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
89,When was Alberta admitted as province?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?admittanceDate
WHERE {
  ?province dbo:admittanceDate ?admittanceDate.
  ?province dbo:isPartOf <http://dbpedia.org/resource/Alberta>.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
90,How many missions does the Soyuz programme have?,"```sparql
SELECT (COUNT(?mission) AS ?numMissions)
WHERE {
  ?mission dct:type dbc:Soyuz_programme_missions .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
91,Give me all the TV shows with Neil Patrick Harris.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?tvShow
WHERE {
  ?tvShow dbo:starring dbr:Neil_Patrick_Harris .
  ?tvShow rdf:type dbo:TelevisionShow .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
92,When were the Hells Angels founded?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?foundingYear
WHERE {
    <http://dbpedia.org/resource/Hells_Angels> dbo:foundingYear ?foundingYear
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
93,What is the net income of Apple?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?netIncome
WHERE {
  dbo:Apple dbo:netIncome ?netIncome
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
94,Give me all Swedish holidays.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?holiday
WHERE {
  ?holiday rdf:type dbo:Holiday .
  ?holiday dbo:country <http://dbpedia.org/resource/Sweden> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
95,In which city was the former Dutch queen Juliana buried?,"```sparql
SELECT ?city WHERE {
  dbr:Juliana_of_the_Netherlands dbo:burialPlace ?city .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
96,List all the musicals with music by Leonard Bernstein.,"```sparql
SELECT ?musical
WHERE {
  ?musical dbo:composer dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
97,Give me all companies in the advertising industry.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:industry dbr:Advertising_industry .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
98,What is the largest metropolitan area in Washington state?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?largestMetro
WHERE {
  ?largestMetro dbo:isPartOf <http://dbpedia.org/resource/Washington_(state)> .
  ?largestMetro dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
99,Who killed John Lennon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?killer
WHERE {
  ?person dbo:deathCause dbp:Assassination_of_John_Lennon ;
          dbo:deathPlace ?place .
  ?place dbo:country ?country .
  ?killer dbo:leaderName ?person .
  FILTER (?country = dbp:United_States)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
100,Which writers studied in Istanbul?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer
WHERE {
  ?writer a dbo:Writer .
  ?writer dbo:education dbr:Istanbul
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
101,Give me all Australian metalcore bands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  ?band dbo:genre dbr:Metalcore ;
        dbo:origin dbr:Australia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
102,Which countries adopted the Euro?,"```sparql
SELECT DISTINCT ?countryName
WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:currency dbr:Euro .
  ?country rdfs:label ?countryName .
  FILTER (langMatches(lang(?countryName), ""en""))
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
103,Give me all types of eating disorders.,"```sparql
SELECT ?eatingDisorder
WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
104,Was Marc Chagall a jew?,"```sparql
SELECT ?person ?personName
WHERE {
  ?person a dbo:Person ;
          foaf:name ?personName ;
          dbo:religion dbr:Judaism .
  FILTER (?personName = ""Marc Chagall"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?rank
WHERE {
  dbo:Brazil dbp:fifaMin ?rank
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
106,How many films did Leonardo DiCaprio star in?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Leonardo_DiCaprio> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
107,Was Margaret Thatcher a chemist?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:profession dbr:Chemist .
  ?person foaf:name ""Margaret Thatcher""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
108,Which U.S. states are in the same time zone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbp:timeZone ?timezone .
  ?state dbp:timeZone ?timezone .
  ?state a dbo:State .
  FILTER (?state != dbpedia:Utah)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
109,Give me all books written by Danielle Steel.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Danielle_Steel .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
110,Which country has the most official languages?,"```sparql
SELECT ?country (COUNT(?language) AS ?numLanguages)
WHERE {
  ?country a dbo:Country .
  ?country dbo:officialLanguage ?language .
} 
GROUP BY ?country
ORDER BY DESC(?numLanguages)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
111,What is the total amount of men and women serving in the FDNY?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT (SUM(?maleCount) AS ?totalMaleCount) (SUM(?femaleCount) AS ?totalFemaleCount)
WHERE {
  ?fdny a dbo:FireDepartment ;
       dbp:employees ?employees .
  
  ?employees dbo:person ?person .
  ?person dbo:gender ?gender .
  
  BIND(IF(?gender = ""male"", 1, 0) AS ?maleCount)
  BIND(IF(?gender = ""female"", 1, 0) AS ?femaleCount)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
112,Which actor played Chewbacca?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Star Wars: Episode IV - A New Hope""@en .
  ?actor foaf:name ""Peter Mayhew""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
113,Give me all libraries established earlier than 1400.,"```sparql
SELECT ?library ?establishedYear
WHERE {
  ?library a dbo:Library ;
           dbp:established ?establishedYear .
  FILTER (?establishedYear < ""1400""^^xsd:gYear)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
114,Which programming languages were influenced by Perl?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?language
WHERE {
    ?language dbo:influenced dbo:Perl
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
115,In which U.S. state is Mount McKinley located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?state
WHERE {
  dbo:Mount_McKinley dbo:locatedInArea ?state .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
116,What airlines are part of the SkyTeam alliance?,"```sparql
SELECT ?airlineName
WHERE {
  ?airline rdf:type dbo:Airline ;
           dbo:alliance dbr:SkyTeam ;
           rdfs:label ?airlineName .
  FILTER (lang(?airlineName) = 'en')
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
117,Which ships were called after Benjamin Franklin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ship
WHERE {
  ?ship dbp:shipNamesake dbo:Benjamin_Franklin
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
118,Give me all Methodist politicians.,"```sparql
SELECT DISTINCT ?politician
WHERE {
  ?politician a <http://dbpedia.org/ontology/Politician> ;
              dcterms:subject <http://dbpedia.org/resource/Category:Methodist_politicians> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
119,What other books have been written by the author of The Fault in Our Stars?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?other_books
WHERE {
  dbr:John_Green dbo:author ?author .
  ?other_books dbo:author ?author .
  FILTER (?other_books != dbr:The_Fault_in_Our_Stars)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
120,What is the highest mountain?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
121,Which poet wrote the most books?,"```sparql
SELECT ?poet (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a dbo:Writer .
  ?poet dbo:author ?book .
} 
GROUP BY ?poet
ORDER BY DESC(?numBooks)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
122,Which programming languages influenced Javascript?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?language
WHERE {
  dbr:JavaScript dbo:influenced ?language .
  ?language a dbo:ProgrammingLanguage .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
123,Which musician wrote the most books?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musician ?numBooks
WHERE {
  ?musician a dbo:MusicalArtist .
  ?musician dbo:author ?book .
  {
    SELECT ?musician (COUNT(?book) AS ?numBooks)
    WHERE {
      ?musician a dbo:MusicalArtist .
      ?musician dbo:author ?book .
    }
    GROUP BY ?musician
    ORDER BY DESC(?numBooks)
    LIMIT 1
  }
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
124,Which films starring Clint Eastwood did he direct himself?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film
WHERE {
  ?film dbo:director dbr:Clint_Eastwood .
  ?film dbo:starring dbr:Clint_Eastwood .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
125,Which software has been developed by organizations founded in California?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?software
WHERE {
  ?org dbo:location <http://dbpedia.org/resource/California> ;
       dbo:product ?software .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
126,Which instruments does Cat Stevens play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?instrument
WHERE {
  dbo:Cat_Stevens dbo:instrument ?instrument
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
127,How many airlines are members of the Star Alliance?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline dbo:alliance <http://dbpedia.org/resource/Star_Alliance>
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
128,Give me all actors called Baldwin.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?name .
  FILTER regex(?name, ""Baldwin"", ""i"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
129,Who wrote The Hunger Games?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author
WHERE {
  ?book dbo:author ?author ;
        dbp:name ""The Hunger Games""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
130,For which label did Elvis record his first album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?label
WHERE {
  ?album dbo:artist dbr:Elvis_Presley ;
         dbo:releaseDate ?date ;
         rdfs:label ?label .
  FILTER (?date = (SELECT MIN(?date) WHERE { ?album dbo:artist dbr:Elvis_Presley }))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
131,Is Christian Bale starring in Batman Begins?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  dbr:Batman_Begins dbo:starring ?actor .
  FILTER (?actor = dbr:Christian_Bale)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
132,Where is the residence of the prime minister of Spain?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence
WHERE {
  <http://dbpedia.org/resource/Prime_Minister_of_Spain> dbp:residence ?residence .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
133,Which actor was casted in the most movies?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor (COUNT(?movie) AS ?count)
WHERE {
  ?movie a dbo:Film ;
         dbp:starring ?actor .
}
GROUP BY ?actor
ORDER BY DESC(?count)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
134,Which countries have more than two official languages?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country .
  {
    SELECT ?country (COUNT(?language) AS ?numLanguages) WHERE {
      ?country dbo:officialLanguage ?language .
    } GROUP BY ?country
  }
  FILTER (?numLanguages > 2)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
135,Which countries have more than ten caves?,"```sparql
SELECT ?country
WHERE {
  ?cave a dbo:Cave .
  ?cave dbo:location ?country .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 10)
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song
WHERE {
  ?song dbo:artist dbr:Bruce_Springsteen ;
        dbo:releaseDate ?date .
  FILTER (?date >= ""1980-01-01""^^xsd:date && ?date <= ""1990-12-31""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
137,Which television shows were created by John Cleese?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show a dbo:TelevisionShow .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
138,When did Latvia join the EU?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?date
WHERE {
  dbo:Latvia dbp:accessioneudate ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
139,Which soccer players were born on Malta?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player
WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player a dbo:SoccerPlayer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
140,How many politicians graduated from Columbia University?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?politician) AS ?count)
WHERE {
  ?politician dbo:almaMater dbr:Columbia_University .
  ?politician rdf:type dbo:Politician .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
141,Give me the birthdays of all actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?birthday
WHERE {
  ?show dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
  ?show foaf:name ""Charmed""@en
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
142,Which telecommunications organizations are located in Belgium?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?organization
WHERE {
  ?organization a dbo:Organisation ;
               dbo:location dbr:Belgium ;
               dbo:industry dbr:Telecommunications .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
143,Give me a list of all lakes in Denmark.,"```sparql
SELECT ?lake
WHERE {
  ?lake rdf:type dbo:Lake .
  ?lake dbo:country dbr:Denmark .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
144,How many children does Eddie Murphy have?,"```sparql
SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Eddie_Murphy> dbpedia-owl:child ?child .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
145,Show me all English Gothic buildings in Kent.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?building
WHERE {
  ?building a dbo:Building ;
           dbo:architecturalStyle dbr:English_Gothic_architecture ;
           dbo:location dbr:Kent .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
146,Who is the manager of Real Madrid?,"```sparql
SELECT ?manager
WHERE {
  dbr:Real_Madrid dbo:manager ?manager .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
147,In which countries can you pay using the West African CFA franc?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country
WHERE {
  ?country dct:subject dbc:Countries_that_use_the_West_African_CFA_franc.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
148,Which holidays are celebrated around the world?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?holiday
WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:Holiday ?holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
149,What is the longest river?,"```sparql
SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
150,Which organizations were founded in 1930?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:formationYear ""1930"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
151,What is the birth name of Angela Merkel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
152,Who has Tom Cruise been married to?,"```sparql
SELECT ?spouseName
WHERE {
  dbr:Tom_Cruise dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
153,Which weapons did Heckler & Koch develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?weapon
WHERE {
  dbr:Heckler_&_Koch dbo:developer ?weapon .
  ?weapon a dbo:Weapon .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
154,What is the smallest city by area in Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city ?area
WHERE {
  ?city a dbo:City ;
        dbo:country <http://dbpedia.org/resource/Germany> ;
        dbo:areaTotal ?area .
}
ORDER BY ?area
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
155,What is the ruling party in Lisbon?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?party
WHERE {
  ?city dbo:leaderParty ?party .
  ?city dbo:isPartOf <http://dbpedia.org/resource/Lisbon> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
156,How heavy is Jupiter's lightest moon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?moon ?mass
WHERE {
  ?moon dbo:satelliteOf <http://dbpedia.org/resource/Jupiter> .
  ?moon dbo:mass ?mass .
}
ORDER BY ASC(?mass)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
157,How many employees does IBM have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?numberOfEmployees
WHERE {
  dbo:IBM dbo:numberOfEmployees ?numberOfEmployees
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
158,List all episodes of the first season of the HBO television series The Sopranos!,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?episode
WHERE {
  ?episode dbo:series <http://dbpedia.org/resource/The_Sopranos> ;
           dbo:seasonNumber ""1"" .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
159,What does ICRO stand for?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?definition
WHERE {
  dbo:ICRO rdfs:comment ?definition
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"```sparql
SELECT ?newEpisodes ?oldEpisodes
WHERE {
  ?newSeries dbo:numberOfEpisodes ?newEpisodes ;
            dbo:series ?newSeriesName .
  ?oldSeries dbo:numberOfEpisodes ?oldEpisodes ;
            dbo:series ?oldSeriesName .
  FILTER (?newSeriesName = ""Battlestar Galactica (2004 TV series)"" && ?oldSeriesName = ""Battlestar Galactica (1978 TV series)"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
161,Give me all films produced by Hal Roach.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?film
WHERE {
  ?film dbo:producer dbo:Hal_Roach .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
162,Who played Agent Smith in Matrix?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor
WHERE {
    ?film dbo:starring ?actor .
    ?film dbo:wikiPageID  2097 .
    ?actor dbo:wikiPageID  2097 .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
163,Which Greek parties are pro-European?,"```sparql
SELECT DISTINCT ?party
WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:alliance ?alliance .
  ?alliance rdfs:label ?allianceLabel .
  FILTER (lang(?allianceLabel) = 'en' && regex(?allianceLabel, ""pro-European"", ""i"")) .
  FILTER regex(str(?party), ""Greek"", ""i"") .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
164,Give me a list of all bandleaders that play trumpet.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet .
  ?bandleader dbo:occupation dbr:Bandleader .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
165,What is the second highest mountain on Earth?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1 OFFSET 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
166,Is Egypts largest city also its capital?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?capital WHERE {
  ?country dbo:largestCity ?largestCity ;
           dbo:capital ?capital .
  FILTER (?largestCity = ""Cairo"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
167,Which rockets were launched from Baikonur?,"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?rocket
WHERE {
  ?rocket dbo:launchPad dbr:Baikonur_Cosmodrome .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
168,How many programming languages are there?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
169,Which Chess players died in the same place they were born in?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?player
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
170,Who is the owner of Facebook?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner
WHERE {
  dbo:Facebook dbo:foundedBy ?owner .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
171,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Tom_Cruise> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
172,In which U.S. state is Fort Knox located?,"```sparql
SELECT ?state WHERE {
  ?fort dbo:location ?state .
  FILTER regex(?fort, ""Fort Knox"", ""i"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city
WHERE {
  ?city a dbo:City ;
        dbo:isPartOf dbr:New_Jersey ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
174,Which mountains are higher than the Nanga Parbat?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mountain
WHERE {
  ?mountain a dbo:Mountain .
  ?mountain dbp:elevationM ?elevation .
  FILTER (?elevation > (SELECT ?elevationNangaParbat WHERE { dbo:Nanga_Parbat dbp:elevationM ?elevationNangaParbat }))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
175,Give me all B-sides of the Ramones.,"```sparql
SELECT ?bSide
WHERE {
  ?album dbo:artist dbr:Ramones ;
         dbo:bSide ?bSide .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
176,What are the specialities of the UNC Health Care?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?speciality
WHERE {
  ?hospital dbo:speciality ?speciality .
  ?hospital dbo:wikiPageRedirects <http://dbpedia.org/resource/UNC_Health_Care> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
177,When was Olof Palme shot?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?date
WHERE {
  dbo:Olof_Palme dbo:deathDate ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
178,List the seven kings of Rome.,"```sparql
SELECT ?kingName
WHERE {
  ?king a dbo:Monarch ;
        dbo:title ?kingName ;
        dbo:reignStart ?start ;
        dbo:reignEnd ?end .
  FILTER (?start >= ""753-04-21""^^xsd:date && ?end <= ""509-06-24""^^xsd:date)
}
ORDER BY ?start
LIMIT 7
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
179,Give me all people that were born in Vienna and died in Berlin.,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Vienna ;
         dbo:deathPlace dbr:Berlin .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
180,Is Darth Vader Luke’s father?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  dbo:Darth_Vader dbo:child ?father .
  ?father dbo:child dbo:Luke_Skywalker .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
181,Show me all the breweries in Australia.,"```sparql
SELECT DISTINCT ?brewery
WHERE {
  ?brewery a dbo:Brewery ;
           dbo:location dbr:Australia .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film
WHERE {
  ?film rdf:type dbo:Film .
  ?film dbo:director <http://dbpedia.org/resource/Steven_Spielberg> .
  ?film dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
183,Give me all soccer clubs in Spain.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:ground ?ground .
  ?ground dbo:location dbr:Spain .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
184,Who produced films starring Natalie Portman?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer
WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
185,Give me all breeds of the German Shepherd dog.,"```sparql
SELECT ?breed
WHERE {
  ?breed rdf:type dbo:DogBreed ;
         rdfs:label ?label .
  FILTER regex(?label, ""German Shepherd"", ""i"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
186,Who is the heaviest player of the Chicago Bulls?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?weight
WHERE {
  ?player dbo:team dbr:Chicago_Bulls ;
         dbo:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
187,Which languages are spoken in Estonia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language
WHERE {
  dbr:Estonia dbo:spokenIn ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
188,What is the largest country in the world?,"```sparql
SELECT ?countryName
WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:areaTotal ?area .
  ?country rdfs:label ?countryName .
  FILTER (lang(?countryName) = 'en')
}
ORDER BY DESC(?area)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
189,What is the largest city in america?,"```sparql
SELECT ?city WHERE {
  ?country dbo:largestCity ?city .
  ?country dbo:countryName ""United States""@en
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
190,Who was the pope that founded the Vatican Television?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?pope
WHERE {
  ?pope dbo:founded <http://dbpedia.org/resource/Vatican_Television>.
  ?pope a dbo:Pope.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
191,Who discovered Ceres?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?discoverer
WHERE {
  dbr:Ceres dbo:discoverer ?discoverer
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
192,Who is the king of the Netherlands?,"```sparql
SELECT ?king
WHERE {
  ?king a dbo:Person ;
        dbo:leader dbr:Monarchy_of_the_Netherlands .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
193,Is Cola a beverage?,"```sparql
SELECT DISTINCT ?beverage WHERE {
  ?beverage rdf:type dbo:Beverage .
  ?beverage rdfs:label ""Cola""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"```sparql
SELECT ?almaMater
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?almaMater .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
195,Who wrote the book Les Piliers de la terre?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Les Piliers de la terre""@fr .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
196,Which airports does Yeti Airlines serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?airport
WHERE {
  ?airline dbo:targetAirport ?airport ;
           dbo:airlineName ""Yeti Airlines"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
197,Where is the birthplace of Goethe?,"```sparql
SELECT ?birthplace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"```sparql
SELECT ?event1 ?event2
WHERE {
  ?event1 dbo:startDate ?date1 .
  ?event2 dbo:startDate ?date2 .
  FILTER (?event1 = dbr:Cuban_Missile_Crisis && ?event2 = dbr:Bay_of_Pigs_Invasion)
  FILTER (?date1 < ?date2)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
199,Which ingredients do I need for carrot cake?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?ingredient
WHERE {
  ?cake dbo:abstract ?abstract .
  FILTER (CONTAINS(?abstract, ""carrot cake""))
  ?cake dbo:ingredient ?ingredient .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
200,Who created Wikipedia?,"```sparql
SELECT ?creator 
WHERE {
  ?wikipedia dbo:creator ?creator .
  ?wikipedia rdf:type dbo:Website .
  FILTER regex(str(?wikipedia), ""Wikipedia"", ""i"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
201,What is the highest mountain in Saxony Germany?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:country dbr:Saxony .
  ?mountain dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
202,Who is the current federal minister of finance in Germany?,"```sparql
SELECT ?minister
WHERE {
  ?minister a dbo:Person ;
           dbo:position / dbo:office ?office .
  ?office rdfs:label ""Federal Minister of Finance of Germany""@en .
  ?minister dbo:nationality dbr:Germany .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
203,In which country is Mecca located?,"```sparql
SELECT ?countryName 
WHERE {
  dbr:Mecca dbo:country ?country .
  ?country rdfs:label ?countryName .
  FILTER(LANG(?countryName) = 'en')
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
204,Who played Gus Fring in Breaking Bad?,"```sparql
SELECT ?actor WHERE {
  ?actor dbo:starring dbr:Gus_Fring ;
                dbo:starring dbr:Breaking_Bad .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
205,In which country does the Nile start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  ?river dbo:sourceCountry ?country ;
         dbo:River ""Nile"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
206,In which state Penn State University is located?,"```sparql
SELECT ?state
WHERE {
  dbr:Penn_State_University dbo:state ?state
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
207,What is the biggest stadium in Spain?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?stadium ?name
WHERE {
  ?stadium a dbo:Stadium ;
           dbp:locationCountry <http://dbpedia.org/resource/Spain> ;
           dbo:seatingCapacity ?capacity .
  FILTER NOT EXISTS {
    ?otherStadium a dbo:Stadium ;
                 dbp:locationCountry <http://dbpedia.org/resource/Spain> ;
                 dbo:seatingCapacity ?otherCapacity .
    FILTER (?otherCapacity > ?capacity)
  }
  ?stadium dbp:name ?name .
}
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
208,Who is the coach of Ankara's ice hockey team?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach
WHERE {
  ?team dbo:city dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
209,How large is the area of UK?,"```sparql
SELECT ?area
WHERE {
  dbr:United_Kingdom dbo:areaTotal ?area
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
210,Who created Batman?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?creator
WHERE {
  ?batman dbo:creator ?creator .
  FILTER regex(str(?batman), ""Batman"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
211,Was Sigmund Freud married?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  dbo:Sigmund_Freud dbo:spouse ?spouse
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
212,Who are the developers of DBpedia?,"```sparql
SELECT ?developer
WHERE {
  dbr:DBpedia dbo:developer ?developer .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
213,Give me all movies directed by Francis Ford Coppola.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie
WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
  ?movie a dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
214,Are tree frogs a type of amphibian?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?type
WHERE {
  dbo:Tree_Frog dbo:wikiPageRedirects ?redirect .
  ?redirect dbo:wikiPageDisambiguates ?type .
  ?type dbo:wikiPageWikiLink dbo:Amphibian
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
215,What is the location of the Houses of Parliament?,"```sparql
SELECT ?location WHERE {
  dbr:Houses_of_Parliament dbo:location ?location
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
216,how much is the elevation of Düsseldorf Airport ?,"```sparql
SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
217,How much is the population of mexico city ?,"```sparql
SELECT ?population
WHERE {
  dbr:Mexico_City dbo:populationTotal ?population
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
218,when was the founding date of french fifth republic?,"```sparql
SELECT ?date
WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?date
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
219,Who was the first King of England?,"```sparql
SELECT ?king WHERE {
  ?king a dbo:Monarch ;
        dbo:title dbr:King_of_England ;
        dbo:successor dbr:William_the_Conqueror .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
220,Who is the editor of Forbes?,"```sparql
SELECT ?editor
WHERE {
  ?editor rdf:type dbo:Person .
  ?editor dbo:workFor dbr:Forbes .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
221,Which awards did Douglas Hofstadter win?,"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  dbr:Douglas_Hofstadter dbo:award ?award
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
222,Who is the youngest Darts player?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player ?name ?birthDate
WHERE {
  ?player a dbo:DartsPlayer ;
          foaf:name ?name ;
          dbo:birthDate ?birthDate .
}
ORDER BY ASC(?birthDate)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
223,Is horse racing a sport?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?sportLabel
WHERE {
  ?sport rdf:type dbo:Sport ;
         rdfs:label ?sportLabel .
  FILTER regex(?sportLabel, ""horse racing"", ""i"")
}
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
224,Which river does the Brooklyn Bridge cross?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?river
WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
225,How many people live in Poland?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?population
WHERE {
  dbo:Poland dbo:populationTotal ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
226,When was the last episode of the TV series Friends aired?,"SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Friends_(TV_series)> <http://dbpedia.org/ontology/lastAired> ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
227,Is the wife of president Obama called Michelle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  ?president dbo:spouse ?wife .
  ?president dbo:wikiPageID 43270847 .
  FILTER (?wife = ""Michelle Obama""@en)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
229,Who is 8th president of US?,"```sparql
SELECT ?president WHERE {
  ?president dbo:order 8 .
  ?president a dbo:President .
  ?president dbo:country dbr:United_States .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
230,how much is the total population of  european union?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/European_Union> <http://dbpedia.org/ontology/populationTotal> ?population
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
231,Give me all launch pads operated by NASA.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?launchPad
WHERE {
  ?launchPad dbo:operator <http://dbpedia.org/resource/NASA> .
  ?launchPad a dbo:LaunchPad .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
232,Who developed the video game World of Warcraft?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?developer
WHERE {
  ?videoGame dbo:developer ?developer .
  ?videoGame dbo:product <http://dbpedia.org/resource/World_of_Warcraft> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
233,What is the birth name of Adele?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  dbo:Adele dbo:birthName ?birthName
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
234,What is the population of Cairo?,"```sparql
SELECT ?population
WHERE {
  dbr:Cairo dbo:populationTotal ?population
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
235,Is Frank Herbert still alive?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Frank Herbert"" ;
          dbo:deathDate ?deathDate .
  FILTER (!bound(?deathDate))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
236,What is the last work of Dan Brown?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?work
WHERE {
  ?author foaf:name ""Dan Brown""@en .
  ?author dbo:notableWork ?work .
}
ORDER BY DESC(?work)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
237,Where is Sungkyunkwan University?,"```sparql
SELECT ?location WHERE {
  dbpedia:Sungkyunkwan_University dbo:location ?location
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
238,Who is the author of the interpretation of dreams?,"```sparql
SELECT ?author WHERE {
  ?work dbo:author ?author .
  ?work rdfs:label ""The Interpretation of Dreams""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
239,When was the death  of  Shakespeare?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?date
WHERE {
  <http://dbpedia.org/resource/William_Shakespeare> dbo:deathDate ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
241,Who developed Slack?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?developer
WHERE {
  ?company dbo:product dbo:Slack .
  ?company dbo:developer ?developer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
242,Where is the origin of Carolina reaper?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?origin
WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
243,In which year was Rachel Stevens born?,"```sparql
SELECT ?birthYear
WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
244,How often did Jane Fonda marry?,"```sparql
SELECT (COUNT(?marriage) AS ?marriageCount) WHERE {
  ?person dbo:spouse ?spouse .
  ?person foaf:name ""Jane Fonda""@en .
  ?marriage a dbo:Marriage .
  { ?marriage dbo:spouse ?person }
  UNION
  { ?marriage dbo:spouse ?spouse }
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
245,Was the wife of president Lincoln called Mary?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?wifeName
WHERE {
  ?president dbo:spouse ?wife.
  ?wife foaf:name ""Mary"".
  ?president foaf:name ""Abraham Lincoln"".
  BIND(?wife AS ?wifeName)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
246,Which cities does the Weser flow through?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city
WHERE {
  ?river dbo:city ?city .
  ?river dbo:isPartOf <http://dbpedia.org/resource/Weser> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
247,In which programming language is GIMP written?,"```sparql
SELECT ?language
WHERE {
  dbr:GIMP dbo:programmingLanguage ?language .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
248,Which university did Angela Merkel attend?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?university
WHERE {
  ?person foaf:name ""Angela Merkel""@en .
  ?person dbo:almaMater ?university .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
249,List all the musicals with music by Elton John.,"```sparql
SELECT ?musical
WHERE {
  ?musical dbo:composer dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
250,How many Aldi stores are there?,"```sparql
SELECT (SUM(?numStores) AS ?totalStores)
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:numberOfLocations ?numStores .
  FILTER regex(str(?company), ""Aldi"", ""i"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
251,What is the longest river in the world?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?river
WHERE {
  ?river a dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
252,When was John Adams born?,"```sparql
SELECT ?birthDate
WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthDate
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
253,Which companies produce hovercrafts?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:product dbr:Hovercraft .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
254,Who was the wife of U.S. president Lincoln?,"```sparql
SELECT ?wife
WHERE {
  ?president a dbo:President ;
             foaf:name ""Abraham Lincoln""@en ;
             dbo:spouse ?wife .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
255,Which species does an elephant belong?,"```sparql
SELECT ?species
WHERE {
  <http://dbpedia.org/resource/Elephant> dbo:species ?species .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
256,How many people live in the capital of Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?population
WHERE {
  ?capital dbo:country <http://dbpedia.org/resource/Australia> .
  ?capital dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
257,In which ancient empire could you pay with cocoa beans?,"```sparql
SELECT ?empire WHERE {
  ?empire dbo:currency dbr:Cocoa_bean .
  ?empire dbo:timePeriod ?timePeriod .
  ?timePeriod dbo:wikiPageID ?wikiPageID .
  FILTER regex(str(?wikiPageID), ""Empire"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
258,How many theories did Albert Einstein come up with?,"```sparql
SELECT (COUNT(?theory) AS ?numTheories)
WHERE {
  ?scientist dbo:knownFor ?theory .
  ?scientist foaf:name ""Albert Einstein""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
259,Who composed the soundtrack for Cameron's Titanic?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?composer
WHERE {
  ?film dbo:wikiPageID 3131;
        dbo:musicComposer ?composer.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
260,Give me the runtime of Toy Story.,"```sparql
SELECT ?film ?runtime
WHERE {
  ?film rdf:type dbo:Film ;
        rdfs:label ""Toy Story""@en ;
        dbo:runtime ?runtime .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
262,With how many countries Iran has borders?,"```sparql
SELECT (COUNT(?country) AS ?borderCountries)
WHERE {
  dbr:Iran dbo:borders ?country .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
263,Which electronics companies were founded in Beijing?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?company
WHERE {
  ?company dbo:industry dbr:Electronics_industry ;
           dbo:foundationPlace dbr:Beijing .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
264,Who was the successor of John F. Kennedy?,"```sparql
SELECT ?successor
WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
265,Who is the mayor of Paris?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Paris> dbo:mayor ?mayor
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
266,Did Arnold Schwarzenegger attend a university?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?university
WHERE {
  dbo:Arnold_Schwarzenegger dbo:almaMater ?university
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
267,Is James Bond married?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?isMarried
WHERE {
  dbo:James_Bond dbo:spouse ?isMarried
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
268,Does the Isar flow into a lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?lake
WHERE {
  ?lake rdf:type dbo:Lake .
  ?lake dbo:inflow ?river .
  ?river rdf:type dbo:River .
  ?river dbo:inflow <http://dbpedia.org/resource/Isar> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
269,Which Indian company has the most employees?,"```sparql
SELECT ?company ?employees
WHERE {
  ?company dbo:numberOfEmployees ?employees .
  ?company a dbo:Company .
}
ORDER BY DESC(?employees)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
270,Who was John F. Kennedy's vice president?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vicePresident
WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
271,Which country does the creator of Miffy come from?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country
WHERE {
  ?creator dbo:creator ?miffy .
  ?miffy foaf:name ""Miffy"" .
  ?creator dbo:nationality ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
273,In what city is the Heineken brewery?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city
WHERE {
  ?brewery rdf:type dbo:Brewery ;
           dbo:location ?cityResource .
  ?cityResource dbo:locationCity ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
274,Is Barack Obama a democrat?,"```sparql
SELECT ?party
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  FILTER (?party = dbpedia:Democratic_Party_(United_States))
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
275,List the children of Margaret Thatcher.,"```sparql
SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
276,From which region is the Melon de Bourgogne?,"```sparql
SELECT ?region
WHERE {
  ?wine a dbo:Grape ;
        dbo:region ?region ;
        rdfs:label ""Melon de Bourgogne""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
278,how big is the total area of North Rhine- Westphalia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?areaTotal WHERE {
  dbo:North_Rhine-Westphalia dbo:areaTotal ?areaTotal
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
279,Which city has the most inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
280,What is Donald Trump's main business?,"```sparql
SELECT ?business
WHERE {
  dbr:Donald_Trump dbo:owner ?business .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
281,When will start the final match of the football world cup 2018?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?date
WHERE {
    ?tournament a dbo:FootballTournament ;
                dbp:currentSeason ?season .
    ?season dbp:startDate ?date ;
            dbp:endDate ?endDate .
    FILTER (?endDate = ""2018-07-15""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
282,Which films did Stanley Kubrick direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
283,how much is the population  Iraq?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?population
WHERE {
  dbo:Iraq dbo:populationTotal ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
284,How many inhabitants does the largest city in Canada have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?population
WHERE {
  ?city dbo:country <http://dbpedia.org/resource/Canada> .
  ?city dbo:populationTotal ?population .
  FILTER EXISTS {
    SELECT ?city
    WHERE {
      ?city dbo:country <http://dbpedia.org/resource/Canada> .
      ?city dbo:largestCity ?largestCity .
    }
  }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
285,Who is the mayor of the capital of French Polynesia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor
WHERE {
  dbr:French_Polynesia dbo:capital ?capital .
  ?capital dbo:mayor ?mayor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
286,Give me all actors starring in movies directed by William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
287,How tall is Claudia Schiffer?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  dbr:Claudia_Schiffer dbo:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
288,how much is the population densty rank of germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?populationDensityRank
WHERE {
  ?country a dbo:Country ;
           dbo:populationDensityRank ?populationDensityRank ;
           rdfs:label ""Germany""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
289,What is the highest mountain in Italy?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:country dbr:Italy .
  ?mountain dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
290,List all games by GMT.,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?game
WHERE {
  ?game dbo:publisher <http://dbpedia.org/resource/GMT_Games>
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
291,What is the official language of Suriname?,"```sparql
SELECT ?language WHERE {
  dbr:Suriname dbo:officialLanguage ?language
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
292,In which city did Nikos Kazantzakis die?,"```sparql
SELECT ?city WHERE {
  ?person dbo:deathPlace ?city .
  ?person foaf:name ""Nikos Kazantzakis""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
293,What is in a chocolate chip cookie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ingredient
WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
294,In which country is the Limerick Lake?,"```sparql
SELECT ?country WHERE {
  ?lake rdf:type dbo:Lake .
  ?lake dbo:country ?country .
  FILTER (regex(str(?lake), ""Limerick Lake"", ""i""))
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
295,Give me all video games published by Mean Hamster Software.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?game
WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game a dbo:VideoGame .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
296,Give me all members of Prodigy.,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?member
WHERE {
  ?band dbo:bandMember ?member .
  FILTER (?band = <http://dbpedia.org/resource/Prodigy>)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
297,In which time zone is Rome?,"```sparql
SELECT ?timeZone
WHERE {
  dbr:Rome dbo:timeZone ?timeZone
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
298,How high is the lighthouse in Colombo?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  dbo:Colombo dbo:height ?height .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
299,Who are the writers of the Wall album of Pink Floyd?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer
WHERE {
  ?album dbo:artist <http://dbpedia.org/resource/Pink_Floyd> ;
         dbp:title ""The_Wall"" ;
         dbp:writer ?writer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
300,Who is the mayor of Rotterdam?,"```sparql
SELECT ?mayor
WHERE {
  dbr:Rotterdam dbo:leader ?mayor .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
301,What is the largest city in Australia?,"```sparql
SELECT ?cityName
WHERE {
  ?country a dbo:Country ;
           dbo:largestCity ?city ;
           rdfs:label ?countryName .
  ?city rdfs:label ?cityName .
  FILTER (lang(?countryName) = 'en' && lang(?cityName) = 'en' && ?countryName = 'Australia')
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
302,Who was married to president Chirac?,"```sparql
SELECT ?spouse
WHERE {
  ?president a dbo:President ;
             dbo:spouse ?spouse ;
             foaf:name ""Jacques Chirac""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
303,What form of government is found in South Africa?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?governmentType
WHERE {
  dbo:South_Africa dbo:governmentType ?governmentType
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
304,How high is the Yokohama Marine Tower?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  dbo:Yokohama_Marine_Tower dbo:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
305,Which holidays are celebrated around the world? test2,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?holiday
WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:Holiday ?holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
306,Who is the tallest basketball player?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer .
  ?player dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
307,How many languages are spoken in Turkmenistan?,"```sparql
SELECT (COUNT(DISTINCT ?language) AS ?numLanguages)
WHERE {
  ?country dbo:officialLanguage ?language .
  FILTER (?country = dbr:Turkmenistan)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
308,Did Che Guevara have children?,"```sparql
SELECT ?child
WHERE {
  dbr:Che_Guevara dbo:child ?child .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film
WHERE {
  dbr:Aki_Kaurismäki dbo:award dbr:Grand_Prix_(Cannes)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
310,To which party does the mayor of Paris belong?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Paris> dbo:mayor ?mayor .
  ?mayor dbo:party ?party .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
311,Who is the Formula 1 race driver with the most races?,"```sparql
SELECT ?driver ?name (COUNT(?race) AS ?numRaces)
WHERE {
  ?driver a dbo:FormulaOneRacer ;
          foaf:name ?name ;
          dbo:races ?race .
}
GROUP BY ?driver ?name
ORDER BY DESC(?numRaces)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
312,What country is Sitecore from?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Sitecore> dbpedia-owl:location ?country .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
313,Give me the birth place of Frank Sinatra.,"```sparql
SELECT ?birthPlace WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
314,Is Christian Bale starring in Velvet Goldmine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  dbr:Christian_Bale dbo:starring dbr:Velvet_Goldmine .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
315,Who is the son of Sonny and Cher?,"```sparql
SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_and_Cher .
  ?son rdf:type dbo:Person .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
316,How many ethnic groups live in Slovenia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  ?ethnicGroup a dbo:EthnicGroup ;
               dbo:country <http://dbpedia.org/resource/Slovenia> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
317,What is the capital of Cameroon?,"```sparql
SELECT ?capital WHERE {
  ?country dbo:capital ?capital .
  ?country rdfs:label ""Cameroon""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
318,Was Natalie Portman born in the United States?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  dbo:Natalie_Portman dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country <http://dbpedia.org/resource/United_States> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
319,How many pages does War and Peace have?,"```sparql
SELECT ?pages
WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?pages
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
320,Who is the oldest child of Meryl Streep?,"```sparql
SELECT ?childName
WHERE {
  dbr:Meryl_Streep dbo:child ?child .
  ?child foaf:name ?childName .
}
ORDER BY ?childName
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
321,Which television shows were created by Walt Disney?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator <http://dbpedia.org/resource/Walt_Disney> .
  ?show a dbo:TelevisionShow .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
322,What does IYCM stand for?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?definition
WHERE {
  ?resource dbo:abbreviation ""IYCM""@en .
  ?resource rdfs:comment ?definition .
}
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
323,Which types of grapes grow in Oregon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType dbo:growingGrape ?region .
  ?region dbo:locatedIn dbo:Oregon
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
324,Was U.S. president Jackson involved in a war?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?war
WHERE {
  ?president dbo:personFunction <http://dbpedia.org/resource/President_of_the_United_States> ;
            dbo:activeYearsStartDate ?start ;
            dbo:activeYearsEndDate ?end .
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?president .
  FILTER (?start <= ""1829-03-04""^^xsd:date && ?end >= ""1837-03-04""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
325,When was the Titanic completed?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?completionDate
WHERE {
  ?titanic dbo:completionDate ?completionDate
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
326,Did Tesla win a nobel prize in physics?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person ?award
WHERE {
  ?person dbo:award <http://dbpedia.org/resource/Nobel_Prize_in_Physics> .
  FILTER (?person = <http://dbpedia.org/resource/Nikola_Tesla>)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
327,How many states are in Mexico?,"```sparql
SELECT (COUNT(?state) AS ?count)
WHERE {
  ?state a dbo:State ;
         dbo:country dbr:Mexico .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?scientist
WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project ;
            dbo:knownFor dbr:Nobel_Peace_Prize .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
329,How much did the Lego Movie cost?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?budget
WHERE {
  ?film dbo:budget ?budget .
  ?film dbo:workTitle ""The Lego Movie"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
330,Who composed the music for Harold and Maude?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?composer
WHERE {
  ?film dbo:workTitle ""Harold and Maude""@en .
  ?film dbo:musicComposer ?composer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
331,List all episodes of the first season of the HBO television series The Sopranos.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?episode
WHERE {
  ?episode dbo:series <http://dbpedia.org/resource/The_Sopranos> ;
           dbo:seasonNumber ""1"" .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
332,Which city has the least inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City .
  ?city dbo:populationTotal ?population .
}
ORDER BY ?population
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
333,Where is Syngman Rhee buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?place
WHERE {
  dbr:Syngman_Rhee dbo:restingPlace ?place
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
334,Does Neymar play for Real Madrid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team
WHERE {
  ?player a dbo:Person ;
          dbo:team dbr:Real_Madrid .
  FILTER (?player = dbr:Neymar)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
335,Who wrote the book The Pillars of the Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book dbo:author <http://dbpedia.org/resource/The_Pillars_of_the_Earth> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
336,Do Prince Harry and Prince William have the same parents?,"```sparql
SELECT ?parent1 ?parent2
WHERE {
  ?person1 a dbo:Person ;
           foaf:name ""Prince Harry""@en ;
           dbo:parent ?parent1 .
  
  ?person2 a dbo:Person ;
           foaf:name ""Prince William""@en ;
           dbo:parent ?parent2 .
  
  FILTER (?parent1 = ?parent2)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
337,Who was the doctoral supervisor of Albert Einstein?,"```sparql
SELECT ?advisorName
WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?advisor.
  ?advisor foaf:name ?advisorName.
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
338,Does Breaking Bad have more episodes than Game of Thrones?,"```sparql
SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes
WHERE {
  ?breakingBad dbo:numberOfEpisodes ?breakingBadEpisodes ;
              rdfs:label ""Breaking Bad""@en .
  
  ?gameOfThrones dbo:numberOfEpisodes ?gameOfThronesEpisodes ;
                 rdfs:label ""Game of Thrones""@en .
  
  FILTER (?breakingBadEpisodes > ?gameOfThronesEpisodes)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
339,Who was Vincent van Gogh inspired by?,"```sparql
SELECT ?inspiredBy
WHERE {
  dbr:Vincent_van_Gogh dbo:influenced ?inspiredBy
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
340,Which building after the Burj Khalifa has the most floors?,"```sparql
SELECT ?building ?floors
WHERE {
  ?building dbo:floorCount ?floors .
  FILTER (?building != dbr:Burj_Khalifa)
}
ORDER BY DESC(?floors)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
341,What was the final result of the War of the Roses?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?result
WHERE {
  ?event dbo:result ?result .
  ?event dbo:result ""final result of the War of the Roses"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
342,How much did Pulp Fiction cost?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?budget
WHERE {
  dbo:Pulp_Fiction dbo:budget ?budget
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
343,Is proinsulin a protein?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?isProtein
WHERE {
  dbo:Proinsulin rdf:type ?isProtein .
  FILTER (?isProtein = dbo:Protein)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
344,Do Urdu and Persian have a common root?,"```sparql
SELECT ?language1 ?language2
WHERE {
  ?language1 dbo:languageFamily ?family .
  ?language2 dbo:languageFamily ?family .
  FILTER (?language1 = dbr:Urdu && ?language2 = dbr:Persian)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor
WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:producer <http://dbpedia.org/resource/Benicio_del_Toro> .
  ?movie dbo:language <http://dbpedia.org/resource/Spanish_language> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
346,Is Lake Baikal bigger than the Great Bear Lake?,"SELECT ?lake1 ?area1 ?lake2 ?area2
WHERE {
  ?lake1 rdf:type dbo:Lake ;
         dbo:areaTotal ?area1 ;
         rdfs:label ""Lake Baikal""@en .
  
  ?lake2 rdf:type dbo:Lake ;
         dbo:areaTotal ?area2 ;
         rdfs:label ""Great Bear Lake""@en .
  
  FILTER (?area1 > ?area2)
}
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
347,Show me all books in Asimov's Foundation series.,"```sparql
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?book
WHERE {
  ?book dbo:series <http://dbpedia.org/resource/Foundation_Series> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
348,Where was Bach born?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person dbo:birthPlace ?birthPlace .
  ?person foaf:name ""Bach""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
349,Which city has the oldest running metro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
SELECT ?city WHERE {
  ?city dct:subject dbc:Oldest_metro_systems .
  ?city dbo:openingYear ?year .
  FILTER (?year = MIN(?year))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
350,Who designed the Brooklyn Bridge?,"```sparql
SELECT ?architect
WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?architect .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
351,How many people live in Eurasia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (SUM(?population) AS ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:populationTotal ?population ;
           dbo:region <http://dbpedia.org/resource/Eurasia> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
352,Who is the host of the BBC Wildlife Specials?,"```sparql
SELECT ?host
WHERE {
  ?wildlifeSpecial dbo:presenter ?host .
  FILTER regex(str(?wildlifeSpecial), ""BBC Wildlife Specials"", ""i"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
353,"What is the total population of Melbourne, Florida?","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?population
WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
354,What country is Mount Everest in?,"```sparql
SELECT ?countryName
WHERE {
  <http://dbpedia.org/resource/Mount_Everest> dbo:country ?country.
  ?country rdfs:label ?countryName.
  FILTER(LANG(?countryName) = 'en')
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
355,To which artistic movement did the painter of The Three Dancers belong?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movement
WHERE {
  dbr:The_Three_Dancers dbo:author ?painter .
  ?painter dbo:movement ?movement .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
356,When did Operation Overlord commence?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?date
WHERE {
  ?event a dbo:Event ;
         dbo:date ?date ;
         dbo:commenceOn ""Operation Overlord"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
357,What is the bridge with the longest span?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?bridgeName
WHERE {
  ?bridge a dbo:Bridge ;
          dbo:mainspan ?span ;
          rdfs:label ?bridgeName .
}
ORDER BY DESC(?span)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
358,Is there a video game called Battle Chess?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?game
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
359,Who was buried in the Great Pyramid of Giza?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:restingPlace dbr:Great_Pyramid_of_Giza.
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"```sparql
SELECT ?plant
WHERE {
  dbpedia:Ford_Motor_Company dbpedia-owl:subsidiary ?subsidiary .
  ?subsidiary dbpedia-owl:location dbpedia:Malaysia .
  ?subsidiary dbpedia-owl:type dbpedia:Manufacturing .
  ?subsidiary dbpedia-owl:product dbpedia:Automobile .
  ?subsidiary dbpedia-owl:owningCompany dbpedia:Ford_Motor_Company .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
361,Did Socrates influence Aristotle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?influencer ?influencee
WHERE {
  ?influencer dbo:influenced ?influencee .
  FILTER (?influencer = <http://dbpedia.org/resource/Socrates> && ?influencee = <http://dbpedia.org/resource/Aristotle>)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
362,How many children did Benjamin Franklin have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?child) AS ?count)
WHERE {
  <http://dbpedia.org/resource/Benjamin_Franklin> dbo:child ?child .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
363,How tall is Michael Jordan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  dbo:Michael_Jordan dbo:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
364,In which UK city are the headquarters of the MI6?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  dbr:MI6 dbo:headquarter ?hq .
  ?hq dbo:location ?building .
  ?building dbo:City ?city .
  ?city dbo:location ?country .
  FILTER regex(str(?country), ""United_Kingdom"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
365,Who created Family Guy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?creator
WHERE {
  ?show a dbo:TelevisionShow ;
        dbo:creator ?creator ;
        rdfs:label ""Family Guy""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
366,In which city does the Chile Route 68 end?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city
WHERE {
  dbr:Chile_Route_68 dbo:routeEnd ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
367,Give me the grandchildren of Elvis Presley.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?grandchild
WHERE {
  dbo:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
368,When did the Ming dynasty dissolve?,"```sparql
SELECT ?dissolutionDate
WHERE {
  dbr:Ming_Dynasty dbo:dissolutionDate ?dissolutionDate
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
369,In which military conflicts did Lawrence of Arabia participate?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict
WHERE {
  dbr:T._E._Lawrence dbo:militaryConflict ?conflict .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
370,What is the timezone in San Pedro de Atacama?,"```sparql
SELECT ?timezone
WHERE {
  <http://dbpedia.org/resource/San_Pedro_de_Atacama> <http://dbpedia.org/ontology/timeZone> ?timezone
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
371,Give me all books by William Goldman with more than 300 pages.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author <http://dbpedia.org/resource/William_Goldman> ;
        dbo:numberOfPages ?pages .
  FILTER (?pages > 300)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
372,What did Bruce Carver die from?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?causeOfDeath
WHERE {
  <http://dbpedia.org/resource/Bruce_Carver> dbo:causeOfDeath ?causeOfDeath
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?subsidiary
WHERE {
  ?subsidiary dbo:subsidiary dbr:Lufthansa ;
              dbo:operates dbr:Dortmund_Airport, dbr:Berlin_Tegel_Airport .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
374,Does Abraham Lincoln's death place have a website?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?website
WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace.
  ?deathPlace dbo:website ?website.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
375,Did Elvis Presley have children?,"```sparql
SELECT ?child
WHERE {
  dbr:Elvis_Presley dbo:child ?child .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
376,Is Michelle Obama the wife of Barack Obama?,"```sparql
SELECT ?wife
WHERE {
  ?wife dbo:spouse dbr:Barack_Obama .
  FILTER (?wife = dbr:Michelle_Obama)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
377,In which city does Sylvester Stallone live?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?city
WHERE {
  ?person foaf:name ""Sylvester Stallone""@en .
  ?person dbo:residence ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
378,Which books by Kerouac were published by Viking Press?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book
WHERE {
  ?book dbo:author dbr:Jack_Kerouac .
  ?book dbo:publisher dbr:Viking_Press .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
379,Who wrote the song Hotel California?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist
WHERE {
  ?song a dbo:Song ;
        dbo:writer ?artist ;
        rdfs:label ""Hotel California""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
380,What is the capital of Canada?,"```sparql
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Canada> dbo:capital ?capital
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
381,Who is the mayor of Tel Aviv?,"```sparql
SELECT ?mayor
WHERE {
  dbr:Tel_Aviv dbo:leaderName ?mayor .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
382,What form of government does Russia have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?governmentType
WHERE {
  dbo:Russia dbo:governmentType ?governmentType
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
383,Show me the book that Muhammad Ali wrote.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Muhammad_Ali .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
384,Who was the first to climb Mount Everest?,"```sparql
SELECT ?person
WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?person .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
385,How many languages are spoken in Colombia?,"```sparql
SELECT (COUNT(DISTINCT ?language) AS ?numLanguages)
WHERE {
  ?language a dbo:Language ;
           dbo:spokenIn dbr:Colombia .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
386,What is the currency of the Czech Republic?,"```sparql
SELECT ?currencyLabel
WHERE {
  dbr:Czech_Republic dbo:currency ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER(LANG(?currencyLabel) = 'en')
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
387,Where in France is sparkling wine produced?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?location
WHERE {
  ?wine dbo:location ?location .
  ?wine dbo:product dbr:Sparkling_wine .
  ?location dbo:country dbr:France .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
388,When did Boris Becker end his active career?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?endDate
WHERE {
  ?person dbo:activeYearsEndDate ?endDate .
  FILTER (?person = dbo:Boris_Becker)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Mickey_Rourke> .
  ?movie dbo:director <http://dbpedia.org/resource/Guy_Ritchie> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
390,In which films did Julia Roberts as well as Richard Gere play?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?film
WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Julia_Roberts> .
  ?film dbo:starring <http://dbpedia.org/resource/Richard_Gere> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
391,Show me Hemingway's autobiography.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?autobiography
WHERE {
  ?autobiography a dbo:Autobiography ;
                 dbo:author dbr:Ernest_Hemingway .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
392,How tall is Amazon Eve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Amazon_Eve> dbo:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
393,What are the five boroughs of New York?,"```sparql
SELECT ?boroughName
WHERE {
  ?borough a dbo:Borough ;
           rdfs:label ?boroughName .
  FILTER(langMatches(lang(?boroughName), ""en""))
}
LIMIT 5
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
394,Give me all Canadian Grunge record labels.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?label
WHERE {
  ?label a dbo:RecordLabel ;
         dbo:country dbr:Canada ;
         dbo:genre dbr:Grunge .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
395,In which country does the Ganges start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  ?river dbo:sourceCountry ?country ;
        dbo:abstract ?abstract .
  FILTER regex(?abstract, ""Ganges"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
396,Who is the founder of Penguin Books?,"```sparql
SELECT ?founder WHERE {
  ?penguin dbo:founder ?founder .
  FILTER (?penguin = dbr:Penguin_Books)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
397,Who wrote the Game of Thrones theme?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?composer
WHERE {
  ?show dbo:composer ?composer ;
       dbp:name ""Game of Thrones""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
398,Who is the president of Eritrea?,"```sparql
SELECT ?president
WHERE {
  ?country dbo:leader ?president .
  ?country rdfs:label ""Eritrea""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
399,In which city did John F. Kennedy die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city WHERE {
  ?person dbo:deathPlace ?city .
  ?person dbo:deathDate ?date .
  FILTER regex(str(?person), ""John_F._Kennedy"") .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
400,What is the highest mountain in Australia?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:country dbr:Australia .
  ?mountain dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
401,Who writes the Farmers' Almanac?,"```sparql
SELECT ?author
WHERE {
  ?farmersAlmanac dbo:editor ?author .
  ?farmersAlmanac rdf:type dbo:Work .
  ?farmersAlmanac rdfs:label ""Farmers' Almanac""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
402,Give me the currency of China.,"```sparql
SELECT ?currencyLabel
WHERE {
  dbr:China dbo:currency ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER(LANG(?currencyLabel) = 'en')
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
403,Give me all Swedish oceanographers.,"```sparql
SELECT ?oceanographer
WHERE {
  ?oceanographer a <http://dbpedia.org/ontology/Oceanographer> ;
                 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Sweden> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
404,In which city are the headquarters of the United Nations?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  dbr:United_Nations dbo:headquarter ?hq .
  ?hq dbo:location ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
405,Is Rita Wilson the wife of Tom Hanks?,"```sparql
SELECT ?wife
WHERE {
  ?wife dbo:spouse dbr:Tom_Hanks .
  FILTER (?wife = dbr:Rita_Wilson)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
406,In which countries do people speak Japanese?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?country dbo:language ?language .
  ?language dbo:language ?languageName .
  FILTER (regex(str(?languageName), ""Japanese"", ""i""))
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
407,Which of Tim Burton's films had the highest budget?,"```
SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film .
  ?film dbo:budget ?budget .
  ?film dbo:director dbr:Tim_Burton .
}
ORDER BY DESC(?budget)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
408,Which museum in New York has the most visitors?,"```sparql
SELECT ?museum ?visitors
WHERE {
  ?museum rdf:type dbo:Museum .
  ?museum dbo:numberOfVisitors ?visitors .
  ?museum dbo:location dbr:New_York_City .
}
ORDER BY DESC(?visitors)
LIMIT 1
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
409,What was the first Queen album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?album
WHERE {
  ?album a dbo:Album ;
         dbo:releaseDate ?date .
}
ORDER BY ?date
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
410,What was the first name of the band Queens of the Stone Age?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name
WHERE {
  dbo:Queens_of_the_Stone_Age foaf:name ?name .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
411,What was the last movie with Alec Guinness?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Alec_Guinness> .
}
ORDER BY DESC(?movie)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
412,Give me all actors starring in Last Action Hero.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  dbr:Last_Action_Hero dbo:starring ?actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
413,Who discovered Pluto?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discoverer
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
1,List all boardgames by GMT.,"```sparql
SELECT DISTINCT ?boardgame
WHERE {
  ?boardgame rdf:type dbo:BoardGame ;
             dbo:publisher dbr:GMT_Games .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
2,Who developed Skype?,"```sparql
SELECT ?developer
WHERE {
  dbr:Skype dbo:developer ?developer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
3,Which people were born in Heraklion?,"```sparql
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Heraklion .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
4,In which U.S. state is Area 51 located?,"```sparql
SELECT ?state
WHERE {
    ?area51 dbp:name ""Area 51""@en .
    ?area51 dbo:location ?stateResource .
    ?stateResource a dbo:State .
    ?stateResource rdfs:label ?state .
    FILTER(LANG(?state) = """" || LANGMATCHES(LANG(?state), ""en""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
5,Who is the mayor of New York City?,"```sparql
SELECT ?mayor
WHERE {
  dbr:New_York_City dbo:leaderName ?mayor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
6,Which countries have places with more than two caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?place rdf:type dbo:Place .
  ?place dbo:location ?country .
  ?place rdf:type dbo:Cave .
}
GROUP BY ?country
HAVING (COUNT(?place) > 2)
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
7,Where did Abraham Lincoln die?,"```sparql
SELECT ?placeOfDeath WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?placeOfDeath .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
8,Which airports does Air China serve?,"```sparql
SELECT ?airport
WHERE {
  ?airline a dbo:Airline ;
           dbo:targetAirport ?airport ;
           foaf:name ""Air China""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
9,Give me all actors starring in movies directed by and starring William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:director ?director .
  ?director foaf:name ""William Shatner"" .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
10,What are the official languages of the Philippines?,"```sparql
SELECT ?language
WHERE {
  dbr:Philippines dbo:officialLanguage ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
11,Give me all Danish films.,"```sparql
SELECT ?film
WHERE {
  ?film a dbo:Film ;
        dbo:country dbr:Denmark .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Brad_Pitt ;
         dbo:director dbr:Guy_Ritchie .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
13,Give me the grandchildren of Bruce Lee.,"```sparql
SELECT ?grandchild
WHERE {
  dbr:Bruce_Lee dbo:child/dbo:child ?grandchild .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
14,Which other weapons did the designer of the Uzi develop?,"```sparql
SELECT ?otherWeapon
WHERE {
  dbr:Uzi dbo:designer ?designer .
  ?designer dbo:designer ?otherWeapon .
  FILTER (?otherWeapon != dbr:Uzi)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
15,Who is the owner of Universal Studios?,"```sparql
SELECT ?owner
WHERE {
  dbr:Universal_Studios dbo:owner ?owner .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
16,Which state of the USA has the highest population density?,"```sparql
SELECT ?state ?populationDensity
WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?populationDensity .
}
ORDER BY DESC(?populationDensity)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
17,Which monarchs were married to a German?,"```sparql
SELECT DISTINCT ?monarch
WHERE {
  ?monarch a dbo:Monarch ;
           dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  FILTER regex(str(?birthPlace), ""Germany"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
18,Which organizations were founded in 1950?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a dbo:Organisation ;
               dbo:foundingYear ""1950""^^xsd:gYear .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
19,Who created the comic Captain America?,"```sparql
SELECT ?creator
WHERE {
  dbr:Captain_America dbo:creator ?creator .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
20,Give me the Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  dbr:Apollo_14 dbo:astronaut ?astronaut .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
21,Who wrote the book The pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
22,Which state of the United States of America has the highest density?,"```sparql
SELECT ?state ?density
WHERE {
  ?state a dbo:State ;
         dbp:densityrank ?density .
}
ORDER BY DESC(?density)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
23,Which spaceflights were launched from Baikonur?,"```sparql
SELECT ?spaceflight
WHERE {
  ?spaceflight dbo:launchPad dbr:Baikonur_Cosmodrome .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
24,Give me a list of all trumpet players that were bandleaders.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet ;
              dbo:occupation dbr:Bandleader .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
25,Which U.S. states are in the same timezone as Utah?,"```sparql
SELECT DISTINCT ?stateName
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timezone .
  ?state dbpedia-owl:timeZone ?timezone ;
         rdfs:label ?stateName .
  FILTER(langMatches(lang(?stateName), ""en""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
26,Which U.S. states possess gold minerals?,"```sparql
SELECT DISTINCT ?state
WHERE {
  ?state dbo:placeType dbr:State .
  ?state dbo:possess dbo:Gold .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
27,Who is the daughter of Ingrid Bergman married to?,"```sparql
SELECT ?daughterName ?spouseName
WHERE {
  ?ingridBergman dbo:child ?daughter .
  ?daughter foaf:name ?daughterName .
  ?daughter dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
  FILTER (?ingridBergman = dbr:Ingrid_Bergman)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
28,How deep is Lake Placid?,"```sparql
SELECT ?depth
WHERE {
  dbr:Lake_Placid dbo:maximumDepth ?depth
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
29,Show me all museums in London.,"```sparql
SELECT ?museum
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:London .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
30,Which caves have more than 3 entrances?,"```sparql
SELECT DISTINCT ?cave
WHERE {
  ?cave a dbo:Cave ;
        dbp:entranceCount ?entranceCount .
  FILTER (?entranceCount > 3)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
31,Who is the tallest player of the Atlanta Falcons?,"```sparql
SELECT ?player ?height
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
          dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
32,What are the top-10 action role-playing video games according to IGN?,"```sparql
SELECT ?game ?rank
WHERE {
  ?game dbp:genre dbr:Action_role-playing_video_game ;
       dbp:rank ?rank .
}
ORDER BY ?rank
LIMIT 10
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
SELECT DISTINCT ?writer ?name
WHERE {
  ?writer a dbo:Writer ;
          dbo:award dbr:Nobel_Prize_in_Literature ;
          foaf:name ?name .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
34,Show me all basketball players that are higher than 2 meters.,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:height ?height .
  FILTER (?height > 2)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
35,When was the Statue of Liberty built?,"```sparql
SELECT ?date
WHERE {
  dbr:Statue_of_Liberty dbo:constructionStart ?date .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
36,Which states border Illinois?,"```sparql
SELECT ?stateName
WHERE {
  dbr:Illinois dbp:borderingStates ?state .
  ?state rdfs:label ?stateName .
  FILTER(LANG(?stateName) = """" || LANGMATCHES(LANG(?stateName), ""en""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
37,Who developed Minecraft?,"```sparql
SELECT ?developer
WHERE {
  ?game dbo:developer ?developer ;
        rdfs:label ""Minecraft""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
38,Where did Hillel Slovak die?,"```sparql
SELECT ?placeOfDeath
WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?placeOfDeath .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
39,What movies does Jesse Eisenberg play in?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
40,Give all swimmers that were born in Moscow.,"```sparql
SELECT DISTINCT ?swimmer
WHERE {
  ?swimmer a dbo:Person ;
           dbo:birthPlace dbr:Moscow ;
           dbo:occupation dbr:Swimming .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
41,Give me all cosmonauts.,"```sparql
SELECT ?cosmonaut
WHERE {
  ?cosmonaut a <http://dbpedia.org/ontology/Cosmonaut> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
42,Give me all Swiss non-profit organizations.,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a <http://dbpedia.org/ontology/NonprofitOrganisation> ;
               dct:subject dbc:Non-profit_organizations_based_in_Switzerland .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
43,Which presidents were born in 1945?,"```sparql
SELECT DISTINCT ?presidentName
WHERE {
  ?president a dbpedia-owl:President ;
             dbpprop:birthDate ?birthDate ;
             rdfs:label ?presidentName .
  FILTER (regex(str(?birthDate), ""1945""))
  FILTER (langMatches(lang(?presidentName), ""en""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
44,What kind of music did Lou Reed play?,"```sparql
SELECT DISTINCT ?genre
WHERE {
  dbr:Lou_Reed dbo:genre ?genre
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
45,Where do the Red Sox play?,"```sparql
SELECT ?team ?stadium
WHERE {
  ?team a dbo:SportsTeam ;
        dbo:ground ?stadium .
  FILTER regex(?team, ""Red Sox"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
46,Show a list of soccer clubs that play in the Bundesliga.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league dbr:Bundesliga .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
47,Which volcanos in Japan erupted since 2000?,"```sparql
SELECT DISTINCT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:eruptionYear ?year .
  FILTER (?year >= ""2000""^^xsd:gYear)
  FILTER regex(str(?volcano), ""Japan"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
48,Which bridges cross the Seine?,"```sparql
SELECT DISTINCT ?bridge
WHERE {
  ?bridge a dbo:Bridge ;
          dbo:crosses <http://dbpedia.org/resource/Seine> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
49,What is the official color of the University of Oxford?,"```sparql
SELECT ?color
WHERE {
  dbr:University_of_Oxford dbo:officialSchoolColour ?color
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
50,How many films did Hal Roach produce?,"```sparql
SELECT (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film a dbo:Film .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
51,Give me all Danish movies.,"```sparql
SELECT ?movie
WHERE {
  ?movie a dbo:Film ;
         dbo:country dbr:Denmark .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
52,What is the most frequent cause of death?,"```sparql
SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
  ?person dbo:deathCause ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
53,Who are the four youngest MVP basketball players?,"```sparql
SELECT DISTINCT ?player ?name ?birthDate
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:birthDate ?birthDate ;
          foaf:name ?name .
  FILTER (?birthDate != ""NULL"")
}
ORDER BY ASC(?birthDate)
LIMIT 4
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
54,Give me all companies in Munich.,"```sparql
SELECT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:location dbr:Munich .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
55,Give me the capitals of all countries that the Himalayas run through.,"```sparql
SELECT DISTINCT ?capital
WHERE {
  ?country dbo:capital ?capital ;
           dbo:location ?location .
  ?location dbo:locatedInArea <http://dbpedia.org/resource/Himalayas> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
56,How many movies did Park Chan-wook direct?,"```sparql
SELECT (COUNT(?movie) AS ?count)
WHERE {
  ?movie dbo:director dbr:Park_Chan-wook .
  ?movie a dbo:Film .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
57,Which rivers flow into a German lake?,"```sparql
SELECT DISTINCT ?river ?riverName
WHERE {
  ?river a dbo:River ;
         dbo:inflow ?lake ;
         dbo:country dbr:Germany ;
         rdfs:label ?riverName .
  FILTER (lang(?riverName) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
58,How many airlines are there?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
59,Give me all islands that belong to Japan.,"```sparql
SELECT DISTINCT ?island
WHERE {
  ?island rdf:type dbo:Island .
  ?island dbo:country dbr:Japan .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
60,How many inhabitants does Maribor have?,"```sparql
SELECT ?population
WHERE {
  dbr:Maribor dbo:populationTotal ?population
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
61,Give me all Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut dbo:teamMember dbr:Apollo_14 .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
62,Which companies have more than 1 million employees?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company dbo:numberOfEmployees ?numEmployees .
  FILTER (?numEmployees > 1000000)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:director ?director .
  ?director foaf:name ""Garry Marshall"" .
  ?film dbo:starring ?actor .
  ?actor foaf:name ""Julia Roberts"" .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
64,Give me all soccer clubs in the Premier League.,"```sparql
SELECT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league ?league .
  ?league rdfs:label ""Premier League""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
65,What is the highest place of the Urals?,"```sparql
SELECT ?place ?elevation
WHERE {
  ?place a dbo:Mountain ;
         dbp:highest ?elevation .
  FILTER (?elevation > 0)
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
66,Who is the governor of Wyoming?,"```sparql
SELECT ?governor
WHERE {
  ?state a dbo:State ;
         dbo:governor ?governor ;
         foaf:name ""Wyoming""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
67,Where did the architect of the Eiffel Tower study?,"```sparql
SELECT ?university
WHERE {
  dbr:Gustave_Eiffel dbo:education ?university .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
68,Give me all world heritage sites designated within the past two years.,"```sparql
SELECT DISTINCT ?site ?siteLabel ?designationDate
WHERE {
  ?site rdf:type dbo:WorldHeritageSite ;
        dbo:designationDate ?designationDate .
  FILTER (YEAR(?designationDate) >= YEAR(NOW()) - 2)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
69,Give me all actors who were born in Paris after 1950.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace/dbo:location dbr:Paris ;
         dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) > 1950)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
70,Which movies star both Liz Taylor and Richard Burton?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
71,Give me all Australian nonprofit organizations.,"```sparql
SELECT DISTINCT ?org
WHERE {
  ?org a <http://dbpedia.org/ontology/NonprofitOrganisation> ;
       dct:subject dbc:Non-profit_organisations_based_in_Australia .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
72,Which pope succeeded John Paul II?,"```sparql
SELECT ?successor
WHERE {
  dbr:Pope_John_Paul_II dbo:successor ?successor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
73,Give me all ESA astronauts.,"```sparql
SELECT ?astronaut ?name
WHERE {
  ?astronaut a <http://dbpedia.org/ontology/Astronaut> ;
             foaf:name ?name .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
74,Who was president of Pakistan in 1978?,"```sparql
SELECT ?president
WHERE {
  ?president a dbo:President ;
            dbo:office ?office .
  FILTER (regex(str(?office), ""Pakistan"") && regex(str(?office), ""1978""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
75,Who is the owner of Rolls-Royce?,"```sparql
SELECT ?owner
WHERE {
  dbr:Rolls-Royce dbo:owner ?owner .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
76,How many museums does Paris have?,"```sparql
SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:Paris .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
77,Where was JFK assassinated?,"```sparql
SELECT ?place
WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?place .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
78,Give me all federal chancellors of Germany.,"```sparql
SELECT ?chancellor
WHERE {
  ?chancellor a dbo:Chancellor ;
             dbo:birthPlace dbr:Germany .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
79,Show me everyone who was born on Halloween.,"```sparql
SELECT ?person ?name
WHERE {
  ?person dbo:birthDate ""10-31""^^xsd:date .
  ?person foaf:name ?name .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
80,Which beer originated in Ireland?,"```sparql
SELECT DISTINCT ?beer
WHERE {
  ?beer dbo:origin <http://dbpedia.org/resource/Ireland> .
  ?beer a dbo:Beer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
81,To which countries does the Himalayan mountain system extend?,"```sparql
SELECT DISTINCT ?countryName
WHERE {
  ?mountainSystem dbo:wikiPageID 2097 .
  ?mountainSystem dbo:country ?country .
  ?country rdfs:label ?countryName .
  FILTER(LANG(?countryName) = """" || LANGMATCHES(LANG(?countryName), ""en""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
82,Which actors were born in Germany?,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace/dbo:country dbr:Germany .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
83,How much carbs does peanut butter have?,"```sparql
SELECT ?carbsAmount
WHERE {
  dbr:Peanut_butter dbp:carbs ?carbsAmount
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
84,Who produced the most films?,"```sparql
SELECT ?producer (COUNT(?film) AS ?numFilmsProduced)
WHERE {
  ?producer a dbo:Person .
  ?film dbo:producer ?producer .
} 
GROUP BY ?producer
ORDER BY DESC(?numFilmsProduced)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
85,How many employees does Google have?,"```sparql
SELECT ?numberOfEmployees
WHERE {
  dbr:Google dbo:numberOfEmployees ?numberOfEmployees
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
86,Give me all actors who were born in Berlin.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace/dbo:location dbr:Berlin .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
87,Who created Goofy?,"```sparql
SELECT ?creator
WHERE {
  dbr:Goofy dbo:creator ?creator
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
88,Which music albums contain the song Last Christmas?,"```sparql
SELECT DISTINCT ?albumName
WHERE {
  ?song dbo:album ?album .
  ?song foaf:name ""Last Christmas""@en .
  ?album foaf:name ?albumName .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
89,When was Alberta admitted as province?,"```sparql
SELECT ?admittanceDate
WHERE {
  dbr:Alberta dbo:admittanceDate ?admittanceDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
90,How many missions does the Soyuz programme have?,"```sparql
SELECT (COUNT(?mission) AS ?numMissions)
WHERE {
  ?programme a dbo:SpaceMissionProgramme ;
             rdfs:label ""Soyuz programme""@en ;
             dbo:mission ?mission .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
91,Give me all the TV shows with Neil Patrick Harris.,"```sparql
SELECT DISTINCT ?tvShow
WHERE {
  ?tvShow dbo:starring dbr:Neil_Patrick_Harris .
  ?tvShow a dbo:TelevisionShow .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
92,When were the Hells Angels founded?,"```sparql
SELECT ?foundingDate
WHERE {
  dbr:Hells_Angels dbo:formationDate ?foundingDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
93,What is the net income of Apple?,"```sparql
SELECT ?netIncome
WHERE {
  dbr:Apple_Inc dbo:netIncome ?netIncome
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
94,Give me all Swedish holidays.,"```sparql
SELECT ?holiday
WHERE {
  ?holiday rdf:type dbo:Holiday ;
           dbo:country dbr:Sweden .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
95,In which city was the former Dutch queen Juliana buried?,"```sparql
SELECT ?city
WHERE {
  dbr:Juliana_of_the_Netherlands dbp:burialPlace ?city .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
96,List all the musicals with music by Leonard Bernstein.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical a dbo:Musical ;
           dbo:musicBy dbr:Leonard_Bernstein .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
97,Give me all companies in the advertising industry.,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:industry dbr:Advertising_industry .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
98,What is the largest metropolitan area in Washington state?,"```sparql
SELECT ?metropolitanArea ?metropolitanAreaName
WHERE {
  ?metropolitanArea a dbo:City ;
                   dbo:isPartOf <http://dbpedia.org/resource/Washington_(state)> ;
                   dbo:populationTotal ?population .
  ?metropolitanArea rdfs:label ?metropolitanAreaName .
  FILTER(langMatches(lang(?metropolitanAreaName), ""en""))
}
ORDER BY DESC(?population)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
99,Who killed John Lennon?,"```sparql
SELECT ?killer
WHERE {
  dbr:John_Lennon dbo:deathCause ?cause .
  ?killer dbo:performedBy ?cause .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
100,Which writers studied in Istanbul?,"```sparql
SELECT DISTINCT ?writer
WHERE {
  ?writer a dbo:Writer ;
          dbo:education/dbo:location dbr:Istanbul .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
101,Give me all Australian metalcore bands.,"```sparql
SELECT DISTINCT ?bandName
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:genre dbr:Metalcore ;
        dbo:hometown dbr:Australia ;
        rdfs:label ?bandName .
  FILTER (langMatches(lang(?bandName), ""en""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
102,Which countries adopted the Euro?,"```sparql
SELECT DISTINCT ?countryName
WHERE {
  ?country a dbo:Country ;
           dbo:currency dbr:Euro ;
           rdfs:label ?countryName .
  FILTER (lang(?countryName) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
103,Give me all types of eating disorders.,"```sparql
SELECT DISTINCT ?eatingDisorder
WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
104,Was Marc Chagall a jew?,"```sparql
SELECT ?isJew
WHERE {
  dbpedia:Marc_Chagall dct:subject dbc:Jewish_painters .
  BIND(""Yes"" AS ?isJew)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"```sparql
SELECT ?rank
WHERE {
  dbr:Brazil dbp:fifaMin ?rank
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
106,How many films did Leonardo DiCaprio star in?,"```sparql
SELECT (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
107,Was Margaret Thatcher a chemist?,"```sparql
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Margaret Thatcher"" ;
          dbo:profession dbr:Chemist .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
108,Which U.S. states are in the same time zone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbp:timeZone ?timeZone .
  ?state dbp:timeZone ?timeZone .
  ?state a dbo:State .
  FILTER (?state != dbpedia:Utah)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
109,Give me all books written by Danielle Steel.,"```sparql
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Danielle_Steel .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
110,Which country has the most official languages?,"```sparql
SELECT ?country (COUNT(?language) AS ?numLanguages)
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
}
GROUP BY ?country
ORDER BY DESC(?numLanguages)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
111,What is the total amount of men and women serving in the FDNY?,"```sparql
SELECT (SUM(?maleCount) as ?totalMen) (SUM(?femaleCount) as ?totalWomen)
WHERE {
  {
    SELECT (COUNT(?person) as ?maleCount) WHERE {
      ?person a dbo:Person ;
              dbo:occupation dbr:Firefighter ;
              foaf:gender ""male"" .
    }
  }
  {
    SELECT (COUNT(?person) as ?femaleCount) WHERE {
      ?person a dbo:Person ;
              dbo:occupation dbr:Firefighter ;
              foaf:gender ""female"" .
    }
  }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
112,Which actor played Chewbacca?,"```sparql
SELECT ?actor
WHERE {
  ?film dbpedia-owl:starring ?actor .
  ?actor dbpedia-owl:wikiPageRedirects dbpedia:Peter_Mayhew .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
113,Give me all libraries established earlier than 1400.,"```sparql
SELECT DISTINCT ?library ?libraryName ?establishedYear
WHERE {
  ?library a dbo:Library ;
          dbp:established ?establishedYear .
  FILTER (?establishedYear < ""1400""^^xsd:gYear)
  ?library rdfs:label ?libraryName .
  FILTER (lang(?libraryName) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
114,Which programming languages were influenced by Perl?,"```sparql
SELECT DISTINCT ?languageName
WHERE {
  ?language dbo:influenced <http://dbpedia.org/resource/Perl> .
  ?language rdfs:label ?languageName .
  FILTER (lang(?languageName) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
115,In which U.S. state is Mount McKinley located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Mount_McKinley> dbo:locatedInArea ?stateResource .
  ?stateResource a dbo:State ;
                 rdfs:label ?state
  FILTER (lang(?state) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
116,What airlines are part of the SkyTeam alliance?,"```sparql
SELECT ?airlineName
WHERE {
  ?airline a dbo:Airline ;
           dbo:alliance dbr:SkyTeam ;
           rdfs:label ?airlineName .
  FILTER (lang(?airlineName) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
117,Which ships were called after Benjamin Franklin?,"```sparql
SELECT ?ship
WHERE {
  ?ship dbp:shipNamesake dbr:Benjamin_Franklin .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
118,Give me all Methodist politicians.,"```sparql
SELECT DISTINCT ?politician
WHERE {
  ?politician a <http://dbpedia.org/ontology/Politician> ;
              dcterms:subject <http://dbpedia.org/resource/Category:Methodist_politicians> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
119,What other books have been written by the author of The Fault in Our Stars?,"```sparql
SELECT DISTINCT ?otherBook
WHERE {
  ?author dbo:author dbr:John_Green .
  ?otherBook dbo:author ?author .
  FILTER (?otherBook != dbr:The_Fault_in_Our_Stars)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
120,What is the highest mountain?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain a dbo:Mountain ;
            dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
121,Which poet wrote the most books?,"```sparql
SELECT ?poet (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a dbo:Writer .
  ?poet dbo:author ?book .
} 
GROUP BY ?poet
ORDER BY DESC(?numBooks)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
122,Which programming languages influenced Javascript?,"```sparql
SELECT DISTINCT ?influencingLanguage
WHERE {
  ?programmingLanguage dbo:influenced dbr:JavaScript ;
                     dbo:influencedBy ?influencingLanguage .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
123,Which musician wrote the most books?,"```sparql
SELECT ?musician ?count
WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:author ?book .
  {
    SELECT ?musician (COUNT(?book) AS ?count)
    WHERE {
      ?musician a dbo:MusicalArtist ;
                dbo:author ?book .
    }
    GROUP BY ?musician
    ORDER BY DESC(?count)
    LIMIT 1
  }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
124,Which films starring Clint Eastwood did he direct himself?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film a dbo:Film ;
        dbo:director dbr:Clint_Eastwood .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
125,Which software has been developed by organizations founded in California?,"```sparql
SELECT DISTINCT ?software
WHERE {
  ?org dbo:location dbr:California ;
       dbo:product ?software .
  ?software a dbo:Software .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
126,Which instruments does Cat Stevens play?,"```sparql
SELECT ?instrument
WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
127,How many airlines are members of the Star Alliance?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline ;
           dbo:alliance dbr:Star_Alliance .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
128,Give me all actors called Baldwin.,"```sparql
SELECT DISTINCT ?actorName
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?actorName .
  FILTER regex(?actorName, ""Baldwin"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
129,Who wrote The Hunger Games?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
        rdfs:label ""The Hunger Games""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
130,For which label did Elvis record his first album?,"```sparql
SELECT ?label
WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Elvis_Presley ;
         dbo:releaseDate ?date ;
         rdfs:label ?label .
  FILTER (?date = (SELECT MIN(?date) WHERE { ?album dbo:artist dbr:Elvis_Presley ; dbo:releaseDate ?date }))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
131,Is Christian Bale starring in Batman Begins?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor ;
        rdfs:label ""Batman Begins""@en .
  ?actor rdfs:label ""Christian Bale""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
132,Where is the residence of the prime minister of Spain?,"```sparql
SELECT ?residence
WHERE {
  dbr:Prime_Minister_of_Spain dbo:residence ?residence .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
133,Which actor was casted in the most movies?,"```sparql
SELECT ?actor (COUNT(?movie) AS ?numMovies)
WHERE {
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
}
GROUP BY ?actor
ORDER BY DESC(?numMovies)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
134,Which countries have more than two official languages?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:officialLanguage ?language .
} 
GROUP BY ?country
HAVING (COUNT(?language) > 2)
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
135,Which countries have more than ten caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?cave a dbo:Cave .
  ?cave dbo:location ?country .
  {
    SELECT ?country (COUNT(?cave) AS ?numCaves)
    WHERE {
      ?cave a dbo:Cave .
      ?cave dbo:location ?country .
    }
    GROUP BY ?country
    HAVING (COUNT(?cave) > 10)
  }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"```sparql
SELECT ?song
WHERE {
  ?song a dbo:Song ;
        dbo:artist dbr:Bruce_Springsteen ;
        dbo:releaseDate ?date .
  FILTER (xsd:integer(SUBSTR(str(?date), 1, 4)) >= 1980 && xsd:integer(SUBSTR(str(?date), 1, 4)) <= 1990)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
137,Which television shows were created by John Cleese?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show a dbo:TelevisionShow .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
138,When did Latvia join the EU?,"```sparql
SELECT ?date
WHERE {
  dbr:Latvia dbo:accessioneudate ?date
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
139,Which soccer players were born on Malta?,"```sparql
SELECT DISTINCT ?playerName
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthPlace/dbo:country dbr:Malta ;
          foaf:name ?playerName .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
140,How many politicians graduated from Columbia University?,"```sparql
SELECT (COUNT(?politician) as ?countPoliticians)
WHERE {
  ?politician a dbo:Politician ;
              dbo:almaMater dbr:Columbia_University .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
141,Give me the birthdays of all actors of the television show Charmed.,"```sparql
SELECT DISTINCT ?actor ?birthday
WHERE {
  ?charmed dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
  FILTER regex(str(?charmed), ""Charmed"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
142,Which telecommunications organizations are located in Belgium?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a dbo:Organisation ;
               dbo:location dbr:Belgium ;
               dbp:industry dbr:Telecommunications .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
143,Give me a list of all lakes in Denmark.,"```sparql
SELECT ?lake
WHERE {
  ?lake a dbo:Lake ;
        dbo:country dbr:Denmark .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
144,How many children does Eddie Murphy have?,"```sparql
SELECT (COUNT(?child) as ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Eddie_Murphy> dbpedia-owl:child ?child .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
145,Show me all English Gothic buildings in Kent.,"```sparql
SELECT ?building
WHERE {
  ?building a dbo:Building ;
           dbo:architecturalStyle dbr:English_Gothic_architecture ;
           dbo:location dbr:Kent .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
146,Who is the manager of Real Madrid?,"```sparql
SELECT ?manager
WHERE {
  dbr:Real_Madrid dbo:manager ?manager .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
147,In which countries can you pay using the West African CFA franc?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
148,Which holidays are celebrated around the world?,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:Holiday ?holiday .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
149,What is the longest river?,"```sparql
SELECT ?river ?length
WHERE {
  ?river a dbo:River ;
         dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
150,Which organizations were founded in 1930?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a dbo:Organisation ;
               dbo:foundingYear ""1930""^^xsd:gYear .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
151,What is the birth name of Angela Merkel?,"```sparql
SELECT ?birthName
WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
152,Who has Tom Cruise been married to?,"```sparql
SELECT ?spouseName
WHERE {
  dbr:Tom_Cruise dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
153,Which weapons did Heckler & Koch develop?,"```sparql
SELECT DISTINCT ?weapon
WHERE {
  ?company dbo:developer dbr:Heckler_&_Koch ;
           dbo:product ?weapon .
  ?weapon rdf:type dbo:Weapon .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
154,What is the smallest city by area in Germany?,"```sparql
SELECT ?city ?area
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:Germany ;
        dbo:areaTotal ?area .
}
ORDER BY ?area
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
155,What is the ruling party in Lisbon?,"```sparql
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Lisbon> dbp:rulingParty ?party
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
156,How heavy is Jupiter's lightest moon?,"```sparql
SELECT ?moon ?mass
WHERE {
  ?moon dbo:planet dbr:Jupiter ;
        dbo:mass ?mass .
  FILTER (?mass > 0)
}
ORDER BY ?mass
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
157,How many employees does IBM have?,"```sparql
SELECT ?numberOfEmployees
WHERE {
  dbr:IBM dbo:numberOfEmployees ?numberOfEmployees
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
158,List all episodes of the first season of the HBO television series The Sopranos!,"```sparql
SELECT ?episode
WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber ""1"" .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
159,What does ICRO stand for?,"```sparql
SELECT ?definition
WHERE {
  dbr:ICRO dbo:abbreviation ?definition
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"```sparql
SELECT ?newEpisodes ?oldEpisodes
WHERE {
  {
    SELECT ?newEpisodes WHERE {
      ?newSeries a dbo:TelevisionShow ;
                 foaf:name ""Battlestar Galactica""@en ;
                 dbo:numberOfEpisodes ?newEpisodes .
    }
  }
  {
    SELECT ?oldEpisodes WHERE {
      ?oldSeries a dbo:TelevisionShow ;
                 foaf:name ""Battlestar Galactica (1978 TV series)""@en ;
                 dbo:numberOfEpisodes ?oldEpisodes .
    }
  }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
161,Give me all films produced by Hal Roach.,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film a dbo:Film .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
162,Who played Agent Smith in Matrix?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""The Matrix""@en .
  ?actor foaf:name ""Hugo Weaving""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
163,Which Greek parties are pro-European?,"```sparql
SELECT DISTINCT ?party
WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Greece ;
         dbo:ideology dbr:Pro-European ;
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
164,Give me a list of all bandleaders that play trumpet.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet .
  FILTER EXISTS { ?bandleader dbo:occupation dbr:Bandleader }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
165,What is the second highest mountain on Earth?,"```sparql
SELECT DISTINCT ?mountain ?elevation
WHERE {
  ?mountain a dbo:Mountain ;
            dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 2
OFFSET 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
166,Is Egypts largest city also its capital?,"```sparql
SELECT ?capital ?largestCity
WHERE {
  dbr:Egypt dbo:capital ?capital ;
            dbo:largestCity ?largestCity .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
167,Which rockets were launched from Baikonur?,"```sparql
SELECT DISTINCT ?rocket
WHERE {
  ?rocket dbo:launchPad dbr:Baikonur_Cosmodrome .
  ?rocket rdf:type dbo:Rocket .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
168,How many programming languages are there?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
169,Which Chess players died in the same place they were born in?,"```sparql
SELECT DISTINCT ?player ?birthPlace ?deathPlace
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
170,Who is the owner of Facebook?,"```sparql
SELECT ?owner
WHERE {
  dbr:Facebook dbo:foundedBy ?owner .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
171,Give me all movies with Tom Cruise.,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie a dbo:Film .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
172,In which U.S. state is Fort Knox located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Fort_Knox> dbp:location ?state .
  ?state a dbo:Country ;
         dbp:commonName ""United States""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"```sparql
SELECT ?city
WHERE {
  ?city a dbo:City ;
        dbo:isPartOf <http://dbpedia.org/resource/New_Jersey> ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
174,Which mountains are higher than the Nanga Parbat?,"```sparql
SELECT DISTINCT ?higherMountain
WHERE {
  ?higherMountain a dbo:Mountain ;
                 dbo:elevation ?higherElevation .
  FILTER (?higherElevation > (SELECT ?elevation WHERE { dbr:Nanga_Parbat dbo:elevation ?elevation }))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
175,Give me all B-sides of the Ramones.,"```sparql
SELECT ?bSide
WHERE {
  ?ramones dbo:associatedMusicalArtist dbr:Ramones ;
          dbo:bSide ?bSide .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
176,What are the specialities of the UNC Health Care?,"```sparql
SELECT ?speciality
WHERE {
  dbr:UNC_Health_Care dbp:speciality ?speciality
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
177,When was Olof Palme shot?,"```sparql
SELECT ?date
WHERE {
  dbr:Olof_Palme dbo:deathDate ?date
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
178,List the seven kings of Rome.,"```sparql
SELECT ?kingName
WHERE {
  ?king a dbo:Monarch ;
        dbo:title ?kingName ;
        dbo:reignStart ?start .
  FILTER (?start < ""509-01-01""^^xsd:date)
}
ORDER BY ?start
LIMIT 7
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
179,Give me all people that were born in Vienna and died in Berlin.,"```sparql
SELECT DISTINCT ?person
WHERE {
  ?person dbo:birthPlace dbr:Vienna ;
         dbo:deathPlace dbr:Berlin .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
180,Is Darth Vader Luke’s father?,"```sparql
SELECT ?father
WHERE {
  dbr:Darth_Vader dbo:child dbr:Luke_Skywalker ;
                 dbo:father ?father .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
181,Show me all the breweries in Australia.,"```sparql
SELECT DISTINCT ?brewery
WHERE {
  ?brewery a dbo:Brewery ;
           dbo:location dbr:Australia .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Steven_Spielberg ;
        dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
183,Give me all soccer clubs in Spain.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:ground ?ground ;
        dbo:location dbr:Spain .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
184,Who produced films starring Natalie Portman?,"```sparql
SELECT DISTINCT ?producer
WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
185,Give me all breeds of the German Shepherd dog.,"```sparql
SELECT ?breed
WHERE {
  ?breed rdf:type dbo:DogBreed ;
         rdfs:label ?label .
  FILTER regex(?label, ""German Shepherd"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
186,Who is the heaviest player of the Chicago Bulls?,"```sparql
SELECT ?player ?weight
WHERE {
  ?player dbo:team dbr:Chicago_Bulls ;
          dbo:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
187,Which languages are spoken in Estonia?,"```sparql
SELECT DISTINCT ?language
WHERE {
  dbr:Estonia dbo:spokenIn ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
188,What is the largest country in the world?,"```sparql
SELECT ?country ?area
WHERE {
  ?country a dbo:Country ;
           dbo:areaTotal ?area .
}
ORDER BY DESC(?area)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
189,What is the largest city in america?,"```sparql
SELECT ?cityName
WHERE {
  ?country a dbo:Country ;
           dbo:largestCity ?city .
  ?city rdfs:label ?cityName .
  FILTER(LANG(?cityName) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
190,Who was the pope that founded the Vatican Television?,"```sparql
SELECT ?pope
WHERE {
  ?pope a dbo:Pope ;
        dbo:foundedBy/dbo:founded <http://dbpedia.org/resource/Vatican_Television> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
191,Who discovered Ceres?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Ceres dbo:discoverer ?discoverer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
192,Who is the king of the Netherlands?,"```sparql
SELECT ?king
WHERE {
  ?king a dbo:Person ;
        dbo:leader dbr:Monarchy_of_the_Netherlands .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
193,Is Cola a beverage?,"```sparql
ASK {
  dbpedia:Cola dct:subject dbc:Beverages .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"```sparql
SELECT ?almaMater
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?almaMater .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
195,Who wrote the book Les Piliers de la terre?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
        rdfs:label ""Les Piliers de la terre""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
196,Which airports does Yeti Airlines serve?,"```sparql
SELECT ?airportName
WHERE {
  ?airline dbo:targetAirport ?airport .
  ?airport rdfs:label ?airportName .
  FILTER (lang(?airportName) = 'en' )
  FILTER (?airline = dbr:Yeti_Airlines)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
197,Where is the birthplace of Goethe?,"```sparql
SELECT ?birthplace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"```sparql
SELECT ?event1 ?event2
WHERE {
  ?event1 a dbo:MilitaryConflict ;
          rdfs:label ""Cuban Missile Crisis""@en .
  ?event2 a dbo:MilitaryConflict ;
          rdfs:label ""Bay of Pigs Invasion""@en .
  FILTER (?event1 < ?event2)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
199,Which ingredients do I need for carrot cake?,"```sparql
SELECT ?ingredientName
WHERE {
  ?cake dbo:ingredient ?ingredient .
  ?ingredient rdfs:label ?ingredientName .
  FILTER(langMatches(lang(?ingredientName), ""en""))
  FILTER(?cake = dbr:Carrot_cake)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
200,Who created Wikipedia?,"```sparql
SELECT ?creator
WHERE {
  dbr:Wikipedia dct:creator ?creator .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
201,What is the highest mountain in Saxony Germany?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain a dbo:Mountain ;
            dbo:country dbr:Saxony ;
            dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
202,Who is the current federal minister of finance in Germany?,"```sparql
SELECT ?minister
WHERE {
  ?minister a dbo:Person ;
           dbo:leader dbr:Germany ;
           dbo:title ""Federal Minister of Finance"" .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
203,In which country is Mecca located?,"```sparql
SELECT ?countryName
WHERE {
  dbr:Mecca dbo:country ?country .
  ?country rdfs:label ?countryName .
  FILTER(LANG(?countryName) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
204,Who played Gus Fring in Breaking Bad?,"```sparql
SELECT ?actor
WHERE {
  ?actor dbo:starring dbr:Gus_Fring ;
                dbo:starring dbr:Breaking_Bad .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
205,In which country does the Nile start?,"```sparql
SELECT ?country
WHERE {
  dbr:Nile dbo:sourceCountry ?country
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
206,In which state Penn State University is located?,"```sparql
SELECT ?state
WHERE {
  dbr:Penn_State_University dbo:state ?state .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
207,What is the biggest stadium in Spain?,"```sparql
SELECT ?stadium ?stadiumName ?capacity
WHERE {
  ?stadium a dbo:Stadium ;
           dbo:country dbr:Spain ;
           dbo:seatingCapacity ?capacity .
  ?stadium rdfs:label ?stadiumName .
  FILTER (lang(?stadiumName) = 'en')
}
ORDER BY DESC(?capacity)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
208,Who is the coach of Ankara's ice hockey team?,"```sparql
SELECT ?coach
WHERE {
  ?team dbo:city dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
209,How large is the area of UK?,"```sparql
SELECT ?area
WHERE {
  dbr:United_Kingdom dbo:areaTotal ?area
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
210,Who created Batman?,"```sparql
SELECT ?creator
WHERE {
  dbr:Batman dbo:creator ?creator
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
211,Was Sigmund Freud married?,"```sparql
SELECT ?spouse
WHERE {
  dbr:Sigmund_Freud dbo:spouse ?spouse
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
212,Who are the developers of DBpedia?,"```sparql
SELECT ?developer
WHERE {
  dbr:DBpedia dbo:developer ?developer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
213,Give me all movies directed by Francis Ford Coppola.,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
214,Are tree frogs a type of amphibian?,"```sparql
SELECT ?typeLabel
WHERE {
  dbr:Tree_frog dct:subject dbc:Amphibians ;
                 rdf:type dbo:Amphibian .
  ?type rdfs:label ?typeLabel .
  FILTER(LANG(?typeLabel) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
215,What is the location of the Houses of Parliament?,"```sparql
SELECT ?location
WHERE {
  dbr:Houses_of_Parliament dbo:location ?location .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
216,how much is the elevation of Düsseldorf Airport ?,"```sparql
SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
217,How much is the population of mexico city ?,"```sparql
SELECT ?population
WHERE {
  dbr:Mexico_City dbo:populationTotal ?population
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
218,when was the founding date of french fifth republic?,"```sparql
SELECT ?foundingDate
WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?foundingDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
219,Who was the first King of England?,"```sparql
SELECT ?king
WHERE {
  ?king a dbo:Monarch ;
        dbo:reignStart ?start .
  FILTER (?start = xsd:date(""1066-12-25""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
220,Who is the editor of Forbes?,"```sparql
SELECT ?editor
WHERE {
  <http://dbpedia.org/resource/Forbes> dbo:editor ?editor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
221,Which awards did Douglas Hofstadter win?,"```sparql
SELECT ?award
WHERE {
  ?person foaf:name ""Douglas Hofstadter"" .
  ?person dbo:award ?award .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
222,Who is the youngest Darts player?,"```sparql
SELECT DISTINCT ?player ?name ?birthDate
WHERE {
  ?player a dbo:DartsPlayer ;
          foaf:name ?name ;
          dbo:birthDate ?birthDate .
}
ORDER BY ASC(?birthDate)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
223,Is horse racing a sport?,"```sparql
SELECT ?sportLabel
WHERE {
  ?sport a dbo:Sport ;
         rdfs:label ?sportLabel .
  FILTER(REGEX(?sportLabel, ""horse racing"", ""i""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
224,Which river does the Brooklyn Bridge cross?,"```sparql
SELECT ?river
WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
  ?river a dbo:River .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
225,How many people live in Poland?,"```sparql
SELECT ?population
WHERE {
  dbr:Poland dbo:populationTotal ?population
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
226,When was the last episode of the TV series Friends aired?,"```sparql
SELECT ?airDate
WHERE {
  ?tvSeries dbo:series ?series .
  ?series foaf:name ""Friends""@en .
  ?episode dbo:series ?series .
  ?episode dbo:airDate ?airDate .
}
ORDER BY DESC(?airDate)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
227,Is the wife of president Obama called Michelle?,"```sparql
SELECT ?wifeName
WHERE {
  ?president dbo:spouse ?wife .
  ?president foaf:name ""Barack Obama""@en .
  ?wife foaf:name ""Michelle Obama""@en .
  BIND(?wife AS ?wifeName)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
229,Who is 8th president of US?,"```sparql
SELECT ?president
WHERE {
  ?president a dbo:President ;
             dbo:number 8 .
  FILTER regex(str(?president), ""United_States"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
230,how much is the total population of  european union?,"```sparql
SELECT ?population
WHERE {
  dbr:European_Union dbo:populationTotal ?population
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
231,Give me all launch pads operated by NASA.,"```sparql
SELECT ?launchPad
WHERE {
  ?launchPad a dbo:LaunchPad ;
             dbo:operator <http://dbpedia.org/resource/NASA> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
232,Who developed the video game World of Warcraft?,"```sparql
SELECT ?developer
WHERE {
  ?videoGame dbo:developer ?developer ;
             rdfs:label ""World of Warcraft""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
233,What is the birth name of Adele?,"```sparql
SELECT ?birthName
WHERE {
  dbr:Adele dbp:birthName ?birthName .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
234,What is the population of Cairo?,"```sparql
SELECT ?population
WHERE {
  dbr:Cairo dbo:populationTotal ?population
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
235,Is Frank Herbert still alive?,"```sparql
SELECT ?person ?name ?deathDate
WHERE {
  ?person foaf:name ?name ;
          dbo:deathDate ?deathDate .
  FILTER (?name = ""Frank Herbert"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
236,What is the last work of Dan Brown?,"```sparql
SELECT ?workLabel
WHERE {
  ?author rdfs:label ""Dan Brown""@en ;
          dbo:notableWork ?work .
  ?work rdfs:label ?workLabel .
}
ORDER BY DESC(?work)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
237,Where is Sungkyunkwan University?,"```sparql
SELECT ?location
WHERE {
  dbpedia:Sungkyunkwan_University dbpedia-owl:location ?location .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
238,Who is the author of the interpretation of dreams?,"```sparql
SELECT ?authorName
WHERE {
  ?work dbo:author ?author .
  ?author foaf:name ?authorName .
  FILTER(?work = dbr:The_Interpretation_of_Dreams)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
239,When was the death  of  Shakespeare?,"```sparql
SELECT ?deathDate
WHERE {
  dbr:William_Shakespeare dbo:deathDate ?deathDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
241,Who developed Slack?,"```sparql
SELECT ?developer
WHERE {
  dbr:Slack dbo:developer ?developer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
242,Where is the origin of Carolina reaper?,"```sparql
SELECT ?origin
WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
243,In which year was Rachel Stevens born?,"```sparql
SELECT ?birthYear
WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
244,How often did Jane Fonda marry?,"```sparql
SELECT (COUNT(?marriage) AS ?marriageCount)
WHERE {
  ?person dbo:spouse ?marriage .
  FILTER (?person = dbr:Jane_Fonda)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
245,Was the wife of president Lincoln called Mary?,"```sparql
SELECT ?wifeName
WHERE {
  ?president a dbo:President ;
             dbo:spouse ?wife ;
             foaf:name ""Abraham Lincoln""@en .
  ?wife foaf:name ?wifeName .
  FILTER (regex(?wifeName, ""Mary"", ""i""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
246,Which cities does the Weser flow through?,"```sparql
SELECT DISTINCT ?city
WHERE {
  ?river dbo:city ?city ;
         rdfs:label ""Weser""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
247,In which programming language is GIMP written?,"```sparql
SELECT ?language
WHERE {
  <http://dbpedia.org/resource/GIMP> dbo:programmingLanguage ?language
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
248,Which university did Angela Merkel attend?,"```sparql
SELECT ?university
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
249,List all the musicals with music by Elton John.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical a dbo:Musical ;
           dbo:musicBy dbr:Elton_John .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
250,How many Aldi stores are there?,"```sparql
SELECT (SUM(?numLocations) AS ?totalStores)
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:numberOfLocations ?numLocations .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
251,What is the longest river in the world?,"```sparql
SELECT ?river ?length
WHERE {
  ?river a dbo:River ;
         dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
252,When was John Adams born?,"```sparql
SELECT ?birthdate
WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthdate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
253,Which companies produce hovercrafts?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:product/dbo:vehicleType dbr:Hovercraft .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
254,Who was the wife of U.S. president Lincoln?,"```sparql
SELECT ?wife
WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
255,Which species does an elephant belong?,"```sparql
SELECT ?species
WHERE {
  dbr:Elephant dct:subject ?species .
  ?species dct:subject dbc:Species .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
256,How many people live in the capital of Australia?,"```sparql
SELECT ?population
WHERE {
  ?capital a dbo:City ;
           dbo:country dbr:Australia ;
           dbo:populationTotal ?population .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
257,In which ancient empire could you pay with cocoa beans?,"```sparql
SELECT DISTINCT ?empire
WHERE {
  ?empire dbo:currency dbr:Cocoa_bean .
  ?empire a dbo:HistoricalCountry .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
258,How many theories did Albert Einstein come up with?,"```sparql
SELECT (COUNT(?theory) AS ?numTheories)
WHERE {
  ?einstein dbo:knownFor ?theory .
  FILTER(?einstein = dbr:Albert_Einstein)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
259,Who composed the soundtrack for Cameron's Titanic?,"```sparql
SELECT ?composer
WHERE {
  ?film dbo:workTitle ""Titanic""@en ;
       dbo:musicComposer ?composer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
260,Give me the runtime of Toy Story.,"```sparql
SELECT ?runtime
WHERE {
  ?film dbo:runtime ?runtime .
  ?film foaf:name ""Toy Story""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
262,With how many countries Iran has borders?,"```sparql
SELECT (COUNT(?country) AS ?borderCount)
WHERE {
  dbr:Iran dbp:borders ?country .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
263,Which electronics companies were founded in Beijing?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:industry dbr:Electronics ;
           dbo:foundationPlace dbr:Beijing .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
264,Who was the successor of John F. Kennedy?,"```sparql
SELECT ?successor
WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
265,Who is the mayor of Paris?,"```sparql
SELECT ?mayor
WHERE {
  dbr:Paris dbo:mayor ?mayor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
266,Did Arnold Schwarzenegger attend a university?,"```sparql
SELECT ?university
WHERE {
  dbr:Arnold_Schwarzenegger dbo:almaMater ?university .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
267,Is James Bond married?,"```sparql
SELECT ?person
WHERE {
  ?person a dbo:Person ;
         dbo:spouse ?spouse .
  FILTER (?person = dbr:James_Bond)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
268,Does the Isar flow into a lake?,"```sparql
SELECT DISTINCT ?lake
WHERE {
  ?lake a dbo:Lake .
  ?river dbo:outflow ?lake .
  FILTER regex(str(?river), ""Isar"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
269,Which Indian company has the most employees?,"```sparql
SELECT ?company ?numberOfEmployees
WHERE {
  ?company a dbo:Company ;
           dbo:numberOfEmployees ?numberOfEmployees .
}
ORDER BY DESC(?numberOfEmployees)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
270,Who was John F. Kennedy's vice president?,"```sparql
SELECT ?vicePresidentName
WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident .
  ?vicePresident foaf:name ?vicePresidentName .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
271,Which country does the creator of Miffy come from?,"```sparql
SELECT ?country
WHERE {
  ?creator dbo:creator dbr:Miffy ;
          dbo:nationality ?country .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
273,In what city is the Heineken brewery?,"```sparql
SELECT ?city WHERE {
  ?brewery a dbo:Brewery ;
           dbo:location ?city .
  ?city a dbo:City .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
274,Is Barack Obama a democrat?,"```sparql
SELECT ?party
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  FILTER (?party = dbpedia:Democratic_Party_(United_States))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
275,List the children of Margaret Thatcher.,"```sparql
SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
276,From which region is the Melon de Bourgogne?,"```sparql
SELECT ?region
WHERE {
  ?wine a dbo:Grape ;
        dbo:region ?region ;
        rdfs:label ""Melon de Bourgogne""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
278,how big is the total area of North Rhine- Westphalia?,"```sparql
SELECT ?areaTotal
WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?areaTotal
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
279,Which city has the most inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
280,What is Donald Trump's main business?,"```sparql
SELECT ?business
WHERE {
  dbr:Donald_Trump dbo:owner ?business .
  ?business a dbo:Company .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
281,When will start the final match of the football world cup 2018?,"```sparql
SELECT ?date
WHERE {
  dbpedia:2018_FIFA_World_Cup dbo:finalMatch ?finalMatch .
  ?finalMatch dbo:date ?date .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
282,Which films did Stanley Kubrick direct?,"```sparql
SELECT ?filmTitle
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
  ?film rdfs:label ?filmTitle .
  FILTER (lang(?filmTitle) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
283,how much is the population  Iraq?,"```sparql
SELECT ?population
WHERE {
  dbr:Iraq dbo:populationTotal ?population
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
284,How many inhabitants does the largest city in Canada have?,"```sparql
SELECT ?population
WHERE {
  SELECT (MAX(?pop) AS ?population)
  WHERE {
    ?city rdf:type dbo:City .
    ?city dbo:country dbr:Canada .
    ?city dbo:populationTotal ?pop .
  }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
285,Who is the mayor of the capital of French Polynesia?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Papeete> dbo:mayor ?mayor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
286,Give me all actors starring in movies directed by William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
287,How tall is Claudia Schiffer?,"```sparql
SELECT ?height
WHERE {
  dbr:Claudia_Schiffer dbo:height ?height
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
288,how much is the population densty rank of germany?,"```sparql
SELECT ?populationDensityRank
WHERE {
  dbr:Germany dbp:populationDensityRank ?populationDensityRank
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
289,What is the highest mountain in Italy?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain a dbo:Mountain ;
            dbo:country dbr:Italy ;
            dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
290,List all games by GMT.,"```sparql
SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        dbo:publisher ?publisher .
  ?publisher foaf:name ""GMT"" .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
291,What is the official language of Suriname?,"```sparql
SELECT ?language
WHERE {
  dbr:Suriname dbo:officialLanguage ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
292,In which city did Nikos Kazantzakis die?,"```sparql
SELECT ?cityName
WHERE {
  dbr:Nikos_Kazantzakis dbo:deathPlace ?city .
  ?city rdfs:label ?cityName .
  FILTER(LANG(?cityName) = ""en"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
293,What is in a chocolate chip cookie?,"```sparql
SELECT ?ingredient
WHERE {
  <http://dbpedia.org/resource/Chocolate_chip_cookie> dbpedia-owl:ingredient ?ingredient .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
294,In which country is the Limerick Lake?,"```sparql
SELECT ?country WHERE {
  ?lake rdf:type dbo:Lake ;
        dbo:country ?country ;
        rdfs:label ""Limerick Lake""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
295,Give me all video games published by Mean Hamster Software.,"```sparql
SELECT ?game
WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game a dbo:VideoGame .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
296,Give me all members of Prodigy.,"```sparql
SELECT ?member
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:bandMember ?member .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
297,In which time zone is Rome?,"```sparql
SELECT ?timeZone
WHERE {
  dbr:Rome dbo:timeZone ?timeZone
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
298,How high is the lighthouse in Colombo?,"```sparql
SELECT ?height
WHERE {
  dbr:Colombo dbo:height ?height .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
299,Who are the writers of the Wall album of Pink Floyd?,"```sparql
SELECT ?writer
WHERE {
  ?album dbo:artist dbr:Pink_Floyd ;
        dbp:title ""The_Wall"" ;
        dbp:writer ?writer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
300,Who is the mayor of Rotterdam?,"```sparql
SELECT ?mayor
WHERE {
  dbr:Rotterdam dbo:leaderName ?mayor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
301,What is the largest city in Australia?,"```sparql
SELECT ?cityName
WHERE {
  ?country a dbo:Country ;
           dbo:largestCity ?city .
  ?city rdfs:label ?cityName .
  FILTER(LANG(?cityName) = 'en')
  FILTER(?country = dbr:Australia)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
302,Who was married to president Chirac?,"```sparql
SELECT ?spouse
WHERE {
  dbr:Jacques_Chirac dbo:spouse ?spouse .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
303,What form of government is found in South Africa?,"```sparql
SELECT ?governmentType
WHERE {
  dbr:South_Africa dbo:governmentType ?governmentType
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
304,How high is the Yokohama Marine Tower?,"```sparql
SELECT ?height
WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
305,Which holidays are celebrated around the world? test2,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:Holiday ?holiday .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
306,Who is the tallest basketball player?,"```sparql
SELECT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
307,How many languages are spoken in Turkmenistan?,"```sparql
SELECT (COUNT(DISTINCT ?language) AS ?numLanguages)
WHERE {
  ?country dbo:country <http://dbpedia.org/resource/Turkmenistan> .
  ?country dbo:language ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
308,Did Che Guevara have children?,"```sparql
SELECT ?child
WHERE {
  dbr:Che_Guevara dbo:child ?child .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Aki_Kaurismäki .
  ?film dbo:award dbr:Grand_Prix_(Cannes) .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
310,To which party does the mayor of Paris belong?,"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Paris> dbo:mayor ?mayor .
  ?mayor dbo:party ?party .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
311,Who is the Formula 1 race driver with the most races?,"```sparql
SELECT ?driver ?name ?races
WHERE {
  ?driver a dbo:Person ;
          dbo:races ?races ;
          foaf:name ?name .
  FILTER EXISTS { ?driver dbo:driverOf ?team }
}
ORDER BY DESC(?races)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
312,What country is Sitecore from?,"```sparql
SELECT ?country
WHERE {
  dbpedia:Sitecore dbo:location ?country .
  ?country a dbo:Country .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
313,Give me the birth place of Frank Sinatra.,"```sparql
SELECT ?birthPlace
WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
314,Is Christian Bale starring in Velvet Goldmine?,"```sparql
SELECT ?actorName
WHERE {
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  ?film rdfs:label ""Velvet Goldmine""@en .
  ?actor foaf:name ""Christian Bale""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
315,Who is the son of Sonny and Cher?,"```sparql
SELECT ?son
WHERE {
  ?son dbo:parent dbr:Sonny_and_Cher .
  ?son rdf:type dbo:Person .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
316,How many ethnic groups live in Slovenia?,"```sparql
SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  ?ethnicGroup a dbo:EthnicGroup ;
              dbo:country dbr:Slovenia .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
317,What is the capital of Cameroon?,"```sparql
SELECT ?capital
WHERE {
  dbr:Cameroon dbo:capital ?capital .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
318,Was Natalie Portman born in the United States?,"```sparql
SELECT ?person ?birthPlace
WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace ?birthPlace .
  FILTER (?person = dbr:Natalie_Portman && ?birthPlace = dbr:United_States)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
319,How many pages does War and Peace have?,"```sparql
SELECT ?numberOfPages
WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?numberOfPages
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
320,Who is the oldest child of Meryl Streep?,"```sparql
SELECT ?childName
WHERE {
  dbr:Meryl_Streep dbo:child ?child .
  ?child foaf:name ?childName .
}
ORDER BY ?childName
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
321,Which television shows were created by Walt Disney?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show a dbo:TelevisionShow ;
        dbo:creator dbr:Walt_Disney .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
322,What does IYCM stand for?,"```sparql
SELECT ?definition
WHERE {
  dbr:IYCM dbo:abbreviation ?definition
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
323,Which types of grapes grow in Oregon?,"```sparql
SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType dbo:growingGrape ?region.
  ?region dbo:isPartOf dbr:Oregon.
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
324,Was U.S. president Jackson involved in a war?,"```sparql
SELECT ?war
WHERE {
  dbr:Andrew_Jackson dbo:commander ?war .
  ?war a dbo:MilitaryConflict
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
325,When was the Titanic completed?,"```sparql
SELECT ?completionDate
WHERE {
  dbr:Titanic dbo:completionDate ?completionDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
326,Did Tesla win a nobel prize in physics?,"```sparql
SELECT ?scientist ?award
WHERE {
  ?scientist a dbo:Scientist ;
             dbo:award ?award .
  FILTER(REGEX(STR(?scientist), ""Tesla"", ""i""))
  FILTER(REGEX(STR(?award), ""Nobel Prize in Physics"", ""i""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
327,How many states are in Mexico?,"```sparql
SELECT (COUNT(?state) AS ?count)
WHERE {
  ?state a dbo:State ;
         dbo:country dbr:Mexico .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"```sparql
SELECT ?scientistName
WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project ;
            dbo:knownFor dbr:Nobel_Peace_Prize ;
            rdf:type dbo:Scientist ;
            rdfs:label ?scientistName .
  FILTER (lang(?scientistName) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
329,How much did the Lego Movie cost?,"```sparql
SELECT ?budget
WHERE {
  dbr:The_Lego_Movie dbo:budget ?budget
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
330,Who composed the music for Harold and Maude?,"```sparql
SELECT ?composer
WHERE {
  ?film dbo:workTitle ""Harold and Maude""@en .
  ?film dbo:musicComposer ?composer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
331,List all episodes of the first season of the HBO television series The Sopranos.,"```sparql
SELECT ?episode
WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber ""1"" .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
332,Which city has the least inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ?population
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
333,Where is Syngman Rhee buried?,"```sparql
SELECT ?burialPlace
WHERE {
  dbr:Syngman_Rhee dbo:restingPlace ?burialPlace .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
334,Does Neymar play for Real Madrid?,"```sparql
SELECT ?player ?team
WHERE {
  ?player a dbo:Person ;
          dbo:team ?team .
  FILTER (?player = dbr:Neymar)
  FILTER regex(str(?team), ""Real Madrid"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
335,Who wrote the book The Pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book a dbo:Book ;
        dbo:author ?author ;
        rdfs:label ""The Pillars of the Earth""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
336,Do Prince Harry and Prince William have the same parents?,"```sparql
SELECT ?parent1 ?parent2
WHERE {
  ?person1 a dbo:Person ;
           foaf:name ""Prince Harry"" ;
           dbo:parent ?parent1 .
  
  ?person2 a dbo:Person ;
           foaf:name ""Prince William"" ;
           dbo:parent ?parent2 .
  
  FILTER(?parent1 = ?parent2)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
337,Who was the doctoral supervisor of Albert Einstein?,"```sparql
SELECT ?supervisorName
WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor.
  ?supervisor foaf:name ?supervisorName.
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
338,Does Breaking Bad have more episodes than Game of Thrones?,"```sparql
SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes
WHERE {
  dbr:Breaking_Bad dbo:numberOfEpisodes ?breakingBadEpisodes .
  dbr:Game_of_Thrones dbo:numberOfEpisodes ?gameOfThronesEpisodes .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
339,Who was Vincent van Gogh inspired by?,"```sparql
SELECT DISTINCT ?inspiredBy
WHERE {
  dbr:Vincent_van_Gogh dbo:influenced ?inspiredBy .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
340,Which building after the Burj Khalifa has the most floors?,"```sparql
SELECT ?building ?floors
WHERE {
  ?building a dbo:Building ;
           dbo:floorCount ?floors .
  FILTER (?building != dbr:Burj_Khalifa)
}
ORDER BY DESC(?floors)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
341,What was the final result of the War of the Roses?,"```sparql
SELECT ?result
WHERE {
  ?event dbo:result ?result ;
         rdfs:label ""War of the Roses""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
342,How much did Pulp Fiction cost?,"```sparql
SELECT ?cost
WHERE {
  dbr:Pulp_Fiction dbo:budget ?cost
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
343,Is proinsulin a protein?,"```sparql
SELECT ?isProtein
WHERE {
  dbpedia:Proinsulin rdf:type ?isProtein .
  FILTER (?isProtein = dbpedia-owl:Protein)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
344,Do Urdu and Persian have a common root?,"```sparql
SELECT ?language1, ?language2
WHERE {
  ?language1 dbo:languageFamily ?family .
  ?language2 dbo:languageFamily ?family .
  FILTER (?language1 = dbr:Urdu && ?language2 = dbr:Persian)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:producer <http://dbpedia.org/resource/Benicio_del_Toro> .
  ?movie dbo:language dbr:Spanish .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
346,Is Lake Baikal bigger than the Great Bear Lake?,"```sparql
SELECT ?lake ?areaTotal
WHERE {
  ?lake a dbo:Lake ;
        dbo:areaTotal ?areaTotal .
  FILTER (?lake = dbr:Lake_Baikal || ?lake = dbr:Great_Bear_Lake)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
347,Show me all books in Asimov's Foundation series.,"```sparql
SELECT ?book
WHERE {
  ?book dct:subject dbc:Foundation_series
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
348,Where was Bach born?,"```sparql
SELECT ?birthPlace
WHERE {
  dbr:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
349,Which city has the oldest running metro?,"```sparql
SELECT ?city ?openingYear
WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:isPartOf ?country .
  ?country a dbo:Country .
  ?city dbo:openingYear ?openingYear .
  ?city dbo:network ?network .
  ?network rdf:type dbo:RapidTransit .
} ORDER BY ?openingYear
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
350,Who designed the Brooklyn Bridge?,"```sparql
SELECT ?architect
WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?architect .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
351,How many people live in Eurasia?,"```sparql
SELECT (SUM(?population) AS ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:populationTotal ?population .
  FILTER (?country IN (dbr:Eurasia))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
352,Who is the host of the BBC Wildlife Specials?,"```sparql
SELECT ?host
WHERE {
  ?show dbo:producer <http://dbpedia.org/resource/BBC_Natural_History_Unit> ;
        dbo:presenter ?host .
  FILTER regex(str(?show), ""Wildlife Specials"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
353,"What is the total population of Melbourne, Florida?","```sparql
SELECT ?population
WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
354,What country is Mount Everest in?,"```sparql
SELECT ?countryName
WHERE {
  <http://dbpedia.org/resource/Mount_Everest> dbo:country ?country.
  ?country rdfs:label ?countryName.
  FILTER(LANG(?countryName) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
355,To which artistic movement did the painter of The Three Dancers belong?,"```sparql
SELECT ?movement
WHERE {
  ?painter dbo:author dbr:The_Three_Dancers ;
           dbo:movement ?movement .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
356,When did Operation Overlord commence?,"```sparql
SELECT ?date
WHERE {
  dbr:Operation_Overlord dbo:date ?date .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
357,What is the bridge with the longest span?,"```sparql
SELECT ?bridge ?span
WHERE {
  ?bridge a dbo:Bridge ;
          dbo:mainSpan ?span .
}
ORDER BY DESC(?span)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
358,Is there a video game called Battle Chess?,"```sparql
SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
359,Who was buried in the Great Pyramid of Giza?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:restingPlace dbr:Great_Pyramid_of_Giza .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"```
SELECT ?company ?plant
WHERE {
  ?company a dbpedia-owl:Company ;
           dbpedia-owl:industry dbpedia:Automotive_industry ;
           dbpedia-owl:product dbpedia:Ford_Motor_Company .
  
  ?plant dbpedia-owl:location dbpedia:Malaysia ;
        dbpedia-owl:owner ?company .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
361,Did Socrates influence Aristotle?,"```sparql
SELECT ?influencer ?influencee
WHERE {
  ?influencer dbo:influencedBy dbr:Socrates .
  ?influencee dbo:influencedBy dbr:Aristotle .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
362,How many children did Benjamin Franklin have?,"```sparql
SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  dbr:Benjamin_Franklin dbo:child ?child .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
363,How tall is Michael Jordan?,"```sparql
SELECT ?height
WHERE {
  dbr:Michael_Jordan dbo:height ?height
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
364,In which UK city are the headquarters of the MI6?,"```sparql
SELECT ?city
WHERE {
  dbr:MI6 dbo:headquarter ?hq .
  ?hq dbo:location ?building .
  ?building dbo:location ?city .
  ?city a dbo:City .
  FILTER(langMatches(lang(?city), ""en""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
365,Who created Family Guy?,"```sparql
SELECT ?creator
WHERE {
  dbr:Family_Guy dbo:creator ?creator .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
366,In which city does the Chile Route 68 end?,"```sparql
SELECT ?cityEnd
WHERE {
  <http://dbpedia.org/resource/Chile_Route_68> dbo:routeEnd ?cityEnd .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
367,Give me the grandchildren of Elvis Presley.,"```sparql
SELECT ?grandchild ?grandchildName
WHERE {
  dbr:Elvis_Presley dbo:child/dbo:child ?grandchild .
  ?grandchild foaf:name ?grandchildName .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
368,When did the Ming dynasty dissolve?,"```sparql
SELECT ?dissolutionDate
WHERE {
  dbr:Ming_Dynasty dbo:dissolutionDate ?dissolutionDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
369,In which military conflicts did Lawrence of Arabia participate?,"```sparql
SELECT ?conflict
WHERE {
  ?lawrence dbo:militaryConflict ?conflict .
  FILTER (?lawrence = dbr:T._E._Lawrence)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
370,What is the timezone in San Pedro de Atacama?,"```sparql
SELECT ?timezone
WHERE {
  dbpedia:San_Pedro_de_Atacama dbpedia-owl:timezone ?timezone .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
371,Give me all books by William Goldman with more than 300 pages.,"```sparql
SELECT ?book ?title ?pages
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:William_Goldman ;
        dbo:numberOfPages ?pages .
  FILTER (?pages > 300)
  OPTIONAL { ?book foaf:name ?title }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
372,What did Bruce Carver die from?,"```sparql
SELECT ?causeOfDeath
WHERE {
  dbpedia:Bruce_Carver dbo:causeOfDeath ?causeOfDeath .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"```sparql
SELECT ?subsidiary
WHERE {
  ?subsidiary dbo:subsidiary <http://dbpedia.org/resource/Lufthansa> ;
              dbo:operates <http://dbpedia.org/resource/Dortmund_Airport> ,
                          <http://dbpedia.org/resource/Berlin_Tegel_Airport> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
374,Does Abraham Lincoln's death place have a website?,"```sparql
SELECT ?website
WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace .
  ?deathPlace dbo:website ?website .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
375,Did Elvis Presley have children?,"```sparql
SELECT ?child
WHERE {
  dbr:Elvis_Presley dbo:child ?child .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
376,Is Michelle Obama the wife of Barack Obama?,"```sparql
SELECT ?wife
WHERE {
  dbr:Michelle_Obama dbo:spouse ?wife .
  FILTER (?wife = dbr:Barack_Obama)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
377,In which city does Sylvester Stallone live?,"```sparql
SELECT ?cityName
WHERE {
  ?person dbo:residence ?city .
  ?city a dbo:City ;
        rdfs:label ?cityName .
  FILTER (?person = dbr:Sylvester_Stallone)
  FILTER (lang(?cityName) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
378,Which books by Kerouac were published by Viking Press?,"```sparql
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Jack_Kerouac ;
        dbo:publisher dbr:Viking_Press .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
379,Who wrote the song Hotel California?,"```sparql
SELECT ?artist
WHERE {
  ?song dbo:writer ?artist ;
        rdfs:label ""Hotel California""@en .
  ?artist a dbo:Person .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
380,What is the capital of Canada?,"```sparql
SELECT ?capital
WHERE {
  dbr:Canada dbo:capital ?capital .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
381,Who is the mayor of Tel Aviv?,"```sparql
SELECT ?mayor
WHERE {
  dbr:Tel_Aviv dbo:leaderName ?mayor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
382,What form of government does Russia have?,"```sparql
SELECT ?governmentType
WHERE {
  dbr:Russia dbo:governmentType ?governmentType
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
383,Show me the book that Muhammad Ali wrote.,"```sparql
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Muhammad_Ali .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
384,Who was the first to climb Mount Everest?,"```sparql
SELECT ?climber
WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?climber .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
385,How many languages are spoken in Colombia?,"```sparql
SELECT (COUNT(DISTINCT ?language) AS ?numLanguages)
WHERE {
  ?language a dbo:Language ;
            dbo:spokenIn dbr:Colombia .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
386,What is the currency of the Czech Republic?,"```sparql
SELECT ?currency
WHERE {
  dbr:Czech_Republic dbo:currency ?currency .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
387,Where in France is sparkling wine produced?,"```sparql
SELECT DISTINCT ?region
WHERE {
  ?wine a dbo:SparklingWine ;
        dbo:region ?region .
  ?region a dbo:Region ;
          dbo:country dbr:France .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
388,When did Boris Becker end his active career?,"```sparql
SELECT ?endDate
WHERE {
  dbr:Boris_Becker dbo:activeYearsEndDate ?endDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke ;
         dbo:director dbr:Guy_Ritchie .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
390,In which films did Julia Roberts as well as Richard Gere play?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
391,Show me Hemingway's autobiography.,"```sparql
SELECT ?autobiography
WHERE {
  ?autobiography a dbo:Autobiography ;
                 dbo:author dbr:Ernest_Hemingway .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
392,How tall is Amazon Eve?,"```sparql
SELECT ?height
WHERE {
  dbr:Amazon_Eve dbo:height ?height
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
393,What are the five boroughs of New York?,"```sparql
SELECT ?boroughName
WHERE {
  ?borough a dbo:Borough ;
           rdfs:label ?boroughName .
  FILTER(langMatches(lang(?boroughName), ""en""))
}
LIMIT 5
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
394,Give me all Canadian Grunge record labels.,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?label a dbo:RecordLabel ;
         dbo:country dbr:Canada ;
         dbo:genre dbr:Grunge .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
395,In which country does the Ganges start?,"```sparql
SELECT ?country
WHERE {
  dbr:Ganges dbo:sourceCountry ?country
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
396,Who is the founder of Penguin Books?,"```sparql
SELECT ?founder
WHERE {
  dbr:Penguin_Books dbo:founder ?founder .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
397,Who wrote the Game of Thrones theme?,"```sparql
SELECT ?composer
WHERE {
  dbr:Game_of_Thrones dbo:composer ?composer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
398,Who is the president of Eritrea?,"```sparql
SELECT ?president
WHERE {
  dbr:Eritrea dbo:leader ?president .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
399,In which city did John F. Kennedy die?,"```sparql
SELECT ?cityName
WHERE {
  ?person dbo:deathPlace ?city.
  ?city rdfs:label ?cityName.
  FILTER (LANG(?cityName) = 'en' && ?person = dbr:John_F._Kennedy)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
400,What is the highest mountain in Australia?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain a dbo:Mountain ;
            dbo:elevation ?elevation ;
            dbo:country dbr:Australia .
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
401,Who writes the Farmers' Almanac?,"```sparql
SELECT ?author
WHERE {
  ?almanac dbo:editor ?author ;
           rdfs:label ""Farmers' Almanac""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
402,Give me the currency of China.,"```sparql
SELECT ?currency
WHERE {
  dbr:China dbo:currency ?currency .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
403,Give me all Swedish oceanographers.,"```sparql
SELECT DISTINCT ?oceanographer
WHERE {
  ?oceanographer a dbo:Person ;
                 dbo:nationality dbr:Sweden ;
                 dbo:profession dbr:Oceanography .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
404,In which city are the headquarters of the United Nations?,"```sparql
SELECT ?cityName
WHERE {
  <http://dbpedia.org/resource/United_Nations> dbo:headquarter ?hq .
  ?hq dbo:location ?city .
  ?city rdfs:label ?cityName .
  FILTER(LANG(?cityName) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
405,Is Rita Wilson the wife of Tom Hanks?,"```sparql
SELECT ?wife
WHERE {
  ?wife dbo:spouse dbr:Tom_Hanks .
  FILTER (?wife = dbr:Rita_Wilson)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
406,In which countries do people speak Japanese?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?language a dbo:Language ;
           rdfs:label ""Japanese""@en .
  ?country dbo:language ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
407,Which of Tim Burton's films had the highest budget?,"```sparql
SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
408,Which museum in New York has the most visitors?,"```sparql
SELECT ?museum ?visitors
WHERE {
  ?museum a dbo:Museum ;
          dbo:numberOfVisitors ?visitors .
  FILTER (?visitors > 0)
}
ORDER BY DESC(?visitors)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
409,What was the first Queen album?,"```sparql
SELECT ?albumName
WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Queen ;
         dbo:releaseDate ?date .
  FILTER (?date = ""1973-07-13""^^xsd:date)
  BIND(?album AS ?albumName)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
410,What was the first name of the band Queens of the Stone Age?,"```sparql
SELECT ?bandName
WHERE {
  ?band dbo:alias ?bandName .
  FILTER regex(?bandName, ""Queens of the Stone Age"", ""i"")
}
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
411,What was the last movie with Alec Guinness?,"```sparql
SELECT ?movie ?date
WHERE {
  ?movie rdf:type dbo:Film ;
         dbp:starring dbr:Alec_Guinness ;
         dbo:releaseDate ?date .
}
ORDER BY DESC(?date)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
412,Give me all actors starring in Last Action Hero.,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Last Action Hero""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
413,Who discovered Pluto?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discoverer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
1,List all boardgames by GMT.,"```sparql
SELECT DISTINCT ?boardgame
WHERE {
  ?boardgame rdf:type dbo:Game ;
             dbo:publisher dbr:GMT_Games .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
2,Who developed Skype?,"The developers of Skype are Ahti Heinla, Priit Kasesalu, and Jaan Tallinn.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
3,Which people were born in Heraklion?,"```sparql
SELECT DISTINCT ?personName
WHERE {
  ?person rdf:type dbo:Person ;
          dbo:birthPlace dbr:Heraklion ;
          rdfs:label ?personName .
  FILTER (lang(?personName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
4,In which U.S. state is Area 51 located?,"```sparql
SELECT ?stateLabel
WHERE {
  ?area51 dbo:location dbr:Area_51 ;
          dbo:location ?state .
  ?state a dbo:State ;
         rdfs:label ?stateLabel .
  FILTER (LANG(?stateLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
5,Who is the mayor of New York City?,"The mayor of New York City is Eric Adams. 

Here is the SPARQL query to retrieve this information from DBpedia:

```
SELECT ?mayorName
WHERE {
  dbr:New_York_City dbo:leaderName ?mayorName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
6,Which countries have places with more than two caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?place rdf:type dbo:Place .
  ?place dbo:location ?country .
  {
    SELECT ?place (COUNT(?cave) AS ?numCaves)
    WHERE {
      ?place dbo:location ?country .
      ?place dbo:location ?cave .
      ?cave rdf:type dbo:Cave .
    }
    GROUP BY ?place
    HAVING (?numCaves > 2)
  }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
7,Where did Abraham Lincoln die?,"Based on the lexical entries provided, we can formulate a SPARQL query to find the place where Abraham Lincoln died. Here is the query:

```sparql
SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}
```

This query will retrieve the place where Abraham Lincoln died from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
8,Which airports does Air China serve?,"```sparql
SELECT DISTINCT ?airportName
WHERE {
  ?airline a dbo:Airline ;
           dbo:targetAirport ?airport .
  ?airport rdfs:label ?airportName .
  FILTER (LANG(?airportName) = 'en')
  FILTER regex(str(?airline), ""Air China"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
9,Give me all actors starring in movies directed by and starring William Shatner.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor ;
        dbo:director ?director .
  ?director dbo:starring ?actor .
  FILTER regex(str(?director), ""William_Shatner"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
10,What are the official languages of the Philippines?,"The official languages of the Philippines are Filipino and English. 

Here is the SPARQL query to retrieve this information from DBpedia:

```
SELECT ?language
WHERE {
  dbr:Philippines dbo:officialLanguage ?language .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
11,Give me all Danish films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?film
WHERE {
  ?film a dbo:Film ;
        dbo:country dbr:Denmark .
}
LIMIT 100","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?movieTitle
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Brad_Pitt> ;
        dbo:director <http://dbpedia.org/resource/Guy_Ritchie> ;
        rdfs:label ?movieTitle .
  FILTER (lang(?movieTitle) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
13,Give me the grandchildren of Bruce Lee.,"```sparql
SELECT ?grandchild_name
WHERE {
  dbr:Bruce_Lee dbo:child/dbo:child ?grandchild .
  ?grandchild foaf:name ?grandchild_name .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
14,Which other weapons did the designer of the Uzi develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?otherWeapons
WHERE {
  ?uzi dbo:designer ?designer .
  ?designer dbp:designer ?otherWeapons .
  FILTER (?otherWeapons != ""Uzi"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
15,Who is the owner of Universal Studios?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Universal_Studios> dbo:owner ?owner .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
16,Which state of the USA has the highest population density?,"```sparql
SELECT ?state ?populationDensity
WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?populationDensity .
}
ORDER BY DESC(?populationDensity)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
17,Which monarchs were married to a German?,"```sparql
SELECT DISTINCT ?monarch
WHERE {
  ?monarch a dbo:Monarch ;
          dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
18,Which organizations were founded in 1950?,"```sparql
SELECT DISTINCT ?organization ?organizationName
WHERE {
  ?organization a dbo:Organisation ;
               dbo:foundingYear ""1950""^^xsd:gYear ;
               rdfs:label ?organizationName .
  FILTER(LANG(?organizationName) = """" || LANGMATCHES(LANG(?organizationName), ""en""))
}
```
This SPARQL query retrieves organizations founded in 1950 from DBpedia and returns their names.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
19,Who created the comic Captain America?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?creator
WHERE {
  ?comic dbo:creator ?creator ;
         rdfs:label ""Captain America""@en .
}
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
20,Give me the Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  dbr:Apollo_14 dbo:astronaut ?astronaut .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
21,Who wrote the book The pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
22,Which state of the United States of America has the highest density?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?state ?density
WHERE {
  ?state a dbo:State ;
         dbp:densityrank ?density .
}
ORDER BY DESC(?density)
LIMIT 1
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
23,Which spaceflights were launched from Baikonur?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?spaceflight
WHERE {
  ?spaceflight dbo:launchPad <http://dbpedia.org/resource/Baikonur_Cosmodrome>.
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
24,Give me a list of all trumpet players that were bandleaders.,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?playerName
WHERE {
  ?player a dbo:Person ;
          dbo:instrument <http://dbpedia.org/resource/Trumpet> ;
          dbo:occupation <http://dbpedia.org/resource/Bandleader> ;
          rdfs:label ?playerName .
  FILTER (lang(?playerName) = 'en')
}
LIMIT 100","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
25,Which U.S. states are in the same timezone as Utah?,"```sparql
SELECT DISTINCT ?stateName
WHERE {
  ?state1 dbpedia-owl:timeZone ?timezone .
  ?state2 dbpedia-owl:timeZone ?timezone .
  ?state1 dbpedia-owl:state ?stateName .
  ?state2 dbpedia-owl:state ?stateName2 .
  FILTER (?stateName != ?stateName2 && ?stateName = ""Utah"")
}
```
This SPARQL query retrieves the U.S. states that are in the same timezone as Utah by checking for states that share the same timezone as Utah.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
26,Which U.S. states possess gold minerals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?state
WHERE {
  ?state dbo:place ?mineral .
  ?mineral dbp:mineral ?mineralName .
  FILTER regex(?mineralName, ""gold"", ""i"")
  FILTER regex(?state, ""United_States"", ""i"")
}
LIMIT 10","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
27,Who is the daughter of Ingrid Bergman married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?daughterName ?spouseName
WHERE {
  ?daughter dbo:child <http://dbpedia.org/resource/Ingrid_Bergman> .
  ?daughter dbo:spouse ?spouse .
  
  ?daughter foaf:name ?daughterName .
  ?spouse foaf:name ?spouseName .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
28,How deep is Lake Placid?,"```sparql
SELECT ?depth
WHERE {
  dbr:Lake_Placid dbo:maximumDepth ?depth
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
29,Show me all museums in London.,"```sparql
SELECT DISTINCT ?museum ?museumLabel
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:London .
  ?museum rdfs:label ?museumLabel .
  FILTER(LANG(?museumLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
30,Which caves have more than 3 entrances?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?cave
WHERE {
  ?cave a dbo:Cave ;
        dbp:entranceCount ?entranceCount .
  FILTER (?entranceCount > 3)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
31,Who is the tallest player of the Atlanta Falcons?,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
          dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
32,What are the top-10 action role-playing video games according to IGN?,"To answer your question, we can query DBpedia for action role-playing video games and then filter the results based on IGN rankings. However, please note that DBpedia may not have the most up-to-date information on IGN rankings. Here is a sample SPARQL query that can be used to retrieve the top 10 action role-playing video games according to IGN:

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?game ?name ?ignRanking
WHERE {
  ?game a dbo:VideoGame ;
        dbo:genre dbr:Action_role-playing_video_game ;
        rdfs:label ?name ;
        dbp:ign ?ignRanking .
  FILTER (lang(?name) = 'en')
}
ORDER BY DESC(?ignRanking)
LIMIT 10
```

Please note that the property `dbp:ign` is a hypothetical property that represents IGN rankings in this query. In reality, DBpedia may not have this specific property, so you may need to adjust the query based on the actual properties available in DBpedia related to IGN rankings.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
SELECT DISTINCT ?writer ?name
WHERE {
  ?writer a dbo:Writer ;
          dbo:award dbr:Nobel_Prize_in_Literature ;
          foaf:name ?name .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
34,Show me all basketball players that are higher than 2 meters.,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:height ?height .
  FILTER (?height > 2)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
35,When was the Statue of Liberty built?,"```sparql
SELECT ?date
WHERE {
  dbr:Statue_of_Liberty dbo:constructionStart ?date .
}
```
This query retrieves the date when the construction of the Statue of Liberty started.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
36,Which states border Illinois?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?state
WHERE {
  dbo:Illinois dbp:borderingStates ?state .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
37,Who developed Minecraft?,The developers of Minecraft are Markus Persson and Mojang Studios.,"Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
38,Where did Hillel Slovak die?,"The following SPARQL query can be used to find where Hillel Slovak died:

```
SELECT ?placeOfDeath WHERE {
  ?person dbo:deathPlace ?placeOfDeath .
  ?person foaf:name ""Hillel Slovak""@en .
}
```

This query searches for the place of death of a person with the name ""Hillel Slovak"" in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
39,What movies does Jesse Eisenberg play in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Jesse_Eisenberg> .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
40,Give all swimmers that were born in Moscow.,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?swimmer
WHERE {
  ?swimmer a dbo:Person ;
           dbo:birthPlace/dbo:location <http://dbpedia.org/resource/Moscow> ;
           a dbo:Swimmer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
41,Give me all cosmonauts.,"To retrieve all cosmonauts from DBpedia, you can use the following SPARQL query:

```sparql
SELECT ?cosmonaut
WHERE {
  ?cosmonaut a <http://dbpedia.org/ontology/Cosmonaut> .
}
```

This query will return all resources that are classified as cosmonauts in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
42,Give me all Swiss non-profit organizations.,"```sparql
SELECT DISTINCT ?organization ?organizationName
WHERE {
  ?organization a <http://dbpedia.org/ontology/Nonprofit> ;
               <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> ;
               rdfs:label ?organizationName .
  FILTER (lang(?organizationName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
43,Which presidents were born in 1945?,"```sparql
SELECT DISTINCT ?presidentName
WHERE {
  ?president a dbpedia-owl:President ;
             dbpprop:birthDate ?birthDate ;
             rdfs:label ?presidentName .
  FILTER (STRSTARTS(?birthDate, ""1945""))
  FILTER (LANG(?presidentName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
44,What kind of music did Lou Reed play?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?genre
WHERE {
  ?artist dbo:genre ?genre ;
          foaf:name ""Lou Reed""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
45,Where do the Red Sox play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?stadium
WHERE {
  ?team dbo:teamName ""Boston Red Sox""@en .
  ?team dbp:stadium ?stadium .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
46,Show a list of soccer clubs that play in the Bundesliga.,"```sparql
SELECT DISTINCT ?clubName
WHERE {
  ?club rdf:type dbo:SoccerClub .
  ?club dbo:league ?league .
  ?league rdfs:label ""Bundesliga""@en .
  ?club rdfs:label ?clubName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
47,Which volcanos in Japan erupted since 2000?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?volcano
WHERE {
  ?volcano a dbo:Volcano ;
           dbo:eruptionYear ?year .
  FILTER (?year >= 2000 && ?year <= 2022)
  FILTER regex(str(?volcano), ""Japan"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
48,Which bridges cross the Seine?,"```sparql
SELECT DISTINCT ?bridgeName
WHERE {
  ?bridge a dbo:Bridge ;
          dbo:crosses <http://dbpedia.org/resource/Seine> ;
          rdfs:label ?bridgeName .
  FILTER (lang(?bridgeName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
49,What is the official color of the University of Oxford?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?color
WHERE {
  <http://dbpedia.org/resource/University_of_Oxford> dbo:officialSchoolColour ?color
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
50,How many films did Hal Roach produce?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:producer <http://dbpedia.org/resource/Hal_Roach> .
  ?film a dbo:Film .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
51,Give me all Danish movies.,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie a dbo:Film ;
         dbp:country ""Denmark""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
52,What is the most frequent cause of death?,"To find the most frequent cause of death, we can query DBpedia for the most common values of the property ""dbo:deathCause"" and count the occurrences. Here is a SPARQL query that can be used for this purpose:

```
SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
  ?person dbo:deathCause ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1
```

This query will return the cause of death with the highest frequency in the DBpedia dataset.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
53,Who are the four youngest MVP basketball players?,"To find the four youngest MVP basketball players, we can use the following SPARQL query:

```
SELECT DISTINCT ?player ?name ?birthDate
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:birthDate ?birthDate ;
          dbo:award ?award ;
          foaf:name ?name .
  ?award rdfs:label ""NBA Most Valuable Player Award""@en .
}
ORDER BY ?birthDate
LIMIT 4
```

This query retrieves the names and birth dates of basketball players who have won the NBA Most Valuable Player Award, and then sorts them by birth date to find the four youngest MVP basketball players.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
54,Give me all companies in Munich.,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:location dbr:Munich .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
55,Give me the capitals of all countries that the Himalayas run through.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?capital
WHERE {
  ?country dbo:country ?capital ;
           dbo:area ?area .
  ?mountain dbo:country ?country ;
            dbo:runsThrough <http://dbpedia.org/resource/Himalayas> .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
56,How many movies did Park Chan-wook direct?,"```sparql
SELECT (COUNT(?movie) AS ?numMovies)
WHERE {
  ?director a dbo:Person ;
            foaf:name ""Park Chan-wook"" ;
            dbo:director ?movie .
  ?movie a dbo:Film .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
57,Which rivers flow into a German lake?,"```sparql
SELECT DISTINCT ?river ?riverName ?lake ?lakeName
WHERE {
  ?river a dbo:River ;
         dbo:inflow ?lake ;
         dbo:country dbr:Germany .
  ?lake a dbo:Lake .
  ?river rdfs:label ?riverName .
  ?lake rdfs:label ?lakeName .
  FILTER(LANG(?riverName) = 'en' && LANG(?lakeName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
58,How many airlines are there?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
59,Give me all islands that belong to Japan.,"```sparql
SELECT DISTINCT ?island ?islandName
WHERE {
  ?island rdf:type dbo:Island ;
          dbo:country dbr:Japan ;
          rdfs:label ?islandName .
  FILTER (lang(?islandName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
60,How many inhabitants does Maribor have?,"```sparql
SELECT ?population
WHERE {
  dbr:Maribor dbo:populationTotal ?population
}
```
This SPARQL query retrieves the total population of Maribor from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
61,Give me all Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut dbo:mission dbr:Apollo_14 .
  ?astronaut a dbo:Person .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
62,Which companies have more than 1 million employees?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company dbo:numberOfEmployees ?numEmployees.
  FILTER (?numEmployees > 1000000)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?film
WHERE {
  ?film dbo:director ?director .
  ?film dbo:starring ?actor .
  ?director foaf:name ""Garry Marshall"" .
  ?actor foaf:name ""Julia Roberts"" .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
64,Give me all soccer clubs in the Premier League.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league ?league .
  ?league rdfs:label ""Premier League""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
65,What is the highest place of the Urals?,"The highest place in the Urals is Mount Narodnaya, with an elevation of 1,895 meters. 

Here is the SPARQL query to retrieve this information from DBpedia:

```
SELECT ?place ?elevation
WHERE {
  ?place rdf:type dbo:Mountain ;
         dbo:location dbr:Ural_Mountains ;
         dbp:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
66,Who is the governor of Wyoming?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governor
WHERE {
  ?state a dbo:State ;
         dbo:governor ?governor ;
         dbp:name ""Wyoming""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
67,Where did the architect of the Eiffel Tower study?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?universityName
WHERE {
  ?eiffelTower dbo:architect ?architect .
  ?architect foaf:isPrimaryTopicOf ?architectPage .
  ?architect dbo:almaMater ?university .
  ?university foaf:name ?universityName .
  FILTER (?architectPage = <http://dbpedia.org/resource/Gustave_Eiffel>)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
68,Give me all world heritage sites designated within the past two years.,"Based on the lexical entries provided, we can formulate the following SPARQL query to retrieve all world heritage sites designated within the past two years:

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?site ?siteLabel ?designationDate
WHERE {
  ?site a dbo:WorldHeritageSite ;
        dbo:designationDate ?designationDate .
  FILTER (YEAR(?designationDate) >= YEAR(NOW()) - 2)
  SERVICE <http://dbpedia.org/sparql> {
    ?site rdfs:label ?siteLabel .
    FILTER (LANG(?siteLabel) = 'en')
  }
}
ORDER BY DESC(?designationDate)
```

This query retrieves the world heritage sites along with their designation dates and filters the results to include only those designated within the past two years.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
69,Give me all actors who were born in Paris after 1950.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?actorName ?birthDate
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace/dbo:location <http://dbpedia.org/resource/Paris> ;
         dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) > 1950)
  ?actor foaf:name ?actorName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
70,Which movies star both Liz Taylor and Richard Burton?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
71,Give me all Australian nonprofit organizations.,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a <http://dbpedia.org/ontology/NonprofitOrganisation> ;
               dct:subject dbc:Non-profit_organisations_based_in_Australia .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
72,Which pope succeeded John Paul II?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  dbo:Pope_John_Paul_II dbo:succeededBy ?successor .
}
```
This SPARQL query retrieves the successor of Pope John Paul II from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
73,Give me all ESA astronauts.,"```sparql
SELECT DISTINCT ?astronaut ?name
WHERE {
  ?astronaut a dbo:Astronaut ;
             foaf:name ?name .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
74,Who was president of Pakistan in 1978?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?presidentName
WHERE {
  ?president dbo:office ?presidentOffice .
  ?presidentOffice dbo:incumbents ?presidentName .
  ?presidentOffice dbo:officeHolder ?presidentHolder .
  ?presidentHolder dbp:office ?officeTitle .
  FILTER (regex(str(?officeTitle), ""President of Pakistan"", ""i""))
  FILTER (year(?presidentOffice) = 1978)
}
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
75,Who is the owner of Rolls-Royce?,"```sparql
SELECT ?owner WHERE {
  dbr:Rolls-Royce dbo:owner ?owner .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
76,How many museums does Paris have?,"Based on the lexical entries provided, we can formulate a SPARQL query to find the number of museums in Paris using DBpedia:

```sparql
SELECT (COUNT(?museum) AS ?numMuseums)
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:Paris .
}
```

This query will count the number of museums in Paris by finding entities that are of type Museum and located in Paris.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
77,Where was JFK assassinated?,"The assassination of JFK took place in Dallas, Texas, United States.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
78,Give me all federal chancellors of Germany.,"```sparql
SELECT ?chancellor ?name
WHERE {
  ?chancellor a dbo:Chancellor ;
             dbo:birthPlace dbr:Germany ;
             foaf:name ?name .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
79,Show me everyone who was born on Halloween.,"```sparql
SELECT ?person ?name
WHERE {
  ?person dbo:birthDate ""10-31""^^xsd:date .
  ?person foaf:name ?name .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
80,Which beer originated in Ireland?,"```sparql
SELECT DISTINCT ?beer
WHERE {
  ?beer dbo:origin <http://dbpedia.org/resource/Ireland> .
  ?beer a dbo:Beer .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
81,To which countries does the Himalayan mountain system extend?,"```sparql
SELECT DISTINCT ?countryName
WHERE {
  ?mountainSystem dbo:wikiPageID 2097 .
  ?mountainSystem dbo:country ?country .
  ?country rdfs:label ?countryName .
  FILTER(LANG(?countryName) = """" || LANGMATCHES(LANG(?countryName), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
82,Which actors were born in Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace/dbo:country dbr:Germany .
}
LIMIT 100","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
83,How much carbs does peanut butter have?,"The following SPARQL query can be used to find the amount of carbohydrates in peanut butter:

```
SELECT ?carbsAmount
WHERE {
  dbr:Peanut_butter dbp:carbs ?carbsAmount
}
```

This query retrieves the value of the property ""carbs"" for the resource representing peanut butter (dbr:Peanut_butter) in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
84,Who produced the most films?,"```sparql
SELECT ?producer (COUNT(?film) AS ?numFilmsProduced)
WHERE {
  ?producer a dbo:Person ;
           dbo:producer ?film .
}
GROUP BY ?producer
ORDER BY DESC(?numFilmsProduced)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
85,How many employees does Google have?,"```sparql
SELECT ?numberOfEmployees
WHERE {
  dbpedia:Google dbo:numberOfEmployees ?numberOfEmployees
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
86,Give me all actors who were born in Berlin.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace/dbo:location <http://dbpedia.org/resource/Berlin> .
}
LIMIT 100","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
87,Who created Goofy?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?creator
WHERE {
  ?character dbo:creator ?creator ;
            dbo:wikiPageRedirects <http://dbpedia.org/resource/Goofy> .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
88,Which music albums contain the song Last Christmas?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?albumName
WHERE {
  ?song dbo:album ?album .
  ?song dbo:wikiPageID ?songID .
  ?album dbo:wikiPageID ?albumID .
  ?album dbo:artist ?artist .
  ?album dbo:wikiPageID ?albumID .
  ?album dbo:recordLabel ?recordLabel .
  ?album dbo:releaseDate ?releaseDate .
  ?album dbo:genre ?genre .
  ?album rdfs:label ?albumName .
  FILTER(CONTAINS(LCASE(?albumName), ""last christmas""))
}
LIMIT 10","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
89,When was Alberta admitted as province?,"The lexical entries provided seem to describe the verb ""admit"" and ""admitt"" in terms of their part of speech, canonical form, other forms, sense, condition, property domain, property range, reference, subject of property, object of property, and syntactic behavior. The information includes details such as the different forms of the verbs, the property domain being dbo:Settlement, the property range being xsd:date, and the syntactic behavior involving prepositional adjuncts and subjects.

To answer the user's question ""When was Alberta admitted as province?"", we can formulate a SPARQL query to retrieve the admission date of Alberta as a province from DBpedia. Here is the SPARQL query:

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?admissionDate
WHERE {
  ?alberta dbo:admittancedate ?admissionDate.
  FILTER regex(str(?alberta), ""Alberta"", ""i"")
}
```

This query searches for the admission date of Alberta as a province in DBpedia by looking for the entity related to Alberta and retrieving its admission date. The result will provide the date when Alberta was admitted as a province.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
90,How many missions does the Soyuz programme have?,"```sparql
SELECT (COUNT(?mission) AS ?numMissions)
WHERE {
  ?mission dct:type dbc:Soyuz_programme_missions .
}
```
This query counts the number of missions in the Soyuz programme.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
91,Give me all the TV shows with Neil Patrick Harris.,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris .
  ?show a dbo:TelevisionShow .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
92,When were the Hells Angels founded?,"```sparql
SELECT ?foundingDate
WHERE {
  dbr:Hells_Angels dbo:formationDate ?foundingDate
}
```
This SPARQL query retrieves the founding date of the Hells Angels from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
93,What is the net income of Apple?,"```sparql
SELECT ?netIncome
WHERE {
  ?company rdf:type dbo:Company ;
           foaf:name ""Apple Inc.""@en ;
           dbo:netIncome ?netIncome .
}
```
This SPARQL query retrieves the net income of Apple Inc. from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
94,Give me all Swedish holidays.,"```sparql
SELECT DISTINCT ?holidayLabel
WHERE {
  ?holiday rdf:type dbo:Holiday ;
           dbo:country dbr:Sweden ;
           rdfs:label ?holidayLabel .
  FILTER(LANG(?holidayLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
95,In which city was the former Dutch queen Juliana buried?,"```sparql
SELECT ?city WHERE {
  ?queen dbo:burialPlace ?city .
  ?queen dbo:birthPlace dbr:Juliana_of_the_Netherlands .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
96,List all the musicals with music by Leonard Bernstein.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical a dbo:Musical ;
           dbo:musicBy dbr:Leonard_Bernstein .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
97,Give me all companies in the advertising industry.,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:industry dbr:Advertising_industry .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
98,What is the largest metropolitan area in Washington state?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?metropolitanArea ?population
WHERE {
  ?metropolitanArea a dbo:City ;
                    dbo:country <http://dbpedia.org/resource/United_States> ;
                    dbo:populationTotal ?population ;
                    dbo:isPartOf <http://dbpedia.org/resource/Washington_(state)> .
}
ORDER BY DESC(?population)
LIMIT 1
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
99,Who killed John Lennon?,"The query to find out who killed John Lennon can be formulated as follows:

```
SELECT ?killer
WHERE {
  dbr:John_Lennon dbo:deathCause ?cause .
  ?cause dbo:perpetrator ?killer .
}
```

This query retrieves the killer of John Lennon by first identifying the cause of his death and then finding the perpetrator associated with that cause.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
100,Which writers studied in Istanbul?,"```sparql
SELECT DISTINCT ?writer
WHERE {
  ?writer a dbo:Writer ;
          dbo:education/dbo:location dbr:Istanbul .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
101,Give me all Australian metalcore bands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName
WHERE {
  ?band dbo:genre dbr:Metalcore ;
       dbo:country dbr:Australia ;
       rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
LIMIT 100
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
102,Which countries adopted the Euro?,"```sparql
SELECT DISTINCT ?countryName
WHERE {
  ?country a dbo:Country ;
           dbo:currency dbr:Euro .
  ?country rdfs:label ?countryName .
  FILTER(LANG(?countryName) = ""en"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
103,Give me all types of eating disorders.,"```sparql
SELECT DISTINCT ?eatingDisorderType
WHERE {
  ?eatingDisorderType a dbo:EatingDisorder .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
104,Was Marc Chagall a jew?,"To determine if Marc Chagall was Jewish, we can query DBpedia for information about his religion. We can use the following SPARQL query:

```
SELECT ?religionLabel
WHERE {
  <http://dbpedia.org/resource/Marc_Chagall> dbpedia-owl:religion ?religion .
  ?religion rdfs:label ?religionLabel .
  FILTER(langMatches(lang(?religionLabel), ""en""))
}
```

This query will retrieve the religion of Marc Chagall from DBpedia. If the result includes ""Judaism"" or any related term, then we can conclude that Marc Chagall was Jewish.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?minRank
WHERE {
  dbp:Brazil dbp:fifaMin ?minRank
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
106,How many films did Leonardo DiCaprio star in?,"```sparql
SELECT (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
107,Was Margaret Thatcher a chemist?,"To determine if Margaret Thatcher was a chemist, we can query DBpedia for information about her occupation. Here is a SPARQL query that can be used to find out if Margaret Thatcher was a chemist:

```
SELECT ?occupationLabel
WHERE {
  <http://dbpedia.org/resource/Margaret_Thatcher> dbo:occupation ?occupation.
  ?occupation rdfs:label ?occupationLabel.
  FILTER(LANG(?occupationLabel) = 'en')
}
```

This query retrieves the occupation of Margaret Thatcher from DBpedia and returns the label in English. If the occupation listed for Margaret Thatcher is ""chemist,"" then she was indeed a chemist.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
108,Which U.S. states are in the same time zone as Utah?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?state
WHERE {
  ?utah dbp:timeZone ?timeZone .
  ?state dbp:timeZone ?timeZone .
  ?state a dbo:State .
  FILTER (?state != <http://dbpedia.org/resource/Utah>)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
109,Give me all books written by Danielle Steel.,"```sparql
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Danielle_Steel .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
110,Which country has the most official languages?,"```sparql
SELECT ?country (COUNT(?language) AS ?numLanguages)
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
}
GROUP BY ?country
ORDER BY DESC(?numLanguages)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
111,What is the total amount of men and women serving in the FDNY?,"Based on the lexical entries provided, we can construct a SPARQL query to find the total amount of men and women serving in the FDNY:

```sparql
SELECT (SUM(?maleCount) as ?totalMen) (SUM(?femaleCount) as ?totalWomen)
WHERE {
  ?fdny a dbo:Fire_Department .
  ?fdny dbp:employees ?employees .
  
  {
    SELECT (COUNT(?person) as ?maleCount) WHERE {
      ?person a dbo:Person .
      ?person dbo:occupation ?fdny .
      ?person foaf:gender ""male"" .
    }
  }
  
  {
    SELECT (COUNT(?person) as ?femaleCount) WHERE {
      ?person a dbo:Person .
      ?person dbo:occupation ?fdny .
      ?person foaf:gender ""female"" .
    }
  }
}
```

This query first selects the FDNY organization from DBpedia and retrieves the total count of male and female employees serving in the FDNY by counting the number of male and female persons with the occupation of the FDNY. The results will provide the total number of men and women serving in the FDNY.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
112,Which actor played Chewbacca?,"```sparql
SELECT DISTINCT ?actorName
WHERE {
  ?actor dbp:character ?character ;
         foaf:name ?actorName .
  FILTER(STR(?character) = ""Chewbacca"")
}
```
This query retrieves the name of the actor who played the character Chewbacca.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
113,Give me all libraries established earlier than 1400.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?library ?establishedYear
WHERE {
  ?library a dbo:Library ;
           dbp:established ?establishedYear .
  FILTER (?establishedYear < ""1400""^^xsd:gYear)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
114,Which programming languages were influenced by Perl?,"```sparql
SELECT DISTINCT ?languageName
WHERE {
  ?language dbo:influenced <http://dbpedia.org/resource/Perl> .
  ?language rdfs:label ?languageName .
  FILTER (lang(?languageName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
115,In which U.S. state is Mount McKinley located?,"Based on the lexical entries provided, we can construct a SPARQL query to find the U.S. state where Mount McKinley is located. Mount McKinley is also known as Denali, so we will use both names in the query to ensure we retrieve the correct information. Here is the SPARQL query:

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?stateName
WHERE {
  { dbr:Mount_McKinley dbo:locatedInArea ?state. }
  UNION
  { dbr:Denali dbo:locatedInArea ?state. }
  ?state dbo:locatedInArea ?stateName.
  ?stateName a dbo:State.
}
```

This query retrieves the U.S. state where Mount McKinley (or Denali) is located by finding the state that is located in the same area as Mount McKinley and is of type dbo:State.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
116,What airlines are part of the SkyTeam alliance?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?airlineName
WHERE {
  ?airline dbo:alliance <http://dbpedia.org/resource/SkyTeam> .
  ?airline dbo:type dbo:Airline .
  ?airline rdfs:label ?airlineName .
  FILTER(LANG(?airlineName) = """" || LANGMATCHES(LANG(?airlineName), ""en""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
117,Which ships were called after Benjamin Franklin?,"```sparql
SELECT ?ship
WHERE {
  ?ship dbp:shipNamesake dbr:Benjamin_Franklin .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
118,Give me all Methodist politicians.,"```sparql
SELECT DISTINCT ?politician ?politicianName
WHERE {
  ?politician a dbo:Politician ;
             dbo:party ?party ;
             rdfs:label ?politicianName .
  ?party dbo:wikiPageRedirects* dbr:Methodism .
  FILTER (lang(?politicianName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
119,What other books have been written by the author of The Fault in Our Stars?,"```sparql
SELECT DISTINCT ?otherBook
WHERE {
  ?author foaf:name ""John Green""@en .
  ?otherBook dbo:author ?author .
  FILTER (?otherBook != <http://dbpedia.org/resource/The_Fault_in_Our_Stars>)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
120,What is the highest mountain?,"```sparql
SELECT ?mountain ?mountainName ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
  ?mountain rdfs:label ?mountainName .
  FILTER(lang(?mountainName) = 'en')
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
121,Which poet wrote the most books?,"```sparql
SELECT ?poet (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a dbo:Person ;
        dbo:author ?book .
}
GROUP BY ?poet
ORDER BY DESC(?numBooks)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
122,Which programming languages influenced Javascript?,"```sparql
SELECT DISTINCT ?influencingLanguage
WHERE {
  ?influencingLanguage dbo:influenced dbo:JavaScript .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
123,Which musician wrote the most books?,"```sparql
SELECT ?musician ?musicianName (COUNT(?book) AS ?numBooks)
WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:author ?book .
  ?book a dbo:Book .
  ?musician foaf:name ?musicianName .
}
GROUP BY ?musician ?musicianName
ORDER BY DESC(?numBooks)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
124,Which films starring Clint Eastwood did he direct himself?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?filmTitle
WHERE {
  ?film dbo:director <http://dbpedia.org/resource/Clint_Eastwood> ;
        dbo:starring <http://dbpedia.org/resource/Clint_Eastwood> ;
        rdf:type dbo:Film ;
        rdfs:label ?filmTitle .
  FILTER (langMatches(lang(?filmTitle), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
125,Which software has been developed by organizations founded in California?,"```sparql
SELECT DISTINCT ?software
WHERE {
  ?org dbo:location dbr:California .
  ?org dbo:product ?software .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
126,Which instruments does Cat Stevens play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?instrument
WHERE {
  dbo:Cat_Stevens dbo:instrument ?instrument
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
127,How many airlines are members of the Star Alliance?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline rdf:type dbo:Airline ;
           dbo:alliance dbr:Star_Alliance .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
128,Give me all actors called Baldwin.,"```sparql
SELECT DISTINCT ?actorName
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?actorName .
  FILTER regex(?actorName, ""Baldwin"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
129,Who wrote The Hunger Games?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author
WHERE {
  ?book dbo:author ?author ;
        dbp:title ""The Hunger Games""@en .
}
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
130,For which label did Elvis record his first album?,"```sparql
SELECT ?label
WHERE {
  ?album dbo:artist dbr:Elvis_Presley ;
        dbo:releaseDate ?date ;
        rdfs:label ?label .
  FILTER (?date = (SELECT MIN(?date) WHERE { ?album dbo:artist dbr:Elvis_Presley ; dbo:releaseDate ?date }))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
131,Is Christian Bale starring in Batman Begins?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor ;
        rdfs:label ""Batman Begins""@en .
  ?actor rdfs:label ""Christian Bale""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
132,Where is the residence of the prime minister of Spain?,The residence of the Prime Minister of Spain is the Palacio de la Moncloa.,"Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
133,Which actor was casted in the most movies?,"```sparql
SELECT ?actor (COUNT(?movie) AS ?numMovies)
WHERE {
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
}
GROUP BY ?actor
ORDER BY DESC(?numMovies)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
134,Which countries have more than two official languages?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?lang .
  {
    SELECT ?country (COUNT(?lang) AS ?numLanguages) WHERE {
      ?country a dbo:Country ;
               dbo:officialLanguage ?lang .
    } GROUP BY ?country
  }
  FILTER(?numLanguages > 2)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
135,Which countries have more than ten caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?cave a dbo:Cave .
  ?cave dbo:location ?country .
} 
GROUP BY ?country
HAVING (COUNT(?cave) > 10)
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song
WHERE {
  ?song dbo:artist dbr:Bruce_Springsteen ;
        dbo:releaseDate ?date .
  FILTER (YEAR(?date) >= 1980 && YEAR(?date) <= 1990)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
137,Which television shows were created by John Cleese?,"```sparql
SELECT DISTINCT ?showName
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show rdf:type dbo:TelevisionShow .
  ?show rdfs:label ?showName .
  FILTER (lang(?showName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
138,When did Latvia join the EU?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?date
WHERE {
  dbo:Latvia dbp:accessioneudate ?date
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
139,Which soccer players were born on Malta?,"```sparql
SELECT DISTINCT ?playerName
WHERE {
  ?player rdf:type dbo:SoccerPlayer ;
          dbo:birthPlace/dbo:country dbr:Malta ;
          foaf:name ?playerName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
140,How many politicians graduated from Columbia University?,"```sparql
SELECT (COUNT(?politician) AS ?countPoliticians)
WHERE {
  ?politician a dbo:Politician ;
              dbo:almaMater dbr:Columbia_University .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
141,Give me the birthdays of all actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?birthday
WHERE {
  ?show dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
  FILTER regex(str(?show), ""Charmed"", ""i"")
}
ORDER BY ?actor
LIMIT 100","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
142,Which telecommunications organizations are located in Belgium?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?organization
WHERE {
  ?organization a dbo:Organisation ;
               dbo:location dbr:Belgium ;
               dbo:industry dbr:Telecommunications .
}
LIMIT 10
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
143,Give me a list of all lakes in Denmark.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lake
WHERE {
  ?lake a dbo:Lake ;
        dbo:country dbr:Denmark .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
144,How many children does Eddie Murphy have?,"```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
SELECT (COUNT(?child) as ?numChildren)
WHERE {
  dbpedia:Eddie_Murphy dbpedia:children ?child .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
145,Show me all English Gothic buildings in Kent.,"```sparql
SELECT DISTINCT ?building
WHERE {
  ?building a dbo:Building ;
           dbo:location dbr:Kent ;
           dbo:architecturalStyle dbr:English_Gothic_architecture .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
146,Who is the manager of Real Madrid?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager
WHERE {
  dbo:Real_Madrid dbo:manager ?manager .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
147,In which countries can you pay using the West African CFA franc?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?country
WHERE {
  ?country dbo:currency <http://dbpedia.org/resource/West_African_CFA_franc> .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
148,Which holidays are celebrated around the world?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?holiday
WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:Holiday ?holiday .
}
LIMIT 100
This SPARQL query retrieves a list of holidays celebrated around the world by querying DBpedia for countries and their associated holidays.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
149,What is the longest river?,"```sparql
SELECT ?river ?riverName ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
  ?river rdfs:label ?riverName .
  FILTER (lang(?riverName) = 'en')
}
ORDER BY DESC(?length)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
150,Which organizations were founded in 1930?,"```sparql
SELECT DISTINCT ?organization ?organizationName
WHERE {
  ?organization a dbo:Organisation ;
               dbo:foundingYear ""1930""^^xsd:gYear ;
               rdfs:label ?organizationName .
  FILTER(LANG(?organizationName) = """" || LANGMATCHES(LANG(?organizationName), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
151,What is the birth name of Angela Merkel?,"```sparql
SELECT ?birthName
WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName
}
```
This SPARQL query retrieves the birth name of Angela Merkel from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
152,Who has Tom Cruise been married to?,"To find out who Tom Cruise has been married to, we can use the following SPARQL query:

```
SELECT ?spouseName
WHERE {
  dbpedia:Tom_Cruise dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```

This query retrieves the names of all the spouses of Tom Cruise from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
153,Which weapons did Heckler & Koch develop?,"```sparql
SELECT DISTINCT ?weaponName
WHERE {
  ?company dbo:developer dbr:Heckler_&_Koch ;
           dbo:product ?weapon .
  ?weapon rdfs:label ?weaponName .
  FILTER (lang(?weaponName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
154,What is the smallest city by area in Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city ?area
WHERE {
  ?city a dbo:City ;
        dbo:country <http://dbpedia.org/resource/Germany> ;
        dbo:areaTotal ?area .
}
ORDER BY ASC(?area)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
155,What is the ruling party in Lisbon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyName
WHERE {
  ?city dbo:leaderParty ?party .
  ?city dbo:isPartOf <http://dbpedia.org/resource/Lisbon> .
  ?party dbp:name ?partyName .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
156,How heavy is Jupiter's lightest moon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?moon ?mass
WHERE {
  ?moon dbo:satelliteOf <http://dbpedia.org/resource/Jupiter> .
  ?moon dbo:mass ?mass .
}
ORDER BY ASC(?mass)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
157,How many employees does IBM have?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?numberOfEmployees
WHERE {
  dbo:IBM dbo:numberOfEmployees ?numberOfEmployees
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
158,List all episodes of the first season of the HBO television series The Sopranos!,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?episode
WHERE {
  ?series dbo:seasonNumber ""1"" .
  ?episode dbo:series ?series .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
159,What does ICRO stand for?,"The query to find what ICRO stands for in DBpedia can be formulated as follows:

```
SELECT ?definition
WHERE {
  ?icro dbo:abbreviation ""ICRO"" .
  ?icro rdfs:comment ?definition .
}
```

This query will search for a resource in DBpedia with the abbreviation ""ICRO"" and retrieve its comment, which should contain the expansion of the abbreviation.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?newEpisodes ?oldEpisodes
WHERE {
  ?newSeries dbo:workTitle ""Battlestar Galactica""@en ;
            dbo:numberOfEpisodes ?newEpisodes .
  
  ?oldSeries dbo:workTitle ""Battlestar Galactica (1978 TV series)""@en ;
             dbo:numberOfEpisodes ?oldEpisodes .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
161,Give me all films produced by Hal Roach.,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?film
WHERE {
  ?film dbo:producer <http://dbpedia.org/resource/Hal_Roach> .
  ?film a dbo:Film .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
162,Who played Agent Smith in Matrix?,"To find out who played Agent Smith in the movie ""The Matrix,"" you can use the following SPARQL query:

```
SELECT ?actorName
WHERE {
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  FILTER regex(?actorName, ""Agent Smith"", ""i"")
  FILTER regex(?film, ""The Matrix"", ""i"")
}
```

This query will search for actors who played a character with the name ""Agent Smith"" in a film with the title ""The Matrix.""","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
163,Which Greek parties are pro-European?,"```sparql
SELECT DISTINCT ?partyLabel
WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:ideology dbr:Pro-European ;
         dct:subject dbc:Political_parties_in_Greece .
  ?party rdfs:label ?partyLabel .
  FILTER (lang(?partyLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
164,Give me a list of all bandleaders that play trumpet.,"Based on the provided lexical entries, we can construct a SPARQL query to find bandleaders who play the trumpet. Here is the query:

```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet .
}
```

This query selects all distinct bandleaders who are instances of dbo:Person and play the trumpet according to the dbo:instrument property.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
165,What is the second highest mountain on Earth?,"```sparql
SELECT DISTINCT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 2
OFFSET 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
166,Is Egypts largest city also its capital?,"```sparql
SELECT ?capital ?largestCity
WHERE {
  dbr:Egypt dbo:capital ?capital ;
            dbo:largestCity ?largestCity .
}
```
This query retrieves the capital and largest city of Egypt from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
167,Which rockets were launched from Baikonur?,"```sparql
SELECT DISTINCT ?rocketName
WHERE {
  ?rocket dct:subject dbc:Rockets_launched_from_Baikonur_Cosmodrome.
  ?rocket rdfs:label ?rocketName.
  FILTER (lang(?rocketName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
168,How many programming languages are there?,"To determine the number of programming languages, we can query DBpedia for the count of distinct instances of programming languages. Here is the SPARQL query for this:

```sparql
SELECT (COUNT(DISTINCT ?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage
}
```

This query will return the total count of distinct programming languages listed in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
169,Which Chess players died in the same place they were born in?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?player ?birthPlace ?deathPlace
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
170,Who is the owner of Facebook?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner
WHERE {
  dbo:Facebook dbo:foundedBy ?owner .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
171,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie a dbo:Film .
}
LIMIT 100","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
172,In which U.S. state is Fort Knox located?,"```sparql
SELECT ?stateLabel
WHERE {
  ?fortKnox dbo:location dbr:Fort_Knox .
  ?fortKnox dbo:location ?state .
  ?state rdf:type dbo:State .
  ?state rdfs:label ?stateLabel .
  FILTER(LANG(?stateLabel) = 'en')
}
```
This SPARQL query retrieves the U.S. state where Fort Knox is located by finding the state where Fort Knox is located and then retrieving the label of that state.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"```sparql
SELECT DISTINCT ?cityName
WHERE {
  ?city rdf:type dbo:City ;
        dbo:isPartOf <http://dbpedia.org/resource/New_Jersey> ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
  ?city rdfs:label ?cityName .
  FILTER (lang(?cityName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
174,Which mountains are higher than the Nanga Parbat?,"```sparql
SELECT DISTINCT ?higherMountain ?elevation
WHERE {
  ?higherMountain a dbo:Mountain ;
                 dbo:elevation ?elevation .
  FILTER (?elevation > (SELECT ?elevationNangaParbat WHERE {
                          ?nangaParbat dbo:wikiPageID 20968 ;
                                       dbo:elevation ?elevationNangaParbat
                        }))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
175,Give me all B-sides of the Ramones.,"```sparql
SELECT ?bSide
WHERE {
  ?album dbo:artist dbr:Ramones ;
         dbo:bSide ?bSide .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
176,What are the specialities of the UNC Health Care?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?specialities
WHERE {
  <http://dbpedia.org/resource/UNC_Health_Care> dbp:speciality ?specialities
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
177,When was Olof Palme shot?,"The query to find out when Olof Palme was shot can be formulated as follows:

```
SELECT ?date
WHERE {
  dbr:Olof_Palme dbo:deathDate ?date .
}
```

This query retrieves the death date of Olof Palme, which corresponds to the date he was shot.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
178,List the seven kings of Rome.,"To list the seven kings of Rome, we can use the following SPARQL query:

```
SELECT ?king ?name
WHERE {
  ?king a dbo:Monarch ;
        dbo:reignStart ?start ;
        dbo:reignEnd ?end ;
        foaf:name ?name .
  FILTER (?start < ""753-01-01""^^xsd:date && ?end > ""509-01-01""^^xsd:date)
}
ORDER BY ?start
LIMIT 7
```

This query retrieves the names of the seven kings of Rome by selecting monarchs who reigned between the traditional founding date of Rome (753 BC) and the establishment of the Roman Republic (509 BC).","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
179,Give me all people that were born in Vienna and died in Berlin.,"```sparql
SELECT DISTINCT ?person ?personName
WHERE {
  ?person dbo:birthPlace dbr:Vienna ;
         dbo:deathPlace dbr:Berlin ;
         rdf:type dbo:Person ;
         rdfs:label ?personName .
  FILTER (LANG(?personName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
180,Is Darth Vader Luke’s father?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  dbo:Luke_Skywalker dbo:child ?father .
  ?father dbo:child dbo:Darth_Vader .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
181,Show me all the breweries in Australia.,"```sparql
SELECT DISTINCT ?brewery ?breweryName
WHERE {
  ?brewery a dbo:Brewery ;
          dbo:location dbr:Australia ;
          rdfs:label ?breweryName .
  FILTER (lang(?breweryName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?film
WHERE {
  ?film dbo:director <http://dbpedia.org/resource/Steven_Spielberg> ;
        dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
183,Give me all soccer clubs in Spain.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
       dbo:ground ?ground .
  ?ground dbo:location dbr:Spain .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
184,Who produced films starring Natalie Portman?,"```sparql
SELECT DISTINCT ?producer
WHERE {
  ?film dbo:starring dbr:Natalie_Portman ;
       dbo:producer ?producer .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
185,Give me all breeds of the German Shepherd dog.,"```sparql
SELECT DISTINCT ?breedLabel
WHERE {
  ?breed rdf:type dbo:DogBreed ;
         rdfs:label ?breedLabel ;
         dbo:origin ?origin .
  FILTER(REGEX(?origin, ""German Shepherd"", ""i""))
}
```
This SPARQL query retrieves all breeds of dogs that have ""German Shepherd"" in their origin information from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
186,Who is the heaviest player of the Chicago Bulls?,"```sparql
SELECT ?player ?weight
WHERE {
  ?player dbo:team dbr:Chicago_Bulls ;
          dbo:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
187,Which languages are spoken in Estonia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?language
WHERE {
  dbo:Estonia dbo:spokenIn ?language.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
188,What is the largest country in the world?,The largest country in the world based on total area is Russia.,"Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
189,What is the largest city in america?,"The largest city in America is New York City. 

SPARQL query:
```
SELECT ?cityName
WHERE {
  ?country a dbo:Country ;
           dbo:largestCity ?city .
  ?city rdfs:label ?cityName .
  FILTER (lang(?cityName) = 'en')
  FILTER (?country = dbr:United_States)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
190,Who was the pope that founded the Vatican Television?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?popeName
WHERE {
  ?pope a dbo:Pope ;
        dbo:foundedBy ?organization .
  ?organization foaf:name ""Vatican Television"" .
  ?pope foaf:name ?popeName .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
191,Who discovered Ceres?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?discoverer
WHERE {
  dbr:Ceres dbo:discoverer ?discoverer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
192,Who is the king of the Netherlands?,"```sparql
SELECT ?king
WHERE {
  ?king a dbo:Person ;
        dbo:leader dbr:Willem-Alexander_of_the_Netherlands .
}
```
This SPARQL query retrieves the king of the Netherlands, who is Willem-Alexander of the Netherlands.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
193,Is Cola a beverage?,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?beverage a dbo:Beverage ;
            rdfs:label ?label .
  FILTER (lang(?label) = 'en' && regex(?label, ""Cola"", ""i""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?almaMater
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?almaMater .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
195,Who wrote the book Les Piliers de la terre?,"The book ""Les Piliers de la terre"" was written by Ken Follett. 

SPARQL query:
```
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Les Piliers de la terre""@fr .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
196,Which airports does Yeti Airlines serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?airportName
WHERE {
  ?airline dbo:targetAirport ?airport .
  ?airport dbo:wikiPageWikiLink dbr:Yeti_Airlines .
  ?airport rdfs:label ?airportName .
  FILTER(LANG(?airportName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
197,Where is the birthplace of Goethe?,"The birthplace of Goethe is Frankfurt, Germany. 

Here is the SPARQL query to retrieve this information from DBpedia:

```
SELECT ?birthplaceLabel
WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace.
  ?birthplace rdfs:label ?birthplaceLabel.
  FILTER(LANG(?birthplaceLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"```sparql
SELECT ?event1 ?event2
WHERE {
  ?event1 a dbo:MilitaryConflict ;
          rdfs:label ""Cuban Missile Crisis""@en ;
          dbo:startDate ?date1 .
  ?event2 a dbo:MilitaryConflict ;
          rdfs:label ""Bay of Pigs Invasion""@en ;
          dbo:startDate ?date2 .
  FILTER (?date1 < ?date2)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
199,Which ingredients do I need for carrot cake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ingredientName
WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient .
  ?ingredient rdfs:label ?ingredientName .
  FILTER(LANG(?ingredientName) = """" || LANGMATCHES(LANG(?ingredientName), ""en""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
200,Who created Wikipedia?,"The query to find out who created Wikipedia can be formulated as follows:

```sparql
SELECT ?creator
WHERE {
  dbr:Wikipedia dct:creator ?creator .
}
```

This SPARQL query retrieves the creator of Wikipedia by searching for the creator (dct:creator) of the Wikipedia resource (dbr:Wikipedia) in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
201,What is the highest mountain in Saxony Germany?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:country dbr:Saxony_Germany ;
            dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```
This SPARQL query retrieves the mountain in Saxony, Germany with the highest elevation.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
202,Who is the current federal minister of finance in Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?minister
WHERE {
  ?minister a dbo:Person ;
           dbo:position/dbo:incumbentAt/dbo:Germany ;
           dbo:title ?title .
  FILTER(REGEX(?title, ""Federal Minister of Finance"", ""i""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
203,In which country is Mecca located?,"```sparql
SELECT ?countryName 
WHERE {
  ?place dbp:location dbr:Mecca ;
         dbo:country ?country .
  ?country rdfs:label ?countryName .
  FILTER(LANG(?countryName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
204,Who played Gus Fring in Breaking Bad?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actorName
WHERE {
  ?actor dbo:starring <http://dbpedia.org/resource/Breaking_Bad> ;
        dbo:character <http://dbpedia.org/resource/Gus_Fring> ;
        foaf:name ?actorName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
205,In which country does the Nile start?,"```sparql
SELECT ?country
WHERE {
  ?river dbo:sourceCountry ?country ;
        dbo:riverName ""Nile""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
206,In which state Penn State University is located?,"Based on the lexical entry provided, we can formulate a SPARQL query to find the state where Penn State University is located. Here is the SPARQL query:

```sparql
SELECT ?state
WHERE {
  dbr:Pennsylvania_State_University dbo:state ?state.
}
```

This query will retrieve the state where Penn State University is located by querying the DBpedia dataset.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
207,What is the biggest stadium in Spain?,"```sparql
SELECT ?stadium ?stadiumName ?capacity
WHERE {
  ?stadium a dbo:Stadium ;
           dbo:country dbr:Spain ;
           dbo:seatingCapacity ?capacity .
  FILTER NOT EXISTS { 
    ?otherStadium a dbo:Stadium ;
                 dbo:country dbr:Spain ;
                 dbo:seatingCapacity ?otherCapacity .
    FILTER (?otherCapacity > ?capacity)
  }
  ?stadium rdfs:label ?stadiumName .
  FILTER(LANG(?stadiumName) = 'en')
}
LIMIT 1
```
This SPARQL query retrieves the biggest stadium in Spain by selecting the stadium in Spain with the highest seating capacity.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
208,Who is the coach of Ankara's ice hockey team?,"```sparql
SELECT ?coachName
WHERE {
  ?team dbo:city dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
  ?coach foaf:name ?coachName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
209,How large is the area of UK?,"The area of the UK is approximately 243,610 square kilometers.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
210,Who created Batman?,The character Batman was created by Bob Kane and Bill Finger.,"Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
211,Was Sigmund Freud married?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  dbo:Sigmund_Freud dbo:spouse ?spouse
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
212,Who are the developers of DBpedia?,"```sparql
SELECT DISTINCT ?developer
WHERE {
  ?dbpedia a dbo:Software ;
           dbo:developer ?developer .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
213,Give me all movies directed by Francis Ford Coppola.,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
  ?movie rdf:type dbo:Film .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
214,Are tree frogs a type of amphibian?,"Yes, tree frogs are a type of amphibian. 

SPARQL query:
```
SELECT ?typeLabel
WHERE {
  dbr:Tree_frog dct:subject dbc:Amphibians ;
                 dct:subject ?type .
  ?type rdfs:label ?typeLabel .
  FILTER(LANG(?typeLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
215,What is the location of the Houses of Parliament?,"The location of the Houses of Parliament is in Westminster, London, United Kingdom. 

SPARQL query:
```
SELECT ?location
WHERE {
  dbr:Houses_of_Parliament dbo:location ?location .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
216,how much is the elevation of Düsseldorf Airport ?,"The elevation of Düsseldorf Airport is 44 meters. 

Here is the SPARQL query to retrieve this information from DBpedia:

```
SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
217,How much is the population of mexico city ?,"The population of Mexico City can be retrieved using the following SPARQL query:

```
SELECT ?population
WHERE {
  dbr:Mexico_City dbo:populationTotal ?population .
}
```

This query will return the total population of Mexico City.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
218,when was the founding date of french fifth republic?,"The founding date of the French Fifth Republic is October 4, 1958. 

SPARQL query:
```
SELECT ?foundingDate
WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?foundingDate
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
219,Who was the first King of England?,"```sparql
SELECT ?king ?kingName
WHERE {
  ?king a dbo:Monarch ;
        dbo:reignStart ?start ;
        dbo:reignEnd ?end ;
        dbo:title dbr:King_of_England ;
        foaf:name ?kingName .
  FILTER (?start < ""1066-01-01""^^xsd:date)
}
ORDER BY ?start
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
220,Who is the editor of Forbes?,"The editor of Forbes is Randall Lane. 

Here is the SPARQL query to retrieve this information from DBpedia:

```
SELECT ?editorName
WHERE {
  ?forbes dbo:magazine ""Forbes"" .
  ?forbes dbo:editor ?editor .
  ?editor foaf:name ?editorName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
221,Which awards did Douglas Hofstadter win?,"```sparql
SELECT ?award
WHERE {
  ?person dbo:award ?award .
  FILTER(?person = dbr:Douglas_Hofstadter)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
222,Who is the youngest Darts player?,"To find the youngest darts player, we can use the following SPARQL query:

```
SELECT ?player ?name ?birthDate
WHERE {
  ?player a dbo:DartsPlayer .
  ?player foaf:name ?name .
  ?player dbo:birthDate ?birthDate .
}
ORDER BY ASC(?birthDate)
LIMIT 1
```

This query retrieves the darts player who has the earliest birth date, indicating the youngest player.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
223,Is horse racing a sport?,"```sparql
SELECT ?sportLabel
WHERE {
  ?sport a dbo:Sport ;
         rdfs:label ?sportLabel .
  FILTER(REGEX(?sportLabel, ""horse racing"", ""i""))
}
```
This query retrieves the label of sports related to ""horse racing"" from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
224,Which river does the Brooklyn Bridge cross?,"```sparql
SELECT ?river
WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
  ?river a dbo:River .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
225,How many people live in Poland?,"The following SPARQL query can be used to find the population of Poland from DBpedia:

```
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/populationTotal> ?population
}
```

This query retrieves the total population of Poland from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
226,When was the last episode of the TV series Friends aired?,"```sparql
SELECT ?airDate
WHERE {
  ?tvSeries dbo:series ?series .
  ?series foaf:name ""Friends""@en .
  ?episode dbo:series ?series .
  ?episode dbo:airDate ?airDate .
}
ORDER BY DESC(?airDate)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
227,Is the wife of president Obama called Michelle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?wifeName
WHERE {
  ?president dbo:spouse ?wife .
  ?president foaf:name ""Barack Obama""@en .
  ?wife foaf:name ?wifeName .
}
LIMIT 1
The query above retrieves the name of the wife of President Barack Obama from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
229,Who is 8th president of US?,The 8th president of the United States is Martin Van Buren.,"Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
230,how much is the total population of  european union?,"The total population of the European Union can be retrieved using the following SPARQL query:

```
SELECT ?population
WHERE {
  dbr:European_Union dbo:populationTotal ?population .
}
```

This query will return the total population of the European Union.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
231,Give me all launch pads operated by NASA.,"```sparql
SELECT DISTINCT ?launchPad
WHERE {
  ?launchPad a dbo:LaunchPad ;
             dbo:operator <http://dbpedia.org/resource/NASA> .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
232,Who developed the video game World of Warcraft?,"The video game World of Warcraft was developed by Blizzard Entertainment. 

SPARQL query:
```
SELECT ?developer
WHERE {
  ?game dbo:developer ?developer ;
       rdfs:label ""World of Warcraft""@en .
  ?developer a dbo:Company .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
233,What is the birth name of Adele?,"```sparql
SELECT ?birthName
WHERE {
  dbr:Adele dbp:birthName ?birthName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
234,What is the population of Cairo?,"The SPARQL query to retrieve the population of Cairo from DBpedia is:

```
SELECT ?population
WHERE {
  dbr:Cairo dbo:populationTotal ?population .
}
```

This query will return the population of Cairo as specified in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
235,Is Frank Herbert still alive?,"```sparql
SELECT ?person ?name ?birthdate ?deathdate
WHERE {
  ?person a dbo:Person ;
          foaf:name ?name ;
          dbo:birthDate ?birthdate .
  OPTIONAL { ?person dbo:deathDate ?deathdate }
  FILTER (?name = ""Frank Herbert"")
}
```
This query checks if Frank Herbert is still alive by retrieving his birth date and death date from DBpedia. If the death date is not provided, it means he is still alive.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
236,What is the last work of Dan Brown?,"To find the last work of Dan Brown, we can use the following SPARQL query:

```
SELECT ?workLabel
WHERE {
  ?author rdfs:label ""Dan Brown""@en ;
          dbo:notableWork ?work .
  ?work rdfs:label ?workLabel .
}
ORDER BY DESC(?work)
LIMIT 1
```

This query retrieves the notable works of Dan Brown and selects the most recent one by ordering them in descending order and limiting the result to 1.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
237,Where is Sungkyunkwan University?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?location
WHERE {
  dbr:Sungkyunkwan_University dbo:location ?location .
}
```
This SPARQL query retrieves the location of Sungkyunkwan University from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
238,Who is the author of the interpretation of dreams?,"The author of ""The Interpretation of Dreams"" is Sigmund Freud. 

SPARQL query:
```
SELECT ?author
WHERE {
  ?work dbo:author dbr:Sigmund_Freud ;
        rdfs:label ""The Interpretation of Dreams""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
239,When was the death  of  Shakespeare?,"The death date of Shakespeare is April 23, 1616.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
241,Who developed Slack?,"The company Slack was developed by Stewart Butterfield, Eric Costello, Cal Henderson, and Serguei Mourachov.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
242,Where is the origin of Carolina reaper?,The origin of the Carolina Reaper pepper is in the United States.,"Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
243,In which year was Rachel Stevens born?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthYear
WHERE {
  dbo:Rachel_Stevens dbo:birthYear ?birthYear
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
244,How often did Jane Fonda marry?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT (COUNT(?spouse) as ?marriageCount)
WHERE {
  <http://dbpedia.org/resource/Jane_Fonda> dbo:spouse ?spouse .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
245,Was the wife of president Lincoln called Mary?,The wife of President Lincoln was indeed called Mary.,"Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
246,Which cities does the Weser flow through?,"```sparql
SELECT DISTINCT ?cityName
WHERE {
  ?river dbo:city ?city .
  ?city a dbo:City ;
        rdfs:label ?cityName .
  FILTER regex(str(?river), ""Weser"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
247,In which programming language is GIMP written?,"```sparql
SELECT ?language
WHERE {
  <http://dbpedia.org/resource/GIMP> dbo:programmingLanguage ?language .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
248,Which university did Angela Merkel attend?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?university
WHERE {
  ?person foaf:name ""Angela Merkel""@en .
  ?person dbo:almaMater ?university .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
249,List all the musicals with music by Elton John.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:musicBy dbr:Elton_John .
  ?musical a dbo:Musical .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
250,How many Aldi stores are there?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT (SUM(?numberOfLocations) AS ?totalStores)
WHERE {
  ?company a dbo:Company ;
           dbo:numberOfLocations ?numberOfLocations .
}
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
251,What is the longest river in the world?,"```sparql
SELECT ?river ?length
WHERE {
  ?river a dbo:River ;
         dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
252,When was John Adams born?,"```sparql
SELECT ?birthdate
WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthdate
}
```
This SPARQL query retrieves the birthdate of John Adams from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
253,Which companies produce hovercrafts?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:product/dbo:automobileType/dbo:Hovercraft .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
254,Who was the wife of U.S. president Lincoln?,"The wife of U.S. President Lincoln was Mary Todd Lincoln. 

SPARQL query:
```
SELECT ?wife
WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
  ?wife a dbo:Person .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
255,Which species does an elephant belong?,"```sparql
SELECT ?speciesLabel
WHERE {
  ?elephant rdf:type dbo:Animal ;
            dbo:species ?species .
  ?species rdfs:label ?speciesLabel .
  FILTER (LANG(?speciesLabel) = 'en')
}
```
This SPARQL query retrieves the species of an elephant by searching for animals that have a species property and then filtering the results to display the English labels of the species.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
256,How many people live in the capital of Australia?,"Based on the lexical entries provided, we can construct a SPARQL query to find out how many people live in the capital of Australia, which is Canberra:

```sparql
SELECT ?population
WHERE {
  ?capital dbo:country dbr:Australia ;
          dbo:populationTotal ?population .
  FILTER regex(str(?capital), ""Canberra"", ""i"")
}
```

This query retrieves the total population of the capital city of Australia, Canberra.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
257,In which ancient empire could you pay with cocoa beans?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?empireLabel
WHERE {
  ?empire dbo:currency <http://dbpedia.org/resource/Cocoa_bean> ;
          a dbo:HistoricalCountry ;
          dbo:timePeriod ?timePeriod .
  FILTER regex(str(?timePeriod), ""ancient"", ""i"")
  SERVICE <http://dbpedia.org/sparql> {
    ?empire rdfs:label ?empireLabel .
    FILTER(langMatches(lang(?empireLabel), ""en""))
  }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
258,How many theories did Albert Einstein come up with?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT (COUNT(?theory) AS ?numTheories)
WHERE {
  ?einstein dbo:knownFor ?theory .
  FILTER regex(?theory, ""theory"", ""i"")
  FILTER regex(?einstein, ""Albert_Einstein"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
259,Who composed the soundtrack for Cameron's Titanic?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?composer
WHERE {
  ?film dbo:workTitle ""Titanic""@en .
  ?film dbo:musicComposer ?composer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
260,Give me the runtime of Toy Story.,"```sparql
SELECT ?runtime
WHERE {
  ?film dbo:runtime ?runtime .
  ?film foaf:name ""Toy Story""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
262,With how many countries Iran has borders?,"```sparql
SELECT (COUNT(?country) AS ?borderCount)
WHERE {
  dbr:Iran dbp:borders ?country .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
263,Which electronics companies were founded in Beijing?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?companyName
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:industry <http://dbpedia.org/resource/Electronics_industry> ;
           dbo:foundationPlace <http://dbpedia.org/resource/Beijing> ;
           dbo:foundingYear ?year .
  ?company rdfs:label ?companyName .
  FILTER(langMatches(lang(?companyName), ""en""))
}
ORDER BY ?companyName
LIMIT 100","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
264,Who was the successor of John F. Kennedy?,"The successor of John F. Kennedy was Lyndon B. Johnson. 

SPARQL query:
```
SELECT ?successorName
WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
  ?successor foaf:name ?successorName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
265,Who is the mayor of Paris?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Paris> dbo:mayor ?mayor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
266,Did Arnold Schwarzenegger attend a university?,"```sparql
SELECT ?universityName
WHERE {
  ?person dbo:almaMater ?university.
  ?person foaf:name ""Arnold Schwarzenegger""@en.
  ?university rdfs:label ?universityName.
  FILTER(LANG(?universityName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
267,Is James Bond married?,"The following SPARQL query can be used to determine if James Bond is married:

```
SELECT ?isMarried
WHERE {
  dbpedia:James_Bond dbo:spouse ?isMarried
}
```

This query checks if there is a spouse relationship for James Bond in DBpedia, which would indicate whether he is married or not.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
268,Does the Isar flow into a lake?,"```sparql
SELECT DISTINCT ?lake
WHERE {
  ?river dbo:mouth ?lake .
  ?river rdf:type dbo:River .
  ?lake rdf:type dbo:Lake .
  FILTER regex(str(?river), ""Isar"", ""i"")
}
```
This SPARQL query retrieves the lake into which the Isar river flows.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
269,Which Indian company has the most employees?,"```sparql
SELECT ?company ?numberOfEmployees
WHERE {
  ?company a dbo:Company ;
           dbo:numberOfEmployees ?numberOfEmployees .
}
ORDER BY DESC(?numberOfEmployees)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
270,Who was John F. Kennedy's vice president?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vicePresident
WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
271,Which country does the creator of Miffy come from?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  ?creator dbo:creator dbr:Miffy ;
           dbo:nationality ?country .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
273,In what city is the Heineken brewery?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?cityName
WHERE {
  ?brewery dbo:location ?city.
  ?city dbo:locationCity ?cityName.
  FILTER regex(str(?brewery), ""Heineken"", ""i"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
274,Is Barack Obama a democrat?,"Yes, Barack Obama is a member of the Democratic Party.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
275,List the children of Margaret Thatcher.,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childName
WHERE {
  ?person dbo:child ?child .
  ?child foaf:name ?childName .
  FILTER(?person = <http://dbpedia.org/resource/Margaret_Thatcher>)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
276,From which region is the Melon de Bourgogne?,"The Melon de Bourgogne grape is from the region of Bourgogne in France. 

SPARQL query:
```
SELECT ?regionLabel
WHERE {
  ?grape dbo:wikiPageRedirects dbr:Melon_de_Bourgogne ;
        dbo:origin ?region .
  ?region rdfs:label ?regionLabel .
  FILTER(LANG(?regionLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
278,how big is the total area of North Rhine- Westphalia?,"The total area of North Rhine-Westphalia is approximately 34,084 square kilometers. 

Here is the SPARQL query to retrieve this information from DBpedia:

```
SELECT ?area
WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?area
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
279,Which city has the most inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
280,What is Donald Trump's main business?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?business
WHERE {
  ?person foaf:name ""Donald Trump""@en .
  ?person dbo:owner ?business .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
281,When will start the final match of the football world cup 2018?,"The final match of the football World Cup 2018 took place on July 15, 2018.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
282,Which films did Stanley Kubrick direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
283,how much is the population  Iraq?,"The population of Iraq is 40,150,000.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
284,How many inhabitants does the largest city in Canada have?,"```sparql
SELECT ?population
WHERE {
  SELECT ?city WHERE {
    ?country a dbo:Country ;
             dbo:largestCity ?city .
    FILTER(langMatches(lang(?city), ""en""))
  }
  ?city dbo:populationTotal ?population .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
285,Who is the mayor of the capital of French Polynesia?,"```sparql
SELECT ?mayor
WHERE {
  ?capital dbo:country dbr:French_Polynesia ;
           dbo:mayor ?mayor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
286,Give me all actors starring in movies directed by William Shatner.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director <http://dbpedia.org/resource/William_Shatner> .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
287,How tall is Claudia Schiffer?,"```sparql
SELECT ?height
WHERE {
  dbr:Claudia_Schiffer dbo:height ?height
}
```
This SPARQL query retrieves the height of Claudia Schiffer from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
288,how much is the population densty rank of germany?,"```sparql
SELECT ?populationDensityRank
WHERE {
  dbr:Germany dbp:populationDensityRank ?populationDensityRank
}
```
This SPARQL query retrieves the population density rank of Germany from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
289,What is the highest mountain in Italy?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:country dbr:Italy .
  ?mountain dbp:elevationM ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```
This SPARQL query retrieves the highest mountain in Italy by selecting the mountain with the highest elevation in meters from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
290,List all games by GMT.,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        dbo:publisher ?publisher .
  ?publisher dbo:companyName ""GMT"" .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
291,What is the official language of Suriname?,"The official language of Suriname is Dutch. 

SPARQL query:
```
SELECT ?languageLabel
WHERE {
  dbr:Suriname dbo:officialLanguage ?language.
  ?language rdfs:label ?languageLabel.
  FILTER(LANG(?languageLabel) = ""en"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
292,In which city did Nikos Kazantzakis die?,"```sparql
SELECT ?cityName
WHERE {
  ?person rdf:type dbo:Person .
  ?person foaf:name ""Nikos Kazantzakis""@en .
  ?person dbo:deathPlace ?city .
  ?city rdfs:label ?cityName .
  FILTER(LANG(?cityName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
293,What is in a chocolate chip cookie?,"```sparql
SELECT ?ingredient
WHERE {
  ?cookie dbo:ingredient ?ingredient .
  FILTER regex(?cookie, ""chocolate chip cookie"", ""i"")
}
```
This query retrieves the ingredients of a chocolate chip cookie from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
294,In which country is the Limerick Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?country WHERE {
  ?lake a dbo:Lake ;
        dbo:country ?country ;
        rdfs:label ""Limerick Lake""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
295,Give me all video games published by Mean Hamster Software.,"```sparql
SELECT DISTINCT ?game
WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game a dbo:VideoGame .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
296,Give me all members of Prodigy.,"```sparql
SELECT ?member
WHERE {
  ?band rdf:type dbo:Band ;
       dbo:bandMember ?member .
  ?member rdf:type dbo:MusicalArtist .
  FILTER regex(str(?band), ""Prodigy"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
297,In which time zone is Rome?,"```sparql
SELECT ?timeZone
WHERE {
  dbr:Rome dbo:timeZone ?timeZone
}
```
This SPARQL query retrieves the time zone of Rome from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
298,How high is the lighthouse in Colombo?,"```sparql
SELECT ?height
WHERE {
  dbr:Colombo dbo:height ?height .
}
```
This SPARQL query retrieves the height of the lighthouse in Colombo from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
299,Who are the writers of the Wall album of Pink Floyd?,"```sparql
SELECT ?writer
WHERE {
  ?album dbo:artist dbr:Pink_Floyd ;
        dbp:title ""The_Wall"" ;
        dbp:writer ?writer .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
300,Who is the mayor of Rotterdam?,"```sparql
SELECT ?mayorName
WHERE {
  <http://dbpedia.org/resource/Rotterdam> dbo:leader ?mayor.
  ?mayor foaf:name ?mayorName.
}
```
This SPARQL query retrieves the name of the mayor of Rotterdam by querying DBpedia for the leader of Rotterdam and then fetching the name of that leader.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
301,What is the largest city in Australia?,"```sparql
SELECT ?cityName
WHERE {
  ?country a dbo:Country ;
           dbo:largestCity ?city .
  ?city rdfs:label ?cityName .
  FILTER(LANG(?cityName) = 'en')
  FILTER(?country = dbr:Australia)
}
```
This SPARQL query retrieves the largest city in Australia by querying for the country ""Australia"" and finding its largest city using the property dbo:largestCity.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
302,Who was married to president Chirac?,"To find out who was married to President Chirac, we can use the following SPARQL query:

```
SELECT ?spouseName
WHERE {
  ?president a dbo:President ;
            foaf:name ""Jacques Chirac""@en ;
            dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```

This query retrieves the name of the spouse of the person who is a President with the name ""Jacques Chirac"".","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
303,What form of government is found in South Africa?,"The form of government found in South Africa is a parliamentary republic. 

SPARQL query:
```
SELECT ?governmentTypeLabel
WHERE {
  dbr:South_Africa dbo:governmentType ?governmentType .
  ?governmentType rdfs:label ?governmentTypeLabel .
  FILTER(LANG(?governmentTypeLabel) = ""en"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
304,How high is the Yokohama Marine Tower?,"```sparql
SELECT ?height
WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height
}
```
This SPARQL query retrieves the height of the Yokohama Marine Tower from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
305,Which holidays are celebrated around the world? test2,"Based on the lexical entries provided, it seems that the term ""holiday"" in DBpedia is associated with countries and holidays celebrated in those countries. To find holidays celebrated around the world, we can query for holidays that are associated with different countries. Here is a SPARQL query that can be used to retrieve a list of holidays celebrated around the world:

```sparql
SELECT DISTINCT ?holiday ?country
WHERE {
  ?holiday rdf:type dbo:Holiday .
  ?country rdf:type dbo:Country .
  ?country dbo:Holiday ?holiday .
}
```

This query will return a list of holidays celebrated around the world along with the countries where they are celebrated.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
306,Who is the tallest basketball player?,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer .
  ?player dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
307,How many languages are spoken in Turkmenistan?,"```sparql
SELECT (COUNT(DISTINCT ?language) AS ?numLanguages)
WHERE {
  ?country dbo:country <http://dbpedia.org/resource/Turkmenistan> .
  ?country dbo:language ?language .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
308,Did Che Guevara have children?,"```sparql
SELECT ?childName
WHERE {
  dbr:Che_Guevara dbo:child ?child .
  ?child foaf:name ?childName .
}
```
This SPARQL query retrieves the names of children of Che Guevara from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"```sparql
SELECT ?film ?award
WHERE {
  ?film dbo:director dbr:Aki_Kaurismäki ;
        dbo:award ?award .
  ?award rdf:type dbo:Grand_Prix_du_Festival_International_du_Film_de_Cannes .
}
```
This SPARQL query retrieves the films directed by Aki Kaurismäki that have won the Grand Prix at the Cannes Film Festival.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
310,To which party does the mayor of Paris belong?,"```sparql
SELECT ?partyLabel
WHERE {
  ?mayor a dbo:Person ;
         dbo:position/dbo:mayor ?city ;
         dbo:party ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(LANG(?partyLabel) = """" || LANGMATCHES(LANG(?partyLabel), ""en""))
  FILTER(?city = dbr:Paris)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
311,Who is the Formula 1 race driver with the most races?,"The SPARQL query to find the Formula 1 race driver with the most races is as follows:

```sparql
SELECT ?driver ?name ?races
WHERE {
  ?driver a dbo:FormulaOneRacer ;
          foaf:name ?name ;
          dbo:races ?races .
}
ORDER BY DESC(?races)
LIMIT 1
```

This query retrieves the Formula 1 race driver (`?driver`) along with their name (`?name`) and the number of races they have participated in (`?races`). The results are ordered in descending order based on the number of races, and only the top result (the driver with the most races) is returned.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
312,What country is Sitecore from?,"```sparql
SELECT DISTINCT ?countryLabel
WHERE {
  ?sitecore dbo:location ?country .
  ?country a dbo:Country .
  ?country rdfs:label ?countryLabel
  FILTER regex(?countryLabel, ""Sitecore"", ""i"")
}
```
This query retrieves the country where Sitecore is from by searching for a country related to Sitecore in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
313,Give me the birth place of Frank Sinatra.,"The birth place of Frank Sinatra is Hoboken, New Jersey, United States.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
314,Is Christian Bale starring in Velvet Goldmine?,"```sparql
SELECT ?actorName
WHERE {
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  ?film rdfs:label ""Velvet Goldmine""@en .
  ?actor rdfs:label ""Christian Bale""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
315,Who is the son of Sonny and Cher?,"```sparql
SELECT ?son
WHERE {
  ?son dbo:child dbr:Sonny_and_Cher .
  ?son a dbo:Person .
}
```
This query retrieves the son of Sonny and Cher from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
316,How many ethnic groups live in Slovenia?,"Based on the lexical entries provided, we can construct a SPARQL query to find the number of ethnic groups living in Slovenia:

```sparql
SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  ?ethnicGroup a dbo:EthnicGroup ;
               dbo:country dbr:Slovenia .
}
```

This query will count the number of ethnic groups that are associated with the country Slovenia in the DBpedia dataset.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
317,What is the capital of Cameroon?,"The capital of Cameroon is Yaoundé. 

Here is the SPARQL query to retrieve this information from DBpedia:

```
SELECT ?capital
WHERE {
  dbr:Cameroon dbo:capital ?capital .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
318,Was Natalie Portman born in the United States?,"```sparql
SELECT ?person ?birthPlace
WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace ?birthPlace .
  FILTER (?person = dbr:Natalie_Portman && ?birthPlace = dbr:United_States)
}
```
This SPARQL query checks if Natalie Portman was born in the United States by querying DBpedia for her birthplace.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
319,How many pages does War and Peace have?,"The number of pages in the book ""War and Peace"" can be retrieved using the following SPARQL query:

```
SELECT ?pages
WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?pages
}
```

This query will return the number of pages of the book ""War and Peace"" from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
320,Who is the oldest child of Meryl Streep?,The oldest child of Meryl Streep is named Henry Wolfe Gummer.,"Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
321,Which television shows were created by Walt Disney?,"```sparql
SELECT DISTINCT ?showName
WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
  ?show rdfs:label ?showName .
  FILTER (lang(?showName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
322,What does IYCM stand for?,"```sparql
SELECT ?definition
WHERE {
  ?s dbo:abbreviation ""IYCM""@en ;
     rdfs:comment ?definition .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
323,Which types of grapes grow in Oregon?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType dbo:growingGrape ?region .
  ?region dbo:isPartOf* <http://dbpedia.org/resource/Oregon> .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
324,Was U.S. president Jackson involved in a war?,"Based on the lexical entries provided, we can construct a SPARQL query to determine if U.S. President Jackson was involved in a war. Here is the query:

```
SELECT ?war
WHERE {
  dbr:Andrew_Jackson dbo:activeYearsStartDate ?start_date .
  ?war dbo:commander dbr:Andrew_Jackson .
  ?war a dbo:MilitaryConflict .
}
```

This query checks if U.S. President Andrew Jackson was a commander in any military conflicts, which would indicate his involvement in a war.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
325,When was the Titanic completed?,"```sparql
SELECT ?completionDate
WHERE {
  dbr:Titanic dbo:completionDate ?completionDate
}
```
This SPARQL query retrieves the completion date of the Titanic from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
326,Did Tesla win a nobel prize in physics?,"The following SPARQL query can be used to check if Tesla won a Nobel Prize in Physics:

```
SELECT ?scientist ?award
WHERE {
  ?scientist a dbo:Scientist ;
            dbo:award ?award .
  FILTER regex(str(?scientist), ""Tesla"", ""i"") .
  FILTER regex(str(?award), ""Nobel Prize in Physics"", ""i"") .
}
```

This query searches for a scientist (in this case, Tesla) who has been awarded the ""Nobel Prize in Physics"" in the DBpedia dataset. If there is a match, it means that Tesla won a Nobel Prize in Physics.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
327,How many states are in Mexico?,"The following SPARQL query can be used to find the number of states in Mexico:

```
SELECT (COUNT(?state) as ?stateCount)
WHERE {
  ?state a dbo:State ;
         dbo:country dbr:Mexico .
}
```

This query counts the number of instances of the class dbo:State that have a country property pointing to dbr:Mexico, which represents Mexico in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"```sparql
SELECT ?scientistName
WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project ;
            dbo:knownFor dbr:Nobel_Peace_Prize ;
            rdfs:label ?scientistName .
  FILTER (lang(?scientistName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
329,How much did the Lego Movie cost?,The cost of the Lego Movie was approximately $60-65 million.,"Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
330,Who composed the music for Harold and Maude?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?composer
WHERE {
  ?film dbo:workTitle ""Harold and Maude""@en .
  ?film dbo:musicComposer ?composer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
331,List all episodes of the first season of the HBO television series The Sopranos.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?episode
WHERE {
  ?season dbo:series <http://dbpedia.org/resource/The_Sopranos> ;
          dbo:seasonNumber ""1"" ;
          dbo:episodes ?episode .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
332,Which city has the least inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
333,Where is Syngman Rhee buried?,"Based on the lexical entry provided, we can formulate a SPARQL query to find the burial place of Syngman Rhee:

```
SELECT ?burialPlace
WHERE {
  dbr:Syngman_Rhee dbo:restingPlace ?burialPlace.
}
```

This query will retrieve the burial place of Syngman Rhee from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
334,Does Neymar play for Real Madrid?,"Based on the lexical entry provided, we can formulate a SPARQL query to check if Neymar plays for Real Madrid. 

```sparql
SELECT ?player ?team
WHERE {
  ?player a dbo:Person ;
          dbo:team ?team .
  FILTER (?player = dbr:Neymar)
  FILTER regex(?team, ""Real Madrid"", ""i"")
}
```

This query will search for Neymar in DBpedia and check if he plays for Real Madrid by looking at the team information associated with him.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
335,Who wrote the book The Pillars of the Earth?,"The book ""The Pillars of the Earth"" was written by Ken Follett. 

Here is the SPARQL query to retrieve this information from DBpedia:

```
SELECT ?authorName
WHERE {
  ?book dbo:author ?author.
  ?author foaf:name ?authorName.
  ?book rdfs:label ""The Pillars of the Earth""@en.
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
336,Do Prince Harry and Prince William have the same parents?,"```sparql
SELECT ?parent1 ?parent2
WHERE {
  ?person1 a dbo:Person ;
           foaf:name ""Prince Harry"" ;
           dbo:parent ?parent1 .
  
  ?person2 a dbo:Person ;
           foaf:name ""Prince William"" ;
           dbo:parent ?parent2 .
  
  FILTER(?parent1 = ?parent2)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
337,Who was the doctoral supervisor of Albert Einstein?,"```sparql
SELECT ?supervisorName
WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor.
  ?supervisor foaf:name ?supervisorName.
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
338,Does Breaking Bad have more episodes than Game of Thrones?,"```sparql
SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes
WHERE {
  ?breakingBad dbo:numberOfEpisodes ?breakingBadEpisodes ;
              foaf:name ""Breaking Bad""@en .
  
  ?gameOfThrones dbo:numberOfEpisodes ?gameOfThronesEpisodes ;
                 foaf:name ""Game of Thrones""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
339,Who was Vincent van Gogh inspired by?,"```sparql
SELECT DISTINCT ?inspiration
WHERE {
  ?artist dbo:influenced ?inspiration ;
         foaf:name ""Vincent van Gogh""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
340,Which building after the Burj Khalifa has the most floors?,"```sparql
SELECT ?building ?buildingName ?floorCount
WHERE {
  ?building a dbo:Building ;
           dbo:floorCount ?floorCount .
  FILTER (?floorCount > (SELECT ?floorCount WHERE { <http://dbpedia.org/resource/Burj_Khalifa> dbo:floorCount ?floorCount }))
  ?building rdfs:label ?buildingName .
  FILTER (lang(?buildingName) = 'en')
}
ORDER BY DESC(?floorCount)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
341,What was the final result of the War of the Roses?,The final result of the War of the Roses was the establishment of the Tudor dynasty with Henry VII's victory over Richard III at the Battle of Bosworth Field in 1485.,"Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
342,How much did Pulp Fiction cost?,"The cost of producing the film ""Pulp Fiction"" was approximately $8-8.5 million.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
343,Is proinsulin a protein?,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?protein rdf:type dbo:Protein ;
          rdfs:label ?label .
  FILTER (LANG(?label) = 'en')
}
LIMIT 10
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
344,Do Urdu and Persian have a common root?,"To determine if Urdu and Persian have a common root, we can query DBpedia to find out if they belong to the same language family. Here is a SPARQL query that can be used to answer your question:

```
SELECT ?languageFamily
WHERE {
  ?urdu dbo:languageFamily ?languageFamily .
  ?persian dbo:languageFamily ?languageFamily .
  FILTER (?urdu = dbr:Urdu && ?persian = dbr:Persian)
}
```

This query checks if both Urdu and Persian languages have the same value for the property `languageFamily` in DBpedia, which would indicate that they belong to the same language family and potentially have a common root.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:producer <http://dbpedia.org/resource/Benicio_del_Toro> .
  ?movie dct:subject dbc:Spanish_films .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?lake ?areaTotal
WHERE {
  ?lake a dbo:Lake ;
        dbo:areaTotal ?areaTotal .
  FILTER (?lake = dbo:Lake_Baikal || ?lake = dbo:Great_Bear_Lake)
}
ORDER BY ?areaTotal
LIMIT 2
OFFSET 0
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
347,Show me all books in Asimov's Foundation series.,"To show all books in Asimov's Foundation series, we can use the following SPARQL query:

```
SELECT ?book
WHERE {
  ?book dct:subject dbc:Foundation_series_books .
}
```

This query retrieves all books that are part of the Foundation series in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
348,Where was Bach born?,"Based on the lexical entries provided, we can formulate a SPARQL query to find the birthplace of Bach using the property dbo:birthPlace. Here is the SPARQL query:

```
SELECT ?birthplace
WHERE {
  dbr:Johann_Sebastian_Bach dbo:birthPlace ?birthplace
}
```

This query will retrieve the birthplace of Johann Sebastian Bach from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
349,Which city has the oldest running metro?,"```sparql
SELECT ?city ?metroName ?openingYear
WHERE {
  ?city a dbo:City .
  ?city dbo:isPartOf ?country .
  ?metro a dbo:Railway .
  ?metro dbo:city ?city .
  ?metro dbo:openingYear ?openingYear .
  ?metro rdfs:label ?metroName .
  FILTER(langMatches(lang(?metroName), ""en""))
}
ORDER BY ?openingYear
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
350,Who designed the Brooklyn Bridge?,"The Brooklyn Bridge was designed by John Augustus Roebling. 

SPARQL query:
```
SELECT ?architect
WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?architect .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
351,How many people live in Eurasia?,"Based on the lexical entries provided, we can formulate a SPARQL query to find the total population of Eurasia by summing up the populations of countries in Eurasia. Here is the SPARQL query:

```sparql
SELECT (SUM(?population) AS ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dct:subject dbc:Countries_in_Eurasia ;
           dbo:populationTotal ?population .
}
```

This query retrieves the total population of countries in Eurasia by summing up the populations of each country.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
352,Who is the host of the BBC Wildlife Specials?,"```sparql
SELECT ?host
WHERE {
  ?wildlifeSpecials dbo:producer <http://dbpedia.org/resource/BBC_Natural_History_Unit> ;
                    dbo:presenter ?host .
  FILTER regex(str(?wildlifeSpecials), ""Wildlife_Specials"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
353,"What is the total population of Melbourne, Florida?","```sparql
SELECT ?population
WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population
}
```
This SPARQL query retrieves the total population of Melbourne, Florida from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
354,What country is Mount Everest in?,"The country in which Mount Everest is located is Nepal. 

SPARQL query:
```
SELECT ?countryName
WHERE {
  <http://dbpedia.org/resource/Mount_Everest> dbo:country ?country.
  ?country rdfs:label ?countryName.
  FILTER(LANG(?countryName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
355,To which artistic movement did the painter of The Three Dancers belong?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?movementLabel
WHERE {
  ?painter dbo:author <http://dbpedia.org/resource/The_Three_Dancers> .
  ?painter dbo:movement ?movement .
  ?movement rdfs:label ?movementLabel .
  FILTER(LANG(?movementLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
356,When did Operation Overlord commence?,"Based on the lexical entry provided, we can formulate a SPARQL query to find the date when Operation Overlord commenced. Here is the SPARQL query:

```sparql
SELECT ?date
WHERE {
  ?event a dbo:Event ;
         rdfs:label ""Operation Overlord""@en ;
         dbo:date ?date .
}
```

This query searches for an event with the label ""Operation Overlord"" in English in DBpedia and retrieves the date when this event commenced.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
357,What is the bridge with the longest span?,"```sparql
SELECT ?bridge ?bridgeName ?spanLength
WHERE {
  ?bridge a dbo:Bridge ;
          rdfs:label ?bridgeName ;
          dbo:mainspan ?spanLength .
}
ORDER BY DESC(?spanLength)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
358,Is there a video game called Battle Chess?,"```sparql
SELECT DISTINCT ?gameName
WHERE {
  ?game dbo:videoGame ?gameName .
  FILTER regex(?gameName, ""Battle Chess"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
359,Who was buried in the Great Pyramid of Giza?,"Based on the lexical entry for ""bury"" and the provided information, we can construct a SPARQL query to find out who was buried in the Great Pyramid of Giza. Here is the query:

```sparql
SELECT ?person
WHERE {
  ?person dbo:restingPlace dbr:Great_Pyramid_of_Giza.
}
```

This query will retrieve the individuals who are buried in the Great Pyramid of Giza by looking at the restingPlace property in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"```sparql
SELECT ?company ?plant
WHERE {
  ?company a dbo:Company ;
           foaf:name ""Ford Motor Company""@en .
  ?plant a dbo:Plant ;
         dbo:location dbr:Malaysia ;
         dbo:owner ?company .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
361,Did Socrates influence Aristotle?,"To determine if Socrates influenced Aristotle, we can use the following SPARQL query:

```
SELECT ?influencer ?influencee
WHERE {
  ?influencer dbo:influencedBy dbr:Socrates .
  ?influencee dbo:influencedBy dbr:Aristotle .
}
```

This query checks if there is a relationship where Socrates influenced someone who was also influenced by Aristotle. If there is a result, it indicates that there is a potential influence from Socrates to Aristotle.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
362,How many children did Benjamin Franklin have?,"The SPARQL query to find out how many children Benjamin Franklin had is as follows:

```
SELECT (COUNT(?child) AS ?numberOfChildren)
WHERE {
  dbr:Benjamin_Franklin dbo:child ?child .
}
```

This query retrieves the count of children of Benjamin Franklin by searching for the relationships where Benjamin Franklin is the subject and the child is the object.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
363,How tall is Michael Jordan?,"```sparql
SELECT ?height
WHERE {
  dbr:Michael_Jordan dbo:height ?height
}
```
This SPARQL query retrieves the height of Michael Jordan from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
364,In which UK city are the headquarters of the MI6?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?city
WHERE {
  ?mi6 dbo:headquarter ?cityResource .
  ?cityResource dbo:location ?city .
  ?city dbo:location ?ukCity .
  ?ukCity dbp:country ""United Kingdom""@en
}
LIMIT 1
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
365,Who created Family Guy?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?creator
WHERE {
  ?show dbo:creator ?creator ;
       dbo:abstract ?abstract .
  FILTER regex(?abstract, ""Family Guy"", ""i"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
366,In which city does the Chile Route 68 end?,"```sparql
SELECT ?cityEnd
WHERE {
  ?route a dbo:RouteOfTransportation ;
         dbo:routeEnd ?cityEnd ;
         rdfs:label ""Chile Route 68""@en .
  ?cityEnd a dbo:City .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
367,Give me the grandchildren of Elvis Presley.,"```sparql
SELECT ?grandchild ?grandchildName
WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild foaf:name ?grandchildName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
368,When did the Ming dynasty dissolve?,"The Ming dynasty dissolved in 1644. 

Here is the corresponding SPARQL query to retrieve this information from DBpedia:

```sparql
SELECT ?dissolutionDate
WHERE {
  dbr:Ming_dynasty dbo:dissolutionDate ?dissolutionDate
}
```

This query will return the dissolution date of the Ming dynasty, which is 1644.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
369,In which military conflicts did Lawrence of Arabia participate?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?conflictName
WHERE {
  ?lawrence dbo:militaryConflict ?conflict .
  ?conflict dbo:commander <http://dbpedia.org/resource/T._E._Lawrence> .
  ?conflict dbo:conflictName ?conflictName .
}
LIMIT 10
The query above retrieves the military conflicts in which Lawrence of Arabia participated by searching for conflicts where he was listed as a commander.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
370,What is the timezone in San Pedro de Atacama?,"```sparql
SELECT ?timezoneLabel
WHERE {
  <http://dbpedia.org/resource/San_Pedro_de_Atacama> dbpedia-owl:timeZone ?timezone .
  ?timezone rdfs:label ?timezoneLabel .
  FILTER(LANG(?timezoneLabel) = 'en')
}
```
This SPARQL query retrieves the timezone in San Pedro de Atacama by querying DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
371,Give me all books by William Goldman with more than 300 pages.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?book ?title ?pages
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:William_Goldman ;
        dbo:numberOfPages ?pages ;
        rdfs:label ?title .
  FILTER(langMatches(lang(?title), ""en""))
  FILTER(?pages > 300)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
372,What did Bruce Carver die from?,"To find out what Bruce Carver died from, we can use the following SPARQL query:

```
SELECT ?causeOfDeath
WHERE {
  ?person foaf:name ""Bruce Carver""@en .
  ?person dbo:deathCause ?causeOfDeath .
}
```

This query searches for the cause of death of a person named ""Bruce Carver"" in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?subsidiary
WHERE {
  ?subsidiary dbo:subsidiary <http://dbpedia.org/resource/Lufthansa> ;
             dbo:targetAirport <http://dbpedia.org/resource/Dortmund_Airport>, <http://dbpedia.org/resource/Berlin_Tegel_Airport> .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
374,Does Abraham Lincoln's death place have a website?,"Based on the lexical entries provided, we can construct a SPARQL query to find out if Abraham Lincoln's death place has a website. Here is the query:

```sparql
SELECT ?website
WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace.
  ?deathPlace dbo:website ?website.
}
```

This query retrieves the website associated with the death place of Abraham Lincoln.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
375,Did Elvis Presley have children?,"The following SPARQL query can be used to determine if Elvis Presley had children:

```
SELECT ?child
WHERE {
  dbr:Elvis_Presley dbo:child ?child .
}
```

This query will return the children of Elvis Presley, if any exist.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
376,Is Michelle Obama the wife of Barack Obama?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?wife
WHERE {
  dbo:Michelle_Obama dbo:spouse ?wife .
  FILTER (?wife = dbo:Barack_Obama)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
377,In which city does Sylvester Stallone live?,"Based on the lexical entries provided, we can construct a SPARQL query to find the city where Sylvester Stallone lives. We will search for the residence of Sylvester Stallone in DBpedia:

```sparql
SELECT ?cityName
WHERE {
  ?person rdf:type dbo:Person ;
          foaf:name ""Sylvester Stallone"" ;
          dbo:residence ?city .
  ?city rdf:type dbo:City ;
        rdfs:label ?cityName .
  FILTER(LANG(?cityName) = """" || LANGMATCHES(LANG(?cityName), ""en""))
}
```

This query will retrieve the name of the city where Sylvester Stallone resides according to DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
378,Which books by Kerouac were published by Viking Press?,"```sparql
SELECT DISTINCT ?book
WHERE {
  ?book dbo:author dbr:Jack_Kerouac ;
        dbo:publisher dbr:Viking_Press .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
379,Who wrote the song Hotel California?,"```sparql
SELECT ?artist
WHERE {
  ?song dbo:writer ?artist ;
        rdfs:label ""Hotel California""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
380,What is the capital of Canada?,"The capital of Canada is Ottawa. 

SPARQL query:
```
SELECT ?capital
WHERE {
  <http://dbpedia.org/resource/Canada> dbo:capital ?capital .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
381,Who is the mayor of Tel Aviv?,"```sparql
SELECT ?mayorName
WHERE {
  dbr:Tel_Aviv dbo:leaderName ?mayorName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
382,What form of government does Russia have?,"The following SPARQL query can be used to find the form of government of Russia in DBpedia:

```
SELECT ?governmentType
WHERE {
  dbr:Russia dbo:governmentType ?governmentType
}
```

This query will return the form of government of Russia as specified in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
383,Show me the book that Muhammad Ali wrote.,"```sparql
SELECT ?book
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:Muhammad_Ali .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
384,Who was the first to climb Mount Everest?,"```sparql
SELECT ?climber
WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?climber .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
385,How many languages are spoken in Colombia?,"```sparql
SELECT (COUNT(DISTINCT ?language) AS ?numLanguages)
WHERE {
  ?language a dbo:Language ;
            dbo:spokenIn dbr:Colombia .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
386,What is the currency of the Czech Republic?,"```sparql
SELECT ?currencyLabel
WHERE {
  dbr:Czech_Republic dbo:currency ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER(LANG(?currencyLabel) = 'en')
}
```
This SPARQL query retrieves the currency of the Czech Republic from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
387,Where in France is sparkling wine produced?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region
WHERE {
  ?wine dbo:location ?region ;
        dbo:product dbr:Sparkling_wine .
  ?region dbo:country dbr:France .
}
LIMIT 10
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
388,When did Boris Becker end his active career?,"```sparql
SELECT ?endDate
WHERE {
  ?person dbo:activeYearsEndDate ?endDate ;
         foaf:name ""Boris Becker""@en .
}
```
This SPARQL query retrieves the end date of Boris Becker's active career from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movieTitle
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Mickey_Rourke> ;
        dbo:director <http://dbpedia.org/resource/Guy_Ritchie> ;
        rdfs:label ?movieTitle .
  FILTER (lang(?movieTitle) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
390,In which films did Julia Roberts as well as Richard Gere play?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
391,Show me Hemingway's autobiography.,"```sparql
SELECT ?autobiography
WHERE {
  ?autobiography a dbo:Autobiography ;
                 dbo:author dbr:Ernest_Hemingway .
}
```
This SPARQL query retrieves the autobiographies authored by Ernest Hemingway from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
392,How tall is Amazon Eve?,"To find out how tall Amazon Eve is, we can use the following SPARQL query:

```
SELECT ?height
WHERE {
  ?person foaf:name ""Amazon Eve""@en .
  ?person dbo:height ?height .
}
```

This query searches for a person with the name ""Amazon Eve"" in DBpedia and retrieves their height.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
393,What are the five boroughs of New York?,"The five boroughs of New York are Manhattan, Brooklyn, Queens, The Bronx, and Staten Island. 

Here is a SPARQL query to retrieve the names of the five boroughs of New York from DBpedia:

```
SELECT ?boroughName
WHERE {
  ?borough a dbo:Borough ;
           rdfs:label ?boroughName .
  FILTER(langMatches(lang(?boroughName), ""en""))
}
LIMIT 5
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
394,Give me all Canadian Grunge record labels.,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?label a dbo:RecordLabel ;
         dbo:genre ""Grunge"" ;
         dbp:location ?location .
  ?location dbo:country dbr:Canada .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
395,In which country does the Ganges start?,"```sparql
SELECT ?country
WHERE {
  ?river dbo:sourceCountry ?country ;
         dbo:riverName ""Ganges""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
396,Who is the founder of Penguin Books?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?founder WHERE {
  ?publisher a dbo:Publisher ;
             dbo:founder ?founder ;
             rdfs:label ""Penguin Books""@en .
}
LIMIT 1
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
397,Who wrote the Game of Thrones theme?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?composer
WHERE {
  ?show dbo:composer ?composer ;
       dbp:name ""Game of Thrones""@en .
}
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
398,Who is the president of Eritrea?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?president
WHERE {
  ?country dbo:leader ?president ;
           dbo:commonName ""Eritrea""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
399,In which city did John F. Kennedy die?,"```sparql
SELECT ?cityName
WHERE {
  ?person dbo:deathPlace ?city.
  ?city rdfs:label ?cityName.
  FILTER (LANG(?cityName) = 'en' && ?person = dbr:John_F._Kennedy)
}
```
This SPARQL query retrieves the city where John F. Kennedy died by finding the death place of John F. Kennedy and selecting the English label of the city.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
400,What is the highest mountain in Australia?,"```sparql
SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
  ?mountain dbo:country dbr:Australia .
}
ORDER BY DESC(?elevation)
LIMIT 1
```
This SPARQL query retrieves the mountain in Australia with the highest elevation.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
401,Who writes the Farmers' Almanac?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author
WHERE {
  ?almanac dbo:editor ?author ;
           dbp:title ""Farmers' Almanac""@en .
}
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
402,Give me the currency of China.,"```sparql
SELECT ?currencyLabel
WHERE {
  dbr:China dbo:currency ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER(LANG(?currencyLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
403,Give me all Swedish oceanographers.,"```sparql
SELECT DISTINCT ?oceanographer
WHERE {
  ?oceanographer a dbo:Person ;
                 dbo:nationality dbr:Sweden ;
                 dbo:occupation dbr:Oceanographer .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
404,In which city are the headquarters of the United Nations?,"```sparql
SELECT ?cityName
WHERE {
  <http://dbpedia.org/resource/United_Nations> dbo:headquarter ?headquarter .
  ?headquarter dbo:location ?city .
  ?city rdfs:label ?cityName .
  FILTER(LANG(?cityName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
405,Is Rita Wilson the wife of Tom Hanks?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  ?wife dbo:spouse <http://dbpedia.org/resource/Tom_Hanks> .
  FILTER (?wife = <http://dbpedia.org/resource/Rita_Wilson>)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
406,In which countries do people speak Japanese?,"```sparql
SELECT DISTINCT ?countryName
WHERE {
  ?country a dbo:Country ;
           dbo:language ?language .
  ?language rdfs:label ""Japanese""@en .
  ?country rdfs:label ?countryName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
407,Which of Tim Burton's films had the highest budget?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director <http://dbpedia.org/resource/Tim_Burton> ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
408,Which museum in New York has the most visitors?,"```sparql
SELECT ?museum ?visitors
WHERE {
  ?museum a dbo:Museum ;
          dbo:numberOfVisitors ?visitors .
  FILTER (?visitors > 0)
}
ORDER BY DESC(?visitors)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
409,What was the first Queen album?,"```sparql
SELECT ?album ?albumName
WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Queen ;
         dbo:releaseDate ?date .
  FILTER (?date = ""1973-07-13""^^xsd:date)
  ?album rdfs:label ?albumName .
  FILTER (lang(?albumName) = 'en')
}
LIMIT 1
```
This SPARQL query retrieves the first album by the band Queen, which is ""Queen"" released on July 13, 1973.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
410,What was the first name of the band Queens of the Stone Age?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandName
WHERE {
  ?band dbo:alias ?bandName .
  FILTER regex(?bandName, ""Queens of the Stone Age"", ""i"")
}
LIMIT 1
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
411,What was the last movie with Alec Guinness?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movieTitle ?releaseDate
WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Alec_Guinness> .
  ?movie dbo:releaseDate ?releaseDate .
  ?movie dbo:abstract ?movieTitle .
  FILTER (langMatches(lang(?movieTitle), ""en""))
}
ORDER BY DESC(?releaseDate)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
412,Give me all actors starring in Last Action Hero.,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film dbo:workTitle ""Last_Action_Hero""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
413,Who discovered Pluto?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discoverer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
