id,question,sparql,prompt
1,List all boardgames by GMT.,"SELECT ?game
WHERE {
  ?game dct:subject dbc:Board_games_published_by_GMT_Games .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
2,Who developed Skype?,"SELECT ?developer
WHERE {
  dbr:Skype dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
3,Which people were born in Heraklion?,"SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
4,In which U.S. state is Area 51 located?,"SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Area_51> dbpedia-owl:location ?location .
  ?location dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
  ?location dbpedia-owl:locatedInArea ?state .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
5,Who is the mayor of New York City?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/ontology/leaderName> ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
6,Which countries have places with more than two caves?,"SELECT DISTINCT ?country
WHERE {
  ?place rdf:type dbo:Place .
  ?place dbo:location ?country .
  ?place dbo:numberOfCaves ?numCaves .
  FILTER (?numCaves > 2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
7,Where did Abraham Lincoln die?,"SELECT ?place_of_death WHERE {
  dbpedia:Abraham_Lincoln dbo:deathPlace ?place_of_death
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
8,Which airports does Air China serve?,"SELECT DISTINCT ?airport
WHERE {
  ?airline a dbo:Airline ;
           foaf:name ""Air China""@en ;
           dbo:operates ?route .
  ?route dbo:operatedBy ?airline ;
         dbo:destination ?airport .
  ?airport a dbo:Airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
9,Give me all actors starring in movies directed by and starring William Shatner.,"SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner ;
        dbo:starring ?actor .
  ?actor a dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
10,What are the official languages of the Philippines?,"SELECT ?language
WHERE {
  <http://dbpedia.org/resource/Philippines> <http://dbpedia.org/ontology/officialLanguage> ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
11,Give me all Danish films.,"SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dct:subject dbc:Danish_films .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Brad_Pitt ;
        dbo:director dbr:Guy_Ritchie .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
13,Give me the grandchildren of Bruce Lee.,"SELECT ?grandchild
WHERE {
  dbr:Bruce_Lee dbo:child ?child .
  ?child dbo:child ?grandchild .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
14,Which other weapons did the designer of the Uzi develop?,"SELECT DISTINCT ?weapon
WHERE {
  <http://dbpedia.org/resource/Uzi> <http://dbpedia.org/ontology/designer> ?designer .
  ?designer <http://dbpedia.org/ontology/knownFor> ?weapon .
  FILTER (?weapon != <http://dbpedia.org/resource/Uzi>)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
15,Who is the owner of Universal Studios?,"SELECT ?owner
WHERE {
  dbpedia:Universal_Studios dbo:owner ?owner .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
16,Which state of the USA has the highest population density?,"SELECT ?state ?populationDensity
WHERE {
  ?state a dbo:AdministrativeRegion ;
         dbo:country dbr:United_States ;
         dbo:populationDensity ?populationDensity .
}
ORDER BY DESC(?populationDensity)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
17,Which monarchs were married to a German?,"SELECT DISTINCT ?monarch
WHERE {
  ?monarch a dbo:Monarch ;
           dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
18,Which organizations were founded in 1950?,"SELECT ?organization
WHERE {
  ?organization dbo:formationYear 1950
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
19,Who created the comic Captain America?,"SELECT ?creator
WHERE {
  dbpedia:Captain_America dct:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
20,Give me the Apollo 14 astronauts.,"SELECT ?astronaut
WHERE {
  dbpedia:Apollo_14 dbpedia-owl:astronaut ?astronaut .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
21,Who wrote the book The pillars of the Earth?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Pillars of the Earth""@en
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
22,Which state of the United States of America has the highest density?,"SELECT ?state ?density
WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?density .
}
ORDER BY DESC(?density)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
23,Which spaceflights were launched from Baikonur?,"SELECT ?spaceflight
WHERE {
  ?spaceflight dbpedia-owl:launchSite dbr:Baikonur_Cosmodrome .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
24,Give me a list of all trumpet players that were bandleaders.,"SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a <http://dbpedia.org/ontology/MusicalArtist> ;
              <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Trumpet> ;
              <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Bandleader> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
25,Which U.S. states are in the same timezone as Utah?,"SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timezone .
  ?state dbpedia-owl:timeZone ?timezone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
26,Which U.S. states possess gold minerals?,"```sparql
SELECT DISTINCT ?state
WHERE {
  ?state dct:subject dbc:Gold_mineralogy_of_the_United_States .
  ?state a dbo:Place
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
27,Who is the daughter of Ingrid Bergman married to?,"SELECT ?spouse 
WHERE {
  ?ingridBergman dbo:child ?child .
  ?child foaf:name ""Isabella Rossellini""@en .
  ?child dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
28,How deep is Lake Placid?,"SELECT ?depth
WHERE {
  dbpedia:Lake_Placid dbo:maximumDepth ?depth
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
29,Show me all museums in London.,"SELECT ?museum
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:London .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
30,Which caves have more than 3 entrances?,"SELECT ?cave
WHERE {
  ?cave rdf:type dbo:Cave ;
        dbo:numberOfEntrances ?entrances .
  FILTER (?entrances > 3)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
31,Who is the tallest player of the Atlanta Falcons?,"SELECT ?player ?height
WHERE {
  ?player dct:subject dbc:Atlanta_Falcons_players ;
          dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
32,What are the top-10 action role-playing video games according to IGN?,"SELECT ?game ?rank
WHERE {
  ?game rdf:type dbo:VideoGame ;
        dbo:genre dbr:Action_role-playing_video_game ;
        dbo:publisher dbr:IGN .
  ?game dbo:IGNRank ?rank
}
ORDER BY ASC(?rank)
LIMIT 10",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
SELECT ?writer
WHERE {
  ?writer a dbo:Writer ;
          dbo:award dbr:Nobel_Prize_in_Literature .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
34,Show me all basketball players that are higher than 2 meters.,"SELECT DISTINCT ?player
WHERE {
    ?player rdf:type dbo:BasketballPlayer .
    ?player dbo:height ?height .
    FILTER (?height > 2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
35,When was the Statue of Liberty built?,"SELECT ?date
WHERE {
  dbr:Statue_of_Liberty dbo:constructionStart ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
36,Which states border Illinois?,"SELECT DISTINCT ?state
WHERE {
    dbpedia:Illinois dbo:border ?state .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
37,Who developed Minecraft?,"SELECT ?developer
WHERE {
  dbpedia:Minecraft dbpedia-owl:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
38,Where did Hillel Slovak die?,"SELECT ?place_of_death WHERE {
  dbpedia:Hillel_Slovak dbpedia-owl:deathPlace ?place_of_death .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
39,What movies does Jesse Eisenberg play in?,"SELECT DISTINCT ?movie
WHERE {
  ?actor dbo:starring dbr:Jesse_Eisenberg .
  ?movie dbo:starring ?actor .
  ?movie rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
40,Give all swimmers that were born in Moscow.,"SELECT ?swimmer
WHERE {
  ?swimmer a dbo:Person ;
           dbo:birthPlace dbr:Moscow ;
           dbo:occupation dbr:Swimmer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
41,Give me all cosmonauts.,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?cosmonaut
WHERE {
    ?cosmonaut rdf:type dbo:Cosmonaut .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
42,Give me all Swiss non-profit organizations.,"SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type <http://dbpedia.org/ontology/Non-profit_organisation> ;
               dbpedia-owl:country <http://dbpedia.org/resource/Switzerland> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
43,Which presidents were born in 1945?,"SELECT ?president
WHERE {
  ?president a dbpedia-owl:President ;
             dbpedia-owl:birthDate ?birthdate .
  FILTER (regex(str(?birthdate), ""1945""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
44,What kind of music did Lou Reed play?,"SELECT DISTINCT ?genre
WHERE {
  ?artist rdf:type dbo:MusicalArtist.
  ?artist foaf:name ""Lou Reed""@en.
  ?artist dbo:genre ?genre.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
45,Where do the Red Sox play?,"SELECT ?team ?teamName ?stadiumName
WHERE {
  ?team a dbo:SportsTeam ;
        rdfs:label ""Boston Red Sox""@en ;
        dbo:ground ?stadium .
  ?stadium rdfs:label ?stadiumName .
  FILTER(LANG(?stadiumName) = """" || LANGMATCHES(LANG(?stadiumName), ""en""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
46,Show a list of soccer clubs that play in the Bundesliga.,"SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league ?league .
  ?league rdfs:label ""Bundesliga""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
47,Which volcanos in Japan erupted since 2000?,"SELECT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:country dbr:Japan ;
           dbo:eruptionDate ?date .
  FILTER (year(?date) >= 2000)
}
ORDER BY ?date",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
48,Which bridges cross the Seine?,"SELECT ?bridge
WHERE {
  ?bridge rdf:type dbo:Bridge ;
          dbo:crosses dbr:Seine .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
49,What is the official color of the University of Oxford?,"SELECT ?color
WHERE {
  dbpedia:University_of_Oxford dbpedia-owl:officialSchoolColour ?color
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
50,How many films did Hal Roach produce?,"SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
51,Give me all Danish movies.,"SELECT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dbp:country ""Denmark""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
    ?person dbo:causeOfDeath ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
53,Who are the four youngest MVP basketball players?,"SELECT DISTINCT ?player ?age
WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:award ?award .
  ?award rdf:type dbo:MostValuablePlayerAward .
  ?award dbo:awardWinner ?player .
  ?award dbo:awardDate ?date .
  ?player dbo:birthDate ?birthDate .
  BIND(year(?date) - year(?birthDate) AS ?age)
}
ORDER BY ?age
LIMIT 4",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
54,Give me all companies in Munich.,"```sparql
SELECT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:location dbr:Munich .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
55,Give me the capitals of all countries that the Himalayas run through.,"SELECT DISTINCT ?capital
WHERE {
  ?country dbpedia-owl:capital ?capital ;
           dbpedia-owl:location ?location .
  ?location dbpedia-owl:locatedInArea <http://dbpedia.org/resource/Himalayas> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
56,How many movies did Park Chan-wook direct?,"SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Park_Chan-wook .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
57,Which rivers flow into a German lake?,"SELECT DISTINCT ?river
WHERE {
  ?river dbo:mouth ?lake .
  ?lake dbo:country dbr:Germany .
  ?river rdf:type dbo:River .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
59,Give me all islands that belong to Japan.,"```sparql
SELECT ?island
WHERE {
  ?island dct:subject dbc:Islands_of_Japan .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
60,How many inhabitants does Maribor have?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Maribor> <http://dbpedia.org/ontology/populationTotal> ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
61,Give me all Apollo 14 astronauts.,"SELECT ?astronaut
WHERE {
  dbpedia:Apollo_14 dbpedia-owl:astronaut ?astronaut .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
62,Which companies have more than 1 million employees?,"SELECT DISTINCT ?company
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
63,In which films directed by Garry Marshall was Julia Roberts starring?,"SELECT DISTINCT ?film
WHERE {
  ?film dbo:director dbr:Garry_Marshall ;
        dbo:starring dbr:Julia_Roberts .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
64,Give me all soccer clubs in the Premier League.,"SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league ?league .
  ?league rdfs:label ""Premier League""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
65,What is the highest place of the Urals?,"SELECT ?place ?elevation
WHERE {
  ?place rdf:type dbo:Mountain ;
         dbo:locatedInArea dbr:Ural_Mountains ;
         dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
66,Who is the governor of Wyoming?,"SELECT ?governor
WHERE {
  dbpedia:Wyoming dbpedia-gov:governor ?governor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
67,Where did the architect of the Eiffel Tower study?,"SELECT ?university
WHERE {
  <http://dbpedia.org/resource/Gustave_Eiffel> <http://dbpedia.org/ontology/education> ?university .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
68,Give me all world heritage sites designated within the past two years.,"SELECT ?site
WHERE {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dct:subject dbc:World_Heritage_Sites_by_year_of_inscription dbc:World_Heritage_Sites_in_2015 .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
69,Give me all actors who were born in Paris after 1950.,"SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Paris ;
         dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) > 1950)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
70,Which movies star both Liz Taylor and Richard Burton?,"SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
71,Give me all Australian nonprofit organizations.,"SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:NonprofitOrganisation ;
               dct:subject dbc:Non-profit_organisations_based_in_Australia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
72,Which pope succeeded John Paul II?,"SELECT ?successor
WHERE {
  dbr:Pope_John_Paul_II dbo:successor ?successor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
73,Give me all ESA astronauts.,"SELECT ?astronaut
WHERE {
  ?astronaut a <http://dbpedia.org/ontology/Astronaut> ;
             <http://dbpedia.org/ontology/agency> <http://dbpedia.org/resource/European_Space_Agency> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
74,Who was president of Pakistan in 1978?,"SELECT ?president
WHERE {
  dbpedia:Pakistan dbpedia-owl:leader ?president .
  ?president dbpedia-owl:office dbpedia:President_of_Pakistan .
  ?president dbpprop:termStart ?start .
  ?president dbpprop:termEnd ?end .
  FILTER (?start <= ""1978-01-01""^^xsd:date && ?end >= ""1978-12-31""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
75,Who is the owner of Rolls-Royce?,"SELECT ?owner
WHERE {
  dbpedia:Rolls-Royce_Motor_Cars dbo:owner ?owner .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
76,How many museums does Paris have?,"SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:Paris .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
77,Where was JFK assassinated?,"SELECT ?place
WHERE {
  dbr:Assassination_of_John_F._Kennedy dbo:location ?place
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
78,Give me all federal chancellors of Germany.,"SELECT ?chancellor
WHERE {
  ?chancellor a dbo:Chancellor ;
             dbo:country dbr:Germany .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
79,Show me everyone who was born on Halloween.,"SELECT ?person ?name
WHERE {
  ?person dbo:birthDate ""1966-10-31""^^xsd:date .
  ?person foaf:name ?name .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
80,Which beer originated in Ireland?,"SELECT DISTINCT ?beer
WHERE {
    ?beer dct:subject dbc:Beer_brands_of_Ireland .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
81,To which countries does the Himalayan mountain system extend?,"SELECT DISTINCT ?country
WHERE {
  ?himalayas dbo:locatedInArea ?country .
  ?himalayas rdf:type dbo:MountainRange .
  FILTER regex(str(?himalayas), ""Himalayas"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
82,Which actors were born in Germany?,"SELECT ?actor
WHERE {
  ?actor a <http://dbpedia.org/ontology/Actor> ;
         <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
83,How much carbs does peanut butter have?,"SELECT ?carbsAmount
WHERE {
  dbpedia:Peanut_butter dbo:carbohydrate ?carbsAmount
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:producer ?producer .
}
GROUP BY ?producer
ORDER BY DESC(?numFilms)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
85,How many employees does Google have?,"SELECT ?employees 
WHERE {
  dbpedia:Google dbo:numberOfEmployees ?employees
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
86,Give me all actors who were born in Berlin.,"SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Berlin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
87,Who created Goofy?,"SELECT ?creator
WHERE {
  dbr:Goofy dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
88,Which music albums contain the song Last Christmas?,"SELECT DISTINCT ?album
WHERE {
  ?song dbo:album ?album .
  ?song foaf:name ""Last Christmas""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
89,When was Alberta admitted as province?,"SELECT ?date
WHERE {
  dbr:Alberta dbo:formationDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
90,How many missions does the Soyuz programme have?,"SELECT (COUNT(?mission) AS ?numMissions)
WHERE {
    ?mission dct:subject dbc:Soyuz_programme .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
91,Give me all the TV shows with Neil Patrick Harris.,"SELECT DISTINCT ?show
WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris .
  ?show rdf:type dbo:TelevisionShow .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
92,When were the Hells Angels founded?,"SELECT ?date
WHERE {
  dbr:Hells_Angels dbo:formationDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
93,What is the net income of Apple?,"SELECT ?netIncome
WHERE {
  dbpedia:Apple_Inc dbpedia-owl:netIncome ?netIncome
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
94,Give me all Swedish holidays.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?holiday
WHERE {
    ?holiday dbo:country dbr:Sweden ;
             a dbo:Holiday .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
95,In which city was the former Dutch queen Juliana buried?,"SELECT ?city 
WHERE {
  dbr:Juliana_of_the_Netherlands dbo:burialPlace ?burialPlace .
  ?burialPlace dbo:location ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
96,List all the musicals with music by Leonard Bernstein.,"SELECT DISTINCT ?musical
WHERE {
  ?musical a dbo:Musical ;
           dbo:composer dbr:Leonard_Bernstein .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
97,Give me all companies in the advertising industry.,"SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dct:subject dbc:Advertising_agencies .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
98,What is the largest metropolitan area in Washington state?,"SELECT ?metropolitanArea ?population
WHERE {
  ?metropolitanArea a dbo:MetropolitanArea ;
                   dbo:country dbr:Washington_(state) ;
                   dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
99,Who killed John Lennon?,"SELECT ?killer
WHERE {
  dbpedia:John_Lennon dbo:deathCause ?cause .
  ?cause rdfs:label ?killer
  FILTER (lang(?killer) = 'en')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
100,Which writers studied in Istanbul?,"SELECT DISTINCT ?writer
WHERE {
  ?writer dct:subject dbc:Writers_by_city_and_town_in_Turkey .
  ?writer dct:subject dbc:Writers_who_studied_in_Istanbul
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
101,Give me all Australian metalcore bands.,"SELECT DISTINCT ?band
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:genre dbr:Metalcore ;
        dbo:country dbr:Australia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
102,Which countries adopted the Euro?,"SELECT DISTINCT ?country
WHERE {
  ?country a dbo:Country ;
           dbo:currency dbr:Euro .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
103,Give me all types of eating disorders.,"SELECT DISTINCT ?eatingDisorder
WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
104,Was Marc Chagall a jew?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
    ?person a dbo:Person ;
            dbo:religion dbr:Judaism ;
            foaf:name ""Marc Chagall""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT ?rank
WHERE {
  dbpedia:Brazil dbp:lowestFifaRank ?rank
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
106,How many films did Leonardo DiCaprio star in?,"SELECT (COUNT(?film) as ?count)
WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
  ?film rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
107,Was Margaret Thatcher a chemist?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbo:Chemist ;
          foaf:name ""Margaret Thatcher""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
108,Which U.S. states are in the same time zone as Utah?,"SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timeZone .
  ?state dbpedia-owl:timeZone ?timeZone .
  FILTER (?state != dbpedia:Utah)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
109,Give me all books written by Danielle Steel.,"SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:Danielle_Steel .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
110,Which country has the most official languages?,"SELECT ?country ?numLanguages
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
  {
    SELECT ?country (COUNT(?language) AS ?numLanguages)
    WHERE {
      ?country a dbo:Country ;
               dbo:officialLanguage ?language .
    }
    GROUP BY ?country
    ORDER BY DESC(?numLanguages)
    LIMIT 1
  }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
111,What is the total amount of men and women serving in the FDNY?,"SELECT (COUNT(?person) AS ?total) 
WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:occupation dbr:Firefighter .
  ?person dbo:employer dbr:New_York_City_Fire_Department .
  ?person dbo:gender ?gender .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
112,Which actor played Chewbacca?,"SELECT ?actor
WHERE {
  ?actor dbo:portrayed ?character .
  FILTER (?character = dbr:Chewbacca)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
113,Give me all libraries established earlier than 1400.,"SELECT ?library ?established
WHERE {
  ?library a dbpedia-owl:Library ;
           dbpedia-owl:established ?established .
  FILTER (?established < ""1400-01-01""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
114,Which programming languages were influenced by Perl?,"SELECT DISTINCT ?language
WHERE {
    ?language dbo:influencedBy dbr:Perl .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
115,In which U.S. state is Mount McKinley located?,"SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Mount_McKinley> dbpedia-owl:location ?state .
  ?state a dbpedia-owl:State .
  ?state dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
116,What airlines are part of the SkyTeam alliance?,"SELECT ?airline
WHERE {
  ?airline dct:subject dbc:SkyTeam
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
117,Which ships were called after Benjamin Franklin?,"SELECT ?ship
WHERE {
  ?ship dbo:shipName ""Benjamin Franklin""@en
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
118,Give me all Methodist politicians.,"SELECT DISTINCT ?politician
WHERE {
  ?politician a dbo:Politician ;
              dbo:party dbr:Methodism .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
119,What other books have been written by the author of The Fault in Our Stars?,"SELECT DISTINCT ?book
WHERE {
  ?author foaf:name ""John Green""@en .
  ?book dbo:author ?author .
  FILTER (?book != dbr:The_Fault_in_Our_Stars)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
120,What is the highest mountain?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
121,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a dbo:Person ;
        dbo:author ?book .
}
GROUP BY ?poet
ORDER BY DESC(?numBooks)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
122,Which programming languages influenced Javascript?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?language
WHERE {
    dbo:JavaScript dbo:influencedBy ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
123,Which musician wrote the most books?,"SELECT ?musician ?count
WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:author ?book .
  {
    SELECT ?musician (COUNT(?book) AS ?count)
    WHERE {
      ?musician a dbo:MusicalArtist ;
                dbo:author ?book .
    }
    GROUP BY ?musician
    ORDER BY DESC(?count)
    LIMIT 1
  }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
124,Which films starring Clint Eastwood did he direct himself?,"SELECT ?film
WHERE {
  ?film dbo:director dbr:Clint_Eastwood .
  ?film dbo:starring dbr:Clint_Eastwood .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
125,Which software has been developed by organizations founded in California?,"SELECT DISTINCT ?software
WHERE {
  ?organization dbo:location dbr:California .
  ?organization dbo:product ?software .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
126,Which instruments does Cat Stevens play?,"SELECT ?instrument
WHERE {
  dbpedia:Cat_Stevens dbpedia-owl:instrument ?instrument .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
127,How many airlines are members of the Star Alliance?,"SELECT (COUNT(?airline) as ?count)
WHERE {
  ?airline a <http://dbpedia.org/ontology/Airline> ;
           <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/Star_Alliance> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
128,Give me all actors called Baldwin.,"SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?name .
  FILTER regex(?name, ""Baldwin"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
129,Who wrote The Hunger Games?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Hunger Games""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
130,For which label did Elvis record his first album?,"SELECT ?label
WHERE {
  ?album dbo:artist dbr:Elvis_Presley ;
        rdfs:label ?label .
  FILTER regex(?label, ""Elvis Presley"", ""i"")
}
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
131,Is Christian Bale starring in Batman Begins?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>

SELECT ?actor
WHERE {
  dbpedia:Batman_Begins dbpedia2:starring ?actor .
  FILTER (?actor = dbpedia:Christian_Bale)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
132,Where is the residence of the prime minister of Spain?,"SELECT ?residence 
WHERE {
  <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/ontology/residence> ?residence
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?film) AS ?numMovies)
WHERE {
  ?actor a dbo:Actor ;
         dbo:starring ?film .
}
GROUP BY ?actor
ORDER BY DESC(?numMovies)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
134,Which countries have more than two official languages?,"SELECT DISTINCT ?country WHERE {
    ?country a dbo:Country ;
             dbo:officialLanguage ?language .
    {
        SELECT ?country (COUNT(?language) AS ?numLanguages) WHERE {
            ?country a dbo:Country ;
                     dbo:officialLanguage ?language .
        } GROUP BY ?country
    }
    FILTER (?numLanguages > 2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
135,Which countries have more than ten caves?,"SELECT ?country (COUNT(?cave) AS ?numCaves)
WHERE {
  ?country a dbo:Country ;
           dbo:caves ?cave .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 10)
ORDER BY DESC(?numCaves)",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"SELECT ?song
WHERE {
  ?song rdf:type dbo:Song .
  ?song dbo:artist dbr:Bruce_Springsteen .
  ?song dbo:releaseDate ?date .
  FILTER (xsd:integer(?date) >= 1980 && xsd:integer(?date) <= 1990)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
137,Which television shows were created by John Cleese?,"SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show rdf:type dbo:TelevisionShow .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
138,When did Latvia join the EU?,"SELECT ?date
WHERE {
  dbr:Latvia dbo:accessionDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
139,Which soccer players were born on Malta?,"SELECT ?player
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthPlace dbr:Malta .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
140,How many politicians graduated from Columbia University?,"SELECT (COUNT(?politician) AS ?count)
WHERE {
  ?politician a dbpedia-owl:Politician ;
              dbpprop:almaMater dbr:Columbia_University .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
141,Give me the birthdays of all actors of the television show Charmed.,"SELECT DISTINCT ?actor ?birthday
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthDate ?birthday ;
         dbo:starring dbr:Charmed_(TV_series) .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
142,Which telecommunications organizations are located in Belgium?,"SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation ;
               dbo:location dbr:Belgium ;
               dbo:industry dbr:Telecommunications .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
143,Give me a list of all lakes in Denmark.,"SELECT ?lake
WHERE {
  ?lake rdf:type dbo:Lake ;
        dbo:country dbr:Denmark .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
144,How many children does Eddie Murphy have?,"SELECT (COUNT(?child) as ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Eddie_Murphy> dbpedia-owl:child ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
145,Show me all English Gothic buildings in Kent.,"SELECT ?building
WHERE {
  ?building rdf:type dbo:Building ;
           dbo:architecturalStyle dbr:English_Gothic_architecture ;
           dbo:location dbr:Kent ;
           dbo:abstract ?abstract .
  FILTER (langMatches(lang(?abstract), ""en""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
146,Who is the manager of Real Madrid?,"SELECT ?manager
WHERE {
  dbpedia:Real_Madrid dbpedia-owl:manager ?manager .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
147,In which countries can you pay using the West African CFA franc?,"SELECT DISTINCT ?country
WHERE {
  ?country dbpedia-owl:currency dbpedia:West_African_CFA_franc
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
148,Which holidays are celebrated around the world?,"SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
149,What is the longest river?,"SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
150,Which organizations were founded in 1930?,"SELECT ?organization
WHERE {
  ?organization dbo:formationYear 1930
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
151,What is the birth name of Angela Merkel?,"SELECT ?birthName
WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
152,Who has Tom Cruise been married to?,"SELECT ?spouse
WHERE {
  dbpedia:Tom_Cruise dbpedia-owl:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
153,Which weapons did Heckler & Koch develop?,"SELECT ?weapon
WHERE {
  ?weapon dbo:developer dbr:Heckler_&_Koch .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
154,What is the smallest city by area in Germany?,"SELECT ?city ?area
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Germany ;
        dbo:areaTotal ?area .
}
ORDER BY ASC(?area)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
155,What is the ruling party in Lisbon?,"SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Lisbon> dbpedia-owl:rulingParty ?party .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
156,How heavy is Jupiter's lightest moon?,"SELECT ?moon ?mass
WHERE {
  dbpedia:Jupiter dbo:moon ?moon .
  ?moon dbo:mass ?mass .
}
ORDER BY ASC(?mass)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
157,How many employees does IBM have?,"SELECT ?employees
WHERE {
  dbpedia:IBM dbo:numberOfEmployees ?employees
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
158,List all episodes of the first season of the HBO television series The Sopranos!,"SELECT ?episode
WHERE {
  ?season dbo:seasonNumber ""1""^^xsd:integer .
  ?season dbo:series <http://dbpedia.org/resource/The_Sopranos> .
  ?episode dbo:season ?season .
  ?episode rdf:type dbo:TelevisionEpisode .
}
ORDER BY ?episode",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
159,What does ICRO stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?icroLabel
WHERE {
  <http://dbpedia.org/resource/ICRO> rdfs:label ?icroLabel
  FILTER (lang(?icroLabel) = 'en')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
160,Does the new Battlestar Galactica series have more episodes than the old one?,"SELECT (COUNT(?newEpisodes) AS ?newEpisodesCount) (COUNT(?oldEpisodes) AS ?oldEpisodesCount)
WHERE {
  ?newSeries dbo:numberOfEpisodes ?newEpisodes ;
             dbo:related ?oldSeries .
  ?oldSeries dbo:numberOfEpisodes ?oldEpisodes .
  FILTER regex(str(?newSeries), ""Battlestar_Galactica_(2004_TV_series)"")
  FILTER regex(str(?oldSeries), ""Battlestar_Galactica_(1978_TV_series)"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
161,Give me all films produced by Hal Roach.,"SELECT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
162,Who played Agent Smith in Matrix?,"SELECT ?actor
WHERE {
  dbpedia:Agent_Smith dbo:starring ?actor .
  ?actor a dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
163,Which Greek parties are pro-European?,"SELECT DISTINCT ?party
WHERE {
  ?party rdf:type dbo:PoliticalParty ;
         dbo:country dbr:Greece ;
         dbo:position dbr:Pro-European
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
164,Give me a list of all bandleaders that play trumpet.,"SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:MusicalArtist ;
              dbo:instrument dbr:Trumpet .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
165,What is the second highest mountain on Earth?,"SELECT DISTINCT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
  FILTER (?height < 8848) 
}
ORDER BY DESC(?height)
LIMIT 1
OFFSET 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
166,Is Egypts largest city also its capital?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Egypt> <http://dbpedia.org/ontology/largestCity> ?city .
  <http://dbpedia.org/resource/Egypt> <http://dbpedia.org/ontology/capital> ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
167,Which rockets were launched from Baikonur?,"SELECT ?rocket
WHERE {
  ?rocket dbp:launchSite dbr:Baikonur_Cosmodrome .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
168,How many programming languages are there?,"SELECT (COUNT(?language) AS ?count)
WHERE {
    ?language a dbo:ProgrammingLanguage
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
169,Which Chess players died in the same place they were born in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
170,Who is the owner of Facebook?,"SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/property/owner> ?owner .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
171,Give me all movies with Tom Cruise.,"SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
172,In which U.S. state is Fort Knox located?,"SELECT ?state
WHERE {
  dbpedia:Fort_Knox dbpedia-owl:location ?state .
  ?state a dbpedia-owl:State
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"SELECT ?city
WHERE {
  ?city rdf:type dbo:City ;
        dbo:populationTotal ?population ;
        dbo:country dbr:New_Jersey ;
  FILTER (?population > 100000)
}
ORDER BY ?city",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
174,Which mountains are higher than the Nanga Parbat?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
  FILTER (?height > 8126 && ?mountain != dbr:Nanga_Parbat)
}
ORDER BY DESC(?height)",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
175,Give me all B-sides of the Ramones.,"SELECT ?bSide
WHERE {
  ?song rdf:type dbo:MusicalWork ;
        dbo:artist dbr:Ramones ;
        dbo:recordedIn ?album .
  ?album dbo:type dbr:B-side .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
176,What are the specialities of the UNC Health Care?,"SELECT ?speciality
WHERE {
  dbpedia:UNC_Health_Care dbpedia-owl:specialty ?speciality
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
177,When was Olof Palme shot?,"SELECT ?date
WHERE {
  dbr:Assassination_of_Olof_Palme dbo:date ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
178,List the seven kings of Rome.,"SELECT ?king ?name
WHERE {
  ?king a dbpedia-owl:Monarch ;
        dbpprop:title ""King of Rome"" ;
        rdfs:label ?name .
  FILTER(langMatches(lang(?name), ""en""))
}
LIMIT 7",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
179,Give me all people that were born in Vienna and died in Berlin.,"SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Vienna ;
          dbo:deathPlace dbr:Berlin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
180,Is Darth Vader Luke’s father?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  dbpedia:Darth_Vader dbpedia-owl:child ?child .
  ?father dbpedia-owl:child ?child .
  FILTER (?father != dbpedia:Darth_Vader)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
181,Show me all the breweries in Australia.,"SELECT ?brewery
WHERE {
  ?brewery a dbpedia-owl:Brewery ;
           dbpedia-owl:country dbpedia:Australia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"SELECT ?film
WHERE {
  ?film dbo:producer dbr:Steven_Spielberg ;
        dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
183,Give me all soccer clubs in Spain.,"SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:country dbr:Spain .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
184,Who produced films starring Natalie Portman?,"SELECT DISTINCT ?producer
WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
185,Give me all breeds of the German Shepherd dog.,"SELECT DISTINCT ?breed
WHERE {
  ?breed rdf:type dbo:DogBreed ;
         rdfs:label ?label .
  FILTER regex(?label, ""German Shepherd"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight
WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:team dbr:Chicago_Bulls .
  ?player dbo:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
187,Which languages are spoken in Estonia?,"SELECT DISTINCT ?language
WHERE {
  <http://dbpedia.org/resource/Estonia> <http://dbpedia.org/ontology/language> ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
188,What is the largest country in the world?,"SELECT ?country ?area
WHERE {
  ?country a dbo:Country ;
           dbo:areaTotal ?area .
}
ORDER BY DESC(?area)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
189,What is the largest city in america?,"SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:United_States ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
190,Who was the pope that founded the Vatican Television?,"SELECT ?pope 
WHERE {
  ?pope a dbpedia-owl:Pope ;
        dbpedia-owl:founded <http://dbpedia.org/resource/Vatican_Television> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
191,Who discovered Ceres?,"SELECT ?discoverer
WHERE {
  dbr:Ceres dbo:discoverer ?discoverer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
192,Who is the king of the Netherlands?,"SELECT ?king
WHERE {
  dbpedia:Netherlands dbpedia-owl:leader ?king .
  ?king a dbpedia-owl:Monarch .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
193,Is Cola a beverage?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?cola WHERE {
  ?cola rdf:type dbo:Beverage .
  FILTER regex(str(?cola), ""Cola"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"SELECT ?almaMater
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?almaMater .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
195,Who wrote the book Les Piliers de la terre?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""Les Piliers de la terre""@fr .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
196,Which airports does Yeti Airlines serve?,"SELECT DISTINCT ?airport
WHERE {
  ?airline dbo:airline ""Yeti Airlines"" .
  ?airline dbo:operates ?airport .
  ?airport a dbo:Airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
197,Where is the birthplace of Goethe?,"SELECT ?birthplace WHERE {
  dbpedia:Johann_Wolfgang_von_Goethe dbpedia-owl:birthPlace ?birthplace .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?event1 ?event2
WHERE {
  ?event1 dbo:startDate ?date1 ;
         dbo:eventType dbo:Cuban_Missile_Crisis .
  ?event2 dbo:startDate ?date2 ;
         dbo:eventType dbo:Bay_of_Pigs_Invasion .
  FILTER (?date1 < ?date2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
199,Which ingredients do I need for carrot cake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?ingredient
WHERE {
  <http://dbpedia.org/resource/Carrot_cake> dbo:ingredient ?ingredient
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
200,Who created Wikipedia?,"SELECT ?creator
WHERE {
  dbr:Wikipedia dct:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
201,What is the highest mountain in Saxony Germany?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:locatedInArea dbr:Saxony ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
202,Who is the current federal minister of finance in Germany?,"SELECT ?minister
WHERE {
  ?minister a dbpedia-owl:Person ;
           dbpprop:title ""Federal Minister of Finance of Germany"" ;
           dbpprop:incumbent ?currentMinister .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
203,In which country is Mecca located?,"SELECT ?country
WHERE {
  dbpedia:Mecca dbpedia-owl:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor 
WHERE {
  ?actor dbo:starring dbr:Breaking_Bad ;
         dbo:character dbr:Gus_Fring .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
205,In which country does the Nile start?,"SELECT ?country 
WHERE {
    <http://dbpedia.org/resource/Nile> dbpedia-owl:sourceCountry ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
206,In which state Penn State University is located?,"SELECT ?state
WHERE {
  dbpedia:Penn_State_University dbpedia-owl:state ?state .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
207,What is the biggest stadium in Spain?,"SELECT ?stadium ?name ?capacity
WHERE {
  ?stadium a dbo:Stadium ;
           dbo:location dbr:Spain ;
           dbo:capacity ?capacity ;
           foaf:name ?name .
}
ORDER BY DESC(?capacity)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach
WHERE {
  ?team rdf:type dbo:IceHockeyTeam ;
        rdfs:label ""Ankara"" ;
        dbo:coach ?coach .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
209,How large is the area of UK?,"SELECT ?area
WHERE {
  <http://dbpedia.org/resource/United_Kingdom> <http://dbpedia.org/ontology/areaTotal> ?area
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
210,Who created Batman?,"SELECT ?creator 
WHERE {
  <http://dbpedia.org/resource/Batman> dbpedia-owl:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
211,Was Sigmund Freud married?,"SELECT ?married 
WHERE {
  dbpedia:Sigmund_Freud dbpedia-owl:spouse ?married
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
212,Who are the developers of DBpedia?,"SELECT ?developer
WHERE {
  dbpedia:DBpedia dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
213,Give me all movies directed by Francis Ford Coppola.,"SELECT ?movie
WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
  ?movie rdf:type dbo:Film
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
214,Are tree frogs a type of amphibian?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?type
WHERE {
  dbo:Tree_frog dbo:wikiPageRedirects ?redirect .
  ?redirect dbo:wikiPageDisambiguates ?type .
  ?type a dbo:Amphibian
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
215,What is the location of the Houses of Parliament?,"SELECT ?location 
WHERE {
  <http://dbpedia.org/resource/Houses_of_Parliament> dbpedia-owl:location ?location
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
216,how much is the elevation of Düsseldorf Airport ?,"SELECT ?elevation
WHERE {
  dbpedia:Düsseldorf_Airport dbo:elevation ?elevation
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
217,How much is the population of mexico city ?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Mexico_City> <http://dbpedia.org/ontology/populationTotal> ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
218,when was the founding date of french fifth republic?,"SELECT ?date
WHERE {
  dbr:French_Fifth_Republic dbo:formationDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
219,Who was the first King of England?,"SELECT ?king
WHERE {
  ?king a dbpedia-owl:Monarch ;
        dbpedia-owl:reignStart ?start .
  FILTER (?start < ""1066-01-01""^^xsd:date)
}
ORDER BY ?start
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
220,Who is the editor of Forbes?,"SELECT ?editor
WHERE {
  <http://dbpedia.org/resource/Forbes> <http://dbpedia.org/ontology/editor> ?editor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
221,Which awards did Douglas Hofstadter win?,"SELECT ?award
WHERE {
  dbpedia:Douglas_Hofstadter dbpedia-owl:award ?award .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
222,Who is the youngest Darts player?,"SELECT ?player ?age
WHERE {
  ?player a dbo:DartsPlayer ;
          dbo:birthDate ?birthDate .
  BIND(now() - xsd:date(?birthDate) AS ?age)
}
ORDER BY ?age
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
223,Is horse racing a sport?,"SELECT ?sport
WHERE {
  dbpedia:Horse_racing dct:subject ?sport .
  FILTER regex(str(?sport), ""Sport"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river
WHERE {
  <http://dbpedia.org/resource/Brooklyn_Bridge> dbpedia-owl:crosses ?river .
  ?river a <http://dbpedia.org/ontology/River> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
225,How many people live in Poland?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/populationTotal> ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
226,When was the last episode of the TV series Friends aired?,"SELECT ?date
WHERE {
  dbpedia:Friends dbpedia-owl:completionDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
227,Is the wife of president Obama called Michelle?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Michelle_Obama)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
229,Who is 8th president of US?,"SELECT ?president
WHERE {
  ?president a dbo:President ;
             dbo:number 8 .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
230,how much is the total population of  european union?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/European_Union> <http://dbpedia.org/ontology/populationTotal> ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
231,Give me all launch pads operated by NASA.,"```sparql
SELECT ?launchPad
WHERE {
  ?launchPad rdf:type dbo:LaunchPad ;
             dbo:operator dbr:NASA .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
232,Who developed the video game World of Warcraft?,"SELECT ?developer
WHERE {
  dbpedia:World_of_Warcraft dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
233,What is the birth name of Adele?,"SELECT ?birthName
WHERE {
  dbpedia:Adele dbpedia-owl:birthName ?birthName
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
234,What is the population of Cairo?,"SELECT ?population
WHERE {
  dbpedia:Cairo dbo:populationTotal ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
235,Is Frank Herbert still alive?,"SELECT ?person ?name ?date_of_birth ?date_of_death
WHERE {
  ?person rdf:type dbo:Person ;
          foaf:name ?name ;
          dbo:birthDate ?date_of_birth .
  OPTIONAL { ?person dbo:deathDate ?date_of_death }
  FILTER (?name = ""Frank Herbert"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
236,What is the last work of Dan Brown?,"SELECT ?work
WHERE {
  dbpedia:Dan_Brown dbpedia-owl:notableWork ?work .
}
ORDER BY DESC(?work)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
237,Where is Sungkyunkwan University?,"SELECT ?location 
WHERE {
  dbpedia:Sungkyunkwan_University dbpedia-owl:location ?location .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
238,Who is the author of the interpretation of dreams?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Interpretation of Dreams""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
239,When was the death  of  Shakespeare?,"SELECT ?deathDate
WHERE {
  <http://dbpedia.org/resource/William_Shakespeare> <http://dbpedia.org/ontology/deathDate> ?deathDate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
241,Who developed Slack?,"SELECT ?developer
WHERE {
  dbr:Slack dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
242,Where is the origin of Carolina reaper?,"SELECT ?origin
WHERE {
  dbpedia:Carolina_Reaper dbpedia-owl:origin ?origin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
243,In which year was Rachel Stevens born?,"SELECT ?birthYear
WHERE {
  dbpedia:Rachel_Stevens dbo:birthDate ?birthDate .
  BIND(YEAR(?birthDate) AS ?birthYear)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
244,How often did Jane Fonda marry?,"SELECT (COUNT(?marriage) AS ?marriageCount)
WHERE {
    dbpedia:Jane_Fonda dbpedia-owl:spouse ?marriage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
245,Was the wife of president Lincoln called Mary?,"SELECT ?president_wife
WHERE {
  ?president dbp:spouse ?president_wife .
  ?president foaf:name ""Abraham Lincoln""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
246,Which cities does the Weser flow through?,"SELECT DISTINCT ?city
WHERE {
  ?river dbo:riverName ""Weser""@en .
  ?city dbo:locatedInArea ?river .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
247,In which programming language is GIMP written?,"SELECT ?language
WHERE {
  dbpedia:GIMP dbo:programmingLanguage ?language
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
248,Which university did Angela Merkel attend?,"SELECT ?university
WHERE {
  dbpedia:Angela_Merkel dbpedia-owl:almaMater ?university .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
249,List all the musicals with music by Elton John.,"SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:musicComposer dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
250,How many Aldi stores are there?,"SELECT (COUNT(?store) AS ?count)
WHERE {
  ?store rdf:type dbo:Company ;
         rdfs:label ""Aldi"" .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
251,What is the longest river in the world?,"SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
252,When was John Adams born?,"SELECT ?birthdate
WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthdate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
253,Which companies produce hovercrafts?,"SELECT DISTINCT ?company
WHERE {
  ?hovercraft dbo:manufacturer ?company .
  ?hovercraft rdf:type dbo:Hovercraft .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
254,Who was the wife of U.S. president Lincoln?,"SELECT ?wife
WHERE {
  dbpedia:Abraham_Lincoln dbpedia-owl:spouse ?wife .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
255,Which species does an elephant belong?,"SELECT ?species 
WHERE {
  dbpedia:Elephant dct:subject ?species .
  ?species skos:broader category:Species .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
256,How many people live in the capital of Australia?,"SELECT ?population
WHERE {
  dbpedia:Canberra dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
257,In which ancient empire could you pay with cocoa beans?,"SELECT ?empire
WHERE {
    ?empire dbpedia-owl:currency dbpedia:Cocoa_bean .
    ?empire a dbpedia-owl:HistoricalCountry .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
258,How many theories did Albert Einstein come up with?,"SELECT (COUNT(?theory) AS ?count)
WHERE {
  ?theory a dbo:ScientificTheory ;
          dbo:author dbr:Albert_Einstein .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
259,Who composed the soundtrack for Cameron's Titanic?,"SELECT ?composer
WHERE {
  <http://dbpedia.org/resource/Titanic_(1997_film)> dbpedia-owl:musicComposer ?composer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
260,Give me the runtime of Toy Story.,"SELECT ?runtime
WHERE {
  <http://dbpedia.org/resource/Toy_Story> <http://dbpedia.org/ontology/runningTime> ?runtime
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
262,With how many countries Iran has borders?,"SELECT (COUNT(?country) as ?borderCountries)
WHERE {
    dbr:Iran dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
263,Which electronics companies were founded in Beijing?,"SELECT DISTINCT ?company
WHERE {
  ?company dct:subject dbc:Electronics_companies_of_China ;
           dbo:foundationPlace dbr:Beijing .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
264,Who was the successor of John F. Kennedy?,"SELECT ?successor
WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
265,Who is the mayor of Paris?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/leaderName> ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
266,Did Arnold Schwarzenegger attend a university?,"SELECT ?university
WHERE {
  dbpedia:Arnold_Schwarzenegger dbpedia-owl:almaMater ?university
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
267,Is James Bond married?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?isMarried
WHERE {
  dbpedia:James_Bond dbpedia-owl:spouse ?isMarried
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
268,Does the Isar flow into a lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?lake
WHERE {
  dbo:Isar dbo:mouth ?lake .
  ?lake a dbo:Lake
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
269,Which Indian company has the most employees?,"SELECT ?company ?employees
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:country dbr:India ;
           dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?employees)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
270,Who was John F. Kennedy's vice president?,"SELECT ?vp
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:vicePresident ?vp .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
271,Which country does the creator of Miffy come from?,"SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Miffy> <http://dbpedia.org/ontology/creator> ?creator .
  ?creator <http://dbpedia.org/ontology/country> ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
273,In what city is the Heineken brewery?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Heineken_Brewery> dbpedia-owl:location ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
274,Is Barack Obama a democrat?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  FILTER (?party = dbpedia:Democratic_Party_(United_States))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
275,List the children of Margaret Thatcher.,"SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbp:children ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
276,From which region is the Melon de Bourgogne?,"SELECT ?region
WHERE {
  <http://dbpedia.org/resource/Melon_de_Bourgogne> dbo:region ?region .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
278,how big is the total area of North Rhine- Westphalia?,"SELECT ?area
WHERE {
  <http://dbpedia.org/resource/North_Rhine-Westphalia> <http://dbpedia.org/property/areaTotal> ?area
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
279,Which city has the most inhabitants?,"SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
280,What is Donald Trump's main business?,"SELECT ?business 
WHERE {
  dbpedia:Donald_Trump dbpedia-owl:occupation ?business .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
281,When will start the final match of the football world cup 2018?,"SELECT ?date
WHERE {
  dbpedia:2018_FIFA_World_Cup dbo:startDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
282,Which films did Stanley Kubrick direct?,"SELECT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
283,how much is the population  Iraq?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Iraq> <http://dbpedia.org/ontology/populationTotal> ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Toronto> <http://dbpedia.org/ontology/populationTotal> ?population .
}
ORDER BY DESC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
285,Who is the mayor of the capital of French Polynesia?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/French_Polynesia> <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://dbpedia.org/ontology/leaderName> ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
286,Give me all actors starring in movies directed by William Shatner.,"SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
287,How tall is Claudia Schiffer?,"SELECT ?height
WHERE {
  dbpedia:Claudia_Schiffer dbpedia-owl:height ?height
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
288,how much is the population densty rank of germany?,"SELECT ?rank
WHERE {
  dbpedia:Germany dbo:populationDensityRank ?rank
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
289,What is the highest mountain in Italy?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Italy ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
290,List all games by GMT.,"SELECT ?game
WHERE {
  ?game dct:creator dbc:GMT_Games .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
291,What is the official language of Suriname?,"SELECT ?language
WHERE {
  dbpedia:Suriname dbpedia-owl:officialLanguage ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
292,In which city did Nikos Kazantzakis die?,"SELECT ?city
WHERE {
  dbpedia:Nikos_Kazantzakis dbpedia-owl:deathPlace ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
293,What is in a chocolate chip cookie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?ingredient
WHERE {
  dbo:Chocolate_chip_cookie dbo:ingredient ?ingredient
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
294,In which country is the Limerick Lake?,"SELECT ?country
WHERE {
  dbpedia:Limerick_Lake dbpedia-owl:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
295,Give me all video games published by Mean Hamster Software.,"SELECT ?game
WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game rdf:type dbo:VideoGame
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
296,Give me all members of Prodigy.,"SELECT ?member
WHERE {
  <http://dbpedia.org/resource/Prodigy> <http://dbpedia.org/ontology/bandMember> ?member
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
297,In which time zone is Rome?,"SELECT ?timezone
WHERE {
  dbpedia:Rome dbpedia-owl:timeZone ?timezone
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
298,How high is the lighthouse in Colombo?,"SELECT ?height
WHERE {
  dbpedia:Colombo dbpedia-owl:height ?height
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
299,Who are the writers of the Wall album of Pink Floyd?,"SELECT DISTINCT ?writer
WHERE {
  ?album dbo:artist dbr:Pink_Floyd ;
        dbo:writer ?writer .
  FILTER (?album = dbr:The_Wall)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
300,Who is the mayor of Rotterdam?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Rotterdam> <http://dbpedia.org/ontology/leaderName> ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
301,What is the largest city in Australia?,"SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Australia ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
302,Who was married to president Chirac?,"SELECT ?spouse
WHERE {
  <http://dbpedia.org/resource/Jacques_Chirac> dbpedia-owl:spouse ?spouse
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
303,What form of government is found in South Africa?,"SELECT ?governmentType
WHERE {
  dbpedia:South_Africa dbpedia-owl:governmentType ?governmentType
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
304,How high is the Yokohama Marine Tower?,"SELECT ?height
WHERE {
  dbpedia:Yokohama_Marine_Tower dbpedia-owl:height ?height
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
305,Which holidays are celebrated around the world? test2,"PREFIX dcterms: <http://purl.org/dc/terms/>
SELECT DISTINCT ?holiday
WHERE {
    ?holiday a <http://dbpedia.org/ontology/Holiday> .
    ?holiday dcterms:subject <http://dbpedia.org/resource/Category:Holidays_by_country> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
306,Who is the tallest basketball player?,"SELECT DISTINCT ?player ?height
WHERE {
    ?player a dbpedia-owl:BasketballPlayer ;
            dbpedia-owl:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
307,How many languages are spoken in Turkmenistan?,"SELECT (COUNT(?language) AS ?count)
WHERE {
  ?country dbpedia-owl:officialLanguage ?language ;
           dbpedia-owl:commonName ""Turkmenistan""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
308,Did Che Guevara have children?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  dbpedia:Che_Guevara dbpedia2:children ?child
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?film
WHERE {
  dbr:Aki_Kaurismäki dbo:award dbr:Cannes_Film_Festival_Grand_Prix ;
                     dbo:director ?film_director .
  ?film dbo:director ?film_director .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
310,To which party does the mayor of Paris belong?,"SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Mayor_of_Paris> dbpedia-owl:party ?party
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver ?count
WHERE {
  ?driver a dbpedia-owl:FormulaOneRacer ;
          dbpedia-owl:careerStation ?station .
  {
    SELECT ?driver (COUNT(?station) AS ?count)
    WHERE {
      ?driver a dbpedia-owl:FormulaOneRacer ;
              dbpedia-owl:careerStation ?station .
    }
    GROUP BY ?driver
    ORDER BY DESC(?count)
    LIMIT 1
  }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
312,What country is Sitecore from?,"SELECT ?country 
WHERE {
  dbpedia:Sitecore dbo:location ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace
WHERE {
  dbpedia:Frank_Sinatra dbpedia-owl:birthPlace ?birthPlace
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
314,Is Christian Bale starring in Velvet Goldmine?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>

SELECT ?actor
WHERE {
  dbpedia:Velvet_Goldmine dbpedia2:starring ?actor .
  FILTER (?actor = dbpedia:Christian_Bale)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  dbpedia:Sonny_and_Cher dbpedia-owl:child ?son .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
316,How many ethnic groups live in Slovenia?,"SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
    <http://dbpedia.org/resource/Slovenia> dbpedia-owl:ethnicGroups ?ethnicGroup .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
317,What is the capital of Cameroon?,"SELECT ?capital 
WHERE {
  <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?capital .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
318,Was Natalie Portman born in the United States?,"SELECT ?person
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Natalie Portman"" ;
          dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:United_States .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
319,How many pages does War and Peace have?,"SELECT ?pages
WHERE {
  dbpedia:War_and_Peace dbo:numberOfPages ?pages
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
320,Who is the oldest child of Meryl Streep?,"SELECT ?child WHERE {
  dbpedia:Meryl_Streep dbpedia-owl:child ?child .
  ?child a dbpedia-owl:Person .
} ORDER BY DESC(?child) LIMIT 1
",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
321,Which television shows were created by Walt Disney?,"SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
322,What does IYCM stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?label
WHERE {
    <http://dbpedia.org/resource/IYCM> rdfs:label ?label
    FILTER (lang(?label) = 'en')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
323,Which types of grapes grow in Oregon?,"SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType dbo:region dbr:Oregon .
  ?grapeType rdf:type dbo:Grape .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
324,Was U.S. president Jackson involved in a war?,"SELECT ?war
WHERE {
  dbpedia:Andrew_Jackson dct:subject ?war .
  ?war dct:subject dbc:Wars_involving_the_United_States .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
325,When was the Titanic completed?,"SELECT ?completionDate
WHERE {
  dbr:Titanic dbo:completionDate ?completionDate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
326,Did Tesla win a nobel prize in physics?,"SELECT ?scientist ?prize
WHERE {
  ?scientist foaf:name ""Nikola Tesla""@en .
  ?scientist dbp:nobelPrizes ?prize .
  ?prize rdf:type dbo:NobelPrize .
  ?prize dbo:awardCategory dbr:Physics .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
327,How many states are in Mexico?,"SELECT (COUNT(?state) AS ?count)
WHERE {
    ?state a dbo:State ;
           dbo:country dbr:Mexico .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist
WHERE {
  ?scientist dbpedia-owl:knownFor dbr:Manhattan_Project ;
            dbpedia-owl:knownFor dbr:Nobel_Peace_Prize .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
329,How much did the Lego Movie cost?,"SELECT ?cost
WHERE {
  dbpedia:The_Lego_Movie dbo:budget ?cost
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
330,Who composed the music for Harold and Maude?,"SELECT ?composer
WHERE {
  ?film dbo:wikiPageID 118073 .
  ?film dbo:musicComposer ?composer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
331,List all episodes of the first season of the HBO television series The Sopranos.,"SELECT ?episode
WHERE {
  ?season dbo:seasonNumber ""1""^^xsd:integer .
  ?season dbo:series <http://dbpedia.org/resource/The_Sopranos> .
  ?episode dbo:season ?season .
  ?episode rdf:type dbo:TelevisionEpisode .
}
ORDER BY ?episode",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
332,Which city has the least inhabitants?,"SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
333,Where is Syngman Rhee buried?,"SELECT ?burialPlace 
WHERE {
  dbr:Syngman_Rhee dbo:burialPlace ?burialPlace
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
334,Does Neymar play for Real Madrid?,"SELECT ?player
WHERE {
  ?player rdf:type dbo:SoccerPlayer .
  ?player foaf:name ""Neymar"" .
  ?player dbo:team ?team .
  ?team foaf:name ""Real Madrid"" .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
335,Who wrote the book The Pillars of the Earth?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Pillars of the Earth""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
336,Do Prince Harry and Prince William have the same parents?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
SELECT ?parent1 ?parent2
WHERE {
  dbpedia:Prince_Harry dbpedia:parent ?parent1 .
  dbpedia:Prince_William dbpedia:parent ?parent2 .
  FILTER (?parent1 = ?parent2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?supervisor 
WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
338,Does Breaking Bad have more episodes than Game of Thrones?,"SELECT (COUNT(?breakingBadEpisode) AS ?breakingBadEpisodeCount) (COUNT(?gameOfThronesEpisode) AS ?gameOfThronesEpisodeCount)
WHERE {
  ?breakingBadSeries rdf:type dbo:TelevisionShow ;
                    rdfs:label ""Breaking Bad""@en ;
                    dbo:numberOfEpisodes ?breakingBadEpisode .
  
  ?gameOfThronesSeries rdf:type dbo:TelevisionShow ;
                      rdfs:label ""Game of Thrones""@en ;
                      dbo:numberOfEpisodes ?gameOfThronesEpisode .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
339,Who was Vincent van Gogh inspired by?,"SELECT DISTINCT ?inspiration
WHERE {
  ?artist dbo:influencedBy dbr:Vincent_van_Gogh .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building ?floors
WHERE {
  ?building rdf:type dbo:Building ;
           dbo:numberOfFloors ?floors .
  FILTER (?floors > 163 && ?building != dbr:Burj_Khalifa)
}
ORDER BY DESC(?floors)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
341,What was the final result of the War of the Roses?,"SELECT ?result
WHERE {
  dbpedia:War_of_the_Roses dbpedia-owl:result ?result
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
342,How much did Pulp Fiction cost?,"SELECT ?budget
WHERE {
  dbpedia:Pulp_Fiction dbo:budget ?budget
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
343,Is proinsulin a protein?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?protein
WHERE {
    dbo:Proinsulin dbo:wikiPageRedirects ?protein .
    ?protein a dbo:Protein .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
344,Do Urdu and Persian have a common root?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?language1 ?language2
WHERE {
  ?language1 dbo:languageFamily ?family .
  ?language2 dbo:languageFamily ?family .
  FILTER (?language1 = <http://dbpedia.org/resource/Urdu> && ?language2 = <http://dbpedia.org/resource/Persian>)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
345,Who is starring in Spanish movies produced by Benicio del Toro?,"SELECT DISTINCT ?actor
WHERE {
  ?movie dbp:starring ?actor .
  ?movie dbp:producer dbpedia:Benicio_del_Toro .
  ?movie dbp:country dbpedia:Spain .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
346,Is Lake Baikal bigger than the Great Bear Lake?,"SELECT ?baikalArea ?greatBearArea
WHERE {
  dbpedia:Lake_Baikal dbpedia-owl:area ?baikalArea .
  dbpedia:Great_Bear_Lake dbpedia-owl:area ?greatBearArea .
  FILTER (?baikalArea > ?greatBearArea)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
347,Show me all books in Asimov's Foundation series.,"SELECT ?book
WHERE {
  ?book dct:subject dbc:Foundation_series_books .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
348,Where was Bach born?,"SELECT ?birthPlace 
WHERE {
  <http://dbpedia.org/resource/Johann_Sebastian_Bach> dbpedia-owl:birthPlace ?birthPlace
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
349,Which city has the oldest running metro?,"SELECT ?city 
WHERE {
    ?metro rdf:type dbo:MetroSystem ;
           dbo:city ?city ;
           dbo:openingYear ?year .
} 
ORDER BY ASC(?year)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
350,Who designed the Brooklyn Bridge?,"SELECT ?designer
WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?designer
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
351,How many people live in Eurasia?,"SELECT (SUM(?population) as ?total_population)
WHERE {
  ?country rdf:type dbo:Country ;
           dbo:populationTotal ?population ;
           dbo:continent dbr:Eurasia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host
WHERE {
  ?wildlifeSpecials dbo:producer dbr:BBC.
  ?wildlifeSpecials dbo:starring ?host.
  FILTER regex(str(?wildlifeSpecials), ""Wildlife_Specials"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
353,"What is the total population of Melbourne, Florida?","SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Melbourne,_Florida> <http://dbpedia.org/ontology/populationTotal> ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
354,What country is Mount Everest in?,"SELECT ?country 
WHERE {
  dbr:Mount_Everest dbo:location ?country .
  ?country a dbo:Country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
355,To which artistic movement did the painter of The Three Dancers belong?,"SELECT ?movementLabel
WHERE {
  <http://dbpedia.org/resource/The_Three_Dancers> dbpedia-owl:author ?painter .
  ?painter dbpedia-owl:movement ?movement .
  ?movement rdfs:label ?movementLabel .
  FILTER(LANG(?movementLabel) = 'en')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
356,When did Operation Overlord commence?,"SELECT ?date
WHERE {
  dbr:Operation_Overlord dbo:startDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
357,What is the bridge with the longest span?,"SELECT ?bridge ?spanLength
WHERE {
  ?bridge rdf:type dbo:Bridge ;
          dbo:longestSpan ?spanLength .
}
ORDER BY DESC(?spanLength)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
358,Is there a video game called Battle Chess?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
359,Who was buried in the Great Pyramid of Giza?,"SELECT ?person
WHERE {
  <http://dbpedia.org/resource/Great_Pyramid_of_Giza> <http://dbpedia.org/ontology/burials> ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?plant
WHERE {
  dbr:Ford_Motor_Company dbo:manufacturingPlant ?plant .
  ?plant dbo:location dbr:Malaysia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
361,Did Socrates influence Aristotle?,"SELECT ?influencedBy
WHERE {
  dbpedia:Socrates dbo:influenced ?influencedBy .
  FILTER (?influencedBy = dbpedia:Aristotle)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
362,How many children did Benjamin Franklin have?,"SELECT (COUNT(?child) as ?numChildren)
WHERE {
    dbpedia:Benjamin_Franklin dbpedia-owl:child ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
363,How tall is Michael Jordan?,"SELECT ?height
WHERE {
  dbpedia:Michael_Jordan dbpedia-owl:height ?height
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
364,In which UK city are the headquarters of the MI6?,"SELECT ?city
WHERE {
  dbpedia:MI6 dbpedia:headquarter ?hq .
  ?hq dbpedia:city ?city .
  ?city dbpedia:country dbpedia:United_Kingdom
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
365,Who created Family Guy?,"SELECT ?creator
WHERE {
  dbpedia:Family_Guy dbpedia-owl:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
366,In which city does the Chile Route 68 end?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Chile_Route_68> <http://dbpedia.org/property/end> ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild
WHERE {
  dbpedia:Elvis_Presley dbpedia-owl:grandchild ?grandchild .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
368,When did the Ming dynasty dissolve?,"SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Ming_Dynasty> <http://dbpedia.org/ontology/dissolutionDate> ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
369,In which military conflicts did Lawrence of Arabia participate?,"SELECT DISTINCT ?conflict
WHERE {
  ?lawrence dbo:activeYearsStartYear ""1916""^^xsd:integer .
  ?lawrence dbo:activeYearsEndYear ""1918""^^xsd:integer .
  ?lawrence dbo:militaryCommand ?conflict .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
370,What is the timezone in San Pedro de Atacama?,"SELECT ?timezone
WHERE {
  dbpedia:San_Pedro_de_Atacama dbpedia-owl:timezone ?timezone .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
371,Give me all books by William Goldman with more than 300 pages.,"SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbp:author dbr:William_Goldman ;
        dbo:numberOfPages ?pages .
  FILTER (?pages > 300)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
372,What did Bruce Carver die from?,"SELECT ?cause_of_death
WHERE {
  dbpedia:Bruce_Carver dbo:causeOfDeath ?cause_of_death
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"SELECT ?subsidairy
WHERE {
  ?subsidairy dbo:parentCompany dbr:Lufthansa ;
              dbo:hub dbr:Dortmund_Airport, dbr:Berlin_Tegel_Airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
374,Does Abraham Lincoln's death place have a website?,"SELECT ?website
WHERE {
  dbpedia:Abraham_Lincoln dbpedia-owl:deathPlace ?deathPlace .
  ?deathPlace foaf:isPrimaryTopicOf ?website .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
375,Did Elvis Presley have children?,"SELECT ?child
WHERE {
  dbpedia:Elvis_Presley dbpedia-owl:child ?child
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
376,Is Michelle Obama the wife of Barack Obama?,"SELECT ?wife
WHERE {
  dbpedia:Michelle_Obama dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Barack_Obama)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
377,In which city does Sylvester Stallone live?,"SELECT ?city
WHERE {
  dbpedia:Sylvester_Stallone dbpedia-owl:birthPlace ?birthPlace.
  ?birthPlace dbpedia-owl:city ?city.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
378,Which books by Kerouac were published by Viking Press?,"SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:Jack_Kerouac ;
        dbo:publisher dbr:Viking_Press .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
379,Who wrote the song Hotel California?,"SELECT ?artist
WHERE {
  dbpedia:Hotel_California dbpedia-owl:artist ?artist .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
380,What is the capital of Canada?,"SELECT ?capital 
WHERE {
  <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?capital
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
381,Who is the mayor of Tel Aviv?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Tel_Aviv> <http://dbpedia.org/ontology/leaderName> ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
382,What form of government does Russia have?,"SELECT ?governmentType
WHERE {
  dbpedia:Russia dbpedia-owl:governmentType ?governmentType
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book
WHERE {
  ?person dbpedia-owl:author dbpedia:Muhammad_Ali ;
          dbpedia-owl:notableWork ?book .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
384,Who was the first to climb Mount Everest?,"SELECT ?person 
WHERE {
    ?person dbo:mountEverestAscentDate ?date .
    FILTER (?date = ""1953-05-29""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
385,How many languages are spoken in Colombia?,"SELECT (COUNT(?language) AS ?count)
WHERE {
    ?language a dbo:Language ;
              dbo:country dbr:Colombia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
386,What is the currency of the Czech Republic?,"SELECT ?currency
WHERE {
  <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?currency
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
387,Where in France is sparkling wine produced?,"SELECT DISTINCT ?region
WHERE {
  ?wine a dbo:SparklingWine ;
        dbo:country dbr:France ;
        dbo:region ?region .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
388,When did Boris Becker end his active career?,"SELECT ?endDate
WHERE {
  dbpedia:Boris_Becker dbpedia-owl:activeYearsEndDate ?endDate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke ;
        dbo:director dbr:Guy_Ritchie .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT DISTINCT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
391,Show me Hemingway's autobiography.,"SELECT ?autobiography
WHERE {
  ?person foaf:name ""Ernest Hemingway""@en .
  ?person dbp:notableWork ?autobiography .
  FILTER regex(?autobiography, ""autobiography"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
392,How tall is Amazon Eve?,"SELECT ?height
WHERE {
  dbpedia:Amazon_Eve dbpedia-owl:height ?height
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
393,What are the five boroughs of New York?,"SELECT ?borough
WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/property/boroughs> ?borough .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
394,Give me all Canadian Grunge record labels.,"SELECT DISTINCT ?label
WHERE {
  ?recordLabel a dbo:RecordLabel ;
               dbo:country dbr:Canada ;
               dbo:genre dbr:Grunge .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
395,In which country does the Ganges start?,"SELECT ?country 
WHERE {
  <http://dbpedia.org/resource/Ganges> <http://dbpedia.org/ontology/sourceCountry> ?country
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
396,Who is the founder of Penguin Books?,"SELECT ?founder WHERE {
  dbpedia:Penguin_Books dbpedia-owl:founder ?founder .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
397,Who wrote the Game of Thrones theme?,"SELECT ?composer
WHERE {
  <http://dbpedia.org/resource/Game_of_Thrones> dbpedia-owl:musicComposer ?composer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
398,Who is the president of Eritrea?,"SELECT ?president
WHERE {
  <http://dbpedia.org/resource/Eritrea> <http://dbpedia.org/ontology/president> ?president .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
399,In which city did John F. Kennedy die?,"SELECT ?city
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:deathPlace ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
400,What is the highest mountain in Australia?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Australia ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
401,Who writes the Farmers' Almanac?,"SELECT ?author
WHERE {
  ?farmersAlmanac dbpedia-owl:author ?author .
  FILTER (regex(?farmersAlmanac, ""Farmers'_Almanac"", ""i""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
402,Give me the currency of China.,"SELECT ?currency
WHERE {
  <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?currency
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
403,Give me all Swedish oceanographers.,"SELECT DISTINCT ?oceanographer
WHERE {
  ?oceanographer a <http://dbpedia.org/ontology/Oceanographer> ;
                 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Sweden> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
404,In which city are the headquarters of the United Nations?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/United_Nations> <http://dbpedia.org/ontology/headquarter> ?hq .
  ?hq <http://dbpedia.org/ontology/city> ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
405,Is Rita Wilson the wife of Tom Hanks?,"SELECT ?wife
WHERE {
  dbpedia:Rita_Wilson dbo:spouse dbpedia:Tom_Hanks .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
406,In which countries do people speak Japanese?,"SELECT DISTINCT ?country
WHERE {
  ?country dbpedia-owl:language dbpedia:Japanese_language
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
408,Which museum in New York has the most visitors?,"SELECT ?museum ?visitors
WHERE {
  ?museum a dbpedia-owl:Museum ;
          dbpedia-owl:visitors ?visitors .
  FILTER (?visitors > 0)
}
ORDER BY DESC(?visitors)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
409,What was the first Queen album?,"SELECT ?album
WHERE {
  ?album rdf:type dbo:Album ;
         dbo:artist dbr:Queen .
}
ORDER BY ?album
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?bandName
WHERE {
  dbpedia:Queens_of_the_Stone_Age dbpedia-owl:bandMember ?member .
  ?member foaf:name ?bandName .
}LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
411,What was the last movie with Alec Guinness?,"SELECT ?movie ?date
WHERE {
  ?movie rdf:type dbo:Film ;
         dbo:starring dbr:Alec_Guinness ;
         dbp:releaseDate ?date .
}
ORDER BY DESC(?date)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
412,Give me all actors starring in Last Action Hero.,"SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""Last Action Hero""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
413,Who discovered Pluto?,"SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discoverer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
1,List all boardgames by GMT.,"```sparql
SELECT ?game
WHERE {
  ?game dct:subject dbc:Board_games_by_publisher .
  ?game dct:publisher dbc:GMT_Games .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
2,Who developed Skype?,"```sparql
SELECT ?developer
WHERE {
  dbpedia:Skype dbpedia-owl:developer ?developer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
3,Which people were born in Heraklion?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person rdf:type dbo:Person .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
4,In which U.S. state is Area 51 located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Area_51> dbpedia-owl:location ?location .
  ?location dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
  ?location dbpedia-owl:state ?state .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
5,Who is the mayor of New York City?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/ontology/leaderName> ?mayor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
6,Which countries have places with more than two caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?place rdf:type dbo:Place ;
         dbo:location ?country .
  ?place dbo:location ?country .
  ?place dbo:numberOfCaves ?numCaves .
  FILTER (?numCaves > 2)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
7,Where did Abraham Lincoln die?,"```sparql
SELECT ?placeOfDeath
WHERE {
  dbpedia:Abraham_Lincoln dbo:deathPlace ?placeOfDeath .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
8,Which airports does Air China serve?,"```sparql
SELECT DISTINCT ?airport ?airportName
WHERE {
  ?airline a dbpedia-owl:Airline ;
           rdfs:label ""Air China""@en .
  ?route dbpedia-owl:airline ?airline ;
         dbpedia-owl:departureAirport ?airport .
  ?airport rdfs:label ?airportName .
  FILTER(langMatches(lang(?airportName), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
9,Give me all actors starring in movies directed by and starring William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner ;
        dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
10,What are the official languages of the Philippines?,"```sparql
SELECT ?language
WHERE {
  <http://dbpedia.org/resource/Philippines> <http://dbpedia.org/ontology/officialLanguage> ?language .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
11,Give me all Danish films.,"```sparql
SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dct:subject dbc:Danish_films .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Brad_Pitt ;
        dbo:director dbr:Guy_Ritchie .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
13,Give me the grandchildren of Bruce Lee.,"```sparql
SELECT ?grandchild
WHERE {
  dbr:Bruce_Lee dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
14,Which other weapons did the designer of the Uzi develop?,"```sparql
SELECT ?weapon
WHERE {
  <http://dbpedia.org/resource/Uzi> <http://dbpedia.org/ontology/designer> ?designer .
  ?designer <http://dbpedia.org/ontology/knownFor> ?weapon .
  FILTER (?weapon != <http://dbpedia.org/resource/Uzi>)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
15,Who is the owner of Universal Studios?,"```sparql
SELECT ?owner
WHERE {
  dbpedia:Universal_Studios dbpedia-owl:owner ?owner .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
16,Which state of the USA has the highest population density?,"```sparql
SELECT ?state ?populationDensity
WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?populationDensity .
} 
ORDER BY DESC(?populationDensity)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
17,Which monarchs were married to a German?,"```sparql
SELECT DISTINCT ?monarch
WHERE {
  ?monarch a dbpedia-owl:Monarch ;
           dbpedia-owl:spouse ?spouse .
  ?spouse dbpedia-owl:birthPlace ?birthPlace .
  ?birthPlace dbpedia-owl:country <http://dbpedia.org/resource/Germany> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
18,Which organizations were founded in 1950?,"SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:formationYear 1950.
  ?organization a dbo:Organisation.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
19,Who created the comic Captain America?,"```sparql
SELECT ?creator
WHERE {
  ?comic dbo:creator ?creator .
  ?comic foaf:name ""Captain America"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
20,Give me the Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  dbpedia:Apollo_14 dbpedia-owl:astronaut ?astronaut .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
21,Who wrote the book The pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
       rdfs:label ""The Pillars of the Earth""@en .
  FILTER(LANG(?author) = """" || LANGMATCHES(LANG(?author), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
22,Which state of the United States of America has the highest density?,"```sparql
SELECT ?state ?density
WHERE {
  ?state a dbpedia-owl:State ;
         dbpedia-owl:populationDensity ?density .
}
ORDER BY DESC(?density)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
23,Which spaceflights were launched from Baikonur?,"```sparql
SELECT ?spaceflight
WHERE {
  ?spaceflight dbpedia-owl:launchSite dbr:Baikonur_Cosmodrome .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
24,Give me a list of all trumpet players that were bandleaders.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet ;
              dbo:occupation dbr:Bandleader .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
25,Which U.S. states are in the same timezone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timezone .
  ?state dbpedia-owl:timeZone ?timezone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
26,Which U.S. states possess gold minerals?,"```sparql
SELECT DISTINCT ?state
WHERE {
  ?state dbpedia-owl:resourceCategory <http://dbpedia.org/resource/Category:Gold_mines_in_the_United_States> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
27,Who is the daughter of Ingrid Bergman married to?,"SELECT ?spouse
WHERE {
  ?ingridBergman dbo:child ?daughter .
  ?daughter dbo:spouse ?spouse .
  FILTER (?ingridBergman = dbr:Ingrid_Bergman)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
28,How deep is Lake Placid?,"```sparql
SELECT ?depth
WHERE {
  dbpedia:Lake_Placid dbo:maximumDepth ?depth
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
29,Show me all museums in London.,"```sparql
SELECT ?museum
WHERE {
  ?museum a dbpedia-owl:Museum ;
          dbpedia-owl:city dbpedia:London .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
30,Which caves have more than 3 entrances?,"```sparql
SELECT DISTINCT ?cave
WHERE {
  ?cave rdf:type dbo:Cave ;
        dbo:numberOfEntrances ?entrances .
  FILTER (?entrances > 3)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
31,Who is the tallest player of the Atlanta Falcons?,"```sparql
SELECT ?player ?height
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
         dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
32,What are the top-10 action role-playing video games according to IGN?,"```sparql
SELECT DISTINCT ?game ?rank
WHERE {
  ?game dbp:genre dbr:Action_role-playing_video_game ;
        dbp:rank ?rank .
}
ORDER BY ?rank
LIMIT 10
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
SELECT ?writer
WHERE {
  ?writer a dbo:Writer ;
          dbo:award dbr:Nobel_Prize_in_Literature .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
34,Show me all basketball players that are higher than 2 meters.,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:height ?height .
  FILTER (?height > 2)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
35,When was the Statue of Liberty built?,"```sparql
SELECT ?date
WHERE {
  dbr:Statue_of_Liberty dbo:constructionStart ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
36,Which states border Illinois?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbr:Illinois dbo:state ?state .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
37,Who developed Minecraft?,"SELECT ?developer
WHERE {
  <http://dbpedia.org/resource/Minecraft> dbpedia-owl:developer ?developer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
38,Where did Hillel Slovak die?,"```sparql
SELECT ?placeOfDeath
WHERE {
  dbpedia:Hillel_Slovak dbo:placeOfDeath ?placeOfDeath .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
39,What movies does Jesse Eisenberg play in?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?actor dbo:wikiPageID dbr:Jesse_Eisenberg ;
         dbo:starring ?movie .
  ?movie a dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
40,Give all swimmers that were born in Moscow.,"```sparql
SELECT ?swimmer
WHERE {
  ?swimmer a dbo:Person ;
           dbo:birthPlace dbr:Moscow ;
           dbo:occupation dbr:Swimmer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
41,Give me all cosmonauts.,"```sparql
SELECT ?cosmonaut
WHERE {
  ?cosmonaut a <http://dbpedia.org/ontology/Cosmonaut> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
42,Give me all Swiss non-profit organizations.,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a <http://dbpedia.org/ontology/Nonprofit> ;
                dct:subject <http://dbpedia.org/resource/Category:Non-profit_organisations_based_in_Switzerland> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
43,Which presidents were born in 1945?,"```sparql
SELECT ?president
WHERE {
  ?president a dbpedia-owl:President ;
            dbpedia-owl:birthDate ?birthDate .
  FILTER (regex(str(?birthDate), ""1945""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
44,What kind of music did Lou Reed play?,"```sparql
SELECT DISTINCT ?genre
WHERE {
  ?artist rdf:type dbo:MusicalArtist ;
          foaf:name ""Lou Reed""@en .
  ?album dbo:artist ?artist ;
         dbo:genre ?genre .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
45,Where do the Red Sox play?,"```sparql
SELECT ?team ?stadium
WHERE {
  ?team rdf:type dbo:SportsTeam ;
        rdfs:label ""Boston Red Sox""@en ;
        dbo:ground ?stadium .
  ?stadium rdf:type dbo:Stadium ;
           rdfs:label ?stadium_name .
  FILTER (lang(?stadium_name) = ""en"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
46,Show a list of soccer clubs that play in the Bundesliga.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club rdf:type dbo:SoccerClub ;
       dbo:league ?league .
  ?league rdfs:label ""Bundesliga""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
47,Which volcanos in Japan erupted since 2000?,"```sparql
SELECT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:country dbr:Japan ;
           dbo:eruptionDate ?date .
  FILTER (year(?date) >= 2000)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
48,Which bridges cross the Seine?,"```sparql
SELECT DISTINCT ?bridge
WHERE {
  ?bridge a dbpedia-owl:Bridge ;
          dbpedia-owl:crosses <http://dbpedia.org/resource/Seine> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
49,What is the official color of the University of Oxford?,"```sparql
SELECT ?color
WHERE {
  <http://dbpedia.org/resource/University_of_Oxford> dbpedia-owl:officialSchoolColor ?color
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
50,How many films did Hal Roach produce?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film rdf:type dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
51,Give me all Danish movies.,"```sparql
SELECT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dct:subject dbc:Danish_films .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
52,What is the most frequent cause of death?,"```sparql
SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
  ?person dbo:causeOfDeath ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
53,Who are the four youngest MVP basketball players?,"```sparql
SELECT DISTINCT ?player ?age
WHERE {
  ?player a dbpedia-owl:BasketballPlayer ;
          dbpprop:award dbpedia:MVP ;
          dbpprop:birthDate ?birthDate .
  BIND(now() - xsd:date(?birthDate) AS ?age)
}
ORDER BY ?age
LIMIT 4
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
54,Give me all companies in Munich.,"```sparql
SELECT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:location dbr:Munich .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
55,Give me the capitals of all countries that the Himalayas run through.,"```sparql
SELECT DISTINCT ?capital
WHERE {
  ?country dbpedia-owl:capital ?capital ;
           dbpedia-owl:location ?location .
  ?location dbpedia-owl:locatedInArea <http://dbpedia.org/resource/Himalayas> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
56,How many movies did Park Chan-wook direct?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Park_Chan-wook .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
57,Which rivers flow into a German lake?,"```sparql
SELECT DISTINCT ?river
WHERE {
  ?river dbo:mouth ?lake .
  ?lake dbo:country dbr:Germany .
  ?river a dbo:River .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
58,How many airlines are there?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbpedia-owl:Airline .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
59,Give me all islands that belong to Japan.,"```sparql
SELECT ?island
WHERE {
  ?island dct:subject dbc:Islands_of_Japan .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
60,How many inhabitants does Maribor have?,"SELECT ?population
WHERE {
  dbpedia:Maribor dbo:populationTotal ?population
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
61,Give me all Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut rdf:type dbo:Person .
  ?astronaut dbo:team ?team .
  ?team rdf:type dbo:Astronaut .
  ?team dbo:mission <http://dbpedia.org/resource/Apollo_14> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
62,Which companies have more than 1 million employees?,"```sparql
SELECT DISTINCT ?company ?companyName
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
  ?company rdfs:label ?companyName .
  FILTER (lang(?companyName) = 'en')
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
63,In which films directed by Garry Marshall was Julia Roberts starring?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Garry_Marshall ;
        dbo:starring dbr:Julia_Roberts .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
64,Give me all soccer clubs in the Premier League.,"```sparql
SELECT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league ?league .
  ?league rdfs:label ""Premier League""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
65,What is the highest place of the Urals?,"```sparql
SELECT ?place ?elevation
WHERE {
  ?place dct:subject dbc:Ural_Mountains ;
        dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
66,Who is the governor of Wyoming?,"SELECT ?governor
WHERE {
  dbpedia:Wyoming dbpedia-owl:governor ?governor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
67,Where did the architect of the Eiffel Tower study?,"SELECT ?architect ?studyLocation
WHERE {
  ?eiffelTower dbo:architect ?architect .
  ?architect dbo:education ?studyLocation .
  FILTER (?eiffelTower = dbr:Eiffel_Tower)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
68,Give me all world heritage sites designated within the past two years.,"```sparql
SELECT ?site ?siteLabel ?designationDate
WHERE {
  ?site wdt:P1435 wd:Q35852 ;
        wdt:P17 ?country ;
        wdt:P1435 ?designation ;
        wdt:P571 ?designationDate .
  FILTER(YEAR(?designationDate) >= YEAR(NOW()) - 2)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
69,Give me all actors who were born in Paris after 1950.,"```sparql
SELECT DISTINCT ?actor ?name ?birthDate
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Paris ;
         dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) > 1950)
  ?actor foaf:name ?name .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
70,Which movies star both Liz Taylor and Richard Burton?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
  ?movie rdf:type dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
71,Give me all Australian nonprofit organizations.,"```sparql
SELECT DISTINCT ?org
WHERE {
  ?org a <http://dbpedia.org/ontology/NonprofitOrganisation> ;
       <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
72,Which pope succeeded John Paul II?,"SELECT ?successor
WHERE {
  dbr:Pope_John_Paul_II dbo:successor ?successor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
73,Give me all ESA astronauts.,"```sparql
SELECT ?astronaut ?name
WHERE {
  ?astronaut a dbpedia-owl:Person ;
             dbpprop:agency dbpedia-owl:European_Space_Agency ;
             foaf:name ?name .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
74,Who was president of Pakistan in 1978?,"```sparql
SELECT ?president
WHERE {
  ?president dbp:office dbp:President_of_Pakistan ;
            dbp:termStart ?start ;
            dbp:termEnd ?end .
  FILTER (xsd:integer(?start) <= 1978 && xsd:integer(?end) >= 1978)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
75,Who is the owner of Rolls-Royce?,"```sparql
SELECT ?owner
WHERE {
  dbpedia:Rolls-Royce_Motor_Cars dbo:owner ?owner .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
76,How many museums does Paris have?,"```sparql
SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:Paris .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
77,Where was JFK assassinated?,"```sparql
SELECT ?place
WHERE {
  <http://dbpedia.org/resource/Assassination_of_John_F._Kennedy> dbpedia-owl:location ?place .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
78,Give me all federal chancellors of Germany.,"```sparql
SELECT ?chancellor ?birthDate ?deathDate
WHERE {
  ?chancellor a dbpedia-owl:Chancellor ;
              dbpprop:office dbpedia:Federal_Chancellor_of_Germany ;
              dbpprop:birthDate ?birthDate .
  OPTIONAL { ?chancellor dbpprop:deathDate ?deathDate }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
79,Show me everyone who was born on Halloween.,"```sparql
SELECT ?person ?name ?birthdate
WHERE {
  ?person dbo:birthDate ?birthdate ;
         foaf:name ?name .
  FILTER (regex(str(?birthdate), ""10-31""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
80,Which beer originated in Ireland?,"```sparql
SELECT DISTINCT ?beer
WHERE {
  ?beer dbo:origin dbpedia:Ireland .
  ?beer rdf:type dbo:Beer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
81,To which countries does the Himalayan mountain system extend?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?himalayas dbpedia-owl:location ?country .
  ?country a dbpedia-owl:Country .
  FILTER regex(str(?himalayas), ""Himalayas"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
82,Which actors were born in Germany?,"```sparql
SELECT DISTINCT ?actor ?birthPlace
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
83,How much carbs does peanut butter have?,"```sparql
SELECT ?carbsAmount
WHERE {
  dbpedia:Peanut_butter dbo:carbohydrate ?carbsAmount .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:producer ?producer .
}
GROUP BY ?producer
ORDER BY DESC(?numFilms)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
85,How many employees does Google have?,"```sparql
SELECT ?employees
WHERE {
  dbpedia:Google dbo:numberOfEmployees ?employees
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
86,Give me all actors who were born in Berlin.,"```sparql
SELECT ?actor ?actorName
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Berlin ;
         foaf:name ?actorName .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
87,Who created Goofy?,"```sparql
SELECT ?creator
WHERE {
  ?goofy dbo:creator ?creator .
  FILTER (?goofy = dbr:Goofy)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
88,Which music albums contain the song Last Christmas?,"SELECT DISTINCT ?album ?albumName
WHERE {
  ?song rdf:type dbo:Song ;
        rdfs:label ""Last Christmas""@en .
  ?album dbo:recordedIn ?song ;
        rdfs:label ?albumName .
}
LIMIT 10",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
89,When was Alberta admitted as province?,"```sparql
SELECT ?date
WHERE {
  dbpedia:Alberta dbpedia-owl:formationDate ?date .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
90,How many missions does the Soyuz programme have?,"```sparql
SELECT (COUNT(?mission) AS ?numMissions)
WHERE {
  ?mission dct:type dbc:Soyuz_programme_missions .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
91,Give me all the TV shows with Neil Patrick Harris.,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris .
  ?show rdf:type dbo:TelevisionShow .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
92,When were the Hells Angels founded?,"```sparql
SELECT ?date
WHERE {
  dbr:Hells_Angels dbo:formationDate ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
93,What is the net income of Apple?,"```sparql
SELECT ?netIncome
WHERE {
  dbpedia:Apple_Inc dbpedia-owl:netIncome ?netIncome
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
94,Give me all Swedish holidays.,"```sparql
SELECT ?holiday
WHERE {
  ?holiday dct:subject dbc:Public_holidays_in_Sweden .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
95,In which city was the former Dutch queen Juliana buried?,"```sparql
SELECT ?city
WHERE {
  dbpedia:Juliana_of_the_Netherlands dbpedia-owl:burialPlace ?burialPlace .
  ?burialPlace dbpedia-owl:city ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
96,List all the musicals with music by Leonard Bernstein.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical a dbo:Musical ;
           dbo:musicComposer dbr:Leonard_Bernstein .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
97,Give me all companies in the advertising industry.,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dct:subject dbc:Advertising_agencies .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
98,What is the largest metropolitan area in Washington state?,"```sparql
SELECT ?metropolitanArea ?population
WHERE {
  ?metropolitanArea a dbo:City ;
                   dbo:country dbr:United_States ;
                   dbo:state dbr:Washington ;
                   dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
99,Who killed John Lennon?,"```sparql
SELECT ?killer
WHERE {
  dbpedia:John_Lennon dbo:deathCause ?cause .
  ?cause rdfs:label ""assassination"" .
  dbpedia:John_Lennon dbo:deathPlace ?place .
  ?place dbo:death ?deathEvent .
  ?deathEvent dbo:perpetrator ?killer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
100,Which writers studied in Istanbul?,"```sparql
SELECT DISTINCT ?writer
WHERE {
  ?writer a dbo:Person ;
          dbo:birthPlace/dbo:location dbr:Istanbul .
  FILTER EXISTS { ?writer dbo:occupation dbr:Writer }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
101,Give me all Australian metalcore bands.,"```sparql
SELECT DISTINCT ?band
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:genre dbr:Metalcore ;
        dbo:origin dbr:Australia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
102,Which countries adopted the Euro?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbpedia-owl:currency dbr:Euro .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
103,Give me all types of eating disorders.,"```sparql
SELECT DISTINCT ?eatingDisorder
WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
104,Was Marc Chagall a jew?,"```sparql
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Marc Chagall"" ;
          dbo:religion dbr:Judaism .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
105,What was Brazil's lowest rank in the FIFA World Ranking?,"```sparql
SELECT ?rank
WHERE {
  dbpedia:Brazil dbpedia-owl:lowestFifaRank ?rank .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
106,How many films did Leonardo DiCaprio star in?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
  ?film rdf:type dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
107,Was Margaret Thatcher a chemist?,"SELECT ?person
WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""Margaret Thatcher""@en ;
          dbo:profession dbr:Chemist .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
108,Which U.S. states are in the same time zone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timeZone .
  ?state dbpedia-owl:timeZone ?timeZone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
109,Give me all books written by Danielle Steel.,"```sparql
SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:Danielle_Steel .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
110,Which country has the most official languages?,"```sparql
SELECT ?country ?numLanguages
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
  {
    SELECT ?country (COUNT(?language) AS ?numLanguages)
    WHERE {
      ?country a dbo:Country ;
               dbo:officialLanguage ?language .
    }
    GROUP BY ?country
    ORDER BY DESC(?numLanguages)
    LIMIT 1
  }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
111,What is the total amount of men and women serving in the FDNY?,"```sparql
SELECT (COUNT(?person) AS ?total)
WHERE {
  ?person a dbpedia-owl:Person ;
          dbpprop:department dbpedia:New_York_City_Fire_Department .
  FILTER (?person foaf:gender ""male"" || ?person foaf:gender ""female"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
112,Which actor played Chewbacca?,"SELECT ?actor
WHERE {
  ?film dbpedia-owl:starring ?actor .
  ?film dbpedia-owl:wikiPageWikiLink dbr:Chewbacca .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
113,Give me all libraries established earlier than 1400.,"```sparql
SELECT ?library ?name ?established
WHERE {
  ?library a dbpedia-owl:Library ;
           dbpedia-owl:foundingYear ?established ;
           rdfs:label ?name .
  FILTER (?established < 1400)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
114,Which programming languages were influenced by Perl?,"```sparql
SELECT DISTINCT ?language
WHERE {
  ?language dbo:influencedBy dbr:Perl .
  ?language rdf:type dbo:ProgrammingLanguage .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
115,In which U.S. state is Mount McKinley located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Mount_McKinley> dbpedia-owl:location ?location .
  ?location dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
  ?location dbpedia-owl:state ?state .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
116,What airlines are part of the SkyTeam alliance?,"```sparql
SELECT ?airline
WHERE {
  ?airline dbpedia-owl:subsidiary <http://dbpedia.org/resource/SkyTeam>.
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
117,Which ships were called after Benjamin Franklin?,"```sparql
SELECT ?ship
WHERE {
  ?ship dbo:shipName ""Benjamin Franklin""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
118,Give me all Methodist politicians.,"```sparql
SELECT DISTINCT ?politician
WHERE {
  ?politician a dbo:Politician ;
              dbo:party dbr:Methodism .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
119,What other books have been written by the author of The Fault in Our Stars?,"```sparql
SELECT ?book
WHERE {
  ?author foaf:name ""John Green""@en .
  ?author dbo:notableWork ?book .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
120,What is the highest mountain?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
121,Which poet wrote the most books?,"```sparql
SELECT ?poet (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a dbo:Person ;
        dbo:notableWork ?book .
}
GROUP BY ?poet
ORDER BY DESC(?numBooks)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
122,Which programming languages influenced Javascript?,"```sparql
SELECT ?influencedLanguage
WHERE {
  dbr:JavaScript dbo:influenced ?influencedLanguage .
  ?influencedLanguage a dbo:ProgrammingLanguage .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
123,Which musician wrote the most books?,"```sparql
SELECT ?musician (COUNT(?book) AS ?numBooks)
WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:notableWork ?book .
  ?book a dbo:Book .
}
GROUP BY ?musician
ORDER BY DESC(?numBooks)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
124,Which films starring Clint Eastwood did he direct himself?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Clint_Eastwood .
  ?film dbo:starring dbr:Clint_Eastwood .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
125,Which software has been developed by organizations founded in California?,"SELECT DISTINCT ?software
WHERE {
  ?organization dbo:location dbr:California .
  ?organization dbo:product ?software .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
126,Which instruments does Cat Stevens play?,"```sparql
SELECT DISTINCT ?instrument
WHERE {
  ?person dbpedia-owl:instrument ?instrument .
  ?person foaf:name ""Cat Stevens""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
127,How many airlines are members of the Star Alliance?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline dbo:alliance <http://dbpedia.org/resource/Star_Alliance> .
  ?airline a dbo:Airline .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
128,Give me all actors called Baldwin.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         foaf:surname ""Baldwin"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
129,Who wrote The Hunger Games?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Hunger Games""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
130,For which label did Elvis record his first album?,"SELECT ?albumLabel
WHERE {
  ?album dbo:artist dbr:Elvis_Presley ;
        rdf:type dbo:Album ;
        rdfs:label ?albumLabel .
}
ORDER BY ?album
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
131,Is Christian Bale starring in Batman Begins?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Batman Begins""@en .
  ?actor foaf:name ""Christian Bale""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
132,Where is the residence of the prime minister of Spain?,"```sparql
SELECT ?residence
WHERE {
  <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/ontology/residence> ?residence
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?film) AS ?numMovies)
WHERE {
  ?actor a dbo:Actor ;
         dbo:starring ?film .
}
GROUP BY ?actor
ORDER BY DESC(?numMovies)
LIMIT 1
OFFSET 0",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
134,Which countries have more than two official languages?,"```sparql
SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
  {
    SELECT ?country (COUNT(?language) AS ?numLanguages) WHERE {
      ?country a dbo:Country ;
               dbo:officialLanguage ?language .
    } GROUP BY ?country
  }
  FILTER (?numLanguages > 2)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
135,Which countries have more than ten caves?,"```sparql
SELECT ?country (COUNT(?cave) AS ?numCaves)
WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbo:location ?country .
} 
GROUP BY ?country
HAVING (COUNT(?cave) > 10)
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"```sparql
SELECT ?song
WHERE {
  ?song rdf:type dbo:Song ;
        dbo:artist dbr:Bruce_Springsteen ;
        dbo:releaseDate ?date .
  FILTER (xsd:integer(?date) >= 1980 && xsd:integer(?date) <= 1990)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
137,Which television shows were created by John Cleese?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show rdf:type dbo:TelevisionShow .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
138,When did Latvia join the EU?,"```sparql
SELECT ?date
WHERE {
  dbr:Latvia dbo:accessionDate ?date.
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
139,Which soccer players were born on Malta?,"```sparql
SELECT ?player ?birthDate
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthPlace dbr:Malta ;
          dbo:birthDate ?birthDate .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
140,How many politicians graduated from Columbia University?,"```sparql
SELECT (COUNT(?politician) AS ?count)
WHERE {
  ?politician a dbpedia-owl:Politician ;
              dbpprop:almaMater dbr:Columbia_University .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
141,Give me the birthdays of all actors of the television show Charmed.,"```sparql
SELECT ?actor ?birthday
WHERE {
  ?actor dbo:starring dbr:Charmed .
  ?actor dbo:birthDate ?birthday .
  ?actor a dbo:Actor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
142,Which telecommunications organizations are located in Belgium?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a dbo:Organisation ;
               dbo:location dbr:Belgium ;
               dbo:industry dbr:Telecommunication .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
143,Give me a list of all lakes in Denmark.,"```sparql
SELECT ?lake
WHERE {
  ?lake rdf:type dbo:Lake ;
        dbo:country dbr:Denmark .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
144,How many children does Eddie Murphy have?,"```sparql
SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Eddie_Murphy> dbpedia-owl:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
145,Show me all English Gothic buildings in Kent.,"```sparql
SELECT DISTINCT ?building
WHERE {
  ?building rdf:type dbo:Building ;
           dbo:architecturalStyle dbr:English_Gothic_architecture ;
           dbo:location dbr:Kent .
  FILTER (LANG(?building) = ""en"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
146,Who is the manager of Real Madrid?,"```sparql
SELECT ?manager
WHERE {
  dbpedia:Real_Madrid dbpedia-owl:manager ?manager .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
147,In which countries can you pay using the West African CFA franc?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbpedia-owl:currency dbr:West_African_CFA_franc .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
148,Which holidays are celebrated around the world?,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
149,What is the longest river?,"```sparql
SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
150,Which organizations were founded in 1930?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:formationYear 1930 .
  ?organization rdf:type dbo:Organisation .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
151,What is the birth name of Angela Merkel?,"```sparql
SELECT ?birthName
WHERE {
  dbpedia:Angela_Merkel dbpedia-owl:birthName ?birthName
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
152,Who has Tom Cruise been married to?,"```sparql
SELECT ?spouse
WHERE {
  dbpedia:Tom_Cruise dbpedia-owl:spouse ?spouse .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
153,Which weapons did Heckler & Koch develop?,"```sparql
SELECT ?weapon
WHERE {
  ?weapon dbo:developer dbr:Heckler_&_Koch .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
154,What is the smallest city by area in Germany?,"```sparql
SELECT ?city ?area
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Germany ;
        dbo:area ?area .
} 
ORDER BY ?area
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
155,What is the ruling party in Lisbon?,"```sparql
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Lisbon> dbpedia-owl:rulingParty ?party .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
156,How heavy is Jupiter's lightest moon?,"```sparql
SELECT ?moon ?mass
WHERE {
  ?moon dct:subject dbc:Moons_of_Jupiter ;
       dbo:meanRadius ?radius ;
       dbo:mass ?mass .
  FILTER (?mass > 0)
}
ORDER BY ?mass
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
157,How many employees does IBM have?,"SELECT ?employees
WHERE {
  dbpedia:IBM dbo:numberOfEmployees ?employees
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
158,List all episodes of the first season of the HBO television series The Sopranos!,"```sparql
SELECT ?episode ?title
WHERE {
  ?season dbo:series <http://dbpedia.org/resource/The_Sopranos> ;
          dbo:numberOfEpisodes ?numEpisodes .
  ?episode dbo:season ?season ;
           rdf:type dbo:TelevisionEpisode ;
           foaf:name ?title .
  FILTER (?season = 1)
}
ORDER BY ?episode
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
159,What does ICRO stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?definition
WHERE {
  <http://dbpedia.org/resource/ICRO> rdfs:comment ?definition
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
160,Does the new Battlestar Galactica series have more episodes than the old one?,"```sparql
SELECT (COUNT(?newEpisode) AS ?newEpisodes) (COUNT(?oldEpisode) AS ?oldEpisodes)
WHERE {
  ?newSeries dbo:numberOfEpisodes ?newEpisodes .
  ?oldSeries dbo:numberOfEpisodes ?oldEpisodes .
  FILTER(?newSeries = <http://dbpedia.org/resource/Battlestar_Galactica_(2004_TV_series)>)
  FILTER(?oldSeries = <http://dbpedia.org/resource/Battlestar_Galactica_(1978_TV_series)>)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
161,Give me all films produced by Hal Roach.,"```sparql
SELECT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film a dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
162,Who played Agent Smith in Matrix?,"SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""The Matrix""@en .
  ?actor foaf:name ""Hugo Weaving""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
163,Which Greek parties are pro-European?,"```sparql
SELECT DISTINCT ?party
WHERE {
  ?party a dbpedia-owl:PoliticalParty ;
         dbpedia-owl:ideology dbpedia:Pro-European ;
         dbpedia-owl:country dbpedia:Greece .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
164,Give me a list of all bandleaders that play trumpet.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:MusicalArtist ;
              dbo:instrument dbr:Trumpet .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
165,What is the second highest mountain on Earth?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
} 
ORDER BY DESC(?height)
LIMIT 2
OFFSET 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
166,Is Egypts largest city also its capital?,"```sparql
SELECT ?city ?capital
WHERE {
  dbpedia:Egypt dbpedia-owl:largestCity ?city ;
               dbpedia-owl:capital ?capital .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
167,Which rockets were launched from Baikonur?,"```sparql
SELECT ?rocket
WHERE {
  ?rocket dbp:launchSite dbr:Baikonur_Cosmodrome .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
168,How many programming languages are there?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
169,Which Chess players died in the same place they were born in?,"```sparql
SELECT DISTINCT ?player ?birthPlace
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
170,Who is the owner of Facebook?,"```sparql
SELECT ?owner
WHERE {
  dbpedia:Facebook dbpedia-owl:owner ?owner .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
171,Give me all movies with Tom Cruise.,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie rdf:type dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
172,In which U.S. state is Fort Knox located?,"```sparql
SELECT ?state
WHERE {
  dbpedia:Fort_Knox dbpedia-owl:location ?location .
  ?location dbpedia-owl:country dbpedia:United_States .
  ?location dbpedia-owl:state ?state .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"```sparql
SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:New_Jersey ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
174,Which mountains are higher than the Nanga Parbat?,"```sparql
SELECT DISTINCT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
  FILTER (?height > (SELECT ?elevation WHERE { dbr:Nanga_Parbat dbo:elevation ?elevation }))
}
ORDER BY DESC(?height)
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
175,Give me all B-sides of the Ramones.,"```sparql
SELECT ?bSide
WHERE {
  ?album dbo:artist dbr:Ramones ;
        dbo:type dbr:B-side .
  ?bSide dbo:partOf ?album .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
176,What are the specialities of the UNC Health Care?,"```sparql
SELECT ?specialty
WHERE {
  <http://dbpedia.org/resource/UNC_Health_Care> dbpedia-owl:specialty ?specialty .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
177,When was Olof Palme shot?,"```sparql
SELECT ?date
WHERE {
  dbr:Assassination_of_Olof_Palme dbo:date ?date .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
178,List the seven kings of Rome.,"```sparql
SELECT ?king ?reignStart ?reignEnd
WHERE {
  ?king a dbo:Monarch ;
       dbo:predecessor dbr:Romulus ;
       dbo:successor ?successor ;
       dbo:title dbr:King_of_Rome ;
       dbo:reignStart ?reignStart ;
       dbo:reignEnd ?reignEnd .
} ORDER BY ?reignStart
LIMIT 7
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
179,Give me all people that were born in Vienna and died in Berlin.,"```sparql
SELECT ?person ?personLabel
WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace dbr:Vienna ;
          dbo:deathPlace dbr:Berlin .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
180,Is Darth Vader Luke’s father?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  dbpedia:Darth_Vader dbpedia-owl:child ?child .
  ?father dbpedia-owl:child ?child .
  FILTER (?father != dbpedia:Darth_Vader)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
181,Show me all the breweries in Australia.,"```sparql
SELECT ?brewery
WHERE {
  ?brewery a dbpedia-owl:Brewery ;
           dbpedia-owl:country dbpedia:Australia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"```sparql
SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:producer dbr:Steven_Spielberg ;
        dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
183,Give me all soccer clubs in Spain.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:country dbr:Spain .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
184,Who produced films starring Natalie Portman?,"```sparql
SELECT DISTINCT ?producer
WHERE {
  ?film dbpedia-owl:starring dbpedia:Natalie_Portman ;
        dbpedia-owl:producer ?producer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
185,Give me all breeds of the German Shepherd dog.,"```sparql
SELECT ?breed
WHERE {
  ?breed rdf:type dbo:DogBreed ;
         rdfs:label ?label .
  FILTER regex(?label, ""German Shepherd"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
186,Who is the heaviest player of the Chicago Bulls?,"```sparql
SELECT ?player ?weight
WHERE {
  ?player dbpedia-owl:team dbpedia:Chicago_Bulls ;
          dbpedia-owl:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
187,Which languages are spoken in Estonia?,"```sparql
SELECT DISTINCT ?language
WHERE {
  <http://dbpedia.org/resource/Estonia> <http://dbpedia.org/ontology/language> ?language .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
188,What is the largest country in the world?,"```sparql
SELECT ?country ?area
WHERE {
  ?country a dbo:Country ;
           dbo:areaTotal ?area .
}
ORDER BY DESC(?area)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
189,What is the largest city in america?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:United_States ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
190,Who was the pope that founded the Vatican Television?,"```sparql
SELECT ?pope
WHERE {
  ?pope dbp:office dbp:Pope ;
        dbp:founded dbp:Vatican_Television .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
191,Who discovered Ceres?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Ceres dbo:discoverer ?discoverer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
192,Who is the king of the Netherlands?,"```sparql
SELECT ?king
WHERE {
  dbpedia:Netherlands dbpedia-owl:leader ?king .
  ?king a dbpedia-owl:Monarch .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
193,Is Cola a beverage?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?cola
WHERE {
  ?cola rdf:type dbo:Beverage .
  FILTER regex(str(?cola), ""Cola"", ""i"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"```sparql
SELECT ?almaMater
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?almaMater .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
195,Who wrote the book Les Piliers de la terre?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""Les Piliers de la terre""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
196,Which airports does Yeti Airlines serve?,"```sparql
SELECT DISTINCT ?airport
WHERE {
  ?airline dbo:operates ?airport .
  ?airline foaf:name ""Yeti Airlines"" .
  ?airport a dbo:Airport .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
197,Where is the birthplace of Goethe?,"```sparql
SELECT ?birthplace
WHERE {
  <http://dbpedia.org/resource/Johann_Wolfgang_von_Goethe> dbpedia-owl:birthPlace ?birthplace .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"PREFIX dbo: <http://dbpedia.org/ontology/>

ASK {
  dbo:Cuban_Missile_Crisis dbo:startDate ?date1 .
  dbo:Bay_of_Pigs_Invasion dbo:startDate ?date2 .
  FILTER (?date1 < ?date2)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
199,Which ingredients do I need for carrot cake?,"```sparql
SELECT ?ingredient
WHERE {
  ?cake dbo:ingredient ?ingredient .
  FILTER regex(?cake, ""Carrot cake"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
200,Who created Wikipedia?,"```
SELECT ?creator
WHERE {
  dbpedia:Wikipedia dct:creator ?creator
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
201,What is the highest mountain in Saxony Germany?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Germany ;
           dbo:locatedInArea dbr:Saxony ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
202,Who is the current federal minister of finance in Germany?,"```sparql
SELECT ?minister
WHERE {
  ?minister a dbpedia-owl:Person ;
           dbpprop:title ""Federal Minister of Finance of Germany"" ;
           dbpprop:incumbent true .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
203,In which country is Mecca located?,"```sparql
SELECT ?country
WHERE {
  dbpedia:Mecca dbpedia-owl:country ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
204,Who played Gus Fring in Breaking Bad?,"```sparql
SELECT ?actor
WHERE {
  ?actor dbp:character ?character ;
         rdf:type dbo:Actor .
  FILTER regex(?character, ""Gus Fring"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
205,In which country does the Nile start?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Nile> dbpedia-owl:sourceCountry ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
206,In which state Penn State University is located?,"```sparql
SELECT ?state
WHERE {
  dbpedia:Pennsylvania_State_University dbpedia-owl:state ?state .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
207,What is the biggest stadium in Spain?,"```sparql
SELECT ?stadium ?capacity
WHERE {
  ?stadium a dbpedia-owl:Stadium ;
           dbpedia-owl:location dbpedia:Spain ;
           dbpedia-owl:capacity ?capacity .
}
ORDER BY DESC(?capacity)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach
WHERE {
  ?team dbpedia-owl:city dbpedia:Ankara ;
        dbpedia-owl:sport dbpedia:Ice_hockey ;
        dbpedia-owl:coach ?coach .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
209,How large is the area of UK?,"```sparql
SELECT ?area
WHERE {
  dbpedia:United_Kingdom dbo:areaTotal ?area
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
210,Who created Batman?,"```sparql
SELECT ?creator
WHERE {
  ?batman dbo:creator ?creator.
  FILTER regex(?creator, ""Batman"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
211,Was Sigmund Freud married?,"```sparql
SELECT ?person ?spouse
WHERE {
  ?person rdf:type dbo:Person ;
          foaf:name ""Sigmund Freud""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
212,Who are the developers of DBpedia?,"```sparql
SELECT ?developer
WHERE {
  dbpedia-owl:developer ?developer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
213,Give me all movies directed by Francis Ford Coppola.,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola.
  ?movie rdf:type dbo:Film.
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
214,Are tree frogs a type of amphibian?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?type
WHERE {
  dbr:Tree_frog dbo:wikiPageRedirects ?redirect .
  ?redirect rdf:type ?type .
  FILTER (?type = dbo:Amphibian)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
215,What is the location of the Houses of Parliament?,"```sparql
SELECT ?location
WHERE {
  <http://dbpedia.org/resource/Houses_of_Parliament> dbpedia-owl:location ?location .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
216,how much is the elevation of Düsseldorf Airport ?,"```sparql
SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
217,How much is the population of mexico city ?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Mexico_City> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
218,when was the founding date of french fifth republic?,"```sparql
SELECT ?foundingDate
WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?foundingDate
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
219,Who was the first King of England?,"```sparql
SELECT ?king ?kingName
WHERE {
  ?king a dbpedia-owl:Monarch ;
        dbpedia-owl:predecessor ?predecessor .
  ?predecessor a dbpedia-owl:Monarch .
  ?king foaf:name ?kingName .
} ORDER BY ?king
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
220,Who is the editor of Forbes?,"```sparql
SELECT ?editor
WHERE {
  dbpedia:Forbes dbo:editor ?editor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
221,Which awards did Douglas Hofstadter win?,"SELECT ?award
WHERE {
  dbpedia:Douglas_Hofstadter dbpedia-owl:award ?award
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
222,Who is the youngest Darts player?,"```sparql
SELECT ?player ?birthdate
WHERE {
  ?player a dbpedia-owl:DartsPlayer ;
          dbpedia-owl:birthDate ?birthdate .
}
ORDER BY DESC(?birthdate)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
223,Is horse racing a sport?,"```sparql
SELECT ?sport
WHERE {
  dbpedia:Horse_racing dct:subject ?sport .
  FILTER regex(str(?sport), ""sport"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
224,Which river does the Brooklyn Bridge cross?,"```sparql
SELECT ?river
WHERE {
  <http://dbpedia.org/resource/Brooklyn_Bridge> dbpedia-owl:crosses ?river .
  ?river a dbpedia-owl:River .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
225,How many people live in Poland?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/populationTotal> ?population
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
226,When was the last episode of the TV series Friends aired?,"```sparql
SELECT ?airDate
WHERE {
  ?episode dbo:series dbr:Friends ;
           dbo:airDate ?airDate .
}
ORDER BY DESC(?airDate)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
227,Is the wife of president Obama called Michelle?,"```sparql
SELECT ?presidentName
WHERE {
  ?president a dbpedia-owl:President ;
             foaf:name ""Barack Obama"" ;
             dbpprop:spouse ?wife .
  ?wife foaf:name ""Michelle Obama"" .
  BIND(""Michelle Obama"" AS ?presidentName)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
229,Who is 8th president of US?,"```sparql
SELECT ?president
WHERE {
  ?president a dbpedia-owl:President ;
             dbpprop:number ""8"" ;
             dbpprop:country dbpedia:United_States .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
230,how much is the total population of  european union?,"```sparql
SELECT (SUM(?population) AS ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:populationTotal ?population .
  FILTER (?country IN (dbr:Austria, dbr:Belgium, dbr:Bulgaria, dbr:Croatia, dbr:Cyprus, dbr:Czech_Republic, dbr:Denmark, dbr:Estonia, dbr:Finland, dbr:France, dbr:Germany, dbr:Greece, dbr:Hungary, dbr:Ireland, dbr:Italy, dbr:Latvia, dbr:Lithuania, dbr:Luxembourg, dbr:Malta, dbr:Netherlands, dbr:Poland, dbr:Portugal, dbr:Romania, dbr:Slovakia, dbr:Slovenia, dbr:Spain, dbr:Sweden, dbr:United_Kingdom))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
231,Give me all launch pads operated by NASA.,"```sparql
SELECT ?launchPad ?launchPadLabel
WHERE {
  ?launchPad rdf:type dbo:LaunchPad ;
             dbo:operator dbr:NASA .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
232,Who developed the video game World of Warcraft?,"```sparql
SELECT ?developer
WHERE {
  <http://dbpedia.org/resource/World_of_Warcraft> dbpedia-owl:developer ?developer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
233,What is the birth name of Adele?,"```sparql
SELECT ?birthName
WHERE {
  dbpedia:Adele dbpedia-owl:birthName ?birthName
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
234,What is the population of Cairo?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Cairo> <http://dbpedia.org/ontology/populationTotal> ?population
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
235,Is Frank Herbert still alive?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person ?name
WHERE {
  ?person a dbo:Person ;
          foaf:name ?name ;
          dbo:deathDate ?deathDate .
  FILTER (?name = ""Frank Herbert"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
236,What is the last work of Dan Brown?,"SELECT ?work
WHERE {
  ?author foaf:name ""Dan Brown""@en .
  ?author dbp:notableWork ?work .
}
ORDER BY DESC(?work)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
237,Where is Sungkyunkwan University?,"```sparql
SELECT ?location
WHERE {
  dbpedia:Sungkyunkwan_University dbpedia-owl:location ?location .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
238,Who is the author of the interpretation of dreams?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
       rdfs:label ""The Interpretation of Dreams""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
239,When was the death  of  Shakespeare?,"```sparql
SELECT ?dateOfDeath
WHERE {
  <http://dbpedia.org/resource/William_Shakespeare> <http://dbpedia.org/ontology/deathDate> ?dateOfDeath
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
241,Who developed Slack?,"SELECT ?developer
WHERE {
  <http://dbpedia.org/resource/Slack_Technologies> dbpedia-owl:developer ?developer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
242,Where is the origin of Carolina reaper?,"```sparql
SELECT ?origin
WHERE {
  dbpedia:Carolina_Reaper dbpedia-owl:origin ?origin .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
243,In which year was Rachel Stevens born?,"```sparql
SELECT ?birthYear
WHERE {
  dbpedia:Rachel_Stevens dbo:birthDate ?birthDate .
  BIND (YEAR(?birthDate) AS ?birthYear)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
244,How often did Jane Fonda marry?,"```sparql
SELECT (COUNT(?person) as ?marriageCount)
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jane Fonda"" ;
          dbo:spouse ?spouse .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
245,Was the wife of president Lincoln called Mary?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Abraham_Lincoln dbpedia-owl:spouse ?wife .
  FILTER (regex(str(?wife), ""Mary"", ""i""))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
246,Which cities does the Weser flow through?,"```sparql
SELECT DISTINCT ?city
WHERE {
  ?river dbo:riverName ""Weser""@en .
  ?city dbo:locatedInArea ?river .
  ?city a dbo:City .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
247,In which programming language is GIMP written?,"SELECT ?language
WHERE {
  dbpedia:GIMP dbpedia-owl:programmingLanguage ?language
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
248,Which university did Angela Merkel attend?,"SELECT ?university
WHERE {
  <http://dbpedia.org/resource/Angela_Merkel> dbpedia-owl:almaMater ?university .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
249,List all the musicals with music by Elton John.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:musicComposer dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
250,How many Aldi stores are there?,"```sparql
SELECT (COUNT(?store) AS ?count)
WHERE {
  ?store rdf:type dbo:RetailStore ;
         rdfs:label ""Aldi"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
251,What is the longest river in the world?,"```sparql
SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
252,When was John Adams born?,"```sparql
SELECT ?birthDate
WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthDate
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
253,Which companies produce hovercrafts?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?hovercraft dbo:manufacturer ?company .
  ?hovercraft rdf:type dbo:Hovercraft .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
254,Who was the wife of U.S. president Lincoln?,"```sparql
SELECT ?wife
WHERE {
  dbpedia:Abraham_Lincoln dbpedia-owl:spouse ?wife .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
255,Which species does an elephant belong?,"```sparql
SELECT ?species
WHERE {
  dbpedia:Elephant dct:subject ?species .
  ?species skos:broader category:Species .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
256,How many people live in the capital of Australia?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Canberra> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
257,In which ancient empire could you pay with cocoa beans?,"```sparql
SELECT ?empireLabel
WHERE {
  ?empire wdt:P31 wd:Q28171280;
          wdt:P2067 wd:Q180.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
258,How many theories did Albert Einstein come up with?,"```sparql
SELECT (COUNT(?theory) AS ?count)
WHERE {
  ?scientist rdf:type dbo:Scientist ;
             foaf:name ""Albert Einstein""@en .
  ?theory dbo:author ?scientist .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
259,Who composed the soundtrack for Cameron's Titanic?,"```sparql
SELECT ?composer
WHERE {
  ?film dbpedia-owl:director dbpedia:James_Cameron ;
        dbpedia-owl:musicComposer ?composer .
  FILTER regex(str(?film), ""Titanic"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
260,Give me the runtime of Toy Story.,"```sparql
SELECT ?runtime
WHERE {
  ?film dbo:runtime ?runtime ;
       foaf:name ""Toy Story""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
262,With how many countries Iran has borders?,"```sparql
SELECT (COUNT(?country) AS ?borderCount)
WHERE {
  dbpedia:Iran dbpedia-owl:country ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
263,Which electronics companies were founded in Beijing?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company dct:subject dbc:Electronics_companies_of_China ;
           dbo:foundationPlace dbr:Beijing .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
264,Who was the successor of John F. Kennedy?,"SELECT ?successor
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:successor ?successor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
265,Who is the mayor of Paris?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/leaderName> ?mayor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
266,Did Arnold Schwarzenegger attend a university?,"```sparql
SELECT ?person ?university
WHERE {
  ?person foaf:name ""Arnold Schwarzenegger""@en .
  ?person dbo:almaMater ?university .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
267,Is James Bond married?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?isMarried
WHERE {
  dbpedia:James_Bond dbpedia-owl:spouse ?isMarried
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
268,Does the Isar flow into a lake?,"```sparql
SELECT ?lake
WHERE {
  <http://dbpedia.org/resource/Isar> <http://dbpedia.org/ontology/mouth> ?lake .
  ?lake a <http://dbpedia.org/ontology/Lake> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
269,Which Indian company has the most employees?,"```sparql
SELECT ?company ?employees
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:country dbr:India ;
           dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?employees)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
270,Who was John F. Kennedy's vice president?,"```sparql
SELECT ?vicePresident
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:vicePresident ?vicePresident .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
271,Which country does the creator of Miffy come from?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Miffy> <http://dbpedia.org/ontology/creator> ?creator .
  ?creator <http://dbpedia.org/ontology/nationality> ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
273,In what city is the Heineken brewery?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Heineken_Brewery> dbpedia-owl:location ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
274,Is Barack Obama a democrat?,"```sparql
SELECT ?party
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  FILTER (?party = dbpedia:Democratic_Party_(United_States))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
275,List the children of Margaret Thatcher.,"```sparql
SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
276,From which region is the Melon de Bourgogne?,"```sparql
SELECT ?region
WHERE {
  <http://dbpedia.org/resource/Melon_de_Bourgogne> dbpedia-owl:region ?region .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
278,how big is the total area of North Rhine- Westphalia?,"```sparql
SELECT ?area
WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?area
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
279,Which city has the most inhabitants?,"SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
OFFSET 0",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
280,What is Donald Trump's main business?,"```sparql
SELECT ?business
WHERE {
  dbpedia:Donald_Trump dbpedia-owl:occupation ?business .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
281,When will start the final match of the football world cup 2018?,"```sparql
SELECT ?date
WHERE {
  dbpedia:2018_FIFA_World_Cup dbo:startDate ?date .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
282,Which films did Stanley Kubrick direct?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
283,how much is the population  Iraq?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Iraq> <http://dbpedia.org/ontology/populationTotal> ?population
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
284,How many inhabitants does the largest city in Canada have?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Toronto> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
285,Who is the mayor of the capital of French Polynesia?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/French_Polynesia> <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://dbpedia.org/ontology/leaderName> ?mayor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
286,Give me all actors starring in movies directed by William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner ;
        dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
287,How tall is Claudia Schiffer?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Claudia_Schiffer dbpedia-owl:height ?height .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
288,how much is the population densty rank of germany?,"```sparql
SELECT ?rank
WHERE {
  dbpedia:Germany dbpedia-owl:populationDensityRank ?rank
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
289,What is the highest mountain in Italy?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Italy ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
290,List all games by GMT.,"```sparql
SELECT ?game
WHERE {
  ?game dct:creator dbc:GMT_Games .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
291,What is the official language of Suriname?,"```sparql
SELECT ?language
WHERE {
  dbpedia:Suriname dbpedia-owl:officialLanguage ?language .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
292,In which city did Nikos Kazantzakis die?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Nikos_Kazantzakis> <http://dbpedia.org/ontology/deathPlace> ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
293,What is in a chocolate chip cookie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?ingredient
WHERE {
  dbo:Chocolate_chip_cookie dbo:ingredient ?ingredient
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
294,In which country is the Limerick Lake?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Limerick_Lake> dbo:country ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
295,Give me all video games published by Mean Hamster Software.,"```sparql
SELECT ?game
WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game rdf:type dbo:VideoGame .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
296,Give me all members of Prodigy.,"```sparql
SELECT ?member
WHERE {
  ?band rdf:type dbo:Band ;
        foaf:name ""The Prodigy""@en ;
        dbo:bandMember ?member .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
297,In which time zone is Rome?,"```sparql
SELECT ?timezone
WHERE {
  dbpedia:Rome dbpedia-owl:timeZone ?timezone
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
298,How high is the lighthouse in Colombo?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Colombo dbpedia-owl:height ?height .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
299,Who are the writers of the Wall album of Pink Floyd?,"```sparql
SELECT ?writer
WHERE {
  ?album dbo:artist dbr:Pink_Floyd ;
        dbo:writer ?writer .
  FILTER (?album = dbr:The_Wall)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
300,Who is the mayor of Rotterdam?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Rotterdam> <http://dbpedia.org/ontology/leaderName> ?mayor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
301,What is the largest city in Australia?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:Australia ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
302,Who was married to president Chirac?,"```sparql
SELECT ?spouse
WHERE {
  <http://dbpedia.org/resource/Jacques_Chirac> dbpedia-owl:spouse ?spouse .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
303,What form of government is found in South Africa?,"```sparql
SELECT ?governmentType
WHERE {
  dbpedia:South_Africa dbpedia-owl:governmentType ?governmentType
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
304,How high is the Yokohama Marine Tower?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Yokohama_Marine_Tower dbpedia-owl:height ?height .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
305,Which holidays are celebrated around the world? test2,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
306,Who is the tallest basketball player?,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbpedia-owl:BasketballPlayer ;
          dbpprop:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
307,How many languages are spoken in Turkmenistan?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?country dbpedia-owl:officialLanguage ?language .
  FILTER (?country = dbpedia:Turkmenistan)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
308,Did Che Guevara have children?,"```sparql
SELECT ?child
WHERE {
  dbpedia:Che_Guevara dbpedia-owl:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"```sparql
SELECT ?film
WHERE {
  ?film dbpedia-owl:director dbpedia:Aki_Kaurismäki ;
        dbpprop:award dbpedia:Grand_Prix ;
        dbpprop:festival dbpedia:Cannes_Film_Festival .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
310,To which party does the mayor of Paris belong?,"```sparql
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Mayor_of_Paris> dbpedia-owl:party ?party .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
311,Who is the Formula 1 race driver with the most races?,"```sparql
SELECT ?driver ?name (COUNT(?race) AS ?numRaces)
WHERE {
  ?driver a dbpedia-owl:FormulaOneRacer ;
          foaf:name ?name ;
          dbpedia-owl:races ?race .
}
GROUP BY ?driver ?name
ORDER BY DESC(?numRaces)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
312,What country is Sitecore from?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Sitecore> dbpedia-owl:location ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
313,Give me the birth place of Frank Sinatra.,"```sparql
SELECT ?birthPlace
WHERE {
  dbpedia:Frank_Sinatra dbpedia-owl:birthPlace ?birthPlace .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
314,Is Christian Bale starring in Velvet Goldmine?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  dbpedia:Velvet_Goldmine dbpedia-owl:starring ?actor .
  FILTER (?actor = dbpedia:Christian_Bale)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
315,Who is the son of Sonny and Cher?,"```sparql
SELECT ?son
WHERE {
  ?son dbo:parent dbr:Sonny_and_Cher .
  ?son rdf:type dbo:Person .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
316,How many ethnic groups live in Slovenia?,"```sparql
SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  <http://dbpedia.org/resource/Slovenia> dbpedia-owl:ethnicGroups ?ethnicGroup .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
317,What is the capital of Cameroon?,"```sparql
SELECT ?capital
WHERE {
  <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?capital .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
318,Was Natalie Portman born in the United States?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  dbpedia:Natalie_Portman dbpedia-owl:birthPlace ?birthPlace .
  FILTER regex(?birthPlace, ""United States"", ""i"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
319,How many pages does War and Peace have?,"```sparql
SELECT ?pages
WHERE {
  dbpedia:War_and_Peace dbpedia:numberOfPages ?pages
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
320,Who is the oldest child of Meryl Streep?,"```sparql
SELECT ?child WHERE {
  dbpedia:Meryl_Streep dbpedia-owl:child ?child .
  ?child a dbpedia-owl:Person .
} ORDER BY ?child
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
321,Which television shows were created by Walt Disney?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
322,What does IYCM stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?label
WHERE {
  <http://dbpedia.org/resource/IYCM> rdfs:label ?label
  FILTER (lang(?label) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
323,Which types of grapes grow in Oregon?,"```sparql
SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType dbo:region dbr:Oregon .
  ?grapeType a dbo:Grape .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
324,Was U.S. president Jackson involved in a war?,"```sparql
SELECT ?war
WHERE {
  dbpedia:Andrew_Jackson dct:subject ?war .
  ?war dct:subject dbc:Wars_involving_the_United_States .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
325,When was the Titanic completed?,"SELECT ?completionDate
WHERE {
  <http://dbpedia.org/resource/RMS_Titanic> <http://dbpedia.org/property/completionDate> ?completionDate
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
326,Did Tesla win a nobel prize in physics?,"```sparql
SELECT ?scientist ?prize
WHERE {
  ?scientist foaf:name ""Nikola Tesla""@en .
  ?scientist dbp:nobelPrizes ?prize .
  FILTER regex(?prize, ""Physics"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
327,How many states are in Mexico?,"```sparql
SELECT (COUNT(?state) AS ?count)
WHERE {
  ?state a dbo:State ;
         dbo:country dbr:Mexico .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"```sparql
SELECT ?scientist
WHERE {
  ?scientist dbpedia-owl:knownFor <http://dbpedia.org/resource/Manhattan_Project> ;
            dbpedia-owl:award <http://dbpedia.org/resource/Nobel_Peace_Prize> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
329,How much did the Lego Movie cost?,"```sparql
SELECT ?movie ?budget
WHERE {
  ?movie rdf:type dbo:Film ;
         rdfs:label ""The Lego Movie""@en ;
         dbo:budget ?budget .
}
```
",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
330,Who composed the music for Harold and Maude?,"SELECT ?composer
WHERE {
  ?film dbo:director dbr:Harold_and_Maude ;
       dbo:musicComposer ?composer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
331,List all episodes of the first season of the HBO television series The Sopranos.,"```sparql
SELECT ?episode ?title
WHERE {
  ?season dbo:series dbr:The_Sopranos ;
          dbo:numberOfSeasons ""6""^^xsd:integer .
  ?episode dbo:season ?season ;
           rdf:type dbo:TelevisionEpisode ;
           foaf:name ?title .
  FILTER regex(?title, ""Season 1, Episode"")
}
ORDER BY ?episode
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
332,Which city has the least inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
333,Where is Syngman Rhee buried?,"```sparql
SELECT ?burialPlace
WHERE {
  dbpedia:Syngman_Rhee dbpedia-owl:burialPlace ?burialPlace .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
334,Does Neymar play for Real Madrid?,"SELECT ?player
WHERE {
  ?player rdf:type dbo:SoccerPlayer ;
          rdfs:label ""Neymar""@en .
  ?player dbo:team ?team .
  ?team rdfs:label ""Real Madrid""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
335,Who wrote the book The Pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
       rdfs:label ""The Pillars of the Earth""@en .
  FILTER(LANG(?author) = ""en"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
336,Do Prince Harry and Prince William have the same parents?,"```sparql
SELECT ?parent
WHERE {
  dbpedia:Prince_Harry dbo:parent ?parent .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
337,Who was the doctoral supervisor of Albert Einstein?,"```sparql
SELECT ?supervisor
WHERE {
  <http://dbpedia.org/resource/Albert_Einstein> dbpedia-owl:doctoralAdvisor ?supervisor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
338,Does Breaking Bad have more episodes than Game of Thrones?,"```sparql
SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes
WHERE {
  dbpedia:Breaking_Bad dbo:numberOfEpisodes ?breakingBadEpisodes .
  dbpedia:Game_of_Thrones dbo:numberOfEpisodes ?gameOfThronesEpisodes .
  FILTER (?breakingBadEpisodes > ?gameOfThronesEpisodes)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
339,Who was Vincent van Gogh inspired by?,"```sparql
SELECT DISTINCT ?inspiration
WHERE {
  ?artist a dbo:Artist ;
          foaf:name ""Vincent van Gogh""@en .
  ?inspiration dbo:influenced ?artist .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
340,Which building after the Burj Khalifa has the most floors?,"```sparql
SELECT ?building ?floors
WHERE {
  ?building dbp:buildingType dbr:Skyscraper ;
           dbp:floors ?floors .
  FILTER (?floors > 163)
}
ORDER BY DESC(?floors)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
341,What was the final result of the War of the Roses?,"```sparql
SELECT ?result
WHERE {
  dbpedia:War_of_the_Roses dbpedia-owl:result ?result .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
342,How much did Pulp Fiction cost?,"```sparql
SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        foaf:name ""Pulp Fiction""@en ;
        dbo:budget ?budget .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
343,Is proinsulin a protein?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?protein
WHERE {
  dbo:Proinsulin rdf:type ?protein .
  FILTER (?protein = dbo:Protein)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
344,Do Urdu and Persian have a common root?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?language1 ?language2
WHERE {
  ?language1 dbo:languageFamily ?family .
  ?language2 dbo:languageFamily ?family .
  FILTER (?language1 = <http://dbpedia.org/resource/Urdu> && ?language2 = <http://dbpedia.org/resource/Persian>)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
345,Who is starring in Spanish movies produced by Benicio del Toro?,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbp:producer dbr:Benicio_del_Toro ;
         dct:subject dbc:Spanish_films .
  ?movie dbp:starring ?actor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?lake1 ?lake2 ?area1 ?area2
WHERE {
  ?lake1 a dbo:Lake ;
         dbo:area ?area1 ;
         rdfs:label ""Lake Baikal""@en .
  
  ?lake2 a dbo:Lake ;
         dbo:area ?area2 ;
         rdfs:label ""Great Bear Lake""@en .
  
  FILTER (?area1 > ?area2)
}
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
347,Show me all books in Asimov's Foundation series.,"```sparql
SELECT ?book
WHERE {
  ?book dct:subject dbc:Foundation_series_books .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
348,Where was Bach born?,"```sparql
SELECT ?birthPlace
WHERE {
  <http://dbpedia.org/resource/Johann_Sebastian_Bach> dbpedia-owl:birthPlace ?birthPlace .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
349,Which city has the oldest running metro?,"```sparql
SELECT ?city ?metroSystem ?openingYear
WHERE {
  ?city dbo:network ?metroSystem ;
       dbo:openingYear ?openingYear .
  ?metroSystem rdf:type dbo:RapidTransit .
}
ORDER BY ?openingYear
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
350,Who designed the Brooklyn Bridge?,"```sparql
SELECT ?designer
WHERE {
  dbpedia:Brooklyn_Bridge dbpedia-owl:architect ?designer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
351,How many people live in Eurasia?,"```sparql
SELECT (SUM(?population) as ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:populationTotal ?population ;
           dbo:continent dbr:Eurasia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
352,Who is the host of the BBC Wildlife Specials?,"```sparql
SELECT ?host
WHERE {
  ?wildlifeSpecials dbo:producer dbr:BBC.
  ?wildlifeSpecials dbo:starring ?host.
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
353,"What is the total population of Melbourne, Florida?","```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Melbourne,_Florida> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
354,What country is Mount Everest in?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Mount_Everest> dbpedia-owl:country ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
355,To which artistic movement did the painter of The Three Dancers belong?,"```sparql
SELECT ?movementLabel
WHERE {
  <http://dbpedia.org/resource/The_Three_Dancers> dbpedia-owl:author ?painter .
  ?painter dbpedia-owl:movement ?movement .
  ?movement rdfs:label ?movementLabel .
  FILTER(LANG(?movementLabel) = """" || LANGMATCHES(LANG(?movementLabel), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
356,When did Operation Overlord commence?,"```sparql
SELECT ?date
WHERE {
  dbr:Operation_Overlord dbo:startDate ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
357,What is the bridge with the longest span?,"```sparql
SELECT ?bridge ?span
WHERE {
  ?bridge rdf:type dbo:Bridge ;
          dbo:longestSpan ?span .
}
ORDER BY DESC(?span)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
358,Is there a video game called Battle Chess?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?game
WHERE {
  ?game a dbpedia-owl:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
359,Who was buried in the Great Pyramid of Giza?,"SELECT ?person
WHERE {
  <http://dbpedia.org/resource/Great_Pyramid_of_Giza> dbpedia-owl:burial ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"SELECT ?plant
WHERE {
  dbpedia:Ford_Motor_Company dbpedia-owl:subsidiary ?subsidiary .
  ?subsidiary dbpedia-owl:location dbpedia:Malaysia .
  ?subsidiary dbpedia-owl:type dbpedia:Manufacturing .
  ?subsidiary dbpedia-owl:industry dbpedia:Automotive_industry .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
361,Did Socrates influence Aristotle?,"SELECT ?influencedBy
WHERE {
  dbpedia:Socrates dbpedia-owl:influenced ?influencedBy .
  FILTER (?influencedBy = dbpedia:Aristotle)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
362,How many children did Benjamin Franklin have?,"```sparql
SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Benjamin_Franklin> dbpedia-owl:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
363,How tall is Michael Jordan?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Michael_Jordan dbpedia-owl:height ?height .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
364,In which UK city are the headquarters of the MI6?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/MI6> dbpedia-owl:headquarters ?hq .
  ?hq dbpedia-owl:city ?city .
  ?city dbpedia-owl:country <http://dbpedia.org/resource/United_Kingdom> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
365,Who created Family Guy?,"```sparql
SELECT ?creator
WHERE {
  dbpedia:Family_Guy dbpedia-owl:creator ?creator .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
366,In which city does the Chile Route 68 end?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Chile_Route_68> <http://dbpedia.org/property/end> ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
367,Give me the grandchildren of Elvis Presley.,"```sparql
SELECT ?grandchild
WHERE {
  dbr:Elvis_Presley dbo:child/dbo:child ?grandchild .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
368,When did the Ming dynasty dissolve?,"```sparql
SELECT ?date
WHERE {
  dbpedia:Ming_Dynasty dbo:disestablished ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
369,In which military conflicts did Lawrence of Arabia participate?,"```sparql
SELECT ?conflict
WHERE {
  ?lawrence dbo:activeYearsStartYear ?startYear .
  ?lawrence dbo:activeYearsEndYear ?endYear .
  ?lawrence dbo:militaryConflict ?conflict .
  FILTER (?startYear <= 1918 && ?endYear >= 1918)
  FILTER regex(str(?lawrence), ""Lawrence_of_Arabia"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
370,What is the timezone in San Pedro de Atacama?,"```sparql
SELECT ?timezone
WHERE {
  dbpedia:San_Pedro_de_Atacama dbpedia-owl:timezone ?timezone .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
371,Give me all books by William Goldman with more than 300 pages.,"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT ?book
WHERE {
  ?book a dbpedia-owl:Book ;
        dbpprop:author dbpedia:William_Goldman ;
        dbpprop:pages ?pages .
  FILTER (?pages > 300)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
372,What did Bruce Carver die from?,"```sparql
SELECT ?causeOfDeath
WHERE {
  dbpedia:Bruce_Carver dbo:causeOfDeath ?causeOfDeath .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"```sparql
SELECT ?subsidary
WHERE {
  ?subsidary dbo:parentCompany dbr:Lufthansa ;
             dbo:hub dbr:Dortmund_Airport ;
             dbo:hub dbr:Berlin_Tegel_Airport .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
374,Does Abraham Lincoln's death place have a website?,"SELECT ?website
WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace .
  ?deathPlace foaf:isPrimaryTopicOf ?website .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
375,Did Elvis Presley have children?,"```sparql
SELECT ?child
WHERE {
  dbpedia:Elvis_Presley dbpedia-owl:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
376,Is Michelle Obama the wife of Barack Obama?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Michelle_Obama dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Barack_Obama)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
377,In which city does Sylvester Stallone live?,"```sparql
SELECT ?city
WHERE {
  dbpedia:Sylvester_Stallone dbpedia-owl:birthPlace ?birthPlace .
  ?birthPlace dbpedia-owl:city ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
378,Which books by Kerouac were published by Viking Press?,"```sparql
SELECT DISTINCT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:Jack_Kerouac ;
        dbo:publisher dbr:Viking_Press .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
379,Who wrote the song Hotel California?,"```sparql
SELECT ?artist
WHERE {
  ?song dbo:artist ?artist ;
       rdfs:label ""Hotel California""@en .
  ?artist a dbo:MusicalArtist .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
380,What is the capital of Canada?,"```sparql
SELECT ?capital
WHERE {
  <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?capital .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
381,Who is the mayor of Tel Aviv?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Tel_Aviv> <http://dbpedia.org/ontology/leaderName> ?mayor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
382,What form of government does Russia have?,"```sparql
SELECT ?governmentType
WHERE {
  dbpedia:Russia dbpedia-owl:governmentType ?governmentType
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:Muhammad_Ali .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
384,Who was the first to climb Mount Everest?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:mountEverestAscents ?ascent .
  ?ascent dbo:firstAscent ""true"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
385,How many languages are spoken in Colombia?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?country dbpedia-owl:officialLanguage ?language .
  FILTER (?country = dbpedia:Colombia)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
386,What is the currency of the Czech Republic?,"```sparql
SELECT ?currencyLabel
WHERE {
  <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER(LANG(?currencyLabel) = 'en')
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
387,Where in France is sparkling wine produced?,"```sparql
SELECT DISTINCT ?region
WHERE {
  ?wine a dbo:SparklingWine ;
        dbo:country dbr:France ;
        dbo:region ?region .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
388,When did Boris Becker end his active career?,"SELECT ?endDate
WHERE {
  dbpedia:Boris_Becker dbpedia-owl:careerEnd ?endDate
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke ;
        dbo:director dbr:Guy_Ritchie .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
390,In which films did Julia Roberts as well as Richard Gere play?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
391,Show me Hemingway's autobiography.,"```sparql
SELECT ?autobiography
WHERE {
  ?person foaf:name ""Ernest Hemingway""@en .
  ?person dbp:notableWork ?autobiography .
  FILTER regex(?autobiography, ""autobiography"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
392,How tall is Amazon Eve?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Amazon_Eve dbpedia-owl:height ?height .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
393,What are the five boroughs of New York?,"```sparql
SELECT ?borough
WHERE {
  ?borough dct:subject dbc:Boroughs_of_New_York_City .
}
LIMIT 5
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
394,Give me all Canadian Grunge record labels.,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?label a <http://dbpedia.org/ontology/RecordLabel> ;
         <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> ;
         <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Grunge> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
395,In which country does the Ganges start?,"SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Ganges> dbpedia-owl:origin ?startPoint .
  ?startPoint dbpedia-owl:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
396,Who is the founder of Penguin Books?,"```sparql
SELECT ?founder
WHERE {
  dbpedia:Penguin_Books dbpedia-owl:founder ?founder .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
397,Who wrote the Game of Thrones theme?,"```sparql
SELECT ?composer
WHERE {
  ?gameOfThrones dbo:musicComposer ?composer .
  ?gameOfThrones rdf:type dbo:TelevisionShow .
  FILTER regex(str(?gameOfThrones), ""Game_of_Thrones"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
398,Who is the president of Eritrea?,"```sparql
SELECT ?president
WHERE {
  <http://dbpedia.org/resource/Eritrea> <http://dbpedia.org/ontology/president> ?president .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
399,In which city did John F. Kennedy die?,"```sparql
SELECT ?city
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:deathPlace ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
400,What is the highest mountain in Australia?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Australia ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
401,Who writes the Farmers' Almanac?,"```sparql
SELECT ?author
WHERE {
  ?farmersAlmanac dbpedia-owl:author ?author .
  FILTER regex(?farmersAlmanac, ""Farmers'_Almanac"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
402,Give me the currency of China.,"```sparql
SELECT ?currencyLabel
WHERE {
  <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER(LANG(?currencyLabel) = 'en')
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
403,Give me all Swedish oceanographers.,"```sparql
SELECT DISTINCT ?oceanographer
WHERE {
  ?oceanographer a <http://dbpedia.org/ontology/Oceanographer> ;
                 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Sweden> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
404,In which city are the headquarters of the United Nations?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/United_Nations> dbpedia-owl:headquarter ?hq .
  ?hq dbpedia-owl:city ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
405,Is Rita Wilson the wife of Tom Hanks?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Rita_Wilson dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Tom_Hanks)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
406,In which countries do people speak Japanese?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbpedia-owl:language dbpedia:Japanese_language .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
407,Which of Tim Burton's films had the highest budget?,"```sparql
SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
408,Which museum in New York has the most visitors?,"```sparql
SELECT ?museum ?visitors
WHERE {
  ?museum a dbpedia-owl:Museum ;
          dbpedia-owl:visitors ?visitors .
  FILTER (?visitors > 0)
}
ORDER BY DESC(?visitors)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
409,What was the first Queen album?,"```sparql
SELECT ?album
WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Queen .
}
ORDER BY ?album
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
410,What was the first name of the band Queens of the Stone Age?,"```sparql
SELECT ?bandName
WHERE {
  ?band rdf:type dbo:Band ;
       foaf:name ""Queens of the Stone Age""@en ;
       dbo:bandMember ?member .
  ?member foaf:givenName ?bandName .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
411,What was the last movie with Alec Guinness?,"SELECT ?movie ?releaseDate
WHERE {
  ?movie rdf:type dbo:Film ;
         dbo:starring dbr:Alec_Guinness ;
         dbo:releaseDate ?releaseDate .
}
ORDER BY DESC(?releaseDate)
LIMIT 1
OFFSET 0",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
412,Give me all actors starring in Last Action Hero.,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Last Action Hero""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
413,Who discovered Pluto?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discoverer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
1,List all boardgames by GMT.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?game
WHERE {
    ?game dbo:publisher <http://dbpedia.org/resource/GMT_Games> .
    ?game a dbo:BoardGame .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
2,Who developed Skype?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?developer
WHERE {
    ?skype dbo:developer ?developer .
    ?skype foaf:name ""Skype""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
3,Which people were born in Heraklion?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person a foaf:Person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
4,In which U.S. state is Area 51 located?,"SELECT ?state WHERE {
  <http://dbpedia.org/resource/Area_51> dbpedia-owl:location ?location .
  ?location dbpedia-owl:locatedIn ?state .
  ?state a dbpedia-owl:State .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
5,Who is the mayor of New York City?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?mayor
WHERE {
  dbpedia:New_York_City dbpedia-owl:mayor ?mayor
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
6,Which countries have places with more than two caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  ?place a dbo:Place ;
         dbo:location ?country ;
         dbo:numberOfCaves ?numCaves .
  FILTER (?numCaves > 2)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
7,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbpedia:Abraham_Lincoln dbpedia-owl:deathPlace ?place
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
8,Which airports does Air China serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport
WHERE {
  ?airline dbo:operates ?route.
  ?route dbo:arrivalAirport ?airport.
  FILTER regex(str(?airline), ""Air_China"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
9,Give me all actors starring in movies directed by and starring William Shatner.,"SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:director <http://dbpedia.org/resource/William_Shatner> .
  ?movie dbo:starring <http://dbpedia.org/resource/William_Shatner> .
  ?actor a dbo:Actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
10,What are the official languages of the Philippines?,"SELECT ?language
WHERE {
  <http://dbpedia.org/resource/Philippines> <http://dbpedia.org/ontology/officialLanguage> ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
11,Give me all Danish films.,"```sparql
SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dbp:country ""Denmark""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Brad_Pitt ;
         dbo:director dbr:Guy_Ritchie .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
13,Give me the grandchildren of Bruce Lee.,"SELECT ?grandchild WHERE {
  dbpedia:Bruce_Lee dbpedia:child ?child .
  ?child dbpedia:child ?grandchild .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
14,Which other weapons did the designer of the Uzi develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?weapon
WHERE {
  ?designer dbo:designer <http://dbpedia.org/resource/Uzi_Gal> .
  ?weapon dbo:designer ?designer .
  FILTER (?weapon != <http://dbpedia.org/resource/Uzi>)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
15,Who is the owner of Universal Studios?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Universal_Studios> dbo:owner ?owner
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
16,Which state of the USA has the highest population density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:State ;
        dbo:populationDensity ?density .
  FILTER (?density = (SELECT MAX(?density) WHERE {
    ?state rdf:type dbo:State ;
          dbo:populationDensity ?density .
  }))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
17,Which monarchs were married to a German?,"SELECT DISTINCT ?monarch
WHERE {
  ?monarch dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
  ?monarch a dbo:Monarch .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
18,Which organizations were founded in 1950?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation ;
                dct:subject <http://dbpedia.org/resource/Category:Organizations_established_in_1950> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
19,Who created the comic Captain America?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?creator
WHERE {
    ?comic dbo:creator ?creator .
    ?comic dbo:wikiPageRedirects <http://dbpedia.org/resource/Captain_America> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
20,Give me the Apollo 14 astronauts.,"SELECT ?astronaut
WHERE {
  dbr:Apollo_14 dbo:astronaut ?astronaut .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
21,Who wrote the book The pillars of the Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Pillars of the Earth""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
22,Which state of the United States of America has the highest density?,"SELECT ?state
WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?density .
}
ORDER BY DESC(?density)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
23,Which spaceflights were launched from Baikonur?,"SELECT ?spaceflight
WHERE {
  ?spaceflight dbp:launchSite dbr:Baikonur_Cosmodrome .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
24,Give me a list of all trumpet players that were bandleaders.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet ;
              dbo:occupation dbr:Bandleader .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
25,Which U.S. states are in the same timezone as Utah?,"SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timezone .
  ?state dbpedia-owl:timeZone ?timezone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
26,Which U.S. states possess gold minerals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?state
WHERE {
  ?state dbo:location ?location .
  ?location dbo:goldMine ?goldMine .
}
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
27,Who is the daughter of Ingrid Bergman married to?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  dbpedia:Ingrid_Bergman dbpedia2:children ?child .
  ?child dbpedia2:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
28,How deep is Lake Placid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?depth
WHERE {
  <http://dbpedia.org/resource/Lake_Placid> dbo:maxDepth ?depth
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
29,Show me all museums in London.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?museum
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:London .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
30,Which caves have more than 3 entrances?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?cave
WHERE {
  ?cave rdf:type dbo:Cave ;
        dbo:entranceCount ?count .
  FILTER (?count > 3)
}
LIMIT 10","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
31,Who is the tallest player of the Atlanta Falcons?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player
WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Atlanta_Falcons> ;
          dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
32,What are the top-10 action role-playing video games according to IGN?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?game ?rank
WHERE {
  ?game dbo:genre dbo:Action_role-playing_video_games .
  ?game foaf:name ?name .
  ?game dbo:IGNRank ?rank .
}
ORDER BY ?rank
LIMIT 10","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?writer
WHERE {
    ?writer a dbo:Writer ;
            dbo:award dbr:Nobel_Prize_in_Literature .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
34,Show me all basketball players that are higher than 2 meters.,"SELECT ?player
WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
  FILTER (?height > 2)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
35,When was the Statue of Liberty built?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?date
WHERE {
    <http://dbpedia.org/resource/Statue_of_Liberty> dbp:beginningDate ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
36,Which states border Illinois?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state
WHERE {
  dbr:Illinois dbo:state ?state .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
37,Who developed Minecraft?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?developer
WHERE {
  <http://dbpedia.org/resource/Minecraft> dbo:developer ?developer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
38,Where did Hillel Slovak die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?placeOfDeath
WHERE {
  <http://dbpedia.org/resource/Hillel_Slovak> dbo:placeOfDeath ?placeOfDeath
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
39,What movies does Jesse Eisenberg play in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
40,Give all swimmers that were born in Moscow.,"SELECT ?swimmer
WHERE {
  ?swimmer a dbo:Swimmer ;
           dbo:birthPlace dbr:Moscow .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
41,Give me all cosmonauts.,"```sparql
SELECT ?cosmonaut
WHERE {
  ?cosmonaut a <http://dbpedia.org/ontology/Cosmonaut> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
42,Give me all Swiss non-profit organizations.,"SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:NonprofitOrganisation ;
               dct:subject dbc:Non-profit_organizations_based_in_Switzerland .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
43,Which presidents were born in 1945?,"SELECT ?president
WHERE {
  ?president a dbpedia-owl:President ;
            dbpedia-owl:birthDate ?birthDate .
  FILTER (regex(str(?birthDate), ""1945""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
44,What kind of music did Lou Reed play?,"SELECT ?genre
WHERE {
  dbpedia:Lou_Reed dbpedia-owl:genre ?genre
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
45,Where do the Red Sox play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?stadium
WHERE {
  ?team dbo:teamName ""Boston Red Sox""@en .
  ?team dbo:ground ?stadium .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
46,Show a list of soccer clubs that play in the Bundesliga.,"SELECT DISTINCT ?club
WHERE {
  ?club rdf:type dbo:SoccerClub .
  ?club dbo:league ?league .
  ?league rdfs:label ""Bundesliga""@en
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
47,Which volcanos in Japan erupted since 2000?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:country dbr:Japan ;
           dbo:eruptionDate ?date .
  FILTER (year(?date) >= 2000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
48,Which bridges cross the Seine?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>

SELECT ?bridge
WHERE {
  ?bridge dbpedia-owl:crosses dbpedia:Seine
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
49,What is the official color of the University of Oxford?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?color
WHERE {
  <http://dbpedia.org/resource/University_of_Oxford> dbo:officialSchoolColour ?color
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
50,How many films did Hal Roach produce?,"SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
51,Give me all Danish movies.,"```sparql
SELECT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dbp:country ""Denmark""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
  ?person dbo:deathCause ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
53,Who are the four youngest MVP basketball players?,"SELECT ?player ?age
WHERE {
  ?player dbo:award <http://dbpedia.org/resource/NBA_Most_Valuable_Player_Award> ;
          dbo:birthDate ?birthdate ;
          dbo:birthPlace ?birthplace .
  BIND(now() - xsd:date(?birthdate) AS ?age)
}
ORDER BY ?age
LIMIT 4","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
54,Give me all companies in Munich.,"```sparql
SELECT ?company
WHERE {
  ?company rdf:type dbo:Company ;
          dbo:location dbr:Munich .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
55,Give me the capitals of all countries that the Himalayas run through.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?capital
WHERE {
  ?country dbo:location ?location .
  ?country dbo:capital ?capital .
  FILTER regex(str(?location), ""Himalayas"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
56,How many movies did Park Chan-wook direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?film) as ?count)
WHERE {
  ?film dbo:director dbr:Park_Chan-wook .
  ?film a dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
57,Which rivers flow into a German lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?river
WHERE {
  ?river dbo:mouth dbr:Germany .
  ?river dbo:riverThrough dbr:Lake
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
59,Give me all islands that belong to Japan.,"```sparql
SELECT ?island
WHERE {
  ?island rdf:type dbo:Island ;
          dbo:country dbr:Japan .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
60,How many inhabitants does Maribor have?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Maribor> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
61,Give me all Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut rdf:type dbo:Person .
  ?astronaut dbo:team ?team .
  ?team rdf:type dbo:Astronaut .
  ?team dbo:mission <http://dbpedia.org/resource/Apollo_14> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
62,Which companies have more than 1 million employees?,"SELECT ?company
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT ?film
WHERE {
  ?film dbpedia-owl:director <http://dbpedia.org/resource/Garry_Marshall> ;
        dbpprop:starring <http://dbpedia.org/resource/Julia_Roberts> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
64,Give me all soccer clubs in the Premier League.,"```sparql
SELECT ?club
WHERE {
  ?club rdf:type dbo:SoccerClub ;
        dbo:league ?league .
  ?league rdfs:label ""Premier League""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
65,What is the highest place of the Urals?,"SELECT ?place WHERE {
  ?place dct:subject dbc:Mountains_of_Russia ;
        dbo:location dbr:Ural_Mountains ;
        dbo:elevation ?elevation .
} ORDER BY DESC(?elevation)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
66,Who is the governor of Wyoming?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor
WHERE {
  dbr:Wyoming dbo:governor ?governor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
67,Where did the architect of the Eiffel Tower study?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university
WHERE {
  <http://dbpedia.org/resource/Gustave_Eiffel> dbo:education ?university
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
68,Give me all world heritage sites designated within the past two years.,"SELECT ?site
WHERE {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dct:subject dbc:World_Heritage_Sites .
  ?site dct:subject dbc:World_Heritage_Sites_in_2015 .
} UNION {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dct:subject dbc:World_Heritage_Sites .
  ?site dct:subject dbc:World_Heritage_Sites_in_2016 .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
69,Give me all actors who were born in Paris after 1950.,"SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Paris ;
         dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) > 1950)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
70,Which movies star both Liz Taylor and Richard Burton?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
71,Give me all Australian nonprofit organizations.,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:NonprofitOrganisation ;
               dct:subject dbc:Non-profit_organisations_based_in_Australia .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
72,Which pope succeeded John Paul II?,"SELECT ?successor WHERE {
  dbr:Pope_John_Paul_II dbo:successor ?successor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
73,Give me all ESA astronauts.,"SELECT ?astronaut
WHERE {
  ?astronaut a <http://dbpedia.org/ontology/Astronaut> .
  ?astronaut <http://dbpedia.org/ontology/agency> <http://dbpedia.org/resource/European_Space_Agency> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
74,Who was president of Pakistan in 1978?,"SELECT ?president
WHERE {
  ?president dbo:office ?office .
  ?office rdfs:label ""President of Pakistan"" .
  ?president dbo:startDate ?start_date .
  ?president dbo:endDate ?end_date .
  FILTER (?start_date <= ""1978-01-01""^^xsd:date && ?end_date >= ""1978-12-31""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
75,Who is the owner of Rolls-Royce?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Rolls-Royce_Limited> dbo:owner ?owner
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
76,How many museums does Paris have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum dct:subject dbc:Museums_in_Paris .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
77,Where was JFK assassinated?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?place
WHERE {
  <http://dbpedia.org/resource/Assassination_of_John_F._Kennedy> dbo:location ?place
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
78,Give me all federal chancellors of Germany.,"SELECT ?chancellor
WHERE {
  ?chancellor a dbpedia-owl:Chancellor ;
              dbpedia-owl:country <http://dbpedia.org/resource/Germany> ;
              dbpedia-owl:title ""Federal Chancellor of Germany"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
79,Show me everyone who was born on Halloween.,"SELECT ?person
WHERE {
  ?person dbo:birthDate ""31-10"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
80,Which beer originated in Ireland?,"SELECT ?beer
WHERE {
  ?beer dbo:origin dbpedia:Ireland .
  ?beer rdf:type dbo:Beer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
81,To which countries does the Himalayan mountain system extend?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  ?himalayas dbo:location dbr:Himalayas ;
             dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
82,Which actors were born in Germany?,"SELECT ?actor
WHERE {
  ?actor a <http://dbpedia.org/ontology/Actor> ;
         <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
83,How much carbs does peanut butter have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?carbs
WHERE {
  <http://dbpedia.org/resource/Peanut_butter> dbp:carbs ?carbs
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:producer ?producer .
}
GROUP BY ?producer
ORDER BY DESC(?numFilms)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
85,How many employees does Google have?,"SELECT ?employees
WHERE {
  <http://dbpedia.org/resource/Google> <http://dbpedia.org/property/employees> ?employees
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
86,Give me all actors who were born in Berlin.,"SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Berlin .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
87,Who created Goofy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?creator
WHERE {
    ?character dbo:creator ?creator ;
               dbp:name ""Goofy""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
88,Which music albums contain the song Last Christmas?,"```sparql
SELECT ?album
WHERE {
  ?song rdf:type dbo:Song ;
        rdfs:label ""Last Christmas""@en ;
        dbo:album ?albumResource .
  ?albumResource rdfs:label ?album .
  FILTER (lang(?album) = 'en')
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
89,When was Alberta admitted as province?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?date
WHERE {
  dbr:Alberta dbo:formationDate ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
90,How many missions does the Soyuz programme have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?mission) AS ?count)
WHERE {
  ?program dbo:programmeName ""Soyuz programme""@en .
  ?mission dbo:program ?program .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
91,Give me all the TV shows with Neil Patrick Harris.,"```sparql
SELECT DISTINCT ?tvShow
WHERE {
  ?tvShow dbo:starring dbr:Neil_Patrick_Harris .
  ?tvShow rdf:type dbo:TelevisionShow .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
92,When were the Hells Angels founded?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?dateFounded
WHERE {
    <http://dbpedia.org/resource/Hells_Angels> dbo:formationDate ?dateFounded
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
93,What is the net income of Apple?,"SELECT ?netIncome
WHERE {
  dbpedia:Apple_Inc dbpedia-owl:netIncome ?netIncome
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
94,Give me all Swedish holidays.,"```sparql
SELECT ?holiday
WHERE {
  ?holiday dct:subject dbc:Holidays_in_Sweden .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
95,In which city was the former Dutch queen Juliana buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city
WHERE {
  dbr:Juliana_of_the_Netherlands dbo:burialPlace ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
96,List all the musicals with music by Leonard Bernstein.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:composer dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
97,Give me all companies in the advertising industry.,"SELECT DISTINCT ?company
WHERE {
  ?company rdf:type dbo:Company .
  ?company dct:subject dbc:Advertising_companies .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
98,What is the largest metropolitan area in Washington state?,"SELECT ?metropolitanArea ?population
WHERE {
  ?metropolitanArea rdf:type dbo:City ;
                   dbo:country dbr:United_States ;
                   dbo:state dbr:Washington ;
                   dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
99,Who killed John Lennon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?killer
WHERE {
  dbo:John_Lennon dbo:deathCause ?cause .
  ?cause dbo:perpetrator ?killer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
100,Which writers studied in Istanbul?,"SELECT DISTINCT ?writer
WHERE {
  ?writer dbo:birthPlace dbr:Istanbul .
  ?writer a dbo:Writer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
101,Give me all Australian metalcore bands.,"SELECT DISTINCT ?band
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:genre dbr:Metalcore ;
        dbo:origin dbr:Australia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
102,Which countries adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  ?country a dbo:Country ;
           dbo:currency dbr:Euro .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
103,Give me all types of eating disorders.,"```sparql
SELECT DISTINCT ?type WHERE {
  ?disorder rdf:type dbo:EatingDisorder .
  ?disorder rdfs:label ?type .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
104,Was Marc Chagall a jew?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  dbr:Marc_Chagall dbo:religion dbr:Judaism .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT ?rank
WHERE {
  dbpedia:Brazil dbo:lowestFifaRank ?rank
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
106,How many films did Leonardo DiCaprio star in?,"SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
  ?film rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
107,Was Margaret Thatcher a chemist?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Margaret Thatcher"" ;
          dbo:profession dbo:Chemist .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
108,Which U.S. states are in the same time zone as Utah?,"SELECT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timeZone .
  ?state dbpedia-owl:timeZone ?timeZone .
  FILTER (?state != dbpedia:Utah)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
109,Give me all books written by Danielle Steel.,"SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:Danielle_Steel .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
110,Which country has the most official languages?,"SELECT ?country WHERE {
  ?country a dbo:Country ;
           dbo:numberOfOfficialLanguages ?numLanguages .
  FILTER NOT EXISTS {
    ?country dbo:numberOfOfficialLanguages ?otherNumLanguages .
    FILTER (?otherNumLanguages > ?numLanguages)
  }
} ORDER BY DESC(?numLanguages) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
111,What is the total amount of men and women serving in the FDNY?,"SELECT (COUNT(?person) AS ?total) WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:occupation dbr:Firefighter .
  ?person dbo:employer dbr:New_York_City_Fire_Department .
  ?person dbo:gender ?gender .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
112,Which actor played Chewbacca?,"SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Star Wars: Episode IV - A New Hope""@en .
  ?actor foaf:name ""Peter Mayhew""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
113,Give me all libraries established earlier than 1400.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?library
WHERE {
  ?library a dbo:Library ;
           dbo:openingYear ?year .
  FILTER (?year < 1400)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
114,Which programming languages were influenced by Perl?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?language
WHERE {
    ?language dct:subject dbc:Programming_languages ;
              dbo:influencedBy dbr:Perl .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
115,In which U.S. state is Mount McKinley located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state
WHERE {
  dbr:Mount_McKinley dbo:location ?state .
  ?state dbo:country dbr:United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
116,What airlines are part of the SkyTeam alliance?,"PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?airline
WHERE {
    ?airline dct:subject dbc:SkyTeam_members .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
117,Which ships were called after Benjamin Franklin?,"SELECT ?ship
WHERE {
  ?ship dbo:shipName ""Benjamin Franklin""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
118,Give me all Methodist politicians.,"```sparql
SELECT DISTINCT ?politician
WHERE {
  ?politician a dbo:Politician ;
              dbo:party dbr:Methodism .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
119,What other books have been written by the author of The Fault in Our Stars?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?book
WHERE {
  ?author foaf:name ""John Green""@en .
  ?book dbo:author ?author .
  FILTER (?book != <http://dbpedia.org/resource/The_Fault_in_Our_Stars>)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
120,What is the highest mountain?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
121,Which poet wrote the most books?,"SELECT ?poet ?count
WHERE {
  ?poet rdf:type dbo:Person ;
        rdf:type dbo:Poet ;
        dbo:author ?book .
  {
    SELECT ?poet (COUNT(?book) AS ?count)
    WHERE {
      ?poet rdf:type dbo:Person ;
            rdf:type dbo:Poet ;
            dbo:author ?book .
    }
    GROUP BY ?poet
    ORDER BY DESC(?count)
    LIMIT 1
  }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
122,Which programming languages influenced Javascript?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?language
WHERE {
  ?javascript dbo:influencedBy ?language .
  ?language dct:subject <http://dbpedia.org/resource/Category:Programming_languages> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
123,Which musician wrote the most books?,"SELECT ?musician ?count
WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:author ?book .
  {
    SELECT ?musician (COUNT(?book) AS ?count)
    WHERE {
      ?musician a dbo:MusicalArtist ;
                dbo:author ?book .
    }
    GROUP BY ?musician
    ORDER BY DESC(?count)
    LIMIT 1
  }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
124,Which films starring Clint Eastwood did he direct himself?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?film
WHERE {
    ?film rdf:type dbo:Film ;
          dbo:director dbr:Clint_Eastwood .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
125,Which software has been developed by organizations founded in California?,"SELECT DISTINCT ?software
WHERE {
  ?organization dbo:location dbr:California .
  ?organization dbo:product ?software .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
126,Which instruments does Cat Stevens play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?instrument
WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
127,How many airlines are members of the Star Alliance?,"SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline rdf:type dbo:Airline ;
           dbo:allianceMember dbr:Star_Alliance .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
128,Give me all actors called Baldwin.,"SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?name .
  FILTER regex(?name, ""Baldwin"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
129,Who wrote The Hunger Games?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Hunger Games""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
130,For which label did Elvis record his first album?,"SELECT ?label
WHERE {
  ?album dbo:artist dbr:Elvis_Presley ;
        rdfs:label ?label .
  FILTER regex(?label, ""first album"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
131,Is Christian Bale starring in Batman Begins?,"SELECT ?actor
WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  ?film dbo:wikiPageID 12345 .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
132,Where is the residence of the prime minister of Spain?,"SELECT ?residence WHERE {
  <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/property/residence> ?residence
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?movie) AS ?numMovies)
WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:starring ?movie .
}
GROUP BY ?actor
ORDER BY DESC(?numMovies)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
134,Which countries have more than two official languages?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?country
WHERE {
    ?country rdf:type dbo:Country ;
             dbo:officialLanguage ?language .
    {
        SELECT ?country (COUNT(?language) AS ?numLanguages)
        WHERE {
            ?country rdf:type dbo:Country ;
                     dbo:officialLanguage ?language .
        }
        GROUP BY ?country
        HAVING (?numLanguages > 2)
    }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
135,Which countries have more than ten caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?country
WHERE {
  ?country a dbo:Country ;
           dbo:numberOfCaves ?numCaves .
  FILTER (?numCaves > 10)
}
ORDER BY ?country","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song
WHERE {
  ?album dbo:artist dbr:Bruce_Springsteen ;
         dbo:releaseDate ?releaseDate ;
         dbo:song ?song .
  FILTER (YEAR(?releaseDate) >= 1980 && YEAR(?releaseDate) <= 1990)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
137,Which television shows were created by John Cleese?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show a dbo:TelevisionShow .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
138,When did Latvia join the EU?,"SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Latvia> <http://dbpedia.org/ontology/joinDate> ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
139,Which soccer players were born on Malta?,"SELECT ?player
WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player a dbo:SoccerPlayer
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
140,How many politicians graduated from Columbia University?,"SELECT (COUNT(?politician) AS ?count)
WHERE {
  ?politician dbo:almaMater dbr:Columbia_University .
  ?politician a dbo:Politician .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
141,Give me the birthdays of all actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthday
WHERE {
  ?actor dbo:birthDate ?birthday .
  ?actor dbo:starring dbr:Charmed .
  ?actor a dbo:Actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
142,Which telecommunications organizations are located in Belgium?,"SELECT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation ;
               dbo:location dbr:Belgium ;
               dbo:industry dbr:Telecommunication .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
143,Give me a list of all lakes in Denmark.,"```sparql
SELECT ?lake
WHERE {
  ?lake rdf:type dbo:Lake ;
        dbo:country dbr:Denmark .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
144,How many children does Eddie Murphy have?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  dbpedia:Eddie_Murphy dbpedia-owl:child ?child .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
145,Show me all English Gothic buildings in Kent.,"SELECT ?building
WHERE {
  ?building rdf:type dbo:Building ;
           dbo:architecturalStyle dbr:English_Gothic_architecture ;
           dbo:location dbr:Kent ;
           dbo:abstract ?abstract .
  FILTER (langMatches(lang(?abstract), ""en""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
146,Who is the manager of Real Madrid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?manager
WHERE {
  <http://dbpedia.org/resource/Real_Madrid_CF> dbo:manager ?manager
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
147,In which countries can you pay using the West African CFA franc?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
    ?country dbo:currency dbp:West_African_CFA_franc
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
148,Which holidays are celebrated around the world?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?holiday
WHERE {
    ?holiday a dbo:Holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
149,What is the longest river?,"SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
150,Which organizations were founded in 1930?,"SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:formationYear 1930 .
  ?organization rdf:type dbo:Organisation .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
151,What is the birth name of Angela Merkel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
152,Who has Tom Cruise been married to?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  dbpedia:Tom_Cruise dbpedia2:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
153,Which weapons did Heckler & Koch develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?weapon
WHERE {
  ?company dbo:developer <http://dbpedia.org/resource/Heckler_&_Koch> ;
           dbo:product ?weapon .
  ?weapon dct:subject <http://dbpedia.org/resource/Category:Weapons> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
154,What is the smallest city by area in Germany?,"SELECT ?city ?area
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Germany ;
        dbo:area ?area .
}
ORDER BY ASC(?area)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
155,What is the ruling party in Lisbon?,"SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Lisbon> <http://dbpedia.org/property/rulingParty> ?party
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
156,How heavy is Jupiter's lightest moon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?moon ?mass
WHERE {
  dbr:Jupiter dbo:moon ?moon .
  ?moon dbo:meanRadius ?radius .
  ?moon dbo:mass ?mass .
}
ORDER BY ASC(?mass)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
157,How many employees does IBM have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?employees
WHERE {
  <http://dbpedia.org/resource/IBM> dbo:numberOfEmployees ?employees
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
158,List all episodes of the first season of the HBO television series The Sopranos!,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?episode
WHERE {
  ?season dbo:seasonNumber ""1"" .
  ?season dbo:numberOfEpisodes ?numEpisodes .
  ?episode dbo:season ?season .
  ?episode a dbo:TelevisionEpisode .
  ?episode dbo:series dbr:The_Sopranos .
  FILTER (?numEpisodes >= 13)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
159,What does ICRO stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?definition
WHERE {
  <http://dbpedia.org/resource/ICRO> rdfs:comment ?definition
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"SELECT (COUNT(?newEpisodes) AS ?newEpisodesCount) (COUNT(?oldEpisodes) AS ?oldEpisodesCount)
WHERE {
  ?newSeries dbo:numberOfEpisodes ?newEpisodes ;
             dbo:relatedTo <http://dbpedia.org/resource/Battlestar_Galactica> .
  
  ?oldSeries dbo:numberOfEpisodes ?oldEpisodes ;
             dbo:relatedTo <http://dbpedia.org/resource/Battlestar_Galactica_(1978_TV_series)> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
161,Give me all films produced by Hal Roach.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film a dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
162,Who played Agent Smith in Matrix?,"SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""The Matrix""@en .
  ?actor foaf:name ""Hugo Weaving""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
163,Which Greek parties are pro-European?,"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?party
WHERE {
  ?party dbo:ideology dbr:Pro-European
  FILTER regex(str(?party), ""Greek_party"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
164,Give me a list of all bandleaders that play trumpet.,"SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:MusicalArtist ;
              dbo:instrument dbr:Trumpet .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
165,What is the second highest mountain on Earth?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
  FILTER (?height < 8848) 
}
ORDER BY DESC(?height)
LIMIT 1
OFFSET 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
166,Is Egypts largest city also its capital?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?capital
WHERE {
  dbo:Egypt dbo:largestCity ?largestCity .
  dbo:Egypt dbo:capital ?capital .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
167,Which rockets were launched from Baikonur?,"SELECT ?rocket
WHERE {
  ?rocket dbp:launchSite dbr:Baikonur_Cosmodrome .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
168,How many programming languages are there?,"SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
169,Which Chess players died in the same place they were born in?,"```sparql
SELECT ?player
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
170,Who is the owner of Facebook?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Facebook> dbo:owner ?owner
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
171,Give me all movies with Tom Cruise.,"SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
172,In which U.S. state is Fort Knox located?,"SELECT ?state WHERE {
  dbpedia:Fort_Knox dbpedia-owl:location ?state .
  ?state a dbpedia-owl:State .
  ?state dbpedia-owl:country dbpedia:United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"SELECT ?city
WHERE {
  ?city rdf:type dbo:City ;
        dbo:populationTotal ?population ;
        dbo:country dbr:New_Jersey ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
174,Which mountains are higher than the Nanga Parbat?,"```sparql
SELECT ?mountain
WHERE {
  ?mountain dbo:height ?height .
  FILTER (?height > 8126) .
  FILTER (?mountain != dbr:Nanga_Parbat) .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
175,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bSide
WHERE {
  dbr:The_Ramones dbo:bSide ?bSide .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
176,What are the specialities of the UNC Health Care?,"SELECT ?specialty
WHERE {
  <http://dbpedia.org/resource/UNC_Health_Care> <http://dbpedia.org/ontology/specialty> ?specialty
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
177,When was Olof Palme shot?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Assassination_of_Olof_Palme> dbp:date ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
178,List the seven kings of Rome.,"```sparql
SELECT ?king ?reignStart ?reignEnd
WHERE {
  ?king a dbo:Monarch ;
        dbo:title ""King of Rome"" ;
        dbo:reignStart ?reignStart ;
        dbo:reignEnd ?reignEnd .
}
ORDER BY ?reignStart
LIMIT 7
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
179,Give me all people that were born in Vienna and died in Berlin.,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Vienna ;
         dbo:deathPlace dbr:Berlin .
  ?person a dbo:Person .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
180,Is Darth Vader Luke’s father?,"SELECT ?father
WHERE {
  <http://dbpedia.org/resource/Darth_Vader> <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Luke_Skywalker> .
  <http://dbpedia.org/resource/Darth_Vader> <http://dbpedia.org/ontology/parent> ?father .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
181,Show me all the breweries in Australia.,"SELECT ?brewery
WHERE {
  ?brewery rdf:type dbo:Brewery ;
           dbo:country dbr:Australia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"SELECT ?film
WHERE {
  ?film dbo:producer dbr:Steven_Spielberg ;
        dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
183,Give me all soccer clubs in Spain.,"```sparql
SELECT ?club
WHERE {
  ?club rdf:type dbo:SoccerClub ;
        dbo:country dbr:Spain .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
184,Who produced films starring Natalie Portman?,"SELECT DISTINCT ?producer
WHERE {
  ?film dbpedia-owl:starring dbr:Natalie_Portman .
  ?film dbpedia-owl:producer ?producer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
185,Give me all breeds of the German Shepherd dog.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?breed
WHERE {
  ?breed dbo:wikiPageRedirects dbr:German_Shepherd
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight
WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:team dbr:Chicago_Bulls .
  ?player dbo:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
187,Which languages are spoken in Estonia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language
WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
188,What is the largest country in the world?,"SELECT ?country ?area
WHERE {
  ?country a dbo:Country ;
           dbo:area ?area .
}
ORDER BY DESC(?area)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
189,What is the largest city in america?,"SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:United_States ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
OFFSET 0","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
190,Who was the pope that founded the Vatican Television?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?pope
WHERE {
    ?pope a dbo:Pope ;
          dbo:birthPlace <http://dbpedia.org/resource/Vatican_City> ;
          dbo:associatedMedia <http://dbpedia.org/resource/Vatican_Television> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
191,Who discovered Ceres?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?discoverer
WHERE {
    <http://dbpedia.org/resource/Ceres> dct:subject ?category .
    ?category skos:broader* <http://dbpedia.org/resource/Category:Astronomical_objects_discovered_by_Giuseppe_Piazzi> .
    <http://dbpedia.org/resource/Ceres> dbo:discoverer ?discoverer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
192,Who is the king of the Netherlands?,"SELECT ?king
WHERE {
  <http://dbpedia.org/resource/Netherlands> <http://dbpedia.org/ontology/leaderName> ?king .
  ?king a <http://dbpedia.org/ontology/Monarch> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
193,Is Cola a beverage?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?beverage
WHERE {
  dbo:Cola rdf:type ?beverage .
  ?beverage rdf:type dbo:Beverage .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?almaMater
WHERE {
  dbpedia:Angela_Merkel dbpedia-owl:almaMater ?almaMater
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
195,Who wrote the book Les Piliers de la terre?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""Les Piliers de la terre""@fr .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
196,Which airports does Yeti Airlines serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport
WHERE {
  dbr:Yeti_Airlines dbo:operates ?airport .
  ?airport a dbo:Airport .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
197,Where is the birthplace of Goethe?,"SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Johann_Wolfgang_von_Goethe> <http://dbpedia.org/ontology/birthPlace> ?birthplace .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

ASK {
  ?event1 dct:subject <http://dbpedia.org/resource/Category:Cuban_Missile_Crisis> .
  ?event2 dct:subject <http://dbpedia.org/resource/Category:Bay_of_Pigs_Invasion> .
  FILTER (?event1 < ?event2)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
199,Which ingredients do I need for carrot cake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ingredient
WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
200,Who created Wikipedia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?creator
WHERE {
    <http://dbpedia.org/resource/Wikipedia> dbo:author ?creator
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
201,What is the highest mountain in Saxony Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mountain
WHERE {
  ?mountain dbo:locatedInArea dbr:Saxony ;
           dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
202,Who is the current federal minister of finance in Germany?,"SELECT ?minister
WHERE {
  ?minister a dbpedia-owl:Person ;
           dbpprop:title ""Federal Minister of Finance of Germany"" ;
           dbpprop:incumbent ?currentMinister .
  FILTER (langMatches(lang(?currentMinister), ""en""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
203,In which country is Mecca located?,"SELECT ?country WHERE {
  dbpedia:Mecca dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
204,Who played Gus Fring in Breaking Bad?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  dbr:Gus_Fring dbo:starring ?actor .
  ?actor dbo:occupation dbr:Actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
205,In which country does the Nile start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
    <http://dbpedia.org/resource/Nile> dbo:sourceCountry ?country
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
206,In which state Penn State University is located?,"SELECT ?state WHERE {
  dbpedia:Penn_State_University dbpedia-owl:state ?state
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
207,What is the biggest stadium in Spain?,"SELECT ?stadium ?size
WHERE {
  ?stadium rdf:type dbo:Stadium ;
           dbo:country dbr:Spain ;
           dbo:capacity ?size .
}
ORDER BY DESC(?size)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach
WHERE {
  ?team rdf:type dbo:IceHockeyTeam ;
        rdfs:label ""Ankara"" ;
        dbo:coach ?coach .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
209,How large is the area of UK?,"SELECT ?area WHERE {
  <http://dbpedia.org/resource/United_Kingdom> <http://dbpedia.org/ontology/areaTotal> ?area
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
210,Who created Batman?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?creator
WHERE {
    ?batman dbo:creator ?creator .
    FILTER regex(str(?creator), ""Batman"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
211,Was Sigmund Freud married?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  dbo:Sigmund_Freud foaf:spouse ?spouse
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
212,Who are the developers of DBpedia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?developer
WHERE {
  <http://dbpedia.org/resource/DBpedia> dbo:developer ?developer
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
213,Give me all movies directed by Francis Ford Coppola.,"SELECT ?movie
WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
  ?movie rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
214,Are tree frogs a type of amphibian?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?type
WHERE {
  dbr:Tree_frog dbo:wikiPageRedirects ?redirect .
  ?redirect dbo:wikiPageDisambiguates ?type .
  ?type dbo:wikiPageRedirects dbr:Amphibian .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
215,What is the location of the Houses of Parliament?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?location
WHERE {
  <http://dbpedia.org/resource/Houses_of_Parliament> dbo:location ?location
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
216,how much is the elevation of Düsseldorf Airport ?,"SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
217,How much is the population of mexico city ?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Mexico_City> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
218,when was the founding date of french fifth republic?,"SELECT ?date
WHERE {
  dbr:French_Fifth_Republic dbo:formationDate ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
219,Who was the first King of England?,"SELECT ?king WHERE {
  ?king a dbo:Monarch ;
        dbo:title ""King of England"" ;
        dbo:successor ?successor .
  FILTER NOT EXISTS { ?king dbo:predecessor [] }
} LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
220,Who is the editor of Forbes?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?editor
WHERE {
  ?forbes dbo:publisher <http://dbpedia.org/resource/Forbes>.
  ?forbes dbo:editor ?editor.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
221,Which awards did Douglas Hofstadter win?,"SELECT ?award
WHERE {
  dbpedia:Douglas_Hofstadter dbpedia-owl:award ?award
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
222,Who is the youngest Darts player?,"SELECT ?player ?birthdate
WHERE {
  ?player a dbo:DartsPlayer .
  ?player dbo:birthDate ?birthdate .
}
ORDER BY ASC(?birthdate)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
223,Is horse racing a sport?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?sport
WHERE {
    dbo:Horse_racing rdf:type ?sport .
    FILTER (?sport = dbo:Sport)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river WHERE {
  dbpedia:Brooklyn_Bridge dbpedia-owl:crosses ?river .
  ?river a dbpedia-owl:River
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
225,How many people live in Poland?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
226,When was the last episode of the TV series Friends aired?,"SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Friends> <http://dbpedia.org/ontology/lastAired> ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
227,Is the wife of president Obama called Michelle?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Michelle_Obama)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
229,Who is 8th president of US?,"SELECT ?president WHERE {
  ?president dbo:order 8 ;
             rdf:type dbo:President ;
             dbo:country dbr:United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
230,how much is the total population of  european union?,"SELECT ?population WHERE {
  <http://dbpedia.org/resource/European_Union> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
231,Give me all launch pads operated by NASA.,"```sparql
SELECT ?launchPad
WHERE {
  ?launchPad rdf:type dbo:LaunchPad ;
            dbo:operator dbr:NASA .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
232,Who developed the video game World of Warcraft?,"SELECT ?developer
WHERE {
  <http://dbpedia.org/resource/World_of_Warcraft> <http://dbpedia.org/ontology/developer> ?developer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
233,What is the birth name of Adele?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  dbo:Adele dbo:birthName ?birthName
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
234,What is the population of Cairo?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Cairo> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
235,Is Frank Herbert still alive?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Frank Herbert"" ;
          dbo:deathDate ?deathDate .
  FILTER (!bound(?deathDate))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
236,What is the last work of Dan Brown?,"SELECT ?work
WHERE {
  ?author foaf:name ""Dan Brown""@en .
  ?author dbp:lastWork ?work .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
237,Where is Sungkyunkwan University?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?location
WHERE {
    <http://dbpedia.org/resource/Sungkyunkwan_University> dbp:location ?location
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
238,Who is the author of the interpretation of dreams?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Interpretation of Dreams""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
239,When was the death  of  Shakespeare?,"SELECT ?dateOfDeath
WHERE {
  <http://dbpedia.org/resource/William_Shakespeare> <http://dbpedia.org/ontology/deathDate> ?dateOfDeath
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
241,Who developed Slack?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?developer
WHERE {
  ?s dbo:developer ?developer .
  ?s dbp:name ""Slack Technologies"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
242,Where is the origin of Carolina reaper?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?origin
WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
243,In which year was Rachel Stevens born?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthYear
WHERE {
  <http://dbpedia.org/resource/Rachel_Stevens> dbo:birthDate ?birthDate .
  BIND(YEAR(?birthDate) AS ?birthYear)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
244,How often did Jane Fonda marry?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT (COUNT(?spouse) as ?marriageCount)
WHERE {
  dbpedia:Jane_Fonda dbpedia-owl:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
245,Was the wife of president Lincoln called Mary?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT ?wife
WHERE {
    ?president dbpprop:spouse ?wife .
    ?president dbpprop:office ""President of the United States""@en .
    FILTER (?president = dbpedia:Abraham_Lincoln)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
246,Which cities does the Weser flow through?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city
WHERE {
  ?river dbo:riverName dbr:Weser ;
         dbo:city ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
247,In which programming language is GIMP written?,"SELECT ?language
WHERE {
  <http://dbpedia.org/resource/GIMP> <http://dbpedia.org/ontology/programmingLanguage> ?language
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
248,Which university did Angela Merkel attend?,"SELECT ?university
WHERE {
  <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/ontology/education> ?university .
  ?university a <http://dbpedia.org/ontology/University> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
249,List all the musicals with music by Elton John.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musical
WHERE {
  ?musical dbo:musicComposer dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
250,How many Aldi stores are there?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?store) AS ?count)
WHERE {
  ?store rdf:type dbo:Store ;
         dbo:parentCompany dbr:Aldi .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
251,What is the longest river in the world?,"SELECT ?river 
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} 
ORDER BY DESC(?length)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
252,When was John Adams born?,"SELECT ?birthDate WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthDate
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
253,Which companies produce hovercrafts?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?company
WHERE {
  ?hovercraft dbo:manufacturer ?company .
  ?company a dbo:Company .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
254,Who was the wife of U.S. president Lincoln?,"PREFIX dbp: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?wife
WHERE {
  dbp:Abraham_Lincoln dbo:spouse ?wife .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
255,Which species does an elephant belong?,"SELECT ?species WHERE {
  dbpedia:Elephant dct:subject ?species .
  ?species dct:subject dbc:Species .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
256,How many people live in the capital of Australia?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Canberra> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
257,In which ancient empire could you pay with cocoa beans?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?empire
WHERE {
  ?empire dbo:currency dbr:Cocoa_bean .
  ?empire dbo:timePeriod ?timePeriod .
  ?timePeriod dbo:wikiPageRedirects dbr:Ancient_empires .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
258,How many theories did Albert Einstein come up with?,"SELECT (COUNT(?theory) AS ?count)
WHERE {
  ?scientist rdf:type dbo:Scientist ;
             foaf:name ""Albert Einstein""@en ;
             dbo:notableIdea ?theory .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
259,Who composed the soundtrack for Cameron's Titanic?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?composer
WHERE {
  dbpedia:James_Cameron dbo:soundtrack ?soundtrack .
  ?soundtrack dbo:musicComposer ?composer .
  FILTER regex(str(?soundtrack), ""Titanic"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
260,Give me the runtime of Toy Story.,"SELECT ?runtime
WHERE {
  <http://dbpedia.org/resource/Toy_Story> <http://dbpedia.org/ontology/Work/runtime> ?runtime
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
262,With how many countries Iran has borders?,"SELECT (COUNT(?country) AS ?count)
WHERE {
    dbpedia:Iran dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
263,Which electronics companies were founded in Beijing?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?company
WHERE {
  ?company dct:subject dbc:Electronics_companies_of_China ;
           dbo:foundationPlace dbr:Beijing .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
264,Who was the successor of John F. Kennedy?,"SELECT ?successor
WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
265,Who is the mayor of Paris?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?mayor
WHERE {
  dbpedia:Paris dbpedia-owl:mayor ?mayor
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
266,Did Arnold Schwarzenegger attend a university?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?university
WHERE {
  dbpedia:Arnold_Schwarzenegger dbpedia-owl:almaMater ?university
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
267,Is James Bond married?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?isMarried
WHERE {
  dbpedia:James_Bond dbpedia-owl:spouse ?isMarried
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
268,Does the Isar flow into a lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lake
WHERE {
  dbr:Isar dbo:mouth ?lake .
  ?lake a dbo:Lake
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
269,Which Indian company has the most employees?,"SELECT ?company ?employees
WHERE {
  ?company rdf:type dbo:Company ;
          dbo:country dbr:India ;
          dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?employees)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
270,Who was John F. Kennedy's vice president?,"SELECT ?vp
WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vp
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
271,Which country does the creator of Miffy come from?,"SELECT ?country WHERE {
  <http://dbpedia.org/resource/Dick_Bruna> <http://dbpedia.org/ontology/nationality> ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
273,In what city is the Heineken brewery?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?city
WHERE {
  ?brewery rdf:type dbo:Brewery ;
           dbp:name ""Heineken"" ;
           dbo:location ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
274,Is Barack Obama a democrat?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  dbo:Barack_Obama dbo:party ?party .
  FILTER (?party = dbo:Democratic_Party_(United_States))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
275,List the children of Margaret Thatcher.,"```sparql
SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
276,From which region is the Melon de Bourgogne?,"SELECT ?region
WHERE {
  <http://dbpedia.org/resource/Melon_de_Bourgogne> <http://dbpedia.org/ontology/region> ?region
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
278,how big is the total area of North Rhine- Westphalia?,"SELECT ?area WHERE {
  <http://dbpedia.org/resource/North_Rhine-Westphalia> <http://dbpedia.org/ontology/areaTotal> ?area
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
279,Which city has the most inhabitants?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
280,What is Donald Trump's main business?,"SELECT ?business WHERE {
  dbpedia:Donald_Trump dbpedia-owl:occupation ?business .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
281,When will start the final match of the football world cup 2018?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?date
WHERE {
    ?tournament a dbo:FootballTournament ;
                dbp:currentSeason ?season .
    ?season dbp:finalEvent ?finalEvent .
    ?finalEvent dbp:date ?date .
    FILTER regex(str(?tournament), ""2018 FIFA World Cup final"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
282,Which films did Stanley Kubrick direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
283,how much is the population  Iraq?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Iraq> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population WHERE {
  <http://dbpedia.org/resource/Toronto> <http://dbpedia.org/ontology/populationTotal> ?population .
} ORDER BY DESC(?population) LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
285,Who is the mayor of the capital of French Polynesia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor
WHERE {
  dbr:Papeete dbo:mayor ?mayor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
286,Give me all actors starring in movies directed by William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
287,How tall is Claudia Schiffer?,"SELECT ?height WHERE {
  dbpedia:Claudia_Schiffer dbpedia-owl:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
288,how much is the population densty rank of germany?,"SELECT ?populationDensityRank WHERE {
  <http://dbpedia.org/resource/Germany> <http://dbpedia.org/property/populationDensityRank> ?populationDensityRank
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
289,What is the highest mountain in Italy?,"SELECT ?mountain 
WHERE {
    ?mountain rdf:type dbo:Mountain ;
             dbo:country dbr:Italy ;
             dbo:elevation ?elevation .
} 
ORDER BY DESC(?elevation)
LIMIT 1.","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
290,List all games by GMT.,"SELECT ?game
WHERE {
  ?game dbo:publisher dbr:GMT_Games
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
291,What is the official language of Suriname?,"SELECT ?language 
WHERE {
  <http://dbpedia.org/resource/Suriname> <http://dbpedia.org/ontology/officialLanguage> ?language
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
292,In which city did Nikos Kazantzakis die?,"SELECT ?city WHERE {
  dbpedia:Nikos_Kazantzakis dbpedia-owl:deathPlace ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
293,What is in a chocolate chip cookie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ingredient
WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
294,In which country is the Limerick Lake?,"SELECT ?country WHERE {
  dbpedia:Limerick_Lake dbpedia-owl:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
295,Give me all video games published by Mean Hamster Software.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?game
WHERE {
    ?game dbo:publisher dbr:Mean_Hamster_Software .
    ?game rdf:type dbo:VideoGame .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
296,Give me all members of Prodigy.,"SELECT ?member
WHERE {
  ?band rdf:type dbo:Band ;
        foaf:name ""The Prodigy""@en ;
        dbo:bandMember ?member .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
297,In which time zone is Rome?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?timeZone
WHERE {
    <http://dbpedia.org/resource/Rome> dbo:timeZone ?timeZone
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
298,How high is the lighthouse in Colombo?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Colombo_Lighthouse> dbp/height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
299,Who are the writers of the Wall album of Pink Floyd?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer
WHERE {
    <http://dbpedia.org/resource/The_Wall> dbp:writer ?writer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
300,Who is the mayor of Rotterdam?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Rotterdam> <http://dbpedia.org/ontology/leaderName> ?mayor .
  <http://dbpedia.org/resource/Rotterdam> <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Mayor> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
301,What is the largest city in Australia?,"SELECT ?city
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:Australia ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
302,Who was married to president Chirac?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
    <http://dbpedia.org/resource/Jacques_Chirac> dbpedia-owl:spouse ?spouse
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
303,What form of government is found in South Africa?,"SELECT ?governmentType WHERE {
  <http://dbpedia.org/resource/South_Africa> <http://dbpedia.org/ontology/governmentType> ?governmentType
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
304,How high is the Yokohama Marine Tower?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Yokohama_Marine_Tower> dbo:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
305,Which holidays are celebrated around the world? test2,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?holiday
WHERE {
    ?holiday a dbo:Holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
306,Who is the tallest basketball player?,"SELECT ?player ?height
WHERE {
  ?player a dbpedia-owl:BasketballPlayer ;
          dbpedia-owl:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
307,How many languages are spoken in Turkmenistan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?language) AS ?count)
WHERE {
  dbr:Turkmenistan dbo:language ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
308,Did Che Guevara have children?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  dbpedia:Che_Guevara dbpedia-owl:child ?child
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT ?film
WHERE {
    ?film dbpedia-owl:award dbpedia:Grand_Prix_(Cannes)
    FILTER regex(str(?film), ""Kaurismäki"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
310,To which party does the mayor of Paris belong?,"PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Mayor_of_Paris> dbp:party ?party
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver ?name ?count
WHERE {
  ?driver a dbo:FormulaOneRacer ;
          rdfs:label ?name ;
          dbo:numberOfRaces ?count .
}
ORDER BY DESC(?count)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
312,What country is Sitecore from?,"SELECT ?country WHERE {
  dbpedia:Sitecore dbo:location ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace WHERE {
  dbpedia:Frank_Sinatra dbpedia-owl:birthPlace ?birthPlace
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
314,Is Christian Bale starring in Velvet Goldmine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor
WHERE {
  ?film dbo:starring ?actor ;
        dbp:title ""Velvet Goldmine""@en .
  FILTER (?actor = dbo:Christian_Bale)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
315,Who is the son of Sonny and Cher?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>

SELECT ?son
WHERE {
  dbpedia:Sonny_and_Cher dbpedia2:child ?son .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
316,How many ethnic groups live in Slovenia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  dbr:Slovenia dbo:ethnicGroups ?ethnicGroup .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
317,What is the capital of Cameroon?,"SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?capital .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
318,Was Natalie Portman born in the United States?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  dbo:Natalie_Portman dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country <http://dbpedia.org/resource/United_States> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
319,How many pages does War and Peace have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?pages
WHERE {
  <http://dbpedia.org/resource/War_and_Peace> dbo:numberOfPages ?pages
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
320,Who is the oldest child of Meryl Streep?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  dbpedia:Meryl_Streep dbpedia2:children ?children .
  ?children dbpedia2:child ?child .
}
ORDER BY ?child
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
321,Which television shows were created by Walt Disney?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show a dbo:TelevisionShow .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
322,What does IYCM stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?label
WHERE {
  dbpedia:IYCM rdfs:label ?label
  FILTER (lang(?label) = 'en')
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
323,Which types of grapes grow in Oregon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType dbo:growsIn dbr:Oregon .
  ?grapeType a dbo:Grape .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
324,Was U.S. president Jackson involved in a war?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?war
WHERE {
  dbpedia:Andrew_Jackson dbpedia-owl:militaryCommand ?war .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
325,When was the Titanic completed?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?completionDate
WHERE {
  dbpedia-owl:Titanic dbpedia-owl:completionDate ?completionDate
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
326,Did Tesla win a nobel prize in physics?,"SELECT ?person ?award
WHERE {
  ?person foaf:name ""Nikola Tesla""@en .
  ?person dbp:award ?award .
  ?award rdf:type dbo:NobelPrize .
  ?award dbo:awardCategory dbr:Physics .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
327,How many states are in Mexico?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?state) AS ?count)
WHERE {
    ?state dbo:country <http://dbpedia.org/resource/Mexico> ;
           a dbo:State .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist
WHERE {
  ?scientist dbp:knownFor dbr:Manhattan_Project ;
            dbp:awards dbr:Nobel_Peace_Prize .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
329,How much did the Lego Movie cost?,"SELECT ?cost
WHERE {
  dbpedia:The_Lego_Movie dbo:budget ?cost
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
330,Who composed the music for Harold and Maude?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?composer
WHERE {
    ?film dbo:director <http://dbpedia.org/resource/Harold_and_Maude> ;
          dbp:music ?composer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
331,List all episodes of the first season of the HBO television series The Sopranos.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?episode
WHERE {
  dbr:The_Sopranos dbo:numberOfSeasons ""6"" .
  ?episode dbo:season ""1"" ;
           dbo:series dbr:The_Sopranos .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
332,Which city has the least inhabitants?,"SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
333,Where is Syngman Rhee buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace
WHERE {
  dbr:Syngman_Rhee dbo:burialPlace ?burialPlace
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
334,Does Neymar play for Real Madrid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team
WHERE {
  dbr:Neymar dbo:team ?team .
  FILTER (?team = dbr:Real_Madrid)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
335,Who wrote the book The Pillars of the Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book dbp:title ""The Pillars of the Earth""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
336,Do Prince Harry and Prince William have the same parents?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?parent1 ?parent2
WHERE {
  dbpedia:Prince_Harry dbpedia-owl:parent ?parent1 .
  dbpedia:Prince_William dbpedia-owl:parent ?parent2 .
  FILTER (?parent1 = ?parent2)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?supervisor
WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
338,Does Breaking Bad have more episodes than Game of Thrones?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?breakingBadEpisode) AS ?breakingBadEpisodeCount) (COUNT(?gameOfThronesEpisode) AS ?gameOfThronesEpisodeCount)
WHERE {
  ?breakingBad dbo:numberOfEpisodes ?breakingBadEpisode .
  ?gameOfThrones dbo:numberOfEpisodes ?gameOfThronesEpisode .
  FILTER (?breakingBad > ?gameOfThrones)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
339,Who was Vincent van Gogh inspired by?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?inspiredBy
WHERE {
    <http://dbpedia.org/resource/Vincent_van_Gogh> dbo:influenced ?inspiredBy .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building ?floors
WHERE {
  ?building rdf:type dbo:Building ;
           dbo:numberOfFloors ?floors .
  FILTER (?floors > (SELECT ?floorsBurjKhalifa WHERE { dbo:Burj_Khalifa dbo:numberOfFloors ?floorsBurjKhalifa }))
  FILTER (?building != dbo:Burj_Khalifa)
}
ORDER BY DESC(?floors)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
341,What was the final result of the War of the Roses?,"SELECT ?result
WHERE {
  dbpedia:War_of_the_Roses dbpedia:result ?result
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
342,How much did Pulp Fiction cost?,"SELECT ?cost
WHERE {
  dbpedia:Pulp_Fiction dbo:budget ?cost
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
343,Is proinsulin a protein?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?protein
WHERE {
  dbr:Proinsulin dbo:wikiPageRedirects ?protein .
  ?protein a dbo:Protein .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
344,Do Urdu and Persian have a common root?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?language1 ?language2
WHERE {
  ?language1 dbo:languageFamily ?family .
  ?language2 dbo:languageFamily ?family .
  FILTER (?language1 = dbo:Urdu && ?language2 = dbo:Persian)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"SELECT ?actor
WHERE {
  ?movie dbp:producer dbr:Benicio_del_Toro ;
         dbp:country dbr:Spain ;
         dbp:starring ?actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?baikalArea ?greatBearArea
WHERE {
  <http://dbpedia.org/resource/Lake_Baikal> dbo:area ?baikalArea .
  <http://dbpedia.org/resource/Great_Bear_Lake> dbo:area ?greatBearArea .
  FILTER (?baikalArea > ?greatBearArea)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
347,Show me all books in Asimov's Foundation series.,"PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?book
WHERE {
  ?book dbo:series dbr:Foundation_Series .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
348,Where was Bach born?,"SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Johann_Sebastian_Bach> <http://dbpedia.org/ontology/birthPlace> ?birthPlace
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
349,Which city has the oldest running metro?,"SELECT ?city WHERE {
  ?metro rdf:type dbo:RapidTransit .
  ?metro dbo:city ?city .
  ?metro dbo:openingYear ?year .
  FILTER NOT EXISTS { ?otherMetro dbo:openingYear ?otherYear .
                     ?otherYear < ?year }
} LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
350,Who designed the Brooklyn Bridge?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?designer
WHERE {
    <http://dbpedia.org/resource/Brooklyn_Bridge> dbp:designer ?designer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
351,How many people live in Eurasia?,"SELECT (SUM(?population) AS ?totalPopulation)
WHERE {
  ?country rdf:type dbo:Country ;
           dbo:populationTotal ?population ;
           dbo:continent dbr:Eurasia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
352,Who is the host of the BBC Wildlife Specials?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?host
WHERE {
    ?wildlifeSpecial dbo:producer <http://dbpedia.org/resource/BBC_Natural_History_Unit> ;
                     dbp:host ?host .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
353,"What is the total population of Melbourne, Florida?","SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Melbourne,_Florida> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
354,What country is Mount Everest in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  dbr:Mount_Everest dbo:country ?country
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
355,To which artistic movement did the painter of The Three Dancers belong?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movement
WHERE {
  dbr:The_Three_Dancers dbo:artist ?artist .
  ?artist dbo:movement ?movement .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
356,When did Operation Overlord commence?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?date
WHERE {
    ?event a dbo:MilitaryConflict ;
           dbo:conflictName ""Operation Overlord"" ;
           dbp:dateStart ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
357,What is the bridge with the longest span?,"SELECT ?bridge 
WHERE {
    ?bridge rdf:type dbo:Bridge ;
            dbo:longestSpan ?span .
} 
ORDER BY DESC(?span)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
358,Is there a video game called Battle Chess?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
359,Who was buried in the Great Pyramid of Giza?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  dbr:Great_Pyramid_of_Giza dbo:burial ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?plant
WHERE {
  dbr:Ford_Motor_Company dbo:manufacturingPlant ?plant .
  ?plant dbo:location dbr:Malaysia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
361,Did Socrates influence Aristotle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?influencedBy
WHERE {
  dbr:Aristotle dbo:influencedBy dbr:Socrates
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
362,How many children did Benjamin Franklin have?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  dbpedia:Benjamin_Franklin dbpedia-owl:child ?child .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
363,How tall is Michael Jordan?,"SELECT ?height WHERE {
  dbpedia:Michael_Jordan dbpedia-owl:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
364,In which UK city are the headquarters of the MI6?,"SELECT ?city WHERE {
  <http://dbpedia.org/resource/MI6> <http://dbpedia.org/property/headquarters> ?hq .
  ?hq <http://dbpedia.org/ontology/city> ?city .
  ?city <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
365,Who created Family Guy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?creator
WHERE {
  <http://dbpedia.org/resource/Family_Guy> dbo:creator ?creator
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
366,In which city does the Chile Route 68 end?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Chile_Route_68> <http://dbpedia.org/property/end> ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild
WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
368,When did the Ming dynasty dissolve?,"SELECT ?date
WHERE {
  dbr:Ming_Dynasty dbo:end ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
369,In which military conflicts did Lawrence of Arabia participate?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict
WHERE {
  dbr:T._E._Lawrence dbo:militaryConflict ?conflict .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
370,What is the timezone in San Pedro de Atacama?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?timezone
WHERE {
  <http://dbpedia.org/resource/San_Pedro_de_Atacama> dbo:timezone ?timezone
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
371,Give me all books by William Goldman with more than 300 pages.,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book
WHERE {
  ?book a dbpedia-owl:Book ;
        dbpedia-owl:author dbpedia:William_Goldman ;
        dbpedia-owl:numberOfPages ?pages .
  FILTER (?pages > 300)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
372,What did Bruce Carver die from?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?causeOfDeath
WHERE {
  <http://dbpedia.org/resource/Bruce_Carver> dbo:causeOfDeath ?causeOfDeath
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"SELECT ?subsidary
WHERE {
  ?subsidary dbo:subsidiary <http://dbpedia.org/resource/Lufthansa> ;
             dbo:serves <http://dbpedia.org/resource/Dortmund_Airport> ,
                        <http://dbpedia.org/resource/Berlin_Tegel_Airport> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
374,Does Abraham Lincoln's death place have a website?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?website
WHERE {
  dbo:Abraham_Lincoln dbo:deathPlace ?deathPlace .
  ?deathPlace dbo:wikiPageExternalLink ?website
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
375,Did Elvis Presley have children?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  dbpedia:Elvis_Presley dbpedia-owl:child ?child
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
376,Is Michelle Obama the wife of Barack Obama?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Michelle_Obama dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Barack_Obama)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
377,In which city does Sylvester Stallone live?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Sylvester_Stallone> <http://dbpedia.org/ontology/residence> ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
378,Which books by Kerouac were published by Viking Press?,"```sparql
SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbp:author dbr:Jack_Kerouac ;
        dbp:publisher dbr:Viking_Press .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
379,Who wrote the song Hotel California?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist
WHERE {
    ?song dbo:artist ?artist ;
          dbp:title ""Hotel California""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
380,What is the capital of Canada?,"SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?capital
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
381,Who is the mayor of Tel Aviv?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?mayor
WHERE {
  dbpedia:Tel_Aviv dbpedia-owl:mayor ?mayor
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
382,What form of government does Russia have?,"SELECT ?governmentType WHERE {
  <http://dbpedia.org/resource/Russia> <http://dbpedia.org/ontology/governmentType> ?governmentType
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book
WHERE {
  ?author foaf:name ""Muhammad Ali""@en .
  ?book dbp:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
384,Who was the first to climb Mount Everest?,"SELECT ?person WHERE {
  ?person dbo:mountain dbpedia:Mount_Everest .
  ?person dbo:firstAscent ?date .
} ORDER BY ?date LIMIT 1 OFFSET 0","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
385,How many languages are spoken in Colombia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language dbo:country <http://dbpedia.org/resource/Colombia> .
  ?language a dbo:Language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
386,What is the currency of the Czech Republic?,"SELECT ?currency
WHERE {
  <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?currency
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
387,Where in France is sparkling wine produced?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region
WHERE {
    ?wine a dbo:SparklingWine ;
          dbo:region ?region .
    ?region dbo:country dbr:France .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
388,When did Boris Becker end his active career?,"SELECT ?endDate
WHERE {
  dbpedia:Boris_Becker dbpedia-owl:careerEnd ?endDate
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke ;
         dbo:director dbr:Guy_Ritchie .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
391,Show me Hemingway's autobiography.,"SELECT ?autobiography
WHERE {
  ?author foaf:name ""Ernest Hemingway""@en .
  ?author dbp:notableWork ?autobiography .
  FILTER regex(str(?autobiography), ""autobiography"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
392,How tall is Amazon Eve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Amazon_Eve> dbo:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
393,What are the five boroughs of New York?,"SELECT ?borough WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/ontology/region> ?borough .
  ?borough <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Boroughs_of_New_York_City> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
394,Give me all Canadian Grunge record labels.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?label
WHERE {
  ?label a dbo:RecordLabel ;
         dbo:country dbr:Canada ;
         dbo:genre dbr:Grunge .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
395,In which country does the Ganges start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  dbr:Ganges dbo:sourceCountry ?country
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
396,Who is the founder of Penguin Books?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?founder
WHERE {
    ?penguin dbo:wikiPageRedirects <http://dbpedia.org/resource/Penguin_Books> .
    ?penguin dbo:founder ?founder .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
397,Who wrote the Game of Thrones theme?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?composer
WHERE {
    ?tvShow dbo:themeMusic ?themeMusic .
    ?themeMusic dbp:composer ?composer .
    FILTER regex(?tvShow, ""Game of Thrones"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
398,Who is the president of Eritrea?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?president
WHERE {
  ?country dbo:president ?president ;
          dbo:commonName ""Eritrea""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
399,In which city did John F. Kennedy die?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/ontology/deathPlace> ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
400,What is the highest mountain in Australia?,"SELECT ?mountain 
WHERE {
    ?mountain rdf:type dbo:Mountain ;
             dbo:country dbr:Australia ;
             dbo:elevation ?elevation .
} 
ORDER BY DESC(?elevation)
LIMIT 1.","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
401,Who writes the Farmers' Almanac?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""Farmers' Almanac""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
402,Give me the currency of China.,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?currency
WHERE {
  <http://dbpedia.org/resource/China> dbo:currency ?currency
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
403,Give me all Swedish oceanographers.,"SELECT DISTINCT ?oceanographer
WHERE {
    ?oceanographer a <http://dbpedia.org/ontology/Oceanographer> .
    ?oceanographer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Sweden> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
404,In which city are the headquarters of the United Nations?,"SELECT ?city WHERE {
  <http://dbpedia.org/resource/United_Nations> <http://dbpedia.org/ontology/headquarter> ?hq .
  ?hq <http://dbpedia.org/ontology/city> ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
405,Is Rita Wilson the wife of Tom Hanks?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>

SELECT ?wife
WHERE {
  dbpedia:Tom_Hanks dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Rita_Wilson)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
406,In which countries do people speak Japanese?,"SELECT DISTINCT ?country WHERE {
  ?country dbpedia-owl:language dbpedia:Japanese_language
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
408,Which museum in New York has the most visitors?,"SELECT ?museum ?visitors
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:New_York_City ;
          dbo:visitors ?visitors .
}
ORDER BY DESC(?visitors)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
409,What was the first Queen album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?album
WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Queen ;
         dbp:studioAlbum ""true"" ;
         dbp:releaseDate ?date .
}
ORDER BY ASC(?date)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
410,What was the first name of the band Queens of the Stone Age?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?band dbo:formerName ?bandName ;
       dbo:genre dbr:Stoner_rock .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
411,What was the last movie with Alec Guinness?,"SELECT ?movie
WHERE {
  ?actor foaf:name ""Alec Guinness""@en .
  ?movie dbo:starring ?actor .
}
ORDER BY DESC(?movie)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
412,Give me all actors starring in Last Action Hero.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film dbo:wikiPageID ?id .
  FILTER (?id = 10469)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
413,Who discovered Pluto?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?discoverer
WHERE {
    ?pluto dct:subject dbc:Discoverers_of_minor_planets .
    ?pluto dbo:discoverer ?discoverer .
    FILTER regex(str(?pluto), ""Pluto"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
1,List all boardgames by GMT.,"```sparql
SELECT ?boardgame
WHERE {
  ?boardgame dct:subject dbc:Board_games_published_by_GMT_Games .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
2,Who developed Skype?,"```
SELECT ?developer
WHERE {
  dbr:Skype dbo:developer ?developer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
3,Which people were born in Heraklion?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person a dbo:Person .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
4,In which U.S. state is Area 51 located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Area_51> dbpedia-owl:location ?location .
  ?location dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
  ?location dbpedia-owl:state ?state .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
5,Who is the mayor of New York City?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/ontology/leaderName> ?mayor .
  FILTER regex(?mayor, ""Mayor"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
6,Which countries have places with more than two caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?place rdf:type dbo:Place ;
         dbo:location ?country .
  ?country a dbo:Country .
  {
    SELECT ?country (COUNT(?cave) AS ?numCaves)
    WHERE {
      ?cave rdf:type dbo:Cave ;
            dbo:location ?place .
    }
    GROUP BY ?country
    HAVING (?numCaves > 2)
  }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
7,Where did Abraham Lincoln die?,"```sparql
SELECT ?placeOfDeath
WHERE {
  dbpedia:Abraham_Lincoln dbo:deathPlace ?placeOfDeath .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
8,Which airports does Air China serve?,"```sparql
SELECT DISTINCT ?airport
WHERE {
  ?airline a dbpedia-owl:Airline ;
           foaf:name ""Air China"" .
  ?route dbpedia-owl:airline ?airline ;
         dbpedia-owl:routeStart ?airport .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
9,Give me all actors starring in movies directed by and starring William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner ;
        dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
10,What are the official languages of the Philippines?,"```sparql
SELECT ?language
WHERE {
  <http://dbpedia.org/resource/Philippines> <http://dbpedia.org/ontology/officialLanguage> ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
11,Give me all Danish films.,"```sparql
SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dct:subject dbc:Danish_films .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dbo:starring dbr:Brad_Pitt ;
         dbo:director dbr:Guy_Ritchie .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
13,Give me the grandchildren of Bruce Lee.,"```sparql
SELECT DISTINCT ?grandchild
WHERE {
  dbpedia:Bruce_Lee dbpedia-owl:child ?child .
  ?child dbpedia-owl:child ?grandchild .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
14,Which other weapons did the designer of the Uzi develop?,"```sparql
SELECT ?weapon
WHERE {
  <http://dbpedia.org/resource/Uzi> <http://dbpedia.org/ontology/designer> ?designer .
  ?designer <http://dbpedia.org/ontology/knownFor> ?weapon .
  FILTER (?weapon != <http://dbpedia.org/resource/Uzi>)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
15,Who is the owner of Universal Studios?,"```sparql
SELECT ?owner
WHERE {
  dbpedia:Universal_Studios dbpedia-owl:owner ?owner .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
16,Which state of the USA has the highest population density?,"```sparql
SELECT ?state ?populationDensity
WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?populationDensity ;
         dbo:country dbr:United_States .
}
ORDER BY DESC(?populationDensity)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
17,Which monarchs were married to a German?,"```sparql
SELECT DISTINCT ?monarch
WHERE {
  ?monarch a dbo:Monarch ;
           dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
18,Which organizations were founded in 1950?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation ;
                dbo:formationYear 1950 .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
19,Who created the comic Captain America?,"```sparql
SELECT ?creator
WHERE {
  dbr:Captain_America dbo:creator ?creator .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
20,Give me the Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  dbpedia:Apollo_14 dbpedia-owl:astronaut ?astronaut .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
21,Who wrote the book The pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Pillars of the Earth""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
22,Which state of the United States of America has the highest density?,"```sparql
SELECT ?state ?density
WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?density .
} 
ORDER BY DESC(?density)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
23,Which spaceflights were launched from Baikonur?,"```sparql
SELECT ?spaceflight
WHERE {
  ?spaceflight dbpedia-owl:launchSite dbr:Baikonur_Cosmodrome .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
24,Give me a list of all trumpet players that were bandleaders.,"```sparql
SELECT DISTINCT ?musician
WHERE {
  ?musician a dbo:Person ;
            dbo:instrument dbr:Trumpet ;
            dbo:occupation dbr:Bandleader .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
25,Which U.S. states are in the same timezone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timezone .
  ?state dbpedia-owl:timeZone ?timezone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
26,Which U.S. states possess gold minerals?,"```sparql
SELECT DISTINCT ?state
WHERE {
  ?state dct:subject dbc:States_of_the_United_States ;
        dbp:resources ""gold"" .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
27,Who is the daughter of Ingrid Bergman married to?,"```sparql
SELECT ?spouse
WHERE {
  ?ingridBergman dbo:child ?daughter .
  ?daughter dbo:spouse ?spouse .
  FILTER (?ingridBergman = dbr:Ingrid_Bergman)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
28,How deep is Lake Placid?,"```sparql
SELECT ?depth
WHERE {
  <http://dbpedia.org/resource/Lake_Placid> dbo:maximumDepth ?depth
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
29,Show me all museums in London.,"```sparql
SELECT ?museum
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:London .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
30,Which caves have more than 3 entrances?,"```sparql
SELECT DISTINCT ?cave
WHERE {
  ?cave rdf:type dbo:Cave ;
        dbo:numberOfEntrances ?entrances .
  FILTER (?entrances > 3)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
31,Who is the tallest player of the Atlanta Falcons?,"```sparql
SELECT ?player ?height
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
         dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
32,What are the top-10 action role-playing video games according to IGN?,"```sparql
SELECT DISTINCT ?game ?rank
WHERE {
  ?game dbpedia-owl:genre dbpedia:Action_role-playing_video_games ;
        dbpedia-owl:rank ?rank .
  FILTER (?rank <= 10)
}
ORDER BY ?rank
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
SELECT DISTINCT ?writer
WHERE {
  ?writer a dbo:Writer ;
          dbo:award dbr:Nobel_Prize_in_Literature .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
34,Show me all basketball players that are higher than 2 meters.,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:height ?height .
  FILTER (?height > 2)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
1,List all boardgames by GMT.,"SELECT ?game
WHERE {
  ?game dct:subject dbc:Board_games_by_publisher .
  ?game dct:publisher dbc:GMT_Games .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
2,Who developed Skype?,"SELECT ?developer
WHERE {
  dbr:Skype dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
3,Which people were born in Heraklion?,"SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
4,In which U.S. state is Area 51 located?,"SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Area_51> dbpedia-owl:location ?location .
  ?location dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
  ?location dbpedia-owl:locatedIn ?state .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
5,Who is the mayor of New York City?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/ontology/leaderName> ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
6,Which countries have places with more than two caves?,"SELECT DISTINCT ?country
WHERE {
  ?place rdf:type dbo:Place .
  ?place dbo:location ?country .
  ?place dbo:numberOfCaves ?numCaves .
  FILTER (?numCaves > 2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
7,Where did Abraham Lincoln die?,"SELECT ?placeOfDeath WHERE {
  dbpedia:Abraham_Lincoln dbo:deathPlace ?placeOfDeath
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
8,Which airports does Air China serve?,"SELECT DISTINCT ?airport
WHERE {
  ?airline a dbo:Airline ;
           foaf:name ""Air China""@en ;
           dbo:operates ?route .
  ?route dbo:operatedBy ?airline ;
         dbo:destination ?airport .
  ?airport a dbo:Airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
9,Give me all actors starring in movies directed by and starring William Shatner.,"SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner ;
        dbo:starring ?actor .
  ?actor a dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
10,What are the official languages of the Philippines?,"SELECT ?language
WHERE {
  dbpedia:Philippines dbpedia-owl:officialLanguage ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
11,Give me all Danish films.,"SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dct:subject dbc:Danish_films .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Brad_Pitt ;
        dbo:director dbr:Guy_Ritchie .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
13,Give me the grandchildren of Bruce Lee.,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/ontology/>

SELECT ?grandchildren
WHERE {
  dbpedia:Bruce_Lee dbpedia2:child ?child .
  ?child dbpedia2:child ?grandchildren .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
14,Which other weapons did the designer of the Uzi develop?,"SELECT ?weapon
WHERE {
  <http://dbpedia.org/resource/Uzi> <http://dbpedia.org/ontology/designer> ?designer .
  ?designer <http://dbpedia.org/ontology/knownFor> ?weapon .
  FILTER (?weapon != <http://dbpedia.org/resource/Uzi>)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
15,Who is the owner of Universal Studios?,"SELECT ?owner
WHERE {
  dbpedia:Universal_Studios dbo:owner ?owner
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
16,Which state of the USA has the highest population density?,"SELECT ?state ?populationDensity
WHERE {
  ?state a dbo:AdministrativeRegion ;
         dbo:country dbr:United_States ;
         dbo:populationDensity ?populationDensity .
}
ORDER BY DESC(?populationDensity)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
17,Which monarchs were married to a German?,"SELECT DISTINCT ?monarch
WHERE {
  ?monarch a dbpedia-owl:Monarch ;
           dbpedia-owl:spouse ?spouse .
  ?spouse dbpedia-owl:birthPlace ?birthPlace .
  ?birthPlace dbpedia-owl:country <http://dbpedia.org/resource/Germany> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
18,Which organizations were founded in 1950?,"SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation ;
                dbo:formationYear 1950 .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
19,Who created the comic Captain America?,"SELECT ?creator 
WHERE {
  dbr:Captain_America dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
20,Give me the Apollo 14 astronauts.,"SELECT ?astronaut
WHERE {
  dbr:Apollo_14 dbo:astronaut ?astronaut .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
21,Who wrote the book The pillars of the Earth?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
22,Which state of the United States of America has the highest density?,"SELECT ?state ?density
WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?density .
}
ORDER BY DESC(?density)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
23,Which spaceflights were launched from Baikonur?,"SELECT ?spaceflight
WHERE {
  ?spaceflight dbpedia-owl:launchSite dbr:Baikonur_Cosmodrome .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
24,Give me a list of all trumpet players that were bandleaders.,"SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet ;
              dbo:occupation dbr:Bandleader .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
25,Which U.S. states are in the same timezone as Utah?,"SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timezone .
  ?state dbpedia-owl:timeZone ?timezone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
26,Which U.S. states possess gold minerals?,"SELECT DISTINCT ?state
WHERE {
  ?state dbo:resource ?resource .
  ?resource dbo:goldMine ?goldMine .
}
LIMIT 100",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
27,Who is the daughter of Ingrid Bergman married to?,"SELECT ?spouse 
WHERE {
  ?ingridBergman dbo:child ?child .
  ?child foaf:name ""Isabella Rossellini""@en .
  ?child dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
28,How deep is Lake Placid?,"SELECT ?depth
WHERE {
  dbpedia:Lake_Placid dbo:maximumDepth ?depth
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
29,Show me all museums in London.,"SELECT ?museum
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:London .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
30,Which caves have more than 3 entrances?,"SELECT ?cave
WHERE {
  ?cave rdf:type dbo:Cave ;
        dbo:numberOfEntrances ?entrances .
  FILTER (?entrances > 3)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
31,Who is the tallest player of the Atlanta Falcons?,"SELECT DISTINCT ?player ?height
WHERE {
  ?player rdf:type dbo:AmericanFootballPlayer .
  ?player dbo:team dbr:Atlanta_Falcons .
  ?player dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
32,What are the top-10 action role-playing video games according to IGN?,"SELECT DISTINCT ?game ?rank
WHERE {
  ?game rdf:type dbo:VideoGame ;
        dbp:genre dbr:Action_role-playing_game ;
        dbo:awards dbr:IGN_Awards ;
        dbo:awards ?rank .
}
ORDER BY DESC(?rank)
LIMIT 10",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
33,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer
WHERE {
  ?writer a dbo:Writer ;
          dbo:award dbr:Nobel_Prize_in_Literature .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
34,Show me all basketball players that are higher than 2 meters.,"SELECT DISTINCT ?player
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:height ?height .
  FILTER (?height > 2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
35,When was the Statue of Liberty built?,"SELECT ?date
WHERE {
  dbr:Statue_of_Liberty dbo:constructionStart ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
36,Which states border Illinois?,"SELECT DISTINCT ?state
WHERE {
    dbpedia:Illinois dbo:state ?state .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
37,Who developed Minecraft?,"SELECT ?developer
WHERE {
  dbr:Minecraft dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
38,Where did Hillel Slovak die?,"SELECT ?place_of_death WHERE {
  dbpedia:Hillel_Slovak dbpedia-owl:placeOfDeath ?place_of_death .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
39,What movies does Jesse Eisenberg play in?,"SELECT DISTINCT ?movie
WHERE {
  ?actor dbo:starring dbr:Jesse_Eisenberg .
  ?movie dbo:starring ?actor .
  ?movie rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
40,Give all swimmers that were born in Moscow.,"SELECT ?swimmer
WHERE {
  ?swimmer a dbo:Person ;
           dbo:birthPlace dbr:Moscow ;
           dbo:occupation dbr:Swimmer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
41,Give me all cosmonauts.,"SELECT ?cosmonaut
WHERE {
  ?cosmonaut a <http://dbpedia.org/ontology/Cosmonaut> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
42,Give me all Swiss non-profit organizations.,"SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:NonprofitOrganisation ;
               dct:subject dbc:Non-profit_organisations_based_in_Switzerland .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
43,Which presidents were born in 1945?,"SELECT ?president
WHERE {
  ?president a dbpedia-owl:President ;
             dbpedia-owl:birthDate ?birthdate .
  FILTER (regex(str(?birthdate), ""1945""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
44,What kind of music did Lou Reed play?,"SELECT DISTINCT ?genre
WHERE {
  dbpedia:Lou_Reed dbpedia-owl:genre ?genre
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
45,Where do the Red Sox play?,"SELECT ?stadium
WHERE {
  <http://dbpedia.org/resource/Boston_Red_Sox> dbpedia-owl:ground ?stadium .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
46,Show a list of soccer clubs that play in the Bundesliga.,"SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league ?league .
  ?league rdfs:label ""Bundesliga""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
47,Which volcanos in Japan erupted since 2000?,"SELECT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:country dbr:Japan ;
           dbo:eruptionDate ?date .
  FILTER (year(?date) >= 2000)
}
ORDER BY ?date",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
48,Which bridges cross the Seine?,"SELECT DISTINCT ?bridge
WHERE {
  ?bridge rdf:type dbo:Bridge ;
          dbo:crosses dbr:Seine .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
49,What is the official color of the University of Oxford?,"SELECT ?color
WHERE {
  dbpedia:University_of_Oxford dbpedia-owl:officialSchoolColour ?color
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
50,How many films did Hal Roach produce?,"SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
51,Give me all Danish movies.,"```sparql
SELECT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dct:subject dbc:Danish_films .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
    ?person dbo:causeOfDeath ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
53,Who are the four youngest MVP basketball players?,"SELECT DISTINCT ?player ?age
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:award ?award ;
          dbo:birthDate ?birthdate .
  ?award dbo:awardTitle ""NBA Most Valuable Player Award"" ;
        dbo:awardWinner ?player ;
        dbo:awardDate ?date .
  BIND(YEAR(?date) - YEAR(?birthdate) - IF(MONTH(?date) < MONTH(?birthdate) || (MONTH(?date) = MONTH(?birthdate) && DAY(?date) < DAY(?birthdate), 1, 0) AS ?age)
}
ORDER BY ?age
LIMIT 4",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
54,Give me all companies in Munich.,"SELECT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:location dbr:Munich .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
55,Give me the capitals of all countries that the Himalayas run through.,"SELECT DISTINCT ?capital
WHERE {
  ?country dbpedia-owl:capital ?capital ;
           dbpedia-owl:location ?location .
  ?location dbpedia-owl:locatedInArea <http://dbpedia.org/resource/Himalayas> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
56,How many movies did Park Chan-wook direct?,"SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Park_Chan-wook .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
57,Which rivers flow into a German lake?,"SELECT DISTINCT ?river
WHERE {
  ?river dbo:mouthLocation dbr:Germany .
  ?river dbo:riverThrough dbr:Lake
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbpedia-owl:Airline .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
59,Give me all islands that belong to Japan.,"```sparql
SELECT ?island
WHERE {
  ?island dct:subject dbc:Islands_of_Japan .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
60,How many inhabitants does Maribor have?,"SELECT ?population
WHERE {
  dbpedia:Maribor dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
61,Give me all Apollo 14 astronauts.,"SELECT ?astronaut
WHERE {
  dbpedia:Apollo_14 dbpedia-owl:astronaut ?astronaut .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
62,Which companies have more than 1 million employees?,"SELECT DISTINCT ?company
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
63,In which films directed by Garry Marshall was Julia Roberts starring?,"SELECT DISTINCT ?film
WHERE {
  ?film dbo:director dbr:Garry_Marshall ;
        dbo:starring dbr:Julia_Roberts .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
64,Give me all soccer clubs in the Premier League.,"SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league ?league .
  FILTER regex(str(?league), ""Premier_League"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
65,What is the highest place of the Urals?,"SELECT ?place ?elevation
WHERE {
  ?place rdf:type dbo:Mountain ;
         dbo:locatedInArea dbr:Ural_Mountains ;
         dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
66,Who is the governor of Wyoming?,"SELECT ?governor
WHERE {
  dbpedia:Wyoming dbpedia-gov:governor ?governor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
67,Where did the architect of the Eiffel Tower study?,"SELECT ?university
WHERE {
  <http://dbpedia.org/resource/Gustave_Eiffel> dbpedia-owl:almaMater ?university
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
68,Give me all world heritage sites designated within the past two years.,"SELECT ?site
WHERE {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dct:subject dbc:World_Heritage_Sites_by_year_of_inscription_2016
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
69,Give me all actors who were born in Paris after 1950.,"SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Paris ;
         dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) > 1950)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
70,Which movies star both Liz Taylor and Richard Burton?,"SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
71,Give me all Australian nonprofit organizations.,"SELECT DISTINCT ?organization
WHERE {
  ?organization a <http://dbpedia.org/ontology/Non-profit_organisation> ;
               dbpedia-owl:country <http://dbpedia.org/resource/Australia> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
72,Which pope succeeded John Paul II?,"SELECT ?successor
WHERE {
  dbr:Pope_John_Paul_II dbo:successor ?successor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
73,Give me all ESA astronauts.,"SELECT ?astronaut
WHERE {
  ?astronaut a <http://dbpedia.org/ontology/Astronaut> ;
             <http://dbpedia.org/ontology/agency> <http://dbpedia.org/resource/European_Space_Agency> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
74,Who was president of Pakistan in 1978?,"SELECT ?president
WHERE {
  dbpedia:Pakistan dbpedia-owl:leader ?president .
  ?president dbpedia-owl:office dbpedia:President_of_Pakistan .
  ?president dbpprop:termStart ?start .
  ?president dbpprop:termEnd ?end .
  FILTER (?start <= ""1978-01-01""^^xsd:date && ?end >= ""1978-12-31""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
75,Who is the owner of Rolls-Royce?,"SELECT ?owner
WHERE {
  dbpedia:Rolls-Royce_Motor_Cars dbo:owner ?owner
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
76,How many museums does Paris have?,"SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:Paris .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
77,Where was JFK assassinated?,"SELECT ?place
WHERE {
  dbr:Assassination_of_John_F._Kennedy dbo:location ?place
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
78,Give me all federal chancellors of Germany.,"SELECT ?chancellor
WHERE {
  ?chancellor a dbo:Chancellor ;
              dbo:country dbr:Germany ;
              dbo:title dbr:Federal_Chancellor_of_Germany .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
79,Show me everyone who was born on Halloween.,"SELECT ?person ?name
WHERE {
  ?person dbo:birthDate ""1966-10-31""^^xsd:date .
  ?person foaf:name ?name .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
80,Which beer originated in Ireland?,"SELECT DISTINCT ?beer
WHERE {
    ?beer dbo:origin ""Ireland""@en .
    ?beer rdf:type dbo:Beer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
81,To which countries does the Himalayan mountain system extend?,"SELECT DISTINCT ?country
WHERE {
  ?himalayas dbo:location ?country .
  ?himalayas rdf:type dbo:MountainRange .
  FILTER regex(str(?himalayas), ""Himalayas"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
82,Which actors were born in Germany?,"SELECT ?actor
WHERE {
  ?actor a <http://dbpedia.org/ontology/Actor> ;
         <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
83,How much carbs does peanut butter have?,"SELECT ?carbsAmount
WHERE {
  dbpedia:Peanut_butter dbpedia-owl:carbohydrate ?carbsAmount
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:producer ?producer .
}
GROUP BY ?producer
ORDER BY DESC(?numFilms)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
85,How many employees does Google have?,"SELECT ?employees 
WHERE {
  dbpedia:Google dbo:numberOfEmployees ?employees
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
86,Give me all actors who were born in Berlin.,"SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Berlin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
87,Who created Goofy?,"SELECT ?creator 
WHERE {
  dbr:Goofy dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
88,Which music albums contain the song Last Christmas?,"SELECT DISTINCT ?album
WHERE {
  ?song rdf:type dbo:Song ;
        rdfs:label ""Last Christmas""@en ;
        dbo:album ?albumResource .
  
  ?albumResource rdfs:label ?album .
  FILTER (lang(?album) = 'en')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
89,When was Alberta admitted as province?,"SELECT ?date
WHERE {
  dbr:Alberta dbo:formationDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
90,How many missions does the Soyuz programme have?,"SELECT (COUNT(?mission) AS ?count)
WHERE {
    ?mission dct:type dbc:Soyuz_missions .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
91,Give me all the TV shows with Neil Patrick Harris.,"SELECT DISTINCT ?tvShow
WHERE {
  ?tvShow dbo:starring dbr:Neil_Patrick_Harris .
  ?tvShow rdf:type dbo:TelevisionShow .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
92,When were the Hells Angels founded?,"SELECT ?foundingDate
WHERE {
  dbpedia:Hells_Angels dbpedia-owl:foundingDate ?foundingDate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
93,What is the net income of Apple?,"SELECT ?netIncome
WHERE {
  dbpedia:Apple_Inc dbo:netIncome ?netIncome
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
94,Give me all Swedish holidays.,"SELECT ?holiday
WHERE {
  ?holiday dct:subject dbc:Public_holidays_in_Sweden .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
95,In which city was the former Dutch queen Juliana buried?,"SELECT ?city 
WHERE {
  dbr:Juliana_of_the_Netherlands dbo:burialPlace ?burialPlace .
  ?burialPlace dbo:location ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
96,List all the musicals with music by Leonard Bernstein.,"SELECT DISTINCT ?musical
WHERE {
  ?musical a dbo:Musical ;
           dbo:composer dbr:Leonard_Bernstein .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
97,Give me all companies in the advertising industry.,"SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dct:subject dbc:Advertising_companies .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
98,What is the largest metropolitan area in Washington state?,"SELECT ?metropolitanArea ?populationTotal
WHERE {
  ?metropolitanArea a dbo:MetropolitanArea ;
                   dbo:country dbr:Washington_(state) ;
                   dbo:populationTotal ?populationTotal .
}
ORDER BY DESC(?populationTotal)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
99,Who killed John Lennon?,"SELECT ?killer
WHERE {
  dbpedia:John_Lennon dbo:deathCause ?cause .
  ?cause rdfs:label ?killer
  FILTER (lang(?killer) = 'en')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
100,Which writers studied in Istanbul?,"SELECT DISTINCT ?writer
WHERE {
  ?writer dbo:birthPlace dbr:Istanbul .
  ?writer a dbo:Writer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
101,Give me all Australian metalcore bands.,"SELECT DISTINCT ?band
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:genre dbr:Metalcore ;
        dbo:origin dbr:Australia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
102,Which countries adopted the Euro?,"SELECT DISTINCT ?country
WHERE {
  ?country a dbo:Country ;
           dbo:currency dbr:Euro .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
103,Give me all types of eating disorders.,"SELECT DISTINCT ?eatingDisorder
WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
104,Was Marc Chagall a jew?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
    ?person a dbo:Person ;
            dbo:religion dbr:Judaism ;
            foaf:name ""Marc Chagall"" .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT ?rank
WHERE {
  dbpedia:Brazil dbp:lowestFifaRank ?rank
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
106,How many films did Leonardo DiCaprio star in?,"SELECT (COUNT(?film) as ?count)
WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
  ?film rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
107,Was Margaret Thatcher a chemist?,"SELECT ?person
WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""Margaret Thatcher""@en ;
          dbo:profession dbr:Chemist .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
108,Which U.S. states are in the same time zone as Utah?,"SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timeZone .
  ?state dbpedia-owl:timeZone ?timeZone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
109,Give me all books written by Danielle Steel.,"SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:Danielle_Steel .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
110,Which country has the most official languages?,"SELECT ?country ?numLanguages
WHERE {
  ?country a dbo:Country ;
           dbo:numberOfOfficialLanguages ?numLanguages .
}
ORDER BY DESC(?numLanguages)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
111,What is the total amount of men and women serving in the FDNY?,"SELECT (COUNT(?person) AS ?total) 
WHERE {
  ?person a dbpedia-owl:Person ;
          dbpprop:department dbpedia:New_York_City_Fire_Department ;
          foaf:gender ?gender .
  FILTER (?gender = ""male"" || ?gender = ""female"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
112,Which actor played Chewbacca?,"SELECT ?actor
WHERE {
  ?actor dbp:character dbpedia:Chewbacca .
  ?actor a dbpedia:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
113,Give me all libraries established earlier than 1400.,"SELECT ?library ?established_date
WHERE {
  ?library a dbo:Library ;
           dbo:established ?established_date .
  FILTER (YEAR(?established_date) < 1400)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
114,Which programming languages were influenced by Perl?,"SELECT DISTINCT ?language
WHERE {
  ?language dbo:influencedBy dbr:Perl .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
115,In which U.S. state is Mount McKinley located?,"SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Mount_McKinley> dbpedia-owl:location ?state .
  ?state a dbpedia-owl:State .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
116,What airlines are part of the SkyTeam alliance?,"SELECT DISTINCT ?airline
WHERE {
  ?airline a <http://dbpedia.org/ontology/Airline> .
  ?airline <http://dbpedia.org/property/alliance> <http://dbpedia.org/resource/SkyTeam> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
117,Which ships were called after Benjamin Franklin?,"SELECT ?ship
WHERE {
  ?ship dbo:shipName ""Benjamin Franklin""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
118,Give me all Methodist politicians.,"SELECT DISTINCT ?politician
WHERE {
  ?politician a dbo:Politician ;
              dbo:party dbr:Methodist_Church .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
119,What other books have been written by the author of The Fault in Our Stars?,"SELECT DISTINCT ?book
WHERE {
  ?author foaf:name ""John Green""@en .
  ?book dbo:author ?author .
  FILTER (?book != dbr:The_Fault_in_Our_Stars)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
120,What is the highest mountain?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
121,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a <http://dbpedia.org/ontology/Person> ;
        <http://dbpedia.org/ontology/author> ?book .
}
GROUP BY ?poet
ORDER BY DESC(?numBooks)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
122,Which programming languages influenced Javascript?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?language
WHERE {
    <http://dbpedia.org/resource/JavaScript> dbo:influencedBy ?language .
    ?language a dbo:ProgrammingLanguage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
123,Which musician wrote the most books?,"SELECT ?musician ?count
WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:notableWork ?book .
  {
    SELECT ?musician (COUNT(?book) AS ?count)
    WHERE {
      ?musician a dbo:MusicalArtist ;
                dbo:notableWork ?book .
    }
    GROUP BY ?musician
    ORDER BY DESC(?count)
    LIMIT 1
  }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
124,Which films starring Clint Eastwood did he direct himself?,"SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Clint_Eastwood .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
125,Which software has been developed by organizations founded in California?,"SELECT DISTINCT ?software
WHERE {
  ?organization dbo:location dbr:California .
  ?organization dbo:product ?software .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
126,Which instruments does Cat Stevens play?,"SELECT ?instrument
WHERE {
  dbpedia:Cat_Stevens dbpedia-owl:instrument ?instrument
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
127,How many airlines are members of the Star Alliance?,"SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a <http://dbpedia.org/ontology/Airline> ;
           <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/Star_Alliance> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
128,Give me all actors called Baldwin.,"SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?name .
  FILTER regex(?name, ""Baldwin"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
129,Who wrote The Hunger Games?,"SELECT ?author
WHERE {
  dbpedia:The_Hunger_Games dct:creator ?author
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
130,For which label did Elvis record his first album?,"SELECT ?label
WHERE {
  ?album dbo:artist dbr:Elvis_Presley ;
        rdfs:label ?label .
  FILTER regex(?label, ""first album"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
131,Is Christian Bale starring in Batman Begins?,"SELECT ?actor
WHERE {
  ?film dbpedia-owl:starring ?actor .
  ?film dbpedia-owl:wikiPageID 118209 .
  ?actor dbpedia-owl:wikiPageID 118209 .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
132,Where is the residence of the prime minister of Spain?,"SELECT ?residence 
WHERE {
  <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/property/residence> ?residence
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?film) AS ?numMovies)
WHERE {
  ?actor a dbo:Actor ;
         dbo:starring ?film .
}
GROUP BY ?actor
ORDER BY DESC(?numMovies)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
134,Which countries have more than two official languages?,"SELECT DISTINCT ?country
WHERE {
  ?country rdf:type dbo:Country ;
           dbo:officialLanguage ?language .
  FILTER(COUNT(?language) > 2)
}
GROUP BY ?country",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
135,Which countries have more than ten caves?,"SELECT ?country (COUNT(?cave) AS ?numCaves)
WHERE {
  ?country a dbo:Country ;
           dbo:caves ?cave .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 10)
ORDER BY DESC(?numCaves)",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"SELECT ?song
WHERE {
  ?song rdf:type dbo:Song .
  ?song dbo:artist dbr:Bruce_Springsteen .
  ?song dbo:releaseDate ?date .
  FILTER (xsd:integer(?date) >= 1980 && xsd:integer(?date) <= 1990)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
137,Which television shows were created by John Cleese?,"SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show rdf:type dbo:TelevisionShow .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
138,When did Latvia join the EU?,"SELECT ?date
WHERE {
  dbr:Latvia dbo:accessionDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
139,Which soccer players were born on Malta?,"SELECT ?player
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthPlace dbr:Malta .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
140,How many politicians graduated from Columbia University?,"SELECT (COUNT(?politician) AS ?count)
WHERE {
  ?politician a <http://dbpedia.org/ontology/Politician> ;
              <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Columbia_University> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
141,Give me the birthdays of all actors of the television show Charmed.,"SELECT DISTINCT ?actor ?birthday
WHERE {
  ?actor dbo:starring dbr:Charmed .
  ?actor dbo:birthDate ?birthday .
  ?actor a dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
142,Which telecommunications organizations are located in Belgium?,"SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation ;
               dbo:location dbr:Belgium ;
               dbo:industry dbr:Telecommunications .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
143,Give me a list of all lakes in Denmark.,"SELECT ?lake
WHERE {
  ?lake rdf:type dbo:Lake ;
        dbo:country dbr:Denmark .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
144,How many children does Eddie Murphy have?,"SELECT (COUNT(?child) as ?numChildren)
WHERE {
  dbpedia:Eddie_Murphy dbpedia-owl:child ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
145,Show me all English Gothic buildings in Kent.,"SELECT ?building
WHERE {
  ?building rdf:type dbo:Building ;
           dbo:architecturalStyle dbr:English_Gothic_architecture ;
           dbo:location dbr:Kent ;
           dbo:abstract ?abstract
  FILTER (langMatches(lang(?abstract), ""en""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
146,Who is the manager of Real Madrid?,"SELECT ?manager
WHERE {
  <http://dbpedia.org/resource/Real_Madrid_CF> <http://dbpedia.org/ontology/manager> ?manager .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
147,In which countries can you pay using the West African CFA franc?,"SELECT DISTINCT ?country
WHERE {
  ?country dbpedia-owl:currency dbr:West_African_CFA_franc
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
148,Which holidays are celebrated around the world?,"SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
149,What is the longest river?,"SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
150,Which organizations were founded in 1930?,"SELECT ?organization
WHERE {
  ?organization dbo:formationYear 1930
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
151,What is the birth name of Angela Merkel?,"SELECT ?birthName
WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
152,Who has Tom Cruise been married to?,"SELECT ?spouse
WHERE {
  dbpedia:Tom_Cruise dbpedia-owl:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
153,Which weapons did Heckler & Koch develop?,"SELECT ?weapon
WHERE {
  ?weapon dbo:developer dbr:Heckler_&_Koch .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
154,What is the smallest city by area in Germany?,"SELECT ?city ?area
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Germany ;
        dbo:areaTotal ?area .
}
ORDER BY ASC(?area)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
155,What is the ruling party in Lisbon?,"SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Lisbon> <http://dbpedia.org/ontology/rulingParty> ?party
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
156,How heavy is Jupiter's lightest moon?,"SELECT ?moon ?mass
WHERE {
  dbpedia:Jupiter dbo:moon ?moon .
  ?moon dbo:mass ?mass .
}
ORDER BY ASC(?mass)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
157,How many employees does IBM have?,"SELECT ?employees 
WHERE {
  dbpedia:IBM dbo:numberOfEmployees ?employees
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
158,List all episodes of the first season of the HBO television series The Sopranos!,"SELECT ?episode
WHERE {
  ?season dbo:seasonNumber ""1""^^xsd:integer .
  ?episode dbo:season ?season .
  ?episode rdf:type dbo:TelevisionEpisode .
  ?episode dbo:series dbr:The_Sopranos .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
159,What does ICRO stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?icroLabel
WHERE {
  <http://dbpedia.org/resource/ICRO> rdfs:label ?icroLabel
  FILTER (lang(?icroLabel) = 'en')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
160,Does the new Battlestar Galactica series have more episodes than the old one?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?newEpisodes) AS ?newEpisodesCount) (COUNT(?oldEpisodes) AS ?oldEpisodesCount)
WHERE {
  ?newSeries a dbo:TelevisionShow ;
             dbo:numberOfEpisodes ?newEpisodes ;
             dbo:followedBy <http://dbpedia.org/resource/Battlestar_Galactica_(2004_TV_series)> .
  
  <http://dbpedia.org/resource/Battlestar_Galactica> dbo:numberOfEpisodes ?oldEpisodes .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
161,Give me all films produced by Hal Roach.,"SELECT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
162,Who played Agent Smith in Matrix?,"SELECT ?actor
WHERE {
  ?actor dbp:name ""Agent Smith""@en .
  ?actor dbp:starring ?film .
  ?film dbp:film ""The Matrix""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
163,Which Greek parties are pro-European?,"SELECT DISTINCT ?party
WHERE {
  ?party a <http://dbpedia.org/ontology/PoliticalParty> ;
         <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Pro-European> ;
         <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
164,Give me a list of all bandleaders that play trumpet.,"SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet ;
              dbo:occupation dbr:Bandleader .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
165,What is the second highest mountain on Earth?,"SELECT DISTINCT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 2
OFFSET 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
166,Is Egypts largest city also its capital?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Egypt> dbo:largestCity ?city .
  <http://dbpedia.org/resource/Egypt> dbo:capital ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
167,Which rockets were launched from Baikonur?,"SELECT ?rocket
WHERE {
  ?rocket dbp:launchSite dbr:Baikonur_Cosmodrome .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
168,How many programming languages are there?,"SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
169,Which Chess players died in the same place they were born in?,"SELECT ?player ?birthPlace
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
170,Who is the owner of Facebook?,"SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/property/owner> ?owner
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
171,Give me all movies with Tom Cruise.,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie rdf:type dbo:Film .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
172,In which U.S. state is Fort Knox located?,"SELECT ?state
WHERE {
  dbpedia:Fort_Knox dbpedia-owl:location ?state .
  ?state a dbpedia-owl:State .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"SELECT ?city
WHERE {
  ?city rdf:type dbo:City ;
        dbo:populationTotal ?population ;
        dbo:country dbr:New_Jersey ;
  FILTER (?population > 100000)
}
ORDER BY ?city",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
174,Which mountains are higher than the Nanga Parbat?,"SELECT DISTINCT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
  FILTER (?height > 8126 && ?mountain != dbr:Nanga_Parbat)
}
ORDER BY DESC(?height)",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
175,Give me all B-sides of the Ramones.,"SELECT ?bSide
WHERE {
  ?song rdf:type dbo:Song ;
        dbo:artist dbr:Ramones ;
        dbo:recordedIn ?album .
  ?album dbo:type dbr:B-side .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
176,What are the specialities of the UNC Health Care?,"SELECT ?speciality
WHERE {
  dbpedia:UNC_Health_Care dbpedia-owl:specialty ?speciality
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
177,When was Olof Palme shot?,"SELECT ?date
WHERE {
  dbr:Assassination_of_Olof_Palme dbo:date ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
178,List the seven kings of Rome.,"SELECT ?king ?reignStart ?reignEnd
WHERE {
  ?king a dbo:Monarch ;
        dbo:reignStart ?reignStart ;
        dbo:reignEnd ?reignEnd ;
        dbo:predecessor dbr:Romulus .
  FILTER (?reignStart >= ""753-01-01""^^xsd:date && ?reignEnd <= ""509-01-01""^^xsd:date)
}
LIMIT 7",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
179,Give me all people that were born in Vienna and died in Berlin.,"SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Vienna ;
          dbo:deathPlace dbr:Berlin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
180,Is Darth Vader Luke’s father?,"SELECT ?father
WHERE {
  dbpedia:Luke_Skywalker dbpedia-owl:parent ?father .
  FILTER (?father = dbpedia:Darth_Vader)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
181,Show me all the breweries in Australia.,"SELECT ?brewery
WHERE {
  ?brewery a dbpedia-owl:Brewery ;
           dbpedia-owl:country dbpedia:Australia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:producer dbr:Steven_Spielberg ;
        dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
183,Give me all soccer clubs in Spain.,"```sparql
SELECT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:country dbr:Spain .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
184,Who produced films starring Natalie Portman?,"SELECT DISTINCT ?producer
WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
185,Give me all breeds of the German Shepherd dog.,"SELECT DISTINCT ?breed
WHERE {
  ?breed rdf:type dbo:DogBreed ;
         rdfs:label ?label .
  FILTER regex(?label, ""German Shepherd"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight
WHERE {
  ?player dct:subject dbc:Chicago_Bulls_players ;
          dbo:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
187,Which languages are spoken in Estonia?,"SELECT DISTINCT ?language
WHERE {
  <http://dbpedia.org/resource/Estonia> <http://dbpedia.org/ontology/language> ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
188,What is the largest country in the world?,"SELECT ?country ?area
WHERE {
  ?country a dbo:Country ;
           dbo:areaTotal ?area .
}
ORDER BY DESC(?area)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
189,What is the largest city in america?,"SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:United_States ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
190,Who was the pope that founded the Vatican Television?,"SELECT ?pope 
WHERE {
  ?pope a dbpedia-owl:Pope ;
        dbpedia-owl:knownFor dbpedia:Vatican_Television .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
191,Who discovered Ceres?,"SELECT ?discoverer
WHERE {
  dbr:Ceres dbo:discoverer ?discoverer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
192,Who is the king of the Netherlands?,"SELECT ?king
WHERE {
  dbpedia:Netherlands dbpedia-owl:leader ?king .
  ?king a dbpedia-owl:Monarch .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
193,Is Cola a beverage?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?cola WHERE {
  ?cola rdf:type dbo:Beverage .
  FILTER regex(str(?cola), ""Cola"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"SELECT ?almaMater
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?almaMater .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
195,Who wrote the book Les Piliers de la terre?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Les Piliers de la terre""@fr
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
196,Which airports does Yeti Airlines serve?,"SELECT DISTINCT ?airport
WHERE {
  ?airline dbo:airline ""Yeti Airlines""@en .
  ?airline dbo:operates ?route .
  ?route dbo:destination ?airport .
  ?airport a dbo:Airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
197,Where is the birthplace of Goethe?,"SELECT ?birthplace WHERE {
  dbpedia:Johann_Wolfgang_von_Goethe dbpedia-owl:birthPlace ?birthplace
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"SELECT ?event1 ?event2
WHERE {
  dbr:Cuban_Missile_Crisis dbo:startDate ?date1 .
  dbr:Bay_of_Pigs_Invasion dbo:startDate ?date2 .
  FILTER (?date1 < ?date2)
}
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
199,Which ingredients do I need for carrot cake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ingredient
WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
200,Who created Wikipedia?,"SELECT ?creator
WHERE {
  dbr:Wikipedia dbo:author ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
201,What is the highest mountain in Saxony Germany?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Germany ;
           dbo:locatedInArea dbr:Saxony ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
202,Who is the current federal minister of finance in Germany?,"SELECT ?minister
WHERE {
  ?minister a dbpedia-owl:Person ;
           dbpprop:title ""Federal Minister of Finance of Germany"" ;
           dbpprop:incumbent ?currentMinister .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
203,In which country is Mecca located?,"SELECT ?country WHERE {
  dbpedia:Mecca dbpedia-owl:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor
WHERE {
  dbpedia:Gus_Fring dbo:portrayed_by ?actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
205,In which country does the Nile start?,"SELECT ?country 
WHERE {
    <http://dbpedia.org/resource/Nile> <http://dbpedia.org/ontology/sourceCountry> ?country
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
206,In which state Penn State University is located?,"SELECT ?state
WHERE {
  dbpedia:Penn_State_University dbpedia-owl:state ?state .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
207,What is the biggest stadium in Spain?,"SELECT ?stadium ?name ?capacity
WHERE {
  ?stadium a dbo:Stadium ;
           dbo:country dbr:Spain ;
           dbo:capacity ?capacity ;
           foaf:name ?name .
}
ORDER BY DESC(?capacity)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach
WHERE {
  ?team rdf:type dbo:IceHockeyTeam ;
        rdfs:label ""Ankara"" ;
        dbo:coach ?coach .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
209,How large is the area of UK?,"SELECT ?area
WHERE {
  <http://dbpedia.org/resource/United_Kingdom> <http://dbpedia.org/ontology/areaTotal> ?area
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
210,Who created Batman?,"SELECT ?creator 
WHERE {
  dbr:Batman dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
211,Was Sigmund Freud married?,"SELECT ?married 
WHERE {
  dbpedia:Sigmund_Freud dbpedia-owl:spouse ?married
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
212,Who are the developers of DBpedia?,"SELECT ?developer
WHERE {
  dbr:DBpedia dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
213,Give me all movies directed by Francis Ford Coppola.,"SELECT ?movie
WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
  ?movie rdf:type dbo:Film
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
214,Are tree frogs a type of amphibian?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?type
WHERE {
  dbo:Tree_frog dbo:wikiPageRedirects ?redirect .
  ?redirect dbo:wikiPageDisambiguates ?type .
  FILTER regex(str(?type), ""amphibian"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
215,What is the location of the Houses of Parliament?,"SELECT ?location 
WHERE {
  <http://dbpedia.org/resource/Houses_of_Parliament> dbpedia-owl:location ?location
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
216,how much is the elevation of Düsseldorf Airport ?,"SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
217,How much is the population of mexico city ?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Mexico_City> <http://dbpedia.org/ontology/populationTotal> ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
218,when was the founding date of french fifth republic?,"SELECT ?date
WHERE {
  dbr:French_Fifth_Republic dbo:formationDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
219,Who was the first King of England?,"SELECT ?king
WHERE {
  ?king a dbpedia-owl:Monarch ;
        dbpedia-owl:reignStart ?start .
  FILTER (?start < ""1066-01-01""^^xsd:date)
}
ORDER BY ?start
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
220,Who is the editor of Forbes?,"SELECT ?editor
WHERE {
  <http://dbpedia.org/resource/Forbes> <http://dbpedia.org/ontology/editor> ?editor
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
221,Which awards did Douglas Hofstadter win?,"SELECT ?award
WHERE {
  dbpedia:Douglas_Hofstadter dbpedia-owl:award ?award
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
222,Who is the youngest Darts player?,"SELECT ?player ?age
WHERE {
  ?player a dbo:DartsPlayer .
  ?player dbo:birthDate ?birthDate .
  BIND(now() - xsd:date(?birthDate) AS ?age) 
}
ORDER BY ?age
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
223,Is horse racing a sport?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dcterms: <http://purl.org/dc/terms/>
SELECT ?subject
WHERE {
  ?subject dcterms:subject <http://dbpedia.org/resource/Category:Horse_racing>
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river
WHERE {
  <http://dbpedia.org/resource/Brooklyn_Bridge> dbpedia-owl:crosses ?river .
  ?river a dbpedia-owl:River .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
225,How many people live in Poland?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/populationTotal> ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
226,When was the last episode of the TV series Friends aired?,"SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Friends> <http://dbpedia.org/ontology/lastAired> ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
227,Is the wife of president Obama called Michelle?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Michelle_Obama)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
229,Who is 8th president of US?,"SELECT ?president
WHERE {
  ?president dbo:order 8 ;
             rdf:type dbo:President ;
             dbo:office <http://dbpedia.org/resource/Presidency_of_the_United_States> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
230,how much is the total population of  european union?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/European_Union> <http://dbpedia.org/ontology/populationTotal> ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
231,Give me all launch pads operated by NASA.,"SELECT ?launchPad
WHERE {
  ?launchPad rdf:type dbo:LaunchPad ;
             dbo:operator dbr:NASA .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
232,Who developed the video game World of Warcraft?,"SELECT ?developer
WHERE {
  dbpedia:World_of_Warcraft dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
233,What is the birth name of Adele?,"SELECT ?birthName
WHERE {
  dbpedia:Adele dbpedia-owl:birthName ?birthName
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
234,What is the population of Cairo?,"SELECT ?population
WHERE {
  dbpedia:Cairo dbo:populationTotal ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
235,Is Frank Herbert still alive?,"SELECT ?person
WHERE {
  ?person rdf:type dbo:Person ;
          foaf:name ""Frank Herbert""@en ;
          dbo:deathDate ?deathDate .
  FILTER NOT EXISTS { ?person dbo:birthDate ?birthDate }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
236,What is the last work of Dan Brown?,"SELECT ?work
WHERE {
  ?author foaf:name ""Dan Brown""@en .
  ?author dbp:notableWork ?work .
}
ORDER BY DESC(?work)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
237,Where is Sungkyunkwan University?,"SELECT ?location 
WHERE {
  dbpedia:Sungkyunkwan_University dbpedia-owl:location ?location .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
238,Who is the author of the interpretation of dreams?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Interpretation of Dreams""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
239,When was the death  of  Shakespeare?,"SELECT ?deathDate
WHERE {
  dbpedia:William_Shakespeare dbo:deathDate ?deathDate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
241,Who developed Slack?,"SELECT ?developer
WHERE {
  dbr:Slack dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
242,Where is the origin of Carolina reaper?,"SELECT ?origin
WHERE {
  dbpedia:Carolina_Reaper dbpedia-owl:origin ?origin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
243,In which year was Rachel Stevens born?,"SELECT ?birthYear
WHERE {
  dbpedia:Rachel_Stevens dbo:birthDate ?birthDate .
  BIND(YEAR(?birthDate) AS ?birthYear)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
244,How often did Jane Fonda marry?,"SELECT (COUNT(?spouse) as ?marriage_count)
WHERE {
    dbpedia:Jane_Fonda dbpedia-owl:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
245,Was the wife of president Lincoln called Mary?,"SELECT ?president
WHERE {
  ?president a dbpedia-owl:President ;
             dbpprop:spouse dbpedia:Mary_Todd_Lincoln .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
246,Which cities does the Weser flow through?,"SELECT DISTINCT ?city
WHERE {
  ?river dbo:riverName ""Weser""@en .
  ?city dbo:locatedInArea ?river .
  ?city a dbo:City .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
247,In which programming language is GIMP written?,"SELECT ?language
WHERE {
  dbpedia:GIMP dbo:programmingLanguage ?language
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
248,Which university did Angela Merkel attend?,"SELECT ?university
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
249,List all the musicals with music by Elton John.,"SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:musicComposer dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
250,How many Aldi stores are there?,"SELECT (COUNT(?store) AS ?count)
WHERE {
  ?store rdf:type dbo:Store ;
         rdfs:label ""Aldi"" .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
251,What is the longest river in the world?,"SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
252,When was John Adams born?,"SELECT ?birthDate
WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthDate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
253,Which companies produce hovercrafts?,"SELECT DISTINCT ?company
WHERE {
  ?hovercraft dbo:product ?company .
  ?hovercraft rdf:type dbo:Hovercraft .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
254,Who was the wife of U.S. president Lincoln?,"SELECT ?wife
WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
255,Which species does an elephant belong?,"SELECT ?species
WHERE {
  dbpedia:Elephant dct:subject ?species .
  ?species skos:broader category:Species .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
256,How many people live in the capital of Australia?,"SELECT ?population
WHERE {
  dbpedia:Canberra dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
257,In which ancient empire could you pay with cocoa beans?,"SELECT ?empire
WHERE {
  ?empire dbpedia-owl:currency dbpedia:Cocoa_bean .
  ?empire a dbpedia-owl:HistoricalCountry .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
258,How many theories did Albert Einstein come up with?,"SELECT (COUNT(?theory) AS ?num_theories)
WHERE {
  ?scientist rdf:type dbo:Scientist ;
             foaf:name ""Albert Einstein""@en ;
             dbo:notableIdea ?theory .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
259,Who composed the soundtrack for Cameron's Titanic?,"SELECT ?composer
WHERE {
  <http://dbpedia.org/resource/Titanic_(1997_film)> dbpedia-owl:musicComposer ?composer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
260,Give me the runtime of Toy Story.,"SELECT ?runtime
WHERE {
  dbpedia:Toy_Story dbo:runtime ?runtime
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
262,With how many countries Iran has borders?,"SELECT (COUNT(?country) as ?borderCountries)
WHERE {
    dbpedia:Iran dbpedia-owl:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
263,Which electronics companies were founded in Beijing?,"SELECT DISTINCT ?company
WHERE {
  ?company dct:subject dbc:Electronics_companies_of_China ;
           dbo:foundationPlace dbr:Beijing .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
264,Who was the successor of John F. Kennedy?,"SELECT ?successor
WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
265,Who is the mayor of Paris?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/leaderName> ?mayor .
  <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/leaderTitle> <http://dbpedia.org/resource/Mayor> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
266,Did Arnold Schwarzenegger attend a university?,"SELECT ?university
WHERE {
  dbpedia:Arnold_Schwarzenegger dbpedia-owl:almaMater ?university
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
267,Is James Bond married?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?isMarried
WHERE {
  dbpedia:James_Bond dbpedia-owl:spouse ?isMarried
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
268,Does the Isar flow into a lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?lake
WHERE {
  dbo:Isar dbo:mouth ?lake .
  ?lake a dbo:Lake
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
269,Which Indian company has the most employees?,"SELECT ?company ?employees
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:country dbr:India ;
           dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?employees)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
270,Who was John F. Kennedy's vice president?,"SELECT ?vicePresident
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:vicePresident ?vicePresident .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
271,Which country does the creator of Miffy come from?,"SELECT ?country 
WHERE {
  <http://dbpedia.org/resource/Miffy> <http://dbpedia.org/ontology/creator> ?creator .
  ?creator <http://dbpedia.org/ontology/country> ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
273,In what city is the Heineken brewery?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Heineken_Brewery> dbpedia-owl:location ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
274,Is Barack Obama a democrat?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  FILTER (?party = dbpedia:Democratic_Party_(United_States))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
275,List the children of Margaret Thatcher.,"SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?child
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
276,From which region is the Melon de Bourgogne?,"SELECT ?region
WHERE {
  <http://dbpedia.org/resource/Melon_de_Bourgogne> <http://dbpedia.org/property/region> ?region
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
278,how big is the total area of North Rhine- Westphalia?,"SELECT ?area
WHERE {
  <http://dbpedia.org/resource/North_Rhine-Westphalia> <http://dbpedia.org/ontology/areaTotal> ?area
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
279,Which city has the most inhabitants?,"SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
280,What is Donald Trump's main business?,"SELECT ?business 
WHERE {
  dbpedia:Donald_Trump dbpedia-owl:occupation ?business .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
281,When will start the final match of the football world cup 2018?,"SELECT ?date
WHERE {
  dbpedia:2018_FIFA_World_Cup dbo:startDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
282,Which films did Stanley Kubrick direct?,"SELECT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
283,how much is the population  Iraq?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Iraq> <http://dbpedia.org/ontology/populationTotal> ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Toronto> <http://dbpedia.org/ontology/populationTotal> ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
285,Who is the mayor of the capital of French Polynesia?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Papeete> <http://dbpedia.org/ontology/mayor> ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
286,Give me all actors starring in movies directed by William Shatner.,"SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
287,How tall is Claudia Schiffer?,"SELECT ?height
WHERE {
  dbpedia:Claudia_Schiffer dbpedia-owl:height ?height
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
288,how much is the population densty rank of germany?,"SELECT ?rank
WHERE {
  dbpedia:Germany dbo:populationDensityRank ?rank
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
289,What is the highest mountain in Italy?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Italy ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
290,List all games by GMT.,"SELECT ?game
WHERE {
  ?game dct:creator dbc:GMT_Games .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
291,What is the official language of Suriname?,"SELECT ?language
WHERE {
  dbpedia:Suriname dbpedia-owl:officialLanguage ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
292,In which city did Nikos Kazantzakis die?,"SELECT ?city
WHERE {
  dbpedia:Nikos_Kazantzakis dbpedia-owl:deathPlace ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
293,What is in a chocolate chip cookie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?ingredient
WHERE {
  <http://dbpedia.org/resource/Chocolate_chip_cookie> dbo:ingredient ?ingredient
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
294,In which country is the Limerick Lake?,"SELECT ?country
WHERE {
  dbpedia:Limerick_Lake dbpedia-owl:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
295,Give me all video games published by Mean Hamster Software.,"SELECT ?game
WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game rdf:type dbo:VideoGame
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
296,Give me all members of Prodigy.,"SELECT ?member
WHERE {
  <http://dbpedia.org/resource/Prodigy_(band)> dbpedia-owl:bandMember ?member
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
297,In which time zone is Rome?,"SELECT ?timezone
WHERE {
  dbpedia:Rome dbpedia-owl:timeZone ?timezone
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
298,How high is the lighthouse in Colombo?,"SELECT ?height
WHERE {
  dbpedia:Colombo dbpedia-owl:height ?height
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
299,Who are the writers of the Wall album of Pink Floyd?,"SELECT ?writer
WHERE {
  <http://dbpedia.org/resource/The_Wall> dbpedia-owl:artist <http://dbpedia.org/resource/Pink_Floyd> .
  <http://dbpedia.org/resource/The_Wall> dbpedia-owl:writer ?writer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
300,Who is the mayor of Rotterdam?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Rotterdam> <http://dbpedia.org/ontology/leaderName> ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
301,What is the largest city in Australia?,"SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Australia ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
302,Who was married to president Chirac?,"SELECT ?spouse
WHERE {
  <http://dbpedia.org/resource/Jacques_Chirac> dbpedia-owl:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
303,What form of government is found in South Africa?,"SELECT ?governmentType
WHERE {
  dbpedia:South_Africa dbpedia-owl:governmentType ?governmentType
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
304,How high is the Yokohama Marine Tower?,"SELECT ?height
WHERE {
  dbpedia:Yokohama_Marine_Tower dbpedia-owl:height ?height
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
305,Which holidays are celebrated around the world? test2,"PREFIX dcterms: <http://purl.org/dc/terms/>
SELECT DISTINCT ?holiday
WHERE {
    ?holiday a <http://dbpedia.org/ontology/Holiday> .
    ?holiday dcterms:subject <http://dbpedia.org/resource/Category:Holidays_by_country> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
306,Who is the tallest basketball player?,"SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbpedia-owl:BasketballPlayer ;
          dbpedia-owl:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
307,How many languages are spoken in Turkmenistan?,"SELECT (COUNT(?language) AS ?count)
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language ;
           dbp:commonName ""Turkmenistan""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
308,Did Che Guevara have children?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
SELECT ?child
WHERE {
  dbpedia:Che_Guevara dbpedia-owl:child ?child
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?film
WHERE {
  dbr:Aki_Kaurismäki dbo:award dbr:Grand_Prix_(Cannes)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
310,To which party does the mayor of Paris belong?,"SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Mayor_of_Paris> dbpedia-owl:party ?party .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver ?count
WHERE {
  ?driver a dbpedia-owl:FormulaOneRacer ;
          dbpedia-owl:careerStation ?station .
  {
    SELECT ?driver (COUNT(?station) AS ?count)
    WHERE {
      ?driver a dbpedia-owl:FormulaOneRacer ;
              dbpedia-owl:careerStation ?station .
    }
    GROUP BY ?driver
    ORDER BY DESC(?count)
    LIMIT 1
  }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
312,What country is Sitecore from?,"SELECT ?country 
WHERE {
  dbpedia:Sitecore dbo:location ?country .
  ?country a dbo:Country
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace
WHERE {
  dbpedia:Frank_Sinatra dbpedia-owl:birthPlace ?birthPlace
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
314,Is Christian Bale starring in Velvet Goldmine?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?actor
WHERE {
  ?film dbpedia-owl:starring ?actor ;
        dbpedia-owl:wikiPageID ?id .
  FILTER (?id = 1186825)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  dbpedia:Sonny_and_Cher dbpedia-owl:child ?son .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
316,How many ethnic groups live in Slovenia?,"SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
    <http://dbpedia.org/resource/Slovenia> dbpedia-owl:ethnicGroups ?ethnicGroup .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
317,What is the capital of Cameroon?,"SELECT ?capital 
WHERE {
  <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?capital .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
318,Was Natalie Portman born in the United States?,"SELECT ?birthPlace
WHERE {
  dbpedia:Natalie_Portman dbpedia-owl:birthPlace ?birthPlace .
  FILTER regex(?birthPlace, ""United_States"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
319,How many pages does War and Peace have?,"SELECT ?pages
WHERE {
  dbpedia:War_and_Peace dbo:numberOfPages ?pages
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
320,Who is the oldest child of Meryl Streep?,"SELECT ?child WHERE {
  dbpedia:Meryl_Streep dbpedia-owl:child ?child .
  ?child a dbpedia-owl:Person .
} ORDER BY DESC(?child) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
321,Which television shows were created by Walt Disney?,"SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
322,What does IYCM stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?label
WHERE {
    <http://dbpedia.org/resource/IYCM> rdfs:label ?label
    FILTER (lang(?label) = 'en')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
323,Which types of grapes grow in Oregon?,"SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType rdf:type dbo:Grape .
  ?grapeType dbo:growsIn dbr:Oregon .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
324,Was U.S. president Jackson involved in a war?,"SELECT ?war
WHERE {
  dbpedia:Andrew_Jackson dct:subject ?war .
  ?war dct:subject dbc:Wars_involving_the_United_States .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
325,When was the Titanic completed?,"SELECT ?completionDate
WHERE {
  dbr:Titanic dbo:completionDate ?completionDate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
326,Did Tesla win a nobel prize in physics?,"SELECT ?scientist ?prize
WHERE {
  ?scientist dbpedia-owl:award dbpedia:Tesla_Prize .
  ?prize dbpedia-owl:awardRecipient ?scientist .
  ?prize rdf:type dbpedia:Nobel_Prize_in_Physics
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
327,How many states are in Mexico?,"SELECT (COUNT(?state) AS ?count)
WHERE {
    ?state a dbo:State ;
           dbo:country dbr:Mexico .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist
WHERE {
  ?scientist dbpedia-owl:award dbpedia:Manhattan_Project .
  ?scientist dbpedia-owl:award dbpedia:Nobel_Peace_Prize .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
329,How much did the Lego Movie cost?,"SELECT ?cost
WHERE {
  dbpedia:The_Lego_Movie dbo:budget ?cost
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
330,Who composed the music for Harold and Maude?,"SELECT ?composer
WHERE {
  ?film dbo:wikiPageID ?id .
  ?film dbo:musicComposer ?composer .
  FILTER (?id = 118682)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
331,List all episodes of the first season of the HBO television series The Sopranos.,"SELECT ?episode
WHERE {
  ?season dbo:seasonNumber ""1""^^xsd:integer .
  ?season dbo:episodes ?episode .
  ?episode rdf:type dbo:TelevisionEpisode .
  ?episode dbo:series dbr:The_Sopranos .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
332,Which city has the least inhabitants?,"SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
333,Where is Syngman Rhee buried?,"SELECT ?burialPlace 
WHERE {
  dbpedia:Syngman_Rhee dbpedia-owl:burialPlace ?burialPlace
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
334,Does Neymar play for Real Madrid?,"SELECT ?player
WHERE {
  ?player rdf:type dbo:SoccerPlayer .
  ?player foaf:name ""Neymar"" .
  ?player dbo:team ?team .
  ?team foaf:name ""Real Madrid"" .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
335,Who wrote the book The Pillars of the Earth?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Pillars of the Earth""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
336,Do Prince Harry and Prince William have the same parents?,"SELECT ?parent1 ?parent2
WHERE {
  dbpedia:Prince_Harry dbo:parent ?parent1 .
  dbpedia:Prince_William dbo:parent ?parent2 .
  FILTER (?parent1 = ?parent2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?supervisor 
WHERE {
  dbpedia:Albert_Einstein dbpedia-owl:doctoralAdvisor ?supervisor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
338,Does Breaking Bad have more episodes than Game of Thrones?,"SELECT (COUNT(?breakingBadEpisode) AS ?breakingBadEpisodeCount) (COUNT(?gameOfThronesEpisode) AS ?gameOfThronesEpisodeCount)
WHERE {
  ?breakingBadSeries rdf:type dbo:TelevisionShow ;
                    rdfs:label ""Breaking Bad""@en ;
                    dbo:numberOfEpisodes ?breakingBadEpisode .
  
  ?gameOfThronesSeries rdf:type dbo:TelevisionShow ;
                      rdfs:label ""Game of Thrones""@en ;
                      dbo:numberOfEpisodes ?gameOfThronesEpisode .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
339,Who was Vincent van Gogh inspired by?,"SELECT DISTINCT ?inspiration
WHERE {
  ?artist dbo:influencedBy dbr:Vincent_van_Gogh .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building ?floors
WHERE {
  ?building rdf:type dbo:Building ;
           dbo:numberOfFloors ?floors .
  FILTER (?floors > 163 && ?building != dbr:Burj_Khalifa)
}
ORDER BY DESC(?floors)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
341,What was the final result of the War of the Roses?,"SELECT ?result
WHERE {
  dbpedia:War_of_the_Roses dbpedia:outcome ?result
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
342,How much did Pulp Fiction cost?,"SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        rdfs:label ""Pulp Fiction""@en ;
        dbo:budget ?budget .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
343,Is proinsulin a protein?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?protein
WHERE {
    dbo:Proinsulin dbo:wikiPageRedirects ?protein .
    ?protein a dbo:Protein .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
344,Do Urdu and Persian have a common root?,"SELECT ?language1 ?language2
WHERE {
  ?language1 dbo:languageFamily dbr:Indo-European_languages .
  ?language2 dbo:languageFamily dbr:Indo-European_languages .
  FILTER (?language1 = dbr:Urdu && ?language2 = dbr:Persian)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
345,Who is starring in Spanish movies produced by Benicio del Toro?,"SELECT DISTINCT ?actor
WHERE {
  ?movie dbp:starring ?actor .
  ?movie dbp:producer dbpedia:Benicio_del_Toro .
  ?movie dbp:country dbpedia:Spain .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?lake1 ?lake2
WHERE {
  ?lake1 a dbo:Lake ;
         dbo:areaTotal ?area1 ;
         rdfs:label ""Lake Baikal""@en .
  
  ?lake2 a dbo:Lake ;
         dbo:areaTotal ?area2 ;
         rdfs:label ""Great Bear Lake""@en .
  
  FILTER (?area1 > ?area2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
347,Show me all books in Asimov's Foundation series.,"SELECT ?book
WHERE {
  ?book dct:subject dbc:Foundation_series_books .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
348,Where was Bach born?,"SELECT ?birthPlace 
WHERE {
    <http://dbpedia.org/resource/Johann_Sebastian_Bach> dbpedia-owl:birthPlace ?birthPlace
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
349,Which city has the oldest running metro?,"SELECT ?city 
WHERE {
  ?metro rdf:type dbo:RapidTransit ;
         dbo:city ?city ;
         dbo:openingYear ?year .
} 
ORDER BY ASC(?year)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
350,Who designed the Brooklyn Bridge?,"SELECT ?designer
WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?designer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
351,How many people live in Eurasia?,"SELECT (SUM(?population) as ?total_population)
WHERE {
  ?country rdf:type dbo:Country ;
           dbo:populationTotal ?population ;
           dbo:region dbr:Eurasia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host
WHERE {
  ?wildlifeSpecials dbo:producer dbr:BBC.
  ?wildlifeSpecials dbo:host ?host.
  FILTER regex(str(?wildlifeSpecials), ""Wildlife_Specials"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
353,"What is the total population of Melbourne, Florida?","SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Melbourne,_Florida> <http://dbpedia.org/ontology/populationTotal> ?population
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
354,What country is Mount Everest in?,"SELECT ?country WHERE {
  <http://dbpedia.org/resource/Mount_Everest> dbpedia-owl:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
355,To which artistic movement did the painter of The Three Dancers belong?,"SELECT ?movementLabel
WHERE {
  <http://dbpedia.org/resource/The_Three_Dancers> dbpedia-owl:author ?painter .
  ?painter dbpedia-owl:movement ?movement .
  ?movement rdfs:label ?movementLabel .
  FILTER(LANG(?movementLabel) = 'en')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
356,When did Operation Overlord commence?,"SELECT ?date
WHERE {
  dbr:Operation_Overlord dbo:startDate ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
357,What is the bridge with the longest span?,"SELECT ?bridge ?length
WHERE {
  ?bridge rdf:type dbo:Bridge ;
          dbo:longestSpan ?length .
}
ORDER BY DESC(?length)
LIMIT 1
",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
358,Is there a video game called Battle Chess?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?game
WHERE {
  ?game rdf:type <http://dbpedia.org/ontology/VideoGame> ;
        rdfs:label ""Battle Chess""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
359,Who was buried in the Great Pyramid of Giza?,"SELECT ?person
WHERE {
  <http://dbpedia.org/resource/Great_Pyramid_of_Giza> <http://dbpedia.org/ontology/burial> ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"SELECT ?plant
WHERE {
  dbpedia:Ford_Motor_Company dbpedia-owl:subsidiary ?subsidiary .
  ?subsidiary dbpedia-owl:location dbpedia:Malaysia .
  ?subsidiary dbpedia-owl:type dbpedia:Manufacturing .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
361,Did Socrates influence Aristotle?,"SELECT ?influencedBy
WHERE {
  dbpedia:Socrates dbo:influenced ?influencedBy .
  FILTER (?influencedBy = dbpedia:Aristotle)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
362,How many children did Benjamin Franklin have?,"SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Benjamin_Franklin> dbpedia-owl:child ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
363,How tall is Michael Jordan?,"SELECT ?height
WHERE {
  dbpedia:Michael_Jordan dbpedia-owl:height ?height
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
364,In which UK city are the headquarters of the MI6?,"SELECT ?city
WHERE {
  dbpedia:MI6 dbpedia:headquarter ?hq .
  ?hq dbpedia:city ?city .
  ?city dbpedia:country dbpedia:United_Kingdom
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
365,Who created Family Guy?,"SELECT ?creator
WHERE {
  dbpedia:Family_Guy dbpedia-owl:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
366,In which city does the Chile Route 68 end?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Chile_Route_68> <http://dbpedia.org/property/end> ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild
WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
368,When did the Ming dynasty dissolve?,"SELECT ?date
WHERE {
  dbr:Ming_Dynasty dbo:disestablished ?date
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
369,In which military conflicts did Lawrence of Arabia participate?,"SELECT DISTINCT ?conflict
WHERE {
  ?lawrence dbo:militaryCommand ?conflict .
  FILTER regex(?lawrence, ""Lawrence_of_Arabia"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
370,What is the timezone in San Pedro de Atacama?,"SELECT ?timezone
WHERE {
  dbpedia:San_Pedro_de_Atacama dbpedia-owl:timezone ?timezone
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
371,Give me all books by William Goldman with more than 300 pages.,"SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbp:author dbr:William_Goldman ;
        dbo:numberOfPages ?pages .
  FILTER (?pages > 300)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
372,What did Bruce Carver die from?,"SELECT ?cause_of_death
WHERE {
  dbpedia:Bruce_Carver dbo:causeOfDeath ?cause_of_death
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"SELECT ?subsidairy
WHERE {
  ?subsidairy dbo:parentCompany dbr:Lufthansa ;
              dbo:cityServed dbr:Dortmund, dbr:Berlin_Tegel .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
374,Does Abraham Lincoln's death place have a website?,"SELECT ?website
WHERE {
  dbpedia:Abraham_Lincoln dbpedia-owl:deathPlace ?deathPlace .
  ?deathPlace foaf:isPrimaryTopicOf ?website .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
375,Did Elvis Presley have children?,"SELECT ?child
WHERE {
  dbpedia:Elvis_Presley dbpedia-owl:child ?child
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
376,Is Michelle Obama the wife of Barack Obama?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Michelle_Obama dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Barack_Obama)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
377,In which city does Sylvester Stallone live?,"SELECT ?city
WHERE {
  dbpedia:Sylvester_Stallone dbpedia-owl:birthPlace ?birthPlace.
  ?birthPlace dbpedia-owl:city ?city.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
378,Which books by Kerouac were published by Viking Press?,"SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbp:author dbr:Jack_Kerouac ;
        dbp:publisher dbr:Viking_Press .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
379,Who wrote the song Hotel California?,"SELECT ?artist
WHERE {
  ?song dbo:artist ?artist ;
       rdfs:label ""Hotel California""@en .
  FILTER(langMatches(lang(?artist), ""en""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
380,What is the capital of Canada?,"SELECT ?capital 
WHERE {
  <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?capital .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
381,Who is the mayor of Tel Aviv?,"SELECT ?mayor
WHERE {
  dbpedia:Tel_Aviv dbpedia-owl:mayor ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
382,What form of government does Russia have?,"SELECT ?governmentType
WHERE {
  dbpedia:Russia dbpedia-owl:governmentType ?governmentType
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book
WHERE {
  ?person dbpedia-owl:author dbr:Muhammad_Ali ;
          dbpedia-owl:notableWork ?book .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
384,Who was the first to climb Mount Everest?,"SELECT ?person 
WHERE {
    ?person dbo:mountEverestAscents ?ascent .
    ?ascent dbo:firstAscent ""true"" .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
385,How many languages are spoken in Colombia?,"SELECT (COUNT(?language) as ?count)
WHERE {
    ?language a dbo:Language ;
              dbo:country dbr:Colombia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
386,What is the currency of the Czech Republic?,"SELECT ?currency
WHERE {
  <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?currency
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
387,Where in France is sparkling wine produced?,"SELECT DISTINCT ?region
WHERE {
  ?wine a dbo:SparklingWine ;
        dbo:country dbr:France ;
        dbo:region ?region .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
388,When did Boris Becker end his active career?,"SELECT ?endDate
WHERE {
  dbpedia:Boris_Becker dbpedia-owl:activeYearsEndDate ?endDate
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke ;
        dbo:director dbr:Guy_Ritchie .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT DISTINCT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
391,Show me Hemingway's autobiography.,"SELECT ?autobiography
WHERE {
  ?person foaf:name ""Ernest Hemingway""@en .
  ?person dbp:notableWork ?autobiography .
  FILTER regex(?autobiography, ""autobiography"", ""i"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
392,How tall is Amazon Eve?,"SELECT ?height
WHERE {
  dbpedia:Amazon_Eve dbo:height ?height
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
393,What are the five boroughs of New York?,"SELECT ?borough
WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/ontology/region> ?borough .
  ?borough <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Boroughs_of_New_York_City> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
394,Give me all Canadian Grunge record labels.,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?label a <http://dbpedia.org/ontology/RecordLabel> ;
         <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> ;
         <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Grunge> .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
395,In which country does the Ganges start?,"SELECT ?country 
WHERE {
  dbr:Ganges dbo:sourceCountry ?country
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
396,Who is the founder of Penguin Books?,"SELECT ?founder WHERE {
  dbpedia:Penguin_Books dbpedia-owl:founder ?founder .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
397,Who wrote the Game of Thrones theme?,"SELECT ?composer
WHERE {
  <http://dbpedia.org/resource/Game_of_Thrones> dbpedia-owl:musicComposer ?composer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
398,Who is the president of Eritrea?,"SELECT ?president
WHERE {
  <http://dbpedia.org/resource/Eritrea> <http://dbpedia.org/ontology/president> ?president
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
399,In which city did John F. Kennedy die?,"SELECT ?city
WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
400,What is the highest mountain in Australia?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Australia ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
401,Who writes the Farmers' Almanac?,"SELECT ?author
WHERE {
  ?farmersAlmanac dbpedia-owl:author ?author .
  FILTER (regex(?farmersAlmanac, ""Farmers'_Almanac"", ""i""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
402,Give me the currency of China.,"SELECT ?currency
WHERE {
  <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?currency
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
403,Give me all Swedish oceanographers.,"```sparql
SELECT DISTINCT ?oceanographer
WHERE {
  ?oceanographer a <http://dbpedia.org/ontology/Oceanographer> ;
                 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Sweden> .
}
```",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
404,In which city are the headquarters of the United Nations?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/United_Nations> <http://dbpedia.org/property/headquarters> ?hq .
  ?hq <http://dbpedia.org/property/city> ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
405,Is Rita Wilson the wife of Tom Hanks?,"SELECT ?wife
WHERE {
  dbpedia:Rita_Wilson dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Tom_Hanks)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
406,In which countries do people speak Japanese?,"SELECT DISTINCT ?country
WHERE {
    ?country dbpedia-owl:language dbpedia:Japanese_language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
408,Which museum in New York has the most visitors?,"SELECT ?museum ?visitors
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:New_York_City ;
          dbo:visitors ?visitors .
}
ORDER BY DESC(?visitors)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
409,What was the first Queen album?,"SELECT ?album
WHERE {
  ?album rdf:type dbo:Album ;
         dbo:artist dbr:Queen .
}
ORDER BY ?album
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?bandName
WHERE {
  dbpedia:Queens_of_the_Stone_Age dbpedia-owl:bandMember ?member .
  ?member dbpprop:name ?bandName .
}
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
411,What was the last movie with Alec Guinness?,"SELECT ?movie ?date
WHERE {
  ?movie rdf:type dbo:Film ;
         dbo:starring dbr:Alec_Guinness ;
         dbp:releaseDate ?date .
}
ORDER BY DESC(?date)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
412,Give me all actors starring in Last Action Hero.,"SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""Last Action Hero""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
413,Who discovered Pluto?,"SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discoverer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
1,List all boardgames by GMT.,"```sparql
SELECT ?boardgame
WHERE {
  ?boardgame dct:creator dbc:GMT_Games .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
2,Who developed Skype?,"```sparql
SELECT ?developer
WHERE {
  dbpedia:Skype dbpedia-owl:developer ?developer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
3,Which people were born in Heraklion?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person a dbo:Person .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
4,In which U.S. state is Area 51 located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Area_51> dbpedia-owl:location ?location .
  ?location dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
  ?location dbpedia-owl:locatedIn ?state .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
5,Who is the mayor of New York City?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/ontology/leaderName> ?mayor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
6,Which countries have places with more than two caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?place rdf:type dbo:Place ;
         dbo:location ?country ;
         dbo:numberOfCaves ?numCaves .
  FILTER (?numCaves > 2)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
7,Where did Abraham Lincoln die?,"SELECT ?placeOfDeath WHERE {
  dbpedia:Abraham_Lincoln dbo:deathPlace ?placeOfDeath
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
8,Which airports does Air China serve?,"```sparql
SELECT DISTINCT ?airport
WHERE {
  ?airline a dbpedia-owl:Airline ;
           rdfs:label ""Air China""@en .
  ?route dbpedia-owl:airline ?airline ;
         dbpedia-owl:departureAirport ?airport .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
9,Give me all actors starring in movies directed by and starring William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor ;
        dbo:director dbr:William_Shatner ;
        dbo:starring dbr:William_Shatner .
  ?actor a dbo:Actor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
10,What are the official languages of the Philippines?,"```sparql
SELECT ?language
WHERE {
  <http://dbpedia.org/resource/Philippines> <http://dbpedia.org/ontology/officialLanguage> ?language .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
11,Give me all Danish films.,"```sparql
SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dct:subject dbc:Danish_films .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Brad_Pitt ;
        dbo:director dbr:Guy_Ritchie .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
13,Give me the grandchildren of Bruce Lee.,"```sparql
SELECT ?grandchild
WHERE {
  ?bruceLee dbo:child ?child .
  ?child dbo:child ?grandchild .
  FILTER(?bruceLee = dbr:Bruce_Lee)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
14,Which other weapons did the designer of the Uzi develop?,"```sparql
SELECT ?weapon
WHERE {
  <http://dbpedia.org/resource/Uzi> <http://dbpedia.org/ontology/designer> ?designer .
  ?designer <http://dbpedia.org/ontology/knownFor> ?weapon .
  FILTER (?weapon != <http://dbpedia.org/resource/Uzi>)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
15,Who is the owner of Universal Studios?,"```sparql
SELECT ?owner
WHERE {
  dbpedia:Universal_Studios dbo:owner ?owner .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
16,Which state of the USA has the highest population density?,"```sparql
SELECT ?state ?populationDensity
WHERE {
  ?state a dbo:AdministrativeRegion ;
         dbo:country dbr:United_States ;
         dbo:populationDensity ?populationDensity .
}
ORDER BY DESC(?populationDensity)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
17,Which monarchs were married to a German?,"```sparql
SELECT DISTINCT ?monarch
WHERE {
  ?monarch a dbo:Monarch ;
           dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
18,Which organizations were founded in 1950?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:formationYear 1950 .
  ?organization a dbo:Organisation .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
19,Who created the comic Captain America?,"SELECT ?creator
WHERE {
  ?comic dbo:creator dbr:Joe_Simon .
  ?comic dbo:creator ?creator .
  FILTER regex(str(?comic), ""Captain_America"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
20,Give me the Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  dbpedia:Apollo_14 dbpedia-owl:astronaut ?astronaut .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
21,Who wrote the book The pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Pillars of the Earth""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
22,Which state of the United States of America has the highest density?,"```sparql
SELECT ?state ?density
WHERE {
  ?state a dbpedia-owl:State ;
         dbpedia-owl:populationDensity ?density .
} 
ORDER BY DESC(?density)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
23,Which spaceflights were launched from Baikonur?,"```sparql
SELECT ?spaceflight
WHERE {
  ?spaceflight dbpedia-owl:launchSite dbr:Baikonur_Cosmodrome .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
24,Give me a list of all trumpet players that were bandleaders.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a <http://dbpedia.org/ontology/MusicalArtist> ;
              <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Trumpet> ;
              <http://dbpedia.org/ontology/bandMember> ?band .
  ?band a <http://dbpedia.org/ontology/Band> ;
        <http://dbpedia.org/ontology/bandLeader> ?bandleader .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
25,Which U.S. states are in the same timezone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timezone .
  ?state dbpedia-owl:timeZone ?timezone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
26,Which U.S. states possess gold minerals?,"```sparql
SELECT DISTINCT ?state
WHERE {
  ?state dbo:resource ?mineral .
  ?mineral rdf:type dbo:Gold .
  ?state a dbo:State .
  FILTER(langMatches(lang(?state), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
27,Who is the daughter of Ingrid Bergman married to?,"```sparql
SELECT ?spouse
WHERE {
  ?ingridBergman dbo:child ?daughter .
  ?daughter dbo:spouse ?spouse .
  FILTER (?ingridBergman = dbr:Ingrid_Bergman)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
28,How deep is Lake Placid?,"```sparql
SELECT ?depth
WHERE {
  dbpedia:Lake_Placid dbo:maximumDepth ?depth
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
29,Show me all museums in London.,"```sparql
SELECT ?museum
WHERE {
  ?museum a dbpedia-owl:Museum ;
          dbpedia-owl:city dbpedia:London .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
30,Which caves have more than 3 entrances?,"```sparql
SELECT DISTINCT ?cave
WHERE {
  ?cave rdf:type dbo:Cave ;
        dbo:numberOfEntrances ?entrances .
  FILTER (?entrances > 3)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
31,Who is the tallest player of the Atlanta Falcons?,"```sparql
SELECT ?player ?height
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
         dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
32,What are the top-10 action role-playing video games according to IGN?,"```sparql
SELECT DISTINCT ?game ?rank
WHERE {
  ?game dbp:genre dbr:Action_role-playing_video_game ;
        dbp:rank ?rank .
}
ORDER BY ?rank
LIMIT 10
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
SELECT ?writer
WHERE {
  ?writer a dbo:Writer ;
          dbo:award dbr:Nobel_Prize_in_Literature .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
34,Show me all basketball players that are higher than 2 meters.,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:height ?height .
  FILTER (?height > 2)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
35,When was the Statue of Liberty built?,"```sparql
SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Statue_of_Liberty> dbpedia-owl:constructionStart ?date .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
36,Which states border Illinois?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbr:Illinois dbo:neighboringState ?state .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
37,Who developed Minecraft?,"```sparql
SELECT ?developer
WHERE {
  <http://dbpedia.org/resource/Minecraft> dbpedia-owl:developer ?developer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
38,Where did Hillel Slovak die?,"```sparql
SELECT ?placeOfDeath
WHERE {
  dbpedia:Hillel_Slovak dbpedia-owl:placeOfDeath ?placeOfDeath .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
39,What movies does Jesse Eisenberg play in?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?actor dbo:wikiPageID dbr:Jesse_Eisenberg ;
         dbo:starring ?movie .
  ?movie a dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
40,Give all swimmers that were born in Moscow.,"```sparql
SELECT ?swimmer
WHERE {
  ?swimmer a dbo:Swimmer ;
           dbo:birthPlace dbr:Moscow .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
41,Give me all cosmonauts.,"```sparql
SELECT ?cosmonaut
WHERE {
  ?cosmonaut a <http://dbpedia.org/ontology/Cosmonaut> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
42,Give me all Swiss non-profit organizations.,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a <http://dbpedia.org/ontology/NonprofitOrganisation> ;
                dct:subject <http://dbpedia.org/resource/Category:Non-profit_organisations_based_in_Switzerland> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
43,Which presidents were born in 1945?,"```sparql
SELECT ?president ?name
WHERE {
  ?president a dbpedia-owl:President ;
             dbpprop:birthDate ?birthDate ;
             foaf:name ?name .
  FILTER (regex(str(?birthDate), ""1945""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
44,What kind of music did Lou Reed play?,"SELECT DISTINCT ?genre
WHERE {
  ?artist dbpedia-owl:genre ?genre .
  FILTER (?artist = dbpedia:Lou_Reed)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
45,Where do the Red Sox play?,"SELECT ?team ?stadium
WHERE {
  ?team rdf:type dbo:SportsTeam ;
        rdfs:label ""Boston Red Sox""@en ;
        dbo:ground ?stadium .
  ?stadium rdf:type dbo:Stadium ;
           rdfs:label ?stadiumName .
  FILTER (lang(?stadiumName) = ""en"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
46,Show a list of soccer clubs that play in the Bundesliga.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club rdf:type dbo:SoccerClub ;
       dbo:league ?league .
  ?league rdfs:label ""Bundesliga""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
47,Which volcanos in Japan erupted since 2000?,"```sparql
SELECT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:country dbr:Japan ;
           dbo:eruptionDate ?date .
  FILTER (year(?date) >= 2000)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
48,Which bridges cross the Seine?,"```sparql
SELECT DISTINCT ?bridge
WHERE {
  ?bridge a dbpedia-owl:Bridge ;
          dbpedia-owl:crosses <http://dbpedia.org/resource/Seine> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
49,What is the official color of the University of Oxford?,"```sparql
SELECT ?color
WHERE {
  <http://dbpedia.org/resource/University_of_Oxford> dbpedia-owl:officialSchoolColour ?color
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
50,How many films did Hal Roach produce?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film rdf:type dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
51,Give me all Danish movies.,"```sparql
SELECT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dct:subject dbc:Danish_films .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
52,What is the most frequent cause of death?,"```sparql
SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
  ?person dbo:causeOfDeath ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
53,Who are the four youngest MVP basketball players?,"```sparql
SELECT ?player ?age
WHERE {
  ?player a dbpedia-owl:BasketballPlayer ;
          dbpprop:award dbpedia:MVP ;
          dbpprop:birthDate ?birthDate .
  BIND(now() - xsd:date(?birthDate) AS ?age)
}
ORDER BY ?age
LIMIT 4
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
54,Give me all companies in Munich.,"```sparql
SELECT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:location dbr:Munich .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
55,Give me the capitals of all countries that the Himalayas run through.,"```sparql
SELECT DISTINCT ?capital
WHERE {
  ?country dbpedia-owl:capital ?capital ;
           dbpedia-owl:location ?location .
  ?location dbpedia-owl:locatedInArea <http://dbpedia.org/resource/Himalayas> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
56,How many movies did Park Chan-wook direct?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Park_Chan-wook .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
57,Which rivers flow into a German lake?,"```sparql
SELECT DISTINCT ?river
WHERE {
  ?river dbo:mouth ?lake .
  ?lake dbo:country dbr:Germany .
  ?river a dbo:River .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
58,How many airlines are there?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbpedia-owl:Airline .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
59,Give me all islands that belong to Japan.,"```sparql
SELECT ?island
WHERE {
  ?island dct:subject dbc:Islands_of_Japan .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
60,How many inhabitants does Maribor have?,"```sparql
SELECT ?population
WHERE {
  dbpedia:Maribor dbo:populationTotal ?population .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
61,Give me all Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut dbpedia-owl:team dbpedia:Apollo_14 .
  ?astronaut rdf:type dbpedia-owl:Person .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
62,Which companies have more than 1 million employees?,"```sparql
SELECT DISTINCT ?company ?employees
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
63,In which films directed by Garry Marshall was Julia Roberts starring?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Garry_Marshall ;
        dbo:starring dbr:Julia_Roberts .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
64,Give me all soccer clubs in the Premier League.,"```sparql
SELECT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league dbr:Premier_League .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
65,What is the highest place of the Urals?,"```sparql
SELECT ?place ?elevation
WHERE {
  ?place rdf:type dbo:Mountain ;
         dbo:locatedInArea dbr:Ural_Mountains ;
         dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
66,Who is the governor of Wyoming?,"```sparql
SELECT ?governor
WHERE {
  dbpedia:Wyoming dbpedia-owl:governor ?governor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
67,Where did the architect of the Eiffel Tower study?,"SELECT ?architect ?studyLocation
WHERE {
  ?eiffelTower dbo:architect ?architect .
  ?architect dbo:education ?studyLocation .
  FILTER (?eiffelTower = dbr:Eiffel_Tower)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
68,Give me all world heritage sites designated within the past two years.,"```sparql
SELECT ?site ?siteLabel ?designationDate
WHERE {
  ?site wdt:P1435 wd:Q35852 ;
        wdt:P17 ?country ;
        wdt:P1435 ?designation ;
        wdt:P571 ?designationDate .
  FILTER(YEAR(?designationDate) >= YEAR(NOW()) - 2)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
69,Give me all actors who were born in Paris after 1950.,"```sparql
SELECT DISTINCT ?actor ?actorName ?birthDate
WHERE {
  ?actor a dbo:Actor ;
         rdfs:label ?actorName ;
         dbo:birthPlace/dbo:location dbr:Paris ;
         dbo:birthDate ?birthDate .
  FILTER (xsd:integer(SUBSTR(?birthDate, 1, 4)) > 1950)
  FILTER (LANG(?actorName) = 'en')
}
ORDER BY ?actorName
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
70,Which movies star both Liz Taylor and Richard Burton?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
71,Give me all Australian nonprofit organizations.,"```sparql
SELECT DISTINCT ?org
WHERE {
  ?org a <http://dbpedia.org/ontology/NonprofitOrganisation> ;
       dct:subject <http://dbpedia.org/resource/Category:Non-profit_organisations_based_in_Australia> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
72,Which pope succeeded John Paul II?,"SELECT ?successor
WHERE {
  dbr:Pope_John_Paul_II dbo:successor ?successor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
73,Give me all ESA astronauts.,"```sparql
SELECT ?astronaut ?name
WHERE {
  ?astronaut a dbpedia-owl:Person ;
             dbpprop:agency dbpedia-owl:European_Space_Agency ;
             foaf:name ?name .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
74,Who was president of Pakistan in 1978?,"```sparql
SELECT ?president
WHERE {
  ?president dbp:office dbp:President_of_Pakistan ;
            dbp:termStart ?start ;
            dbp:termEnd ?end .
  FILTER (xsd:integer(?start) <= 1978 && xsd:integer(?end) >= 1978)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
75,Who is the owner of Rolls-Royce?,"SELECT ?owner
WHERE {
  dbpedia:Rolls-Royce dbo:owner ?owner
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
76,How many museums does Paris have?,"```sparql
SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:Paris .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
77,Where was JFK assassinated?,"```sparql
SELECT ?place
WHERE {
  dbr:Assassination_of_John_F._Kennedy dbo:location ?place .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
78,Give me all federal chancellors of Germany.,"```sparql
SELECT ?chancellor ?birthDate ?deathDate
WHERE {
  ?chancellor a dbpedia-owl:Chancellor ;
              dbpprop:office dbpedia:Federal_Chancellor_of_Germany ;
              dbpprop:birthDate ?birthDate .
  OPTIONAL { ?chancellor dbpprop:deathDate ?deathDate }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
79,Show me everyone who was born on Halloween.,"```sparql
SELECT ?person ?name ?birthdate
WHERE {
  ?person dbo:birthDate ?birthdate .
  ?person foaf:name ?name .
  FILTER (regex(str(?birthdate), ""10-31""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
80,Which beer originated in Ireland?,"```sparql
SELECT DISTINCT ?beer
WHERE {
  ?beer dbo:origin dbpedia:Ireland .
  ?beer rdf:type dbo:Beer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
81,To which countries does the Himalayan mountain system extend?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbpedia-owl:location ?location .
  ?location dbpedia-owl:mountainRange dbr:Himalayas .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
82,Which actors were born in Germany?,"```sparql
SELECT DISTINCT ?actor ?birthPlace
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
83,How much carbs does peanut butter have?,"```sparql
SELECT ?carbsAmount
WHERE {
  dbpedia:Peanut_butter dbo:ingredientAmount ?carbsAmount .
  ?carbsAmount dbo:ingredient dbpedia:Carbohydrate .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:producer ?producer .
}
GROUP BY ?producer
ORDER BY DESC(?numFilms)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
85,How many employees does Google have?,"```sparql
SELECT ?employees
WHERE {
  dbpedia:Google dbo:numberOfEmployees ?employees
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
86,Give me all actors who were born in Berlin.,"```sparql
SELECT ?actor ?actorName
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Berlin ;
         foaf:name ?actorName .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
87,Who created Goofy?,"```sparql
SELECT ?creator
WHERE {
  ?goofy dbo:creator ?creator .
  FILTER (?goofy = dbr:Goofy)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
88,Which music albums contain the song Last Christmas?,"```sparql
SELECT DISTINCT ?album ?albumName
WHERE {
  ?song rdf:type dbo:Song ;
        rdfs:label ""Last Christmas""@en .
  ?album dbo:recordedIn ?song ;
        rdfs:label ?albumName .
  FILTER(langMatches(lang(?albumName), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
89,When was Alberta admitted as province?,"SELECT ?date
WHERE {
  dbr:Alberta dbo:formationDate ?date
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
90,How many missions does the Soyuz programme have?,"```sparql
SELECT (COUNT(?mission) AS ?numMissions)
WHERE {
  ?mission dct:type dbc:Soyuz_program_missions .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
91,Give me all the TV shows with Neil Patrick Harris.,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris .
  ?show rdf:type dbo:TelevisionShow .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
92,When were the Hells Angels founded?,"```sparql
SELECT ?date
WHERE {
  dbr:Hells_Angels dbo:formationDate ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
93,What is the net income of Apple?,"SELECT ?netIncome
WHERE {
  dbpedia:Apple_Inc dbpedia-owl:netIncome ?netIncome
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
94,Give me all Swedish holidays.,"```sparql
SELECT ?holiday
WHERE {
  ?holiday dct:subject dbc:Public_holidays_in_Sweden .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
95,In which city was the former Dutch queen Juliana buried?,"```sparql
SELECT ?city
WHERE {
  dbpedia:Juliana_of_the_Netherlands dbpedia-owl:burialPlace ?burialPlace .
  ?burialPlace dbpedia-owl:location ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
96,List all the musicals with music by Leonard Bernstein.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:composer dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
97,Give me all companies in the advertising industry.,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dct:subject dbc:Advertising_agencies .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
98,What is the largest metropolitan area in Washington state?,"```sparql
SELECT ?metropolitanArea ?population
WHERE {
  ?metropolitanArea a dbo:MetropolitanArea ;
                   dbo:country dbr:Washington_(state) ;
                   dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
99,Who killed John Lennon?,"```sparql
SELECT ?killer
WHERE {
  dbpedia:John_Lennon dbo:deathCause ?cause .
  ?cause rdfs:label ""Assassination"" .
  dbpedia:John_Lennon dbo:deathPlace ?place .
  ?place dbo:location ?location .
  ?location dbo:death ?death .
  ?death dbo:cause ?cause2 .
  ?cause2 rdfs:label ?killer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
100,Which writers studied in Istanbul?,"```sparql
SELECT DISTINCT ?writer
WHERE {
  ?writer a dbo:Person ;
          dbo:birthPlace/dbo:location dbr:Istanbul .
  FILTER EXISTS { ?writer dbo:occupation dbr:Writer }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
101,Give me all Australian metalcore bands.,"```sparql
SELECT DISTINCT ?band
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:genre dbr:Metalcore ;
        dbo:origin dbr:Australia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
102,Which countries adopted the Euro?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbpedia-owl:currency dbpedia:Euro .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
103,Give me all types of eating disorders.,"```sparql
SELECT DISTINCT ?eatingDisorder
WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
104,Was Marc Chagall a jew?,"```sparql
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Marc Chagall"" ;
          dbo:religion dbr:Judaism .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
105,What was Brazil's lowest rank in the FIFA World Ranking?,"```sparql
SELECT ?rank
WHERE {
  dbpedia:Brazil dbpedia-owl:lowestFifaRank ?rank .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
106,How many films did Leonardo DiCaprio star in?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
  ?film rdf:type dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
107,Was Margaret Thatcher a chemist?,"```sparql
SELECT ?person
WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""Margaret Thatcher""@en ;
          dbo:profession dbr:Chemist .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
108,Which U.S. states are in the same time zone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timeZone .
  ?state dbpedia-owl:timeZone ?timeZone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
109,Give me all books written by Danielle Steel.,"```sparql
SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:Danielle_Steel .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
110,Which country has the most official languages?,"```sparql
SELECT ?country ?numLanguages
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
  {
    SELECT ?country (COUNT(?language) AS ?numLanguages)
    WHERE {
      ?country a dbo:Country ;
               dbo:officialLanguage ?language .
    }
    GROUP BY ?country
    ORDER BY DESC(?numLanguages)
    LIMIT 1
  }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
111,What is the total amount of men and women serving in the FDNY?,"SELECT (COUNT(?person) AS ?total) WHERE {
  ?person a dbpedia-owl:Person ;
          dbpprop:department dbpedia:New_York_City_Fire_Department ;
          foaf:gender ?gender .
  FILTER (?gender = ""male"" || ?gender = ""female"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
112,Which actor played Chewbacca?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring dbr:Chewbacca ;
       dbo:starring ?actor .
  FILTER (?actor != dbr:Chewbacca)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
113,Give me all libraries established earlier than 1400.,"```sparql
SELECT ?library ?name ?established
WHERE {
  ?library a dbpedia-owl:Library ;
           dbpedia-owl:foundingYear ?established ;
           rdfs:label ?name .
  FILTER (?established < 1400)
  FILTER (lang(?name) = 'en')
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
114,Which programming languages were influenced by Perl?,"```sparql
SELECT DISTINCT ?language
WHERE {
  ?language dbo:influencedBy dbr:Perl .
  ?language rdf:type dbo:ProgrammingLanguage .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
115,In which U.S. state is Mount McKinley located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Mount_McKinley> dbpedia-owl:location ?location .
  ?location dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
  ?location dbpedia-owl:state ?state .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
116,What airlines are part of the SkyTeam alliance?,"```sparql
SELECT ?airline
WHERE {
  ?airline dbo:alliance <http://dbpedia.org/resource/SkyTeam> .
  ?airline a dbo:Airline .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
117,Which ships were called after Benjamin Franklin?,"```sparql
SELECT ?ship
WHERE {
  ?ship dbo:shipName ""Benjamin Franklin""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
118,Give me all Methodist politicians.,"```sparql
SELECT DISTINCT ?politician
WHERE {
  ?politician a dbo:Politician ;
              dbo:religion dbr:Methodism .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
119,What other books have been written by the author of The Fault in Our Stars?,"```sparql
SELECT ?book
WHERE {
  ?author foaf:name ""John Green""@en .
  ?author dbo:notableWork ?book .
  FILTER (?book != <http://dbpedia.org/resource/The_Fault_in_Our_Stars>)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
120,What is the highest mountain?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
121,Which poet wrote the most books?,"```sparql
SELECT ?poet (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a dbo:Person ;
        dbo:author ?book .
}
GROUP BY ?poet
ORDER BY DESC(?numBooks)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
122,Which programming languages influenced Javascript?,"```sparql
SELECT ?influencedLanguage
WHERE {
  dbr:JavaScript dbo:influenced ?influencedLanguage .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
123,Which musician wrote the most books?,"```sparql
SELECT ?musician (COUNT(?book) AS ?numBooks)
WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:notableWork ?book .
  ?book a dbo:Book .
}
GROUP BY ?musician
ORDER BY DESC(?numBooks)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
124,Which films starring Clint Eastwood did he direct himself?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Clint_Eastwood .
  ?film dbo:starring dbr:Clint_Eastwood .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
125,Which software has been developed by organizations founded in California?,"```sparql
SELECT DISTINCT ?software
WHERE {
  ?organization dbo:location dbr:California .
  ?organization dbo:product ?software .
  ?software a dbo:Software .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
126,Which instruments does Cat Stevens play?,"```sparql
SELECT DISTINCT ?instrument
WHERE {
  ?person dbpedia-owl:instrument ?instrument .
  ?person foaf:name ""Cat Stevens""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
127,How many airlines are members of the Star Alliance?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline dbo:alliance <http://dbpedia.org/resource/Star_Alliance> .
  ?airline a dbo:Airline .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
128,Give me all actors called Baldwin.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         foaf:surname ""Baldwin"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
129,Who wrote The Hunger Games?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Hunger Games""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
130,For which label did Elvis record his first album?,"SELECT ?label
WHERE {
  ?elvis a dbpedia-owl:Artist ;
         dbpedia-owl:recordLabel ?label .
  ?album a dbpedia-owl:Album ;
         dbpedia-owl:artist ?elvis .
}
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
131,Is Christian Bale starring in Batman Begins?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>

SELECT ?film
WHERE {
  dbpedia:Christian_Bale dbpedia-owl:starring ?film .
  FILTER regex(str(?film), ""Batman Begins"", ""i"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
132,Where is the residence of the prime minister of Spain?,"```sparql
SELECT ?residence
WHERE {
  <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/ontology/residence> ?residence
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?film) AS ?numMovies)
WHERE {
  ?actor a dbo:Actor ;
         dbo:starring ?film .
}
GROUP BY ?actor
ORDER BY DESC(?numMovies)
LIMIT 1
OFFSET 0",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
134,Which countries have more than two official languages?,"```sparql
SELECT DISTINCT ?country ?officialLanguages
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?officialLanguages .
  FILTER (CONTAINS(str(?officialLanguages), "","") || CONTAINS(str(?officialLanguages), "";""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
135,Which countries have more than ten caves?,"```sparql
SELECT ?country (COUNT(?cave) AS ?numCaves)
WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbo:location ?country .
} 
GROUP BY ?country
HAVING (COUNT(?cave) > 10)
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"```sparql
SELECT ?song
WHERE {
  ?song a dbo:Song ;
        dbo:artist dbr:Bruce_Springsteen ;
        dbo:releaseDate ?date .
  FILTER (xsd:integer(?date) >= 1980 && xsd:integer(?date) <= 1990)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
137,Which television shows were created by John Cleese?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show rdf:type dbo:TelevisionShow .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
138,When did Latvia join the EU?,"```sparql
SELECT ?date
WHERE {
  dbr:Latvia dbo:accessionDate ?date.
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
139,Which soccer players were born on Malta?,"```sparql
SELECT ?player ?birthDate
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthPlace dbr:Malta ;
          dbo:birthDate ?birthDate .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
140,How many politicians graduated from Columbia University?,"```sparql
SELECT (COUNT(?politician) AS ?count)
WHERE {
  ?politician a dbpedia-owl:Politician ;
              dbpprop:almaMater dbr:Columbia_University .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
141,Give me the birthdays of all actors of the television show Charmed.,"```sparql
SELECT ?actor ?birthday
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthDate ?birthday ;
         dbo:starring dbr:Charmed .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
142,Which telecommunications organizations are located in Belgium?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a dbo:Organisation ;
               dbo:location dbr:Belgium ;
               dbo:industry dbr:Telecommunication .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
143,Give me a list of all lakes in Denmark.,"```sparql
SELECT ?lake
WHERE {
  ?lake rdf:type dbo:Lake ;
        dbo:country dbr:Denmark .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
144,How many children does Eddie Murphy have?,"```sparql
SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Eddie_Murphy> dbpedia-owl:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
145,Show me all English Gothic buildings in Kent.,"```sparql
SELECT DISTINCT ?building
WHERE {
  ?building rdf:type dbo:Building ;
           dbo:architecturalStyle dbr:English_Gothic_architecture ;
           dbo:location dbr:Kent ;
           dbo:abstract ?abstract .
  FILTER (langMatches(lang(?abstract), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
146,Who is the manager of Real Madrid?,"```sparql
SELECT ?manager
WHERE {
  <http://dbpedia.org/resource/Real_Madrid_CF> <http://dbpedia.org/ontology/manager> ?manager .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
147,In which countries can you pay using the West African CFA franc?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbpedia-owl:currency dbpedia:West_African_CFA_franc .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
148,Which holidays are celebrated around the world?,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
149,What is the longest river?,"```sparql
SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
150,Which organizations were founded in 1930?,"SELECT ?organization
WHERE {
  ?organization dbo:formationYear 1930
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
151,What is the birth name of Angela Merkel?,"```sparql
SELECT ?birthName
WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
152,Who has Tom Cruise been married to?,"```sparql
SELECT ?spouse
WHERE {
  dbpedia:Tom_Cruise dbpedia-owl:spouse ?spouse .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
153,Which weapons did Heckler & Koch develop?,"```sparql
SELECT ?weapon
WHERE {
  ?company rdf:type dbo:Company ;
           foaf:name ""Heckler & Koch""@en .
  ?weapon dbo:manufacturer ?company .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
154,What is the smallest city by area in Germany?,"```sparql
SELECT ?city ?area
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Germany ;
        dbo:area ?area .
} 
ORDER BY ?area
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
155,What is the ruling party in Lisbon?,"```sparql
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Lisbon> dbpedia-owl:rulingParty ?party .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
156,How heavy is Jupiter's lightest moon?,"```sparql
SELECT ?moon ?mass
WHERE {
  ?moon dct:subject dbc:Moons_of_Jupiter ;
       dbo:meanRadius ?radius ;
       dbo:mass ?mass .
  FILTER (?mass > 0)
}
ORDER BY ?mass
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
157,How many employees does IBM have?,"```sparql
SELECT ?employees
WHERE {
  dbpedia:IBM dbo:numberOfEmployees ?employees
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
158,List all episodes of the first season of the HBO television series The Sopranos!,"```sparql
SELECT ?episode ?title
WHERE {
  ?season dbo:series dbr:The_Sopranos ;
          dbo:numberOfSeasons ""6""^^xsd:integer .
  ?episode dbo:season ?season ;
           rdf:type dbo:TelevisionEpisode ;
           rdfs:label ?title .
  FILTER regex(?title, ""Season 1, Episode"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
159,What does ICRO stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?definition
WHERE {
  <http://dbpedia.org/resource/ICRO> rdfs:comment ?definition
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
160,Does the new Battlestar Galactica series have more episodes than the old one?,"```sparql
SELECT ?newEpisodes ?oldEpisodes
WHERE {
  {
    SELECT (COUNT(?episode) AS ?newEpisodes)
    WHERE {
      ?series1 dbo:relatedWork dbr:Battlestar_Galactica_(2004_TV_series) .
      ?episode dbo:series ?series1 .
    }
  }
  {
    SELECT (COUNT(?episode) AS ?oldEpisodes)
    WHERE {
      ?series2 dbo:relatedWork dbr:Battlestar_Galactica_(1978_TV_series) .
      ?episode dbo:series ?series2 .
    }
  }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
161,Give me all films produced by Hal Roach.,"```sparql
SELECT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film a dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
162,Who played Agent Smith in Matrix?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor ;
       rdfs:label ""The Matrix""@en .
  ?actor dbo:wikiPageRedirects* dbo:Hugo_Weaving .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
163,Which Greek parties are pro-European?,"```sparql
SELECT DISTINCT ?party
WHERE {
  ?party a dbpedia-owl:PoliticalParty ;
         dbpedia-owl:ideology dbpedia:Pro-European ;
         dbpedia-owl:country dbpedia:Greece .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
164,Give me a list of all bandleaders that play trumpet.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:MusicalArtist ;
              dbo:instrument dbr:Trumpet .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
165,What is the second highest mountain on Earth?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
} 
ORDER BY DESC(?height)
LIMIT 2
OFFSET 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
166,Is Egypts largest city also its capital?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city ?capital
WHERE {
  dbo:Egypt dbo:largestCity ?city ;
             dbo:capital ?capital .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
167,Which rockets were launched from Baikonur?,"```sparql
SELECT ?rocket
WHERE {
  ?rocket dbp:launchSite dbr:Baikonur_Cosmodrome .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
168,How many programming languages are there?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
169,Which Chess players died in the same place they were born in?,"```sparql
SELECT DISTINCT ?player ?birthPlace
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
170,Who is the owner of Facebook?,"```sparql
SELECT ?owner
WHERE {
  dbpedia:Facebook dbpedia-owl:owner ?owner .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
171,Give me all movies with Tom Cruise.,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Tom_Cruise .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
172,In which U.S. state is Fort Knox located?,"```sparql
SELECT ?state
WHERE {
  dbpedia:Fort_Knox dbpedia-owl:location ?location .
  ?location dbpedia-owl:country dbpedia:United_States .
  ?location dbpedia-owl:state ?state .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population ;
        dbo:country dbr:New_Jersey ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
174,Which mountains are higher than the Nanga Parbat?,"```sparql
SELECT DISTINCT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
  FILTER (?height > (SELECT ?elevation WHERE { dbr:Nanga_Parbat dbo:elevation ?elevation }))
}
ORDER BY DESC(?height)
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
175,Give me all B-sides of the Ramones.,"```sparql
SELECT ?bSide
WHERE {
  ?album dbo:artist dbr:Ramones ;
        dbo:type dbr:B-side ;
        dbo:recordedAt ?bSide .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
176,What are the specialities of the UNC Health Care?,"```sparql
SELECT ?specialty
WHERE {
  <http://dbpedia.org/resource/UNC_Health_Care> dbpedia-owl:specialty ?specialty .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
177,When was Olof Palme shot?,"```sparql
SELECT ?date
WHERE {
  dbr:Assassination_of_Olof_Palme dbo:date ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
178,List the seven kings of Rome.,"```sparql
SELECT ?king ?reignStart ?reignEnd
WHERE {
  ?king a dbo:Monarch ;
        dbo:predecessor dbr:Romulus ;
        dbo:successor ?successor ;
        dbo:title dbr:King_of_Rome ;
        dbo:reignStart ?reignStart ;
        dbo:reignEnd ?reignEnd .
}
ORDER BY ?reignStart
LIMIT 7
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
179,Give me all people that were born in Vienna and died in Berlin.,"```sparql
SELECT ?person ?personLabel
WHERE {
  ?person dbo:birthPlace dbr:Vienna ;
          dbo:deathPlace dbr:Berlin .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
180,Is Darth Vader Luke’s father?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>

SELECT ?father
WHERE {
  dbpedia:Darth_Vader dbpedia-owl:parent ?father .
  dbpedia:Luke_Skywalker dbpedia-owl:parent ?father .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
181,Show me all the breweries in Australia.,"```sparql
SELECT ?brewery
WHERE {
  ?brewery a dbpedia-owl:Brewery ;
           dbpedia-owl:country dbpedia:Australia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:producer dbr:Steven_Spielberg ;
        dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
183,Give me all soccer clubs in Spain.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:country dbr:Spain .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
184,Who produced films starring Natalie Portman?,"```sparql
SELECT DISTINCT ?producer
WHERE {
  ?film dbpedia-owl:starring dbpedia:Natalie_Portman ;
        dbpedia-owl:producer ?producer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
185,Give me all breeds of the German Shepherd dog.,"```sparql
SELECT ?breed
WHERE {
  ?breed rdf:type dbo:DogBreed ;
         rdfs:label ?label .
  FILTER regex(?label, ""German Shepherd"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
186,Who is the heaviest player of the Chicago Bulls?,"```sparql
SELECT ?player ?weight
WHERE {
  ?player dbpedia-owl:team dbpedia:Chicago_Bulls ;
         dbpedia-owl:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
187,Which languages are spoken in Estonia?,"```sparql
SELECT DISTINCT ?language
WHERE {
  <http://dbpedia.org/resource/Estonia> dbpedia-owl:language ?language .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
188,What is the largest country in the world?,"```sparql
SELECT ?country ?area
WHERE {
  ?country a dbo:Country ;
           dbo:areaTotal ?area .
}
ORDER BY DESC(?area)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
189,What is the largest city in america?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:United_States ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
190,Who was the pope that founded the Vatican Television?,"```sparql
SELECT ?pope
WHERE {
  ?pope dbp:established ?vaticanTV .
  FILTER regex(?vaticanTV, ""Vatican Television"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
191,Who discovered Ceres?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Ceres dbo:discoverer ?discoverer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
192,Who is the king of the Netherlands?,"```sparql
SELECT ?king
WHERE {
  <http://dbpedia.org/resource/Netherlands> <http://dbpedia.org/ontology/leaderName> ?king .
  FILTER regex(?king, ""King"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
193,Is Cola a beverage?,"```sparql
SELECT DISTINCT ?cola
WHERE {
  ?cola rdf:type dbo:Beverage ;
        rdfs:label ""Cola""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"```sparql
SELECT ?almaMater
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?almaMater .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
195,Who wrote the book Les Piliers de la terre?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""Les Piliers de la terre""@fr .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
196,Which airports does Yeti Airlines serve?,"```sparql
SELECT DISTINCT ?airport
WHERE {
  ?airline dbo:airline ""Yeti Airlines"" .
  ?airline dbo:operates ?route .
  ?route dbo:destination ?airport .
  ?airport a dbo:Airport .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
197,Where is the birthplace of Goethe?,"```sparql
SELECT ?birthplace
WHERE {
  <http://dbpedia.org/resource/Johann_Wolfgang_von_Goethe> dbpedia-owl:birthPlace ?birthplace .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"PREFIX dbo: <http://dbpedia.org/ontology/>

ASK {
  dbo:Cuban_Missile_Crisis dbo:startDate ?date1 .
  dbo:Bay_of_Pigs_Invasion dbo:startDate ?date2 .
  FILTER (?date1 < ?date2)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
199,Which ingredients do I need for carrot cake?,"```sparql
SELECT ?ingredient
WHERE {
  ?cake dbo:ingredient ?ingredient .
  FILTER regex(?cake, ""Carrot cake"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
200,Who created Wikipedia?,"```
SELECT ?creator
WHERE {
  dbpedia:Wikipedia dbpedia-owl:author ?creator .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
201,What is the highest mountain in Saxony Germany?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Germany ;
           dbo:locatedInArea dbr:Saxony ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
202,Who is the current federal minister of finance in Germany?,"```sparql
SELECT ?minister
WHERE {
  ?minister a dbpedia-owl:Person ;
           dbpprop:title ""Federal Minister of Finance of Germany"" ;
           dbpprop:incumbent ?currentMinister .
  FILTER (langMatches(lang(?currentMinister), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
203,In which country is Mecca located?,"```sparql
SELECT ?country
WHERE {
  dbpedia:Mecca dbpedia-owl:country ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
204,Who played Gus Fring in Breaking Bad?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Breaking Bad""@en .
  ?actor foaf:name ""Gus Fring""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
205,In which country does the Nile start?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Nile> dbpedia-owl:sourceCountry ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
206,In which state Penn State University is located?,"```sparql
SELECT ?state
WHERE {
  dbpedia:Pennsylvania_State_University dbpedia-owl:state ?state .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
207,What is the biggest stadium in Spain?,"```sparql
SELECT ?stadium ?capacity
WHERE {
  ?stadium a dbpedia-owl:Stadium ;
           dbpedia-owl:location dbpedia:Spain ;
           dbpedia-owl:capacity ?capacity .
}
ORDER BY DESC(?capacity)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
208,Who is the coach of Ankara's ice hockey team?,"```sparql
SELECT ?coach
WHERE {
  ?team dbpedia-owl:city dbpedia:Ankara ;
        dbpedia-owl:sport dbpedia:Ice_hockey ;
        dbpedia-owl:coach ?coach .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
209,How large is the area of UK?,"```sparql
SELECT ?area
WHERE {
  dbpedia:United_Kingdom dbo:areaTotal ?area
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
210,Who created Batman?,"```sparql
SELECT ?creator
WHERE {
  <http://dbpedia.org/resource/Batman> dbpedia-owl:creator ?creator .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
211,Was Sigmund Freud married?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  dbpedia:Sigmund_Freud dbpedia-owl:spouse ?spouse
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
212,Who are the developers of DBpedia?,"```sparql
SELECT ?developer
WHERE {
  dbpedia-owl:developer ?developer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
213,Give me all movies directed by Francis Ford Coppola.,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
  ?movie rdf:type dbo:Film .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
214,Are tree frogs a type of amphibian?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?type
WHERE {
  dbo:Tree_frog dbo:wikiPageRedirects ?redirect .
  ?redirect dbo:wikiPageDisambiguates ?type .
  ?type a dbo:Amphibian
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
215,What is the location of the Houses of Parliament?,"```sparql
SELECT ?location
WHERE {
  <http://dbpedia.org/resource/Houses_of_Parliament> dbpedia-owl:location ?location .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
216,how much is the elevation of Düsseldorf Airport ?,"```sparql
SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
217,How much is the population of mexico city ?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Mexico_City> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
218,when was the founding date of french fifth republic?,"```sparql
SELECT ?foundingDate
WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?foundingDate
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
219,Who was the first King of England?,"```sparql
SELECT ?king
WHERE {
  ?king a dbpedia-owl:Monarch ;
        dbpedia-owl:reignStart ?start .
  FILTER (?start = xsd:date(""1066-12-25""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
220,Who is the editor of Forbes?,"```sparql
SELECT ?editor
WHERE {
  <http://dbpedia.org/resource/Forbes> <http://dbpedia.org/ontology/editor> ?editor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
221,Which awards did Douglas Hofstadter win?,"SELECT ?award
WHERE {
  dbpedia:Douglas_Hofstadter dbpedia-owl:award ?award
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
222,Who is the youngest Darts player?,"```sparql
SELECT ?player ?birthdate
WHERE {
  ?player a dbpedia-owl:DartsPlayer ;
          dbpedia-owl:birthDate ?birthdate .
}
ORDER BY ASC(?birthdate)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
223,Is horse racing a sport?,"```sparql
SELECT ?sport
WHERE {
  dbpedia:Horse_racing dct:subject ?sport .
  FILTER regex(str(?sport), ""Sport"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
224,Which river does the Brooklyn Bridge cross?,"```sparql
SELECT ?river
WHERE {
  <http://dbpedia.org/resource/Brooklyn_Bridge> dbpedia-owl:crosses ?river .
  ?river a dbpedia-owl:River .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
225,How many people live in Poland?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/populationTotal> ?population
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
226,When was the last episode of the TV series Friends aired?,"```sparql
SELECT ?date
WHERE {
  dbpedia:Friends dbpedia-owl:completionDate ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
227,Is the wife of president Obama called Michelle?,"```sparql
SELECT ?presidentName
WHERE {
  ?president a dbpedia-owl:President ;
             dbpprop:spouse ?spouse .
  ?spouse foaf:name ""Michelle Obama""@en .
  ?president foaf:name ""Barack Obama""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
229,Who is 8th president of US?,"```sparql
SELECT ?president
WHERE {
  ?president a dbpedia-owl:President ;
             dbpprop:number 8 .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
230,how much is the total population of  european union?,"```sparql
SELECT (SUM(?population) AS ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:populationTotal ?population .
  FILTER (?country IN (dbr:Austria, dbr:Belgium, dbr:Bulgaria, dbr:Croatia, dbr:Cyprus, dbr:Czech_Republic, dbr:Denmark, dbr:Estonia, dbr:Finland, dbr:France, dbr:Germany, dbr:Greece, dbr:Hungary, dbr:Ireland, dbr:Italy, dbr:Latvia, dbr:Lithuania, dbr:Luxembourg, dbr:Malta, dbr:Netherlands, dbr:Poland, dbr:Portugal, dbr:Romania, dbr:Slovakia, dbr:Slovenia, dbr:Spain, dbr:Sweden, dbr:United_Kingdom))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
231,Give me all launch pads operated by NASA.,"```sparql
SELECT ?launchPad
WHERE {
  ?launchPad rdf:type dbo:LaunchPad ;
             dbo:operator dbr:NASA .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
232,Who developed the video game World of Warcraft?,"```sparql
SELECT ?developer
WHERE {
  <http://dbpedia.org/resource/World_of_Warcraft> dbpedia-owl:developer ?developer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
233,What is the birth name of Adele?,"```sparql
SELECT ?birthName
WHERE {
  dbpedia:Adele dbpedia-owl:birthName ?birthName
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
234,What is the population of Cairo?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Cairo> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
235,Is Frank Herbert still alive?,"```sparql
SELECT ?person ?name ?birthdate ?deathdate
WHERE {
  ?person foaf:name ?name ;
          dbo:birthDate ?birthdate .
  OPTIONAL { ?person dbo:deathDate ?deathdate }
  FILTER (?name = ""Frank Herbert"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
236,What is the last work of Dan Brown?,"SELECT ?work
WHERE {
  ?author foaf:name ""Dan Brown""@en .
  ?author dbp:notableWork ?work .
}
ORDER BY DESC(?work)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
237,Where is Sungkyunkwan University?,"```sparql
SELECT ?location
WHERE {
  dbpedia:Sungkyunkwan_University dbpedia-owl:location ?location .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
238,Who is the author of the interpretation of dreams?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
       rdfs:label ""The Interpretation of Dreams""@en .
  FILTER(langMatches(lang(?author), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
239,When was the death  of  Shakespeare?,"```sparql
SELECT ?dateOfDeath
WHERE {
  <http://dbpedia.org/resource/William_Shakespeare> <http://dbpedia.org/ontology/deathDate> ?dateOfDeath
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
241,Who developed Slack?,"```sparql
SELECT ?developer
WHERE {
  dbpedia:Slack dbo:developer ?developer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
242,Where is the origin of Carolina reaper?,"```sparql
SELECT ?origin
WHERE {
  dbpedia:Carolina_Reaper dbpedia-owl:origin ?origin .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
243,In which year was Rachel Stevens born?,"```sparql
SELECT ?birthYear
WHERE {
  dbpedia:Rachel_Stevens dbo:birthDate ?birthDate .
  BIND(YEAR(?birthDate) AS ?birthYear)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
244,How often did Jane Fonda marry?,"```sparql
SELECT (COUNT(?spouse) AS ?marriageCount)
WHERE {
  dbpedia:Jane_Fonda dbpedia-owl:spouse ?spouse .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
245,Was the wife of president Lincoln called Mary?,"SELECT ?president
WHERE {
  ?president a dbpedia-owl:President ;
            dbpprop:spouse dbpedia:Mary_Todd_Lincoln .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
246,Which cities does the Weser flow through?,"```sparql
SELECT DISTINCT ?city
WHERE {
  ?river dbo:riverName ""Weser""@en .
  ?city dbo:locatedInArea ?river .
  ?city a dbo:City .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
247,In which programming language is GIMP written?,"```sparql
SELECT ?language
WHERE {
  dbpedia:GIMP dbo:programmingLanguage ?language
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
248,Which university did Angela Merkel attend?,"```sparql
SELECT ?university
WHERE {
  ?person foaf:name ""Angela Merkel""@en .
  ?person dbo:almaMater ?university .
  ?university a dbo:University .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
249,List all the musicals with music by Elton John.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:musicComposer dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
250,How many Aldi stores are there?,"```sparql
SELECT (COUNT(?store) AS ?count)
WHERE {
  ?store rdf:type dbo:RetailStore ;
         rdfs:label ""Aldi"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
251,What is the longest river in the world?,"```sparql
SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
252,When was John Adams born?,"```sparql
SELECT ?birthDate
WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthDate
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
253,Which companies produce hovercrafts?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?hovercraft dbo:manufacturer ?company .
  ?hovercraft rdf:type dbo:Hovercraft .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
254,Who was the wife of U.S. president Lincoln?,"```sparql
SELECT ?wife
WHERE {
  dbpedia:Abraham_Lincoln dbpedia-owl:spouse ?wife .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
255,Which species does an elephant belong?,"```sparql
SELECT ?species
WHERE {
  dbpedia:Elephant dct:subject ?species .
  ?species skos:broader category:Species .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
256,How many people live in the capital of Australia?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Canberra> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
257,In which ancient empire could you pay with cocoa beans?,"```sparql
SELECT ?empireLabel
WHERE {
  ?empire wdt:P31 wd:Q28171280;
          wdt:P2067 wd:Q1860.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
258,How many theories did Albert Einstein come up with?,"```sparql
SELECT (COUNT(?theory) AS ?num_theories)
WHERE {
  ?scientist a dbo:Scientist ;
             foaf:name ""Albert Einstein""@en .
  ?theory dbo:author ?scientist .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
259,Who composed the soundtrack for Cameron's Titanic?,"```sparql
SELECT ?composer
WHERE {
  ?film dbpedia-owl:director dbpedia:James_Cameron ;
        dbpedia-owl:musicComposer ?composer .
  FILTER regex(str(?film), ""Titanic"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
260,Give me the runtime of Toy Story.,"```sparql
SELECT ?runtime
WHERE {
  ?film dbpedia-owl:runtime ?runtime .
  ?film foaf:name ""Toy Story""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
262,With how many countries Iran has borders?,"```sparql
SELECT (COUNT(?country) AS ?borderCount)
WHERE {
  dbpedia:Iran dbpedia-owl:country ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
263,Which electronics companies were founded in Beijing?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company dct:subject dbc:Electronics_companies_of_China ;
           dbo:foundationPlace dbr:Beijing .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
264,Who was the successor of John F. Kennedy?,"```sparql
SELECT ?successor
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:successor ?successor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
265,Who is the mayor of Paris?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/leaderName> ?mayor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
266,Did Arnold Schwarzenegger attend a university?,"```sparql
SELECT ?university
WHERE {
  dbpedia:Arnold_Schwarzenegger dbpedia-owl:almaMater ?university .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
267,Is James Bond married?,"```sparql
SELECT ?person ?personName ?spouse
WHERE {
  ?person a dbo:Agent ;
          foaf:name ?personName ;
          dbo:spouse ?spouse .
  FILTER (?personName = ""James Bond"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
268,Does the Isar flow into a lake?,"```sparql
SELECT ?lake
WHERE {
  dbr:Isar dbo:mouth ?lake .
  ?lake a dbo:Lake .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
269,Which Indian company has the most employees?,"```sparql
SELECT ?company ?employees
WHERE {
  ?company rdf:type dbo:Company ;
          dbo:country dbr:India ;
          dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?employees)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
270,Who was John F. Kennedy's vice president?,"```sparql
SELECT ?vicePresident
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:vicePresident ?vicePresident .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
271,Which country does the creator of Miffy come from?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Miffy> <http://dbpedia.org/ontology/creator> ?creator .
  ?creator <http://dbpedia.org/ontology/country> ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
273,In what city is the Heineken brewery?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Heineken_Brewery> dbpedia-owl:location ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
274,Is Barack Obama a democrat?,"```sparql
SELECT ?president
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  ?party rdfs:label ?president .
  FILTER (lang(?president) = 'en' && ?president = 'Democratic Party')
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
275,List the children of Margaret Thatcher.,"```sparql
SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
276,From which region is the Melon de Bourgogne?,"```sparql
SELECT ?region
WHERE {
  <http://dbpedia.org/resource/Melon_de_Bourgogne> dbpedia-owl:region ?region .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
278,how big is the total area of North Rhine- Westphalia?,"```sparql
SELECT ?area
WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?area
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
279,Which city has the most inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
280,What is Donald Trump's main business?,"SELECT ?business
WHERE {
  dbpedia:Donald_Trump dbpedia-owl:occupation ?business .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
281,When will start the final match of the football world cup 2018?,"```sparql
SELECT ?date
WHERE {
  dbpedia:2018_FIFA_World_Cup dbo:startDate ?date .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
282,Which films did Stanley Kubrick direct?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
283,how much is the population  Iraq?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Iraq> <http://dbpedia.org/ontology/populationTotal> ?population
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
284,How many inhabitants does the largest city in Canada have?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Toronto> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
285,Who is the mayor of the capital of French Polynesia?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/French_Polynesia> <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://dbpedia.org/ontology/leaderName> ?mayor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
286,Give me all actors starring in movies directed by William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner ;
        dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
287,How tall is Claudia Schiffer?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Claudia_Schiffer dbpedia-owl:height ?height
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
288,how much is the population densty rank of germany?,"```sparql
SELECT ?rank
WHERE {
  dbpedia:Germany dbpedia-owl:populationDensityRank ?rank
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
289,What is the highest mountain in Italy?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Italy ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
290,List all games by GMT.,"```sparql
SELECT ?game
WHERE {
  ?game dct:publisher dbc:GMT_Games .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
291,What is the official language of Suriname?,"```
SELECT ?language
WHERE {
  dbpedia:Suriname dbpedia-owl:officialLanguage ?language .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
292,In which city did Nikos Kazantzakis die?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Nikos_Kazantzakis> <http://dbpedia.org/ontology/deathPlace> ?place .
  ?place <http://dbpedia.org/ontology/isPartOf> ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
293,What is in a chocolate chip cookie?,"```sparql
SELECT ?ingredient
WHERE {
  <http://dbpedia.org/resource/Chocolate_chip_cookie> dbpedia-owl:ingredient ?ingredient .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
294,In which country is the Limerick Lake?,"```sparql
SELECT ?country
WHERE {
  dbpedia:Limerick_Lake dbpedia-owl:country ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
295,Give me all video games published by Mean Hamster Software.,"```sparql
SELECT ?game
WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game rdf:type dbo:VideoGame .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
296,Give me all members of Prodigy.,"```sparql
SELECT ?member
WHERE {
  ?band rdf:type dbo:Band ;
        foaf:name ""The Prodigy""@en ;
        dbo:bandMember ?member .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
297,In which time zone is Rome?,"```sparql
SELECT ?timezone
WHERE {
  dbpedia:Rome dbpedia-owl:timeZone ?timezone
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
298,How high is the lighthouse in Colombo?,"```sparql
SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Colombo_Lighthouse> dbo:height ?height
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
299,Who are the writers of the Wall album of Pink Floyd?,"```sparql
SELECT ?writer
WHERE {
  ?album dbo:artist dbr:Pink_Floyd ;
        dbo:writer ?writer .
  FILTER (?album = dbr:The_Wall)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
300,Who is the mayor of Rotterdam?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Rotterdam> <http://dbpedia.org/ontology/leaderName> ?mayor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
301,What is the largest city in Australia?,"SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Australia ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
OFFSET 0",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
302,Who was married to president Chirac?,"```sparql
SELECT ?spouse
WHERE {
  <http://dbpedia.org/resource/Jacques_Chirac> dbpedia-owl:spouse ?spouse .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
303,What form of government is found in South Africa?,"```sparql
SELECT ?governmentType
WHERE {
  dbpedia:South_Africa dbpedia-owl:governmentType ?governmentType
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
304,How high is the Yokohama Marine Tower?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Yokohama_Marine_Tower dbpedia-owl:height ?height .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
305,Which holidays are celebrated around the world? test2,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
306,Who is the tallest basketball player?,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbpedia-owl:BasketballPlayer ;
          dbpprop:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
307,How many languages are spoken in Turkmenistan?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
  FILTER (?country = dbr:Turkmenistan)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
308,Did Che Guevara have children?,"```sparql
SELECT ?child
WHERE {
  dbpedia:Che_Guevara dbpedia-owl:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"```sparql
SELECT ?film
WHERE {
  ?film dbpedia-owl:director dbr:Aki_Kaurismäki ;
        dbpprop:award dbr:Cannes_Film_Festival_Grand_Prix .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
310,To which party does the mayor of Paris belong?,"```sparql
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Mayor_of_Paris> dbpedia-owl:party ?party .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
311,Who is the Formula 1 race driver with the most races?,"```sparql
SELECT ?driver ?name (COUNT(?race) AS ?numRaces)
WHERE {
  ?driver a dbpedia-owl:FormulaOneRacer ;
          foaf:name ?name ;
          dbpedia-owl:races ?race .
}
GROUP BY ?driver ?name
ORDER BY DESC(?numRaces)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
312,What country is Sitecore from?,"```sparql
SELECT ?country
WHERE {
  dbpedia:Sitecore dbo:country ?country .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
313,Give me the birth place of Frank Sinatra.,"```sparql
SELECT ?birthPlace
WHERE {
  dbpedia:Frank_Sinatra dbpedia-owl:birthPlace ?birthPlace .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
314,Is Christian Bale starring in Velvet Goldmine?,"```sparql
SELECT ?actor
WHERE {
  ?film dbpedia-owl:starring ?actor .
  ?film dbpedia-owl:wikiPageID  =  1010734 .
  ?actor dbpedia-owl:wikiPageID  =  1167 .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
315,Who is the son of Sonny and Cher?,"```sparql
SELECT ?son
WHERE {
  ?son dbo:parent dbr:Sonny_and_Cher .
  ?son rdf:type dbo:Person .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
316,How many ethnic groups live in Slovenia?,"```sparql
SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  <http://dbpedia.org/resource/Slovenia> dbpedia-owl:ethnicGroups ?ethnicGroup .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
317,What is the capital of Cameroon?,"```sparql
SELECT ?capital
WHERE {
  <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?capital .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
318,Was Natalie Portman born in the United States?,"SELECT ?person ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Natalie Portman""@en ;
          dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              foaf:name ""United States""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
319,How many pages does War and Peace have?,"```sparql
SELECT ?pages
WHERE {
  dbpedia:War_and_Peace dbpedia:numberOfPages ?pages
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
320,Who is the oldest child of Meryl Streep?,"```sparql
SELECT ?child WHERE {
  dbpedia:Meryl_Streep dbpedia-owl:child ?child .
  ?child a dbpedia-owl:Person .
} ORDER BY ?child
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
321,Which television shows were created by Walt Disney?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
322,What does IYCM stand for?,"```sparql
SELECT ?definition
WHERE {
  dbpedia:IYCM dbo:wikiPageRedirects ?page .
  ?page rdfs:comment ?definition .
  FILTER (lang(?definition) = 'en')
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
323,Which types of grapes grow in Oregon?,"```sparql
SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType dbo:region dbr:Oregon .
  ?grapeType rdf:type dbo:Grape .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
324,Was U.S. president Jackson involved in a war?,"```sparql
SELECT ?war
WHERE {
  dbpedia:Andrew_Jackson dct:subject ?war .
  ?war dct:subject dbc:Wars_involving_the_United_States .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
325,When was the Titanic completed?,"SELECT ?completionDate
WHERE {
  <http://dbpedia.org/resource/RMS_Titanic> <http://dbpedia.org/property/completionDate> ?completionDate
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
326,Did Tesla win a nobel prize in physics?,"```sparql
SELECT ?scientist ?prize
WHERE {
  ?scientist foaf:name ""Nikola Tesla""@en .
  ?scientist dbp:nobelPrizes ?prize .
  FILTER regex(?prize, ""Physics"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
327,How many states are in Mexico?,"```sparql
SELECT (COUNT(?state) AS ?count)
WHERE {
  ?state a dbo:State ;
         dbo:country dbr:Mexico .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist
WHERE {
  ?scientist dbpedia-owl:award dbpedia:Nobel_Peace_Prize ;
            dbpedia-owl:knownFor dbpedia:Manhattan_Project .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
329,How much did the Lego Movie cost?,"```sparql
SELECT ?movie ?budget
WHERE {
  ?movie rdf:type dbo:Film ;
         rdfs:label ""The Lego Movie""@en ;
         dbo:budget ?budget .
}
```
",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
330,Who composed the music for Harold and Maude?,"```sparql
SELECT ?composer
WHERE {
  ?film dbo:director dbr:Harold_and_Maude ;
       dbo:musicComposer ?composer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
331,List all episodes of the first season of the HBO television series The Sopranos.,"```sparql
SELECT ?episode ?title
WHERE {
  ?season dbo:series dbr:The_Sopranos ;
          dbo:numberOfSeasons ""6""^^xsd:integer .
  ?episode dbo:season ?season ;
           rdf:type dbo:TelevisionEpisode ;
           foaf:name ?title .
  FILTER (?season = 1)
}
ORDER BY ?episode
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
332,Which city has the least inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
333,Where is Syngman Rhee buried?,"```sparql
SELECT ?burialPlace
WHERE {
  dbpedia:Syngman_Rhee dbpedia-owl:burialPlace ?burialPlace .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
334,Does Neymar play for Real Madrid?,"```sparql
SELECT ?player
WHERE {
  ?player rdf:type dbo:SoccerPlayer ;
          foaf:name ""Neymar"" ;
          dbo:team ?team .
  ?team rdf:type dbo:SportsTeam ;
        foaf:name ""Real Madrid"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
335,Who wrote the book The Pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
       rdfs:label ""The Pillars of the Earth""@en .
  FILTER(LANG(?author) = ""en"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
336,Do Prince Harry and Prince William have the same parents?,"```sparql
SELECT ?parent
WHERE {
  dbpedia:Prince_Harry dbo:parent ?parent .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?supervisor 
WHERE {
  dbpedia:Albert_Einstein dbpedia-owl:doctoralAdvisor ?supervisor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
338,Does Breaking Bad have more episodes than Game of Thrones?,"```sparql
SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes
WHERE {
  dbpedia:Breaking_Bad dbo:numberOfEpisodes ?breakingBadEpisodes .
  dbpedia:Game_of_Thrones dbo:numberOfEpisodes ?gameOfThronesEpisodes .
  FILTER (?breakingBadEpisodes > ?gameOfThronesEpisodes)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
339,Who was Vincent van Gogh inspired by?,"```sparql
SELECT DISTINCT ?inspiration
WHERE {
  ?artist dbo:influencedBy dbr:Vincent_van_Gogh ;
          rdfs:label ?inspiration .
  FILTER (lang(?inspiration) = 'en')
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
340,Which building after the Burj Khalifa has the most floors?,"```sparql
SELECT ?building ?floors
WHERE {
  ?building dbp:buildingType dbr:Skyscraper ;
           dbp:floors ?floors .
  FILTER (?floors > 163)
}
ORDER BY DESC(?floors)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
341,What was the final result of the War of the Roses?,"```sparql
SELECT ?result
WHERE {
  dbpedia:War_of_the_Roses dbpedia-owl:result ?result .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
342,How much did Pulp Fiction cost?,"```sparql
SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        rdfs:label ""Pulp Fiction""@en ;
        dbo:budget ?budget .
}
```
",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
343,Is proinsulin a protein?,"```sparql
SELECT ?protein
WHERE {
  ?protein rdf:type dbo:Protein ;
           rdfs:label ""proinsulin""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
344,Do Urdu and Persian have a common root?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?language1 ?language2
WHERE {
  ?language1 dct:subject <http://dbpedia.org/resource/Category:Urdu_language> .
  ?language2 dct:subject <http://dbpedia.org/resource/Category:Persian_language> .
  FILTER (?language1 != ?language2)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
345,Who is starring in Spanish movies produced by Benicio del Toro?,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbp:producer dbr:Benicio_del_Toro ;
         dct:subject dbc:Spanish_films .
  ?movie dbp:starring ?actor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?lake ?area
WHERE {
  ?lake a dbo:Lake ;
        dbo:area ?area ;
        rdfs:label ""Lake Baikal""@en
} UNION {
  ?lake a dbo:Lake ;
        dbo:area ?area ;
        rdfs:label ""Great Bear Lake""@en
}
ORDER BY DESC(?area)
LIMIT 2",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
347,Show me all books in Asimov's Foundation series.,"```sparql
SELECT ?book
WHERE {
  ?book dct:subject dbc:Foundation_series_books .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
348,Where was Bach born?,"```sparql
SELECT ?birthPlace
WHERE {
  <http://dbpedia.org/resource/Johann_Sebastian_Bach> dbpedia-owl:birthPlace ?birthPlace .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
349,Which city has the oldest running metro?,"```sparql
SELECT ?city ?metroLine ?openingYear
WHERE {
  ?city a dbo:City ;
        dbo:metroSystem ?metroSystem .
  ?metroSystem dbo:metroLine ?metroLine ;
               dbo:openingYear ?openingYear .
}
ORDER BY ?openingYear
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
350,Who designed the Brooklyn Bridge?,"SELECT ?designer
WHERE {
  dbpedia:Brooklyn_Bridge dbpedia-owl:architect ?designer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
351,How many people live in Eurasia?,"```sparql
SELECT (SUM(?population) AS ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:populationTotal ?population ;
           dbo:continent dbr:Eurasia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
352,Who is the host of the BBC Wildlife Specials?,"```sparql
SELECT ?host
WHERE {
  ?wildlifeSpecials dbo:producer dbr:BBC.
  ?wildlifeSpecials dbo:starring ?host.
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
353,"What is the total population of Melbourne, Florida?","```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Melbourne,_Florida> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
354,What country is Mount Everest in?,"SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Mount_Everest> dbpedia-owl:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
355,To which artistic movement did the painter of The Three Dancers belong?,"```sparql
SELECT ?movementLabel
WHERE {
  <http://dbpedia.org/resource/The_Three_Dancers> dbpedia-owl:author ?painter .
  ?painter dbpedia-owl:movement ?movement .
  ?movement rdfs:label ?movementLabel .
  FILTER(LANG(?movementLabel) = """" || LANGMATCHES(LANG(?movementLabel), ""en""))
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
356,When did Operation Overlord commence?,"```sparql
SELECT ?date
WHERE {
  dbr:Operation_Overlord dbo:startDate ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
357,What is the bridge with the longest span?,"```sparql
SELECT ?bridge ?span
WHERE {
  ?bridge rdf:type dbo:Bridge ;
          dbo:longestSpan ?span .
}
ORDER BY DESC(?span)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
358,Is there a video game called Battle Chess?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
359,Who was buried in the Great Pyramid of Giza?,"```sparql
SELECT ?person
WHERE {
  <http://dbpedia.org/resource/Great_Pyramid_of_Giza> <http://dbpedia.org/ontology/burial> ?person .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"SELECT ?plant
WHERE {
  dbpedia:Ford_Motor_Company dbpedia-owl:subsidiary ?subsidiary .
  ?subsidiary dbpedia-owl:location dbpedia:Malaysia .
  ?subsidiary dbpedia-owl:industry dbpedia:Manufacturing .
  ?subsidiary dbpedia-owl:product ?plant .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
361,Did Socrates influence Aristotle?,"SELECT ?influencedBy
WHERE {
  dbpedia:Socrates dbpedia-owl:influenced ?influencedBy .
  FILTER (?influencedBy = dbpedia:Aristotle)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
362,How many children did Benjamin Franklin have?,"```sparql
SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Benjamin_Franklin> dbpedia-owl:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
363,How tall is Michael Jordan?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Michael_Jordan dbpedia-owl:height ?height .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
364,In which UK city are the headquarters of the MI6?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/MI6> <http://dbpedia.org/property/headquarters> ?hq .
  ?hq <http://dbpedia.org/ontology/city> ?city .
  ?city <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
365,Who created Family Guy?,"SELECT ?creator
WHERE {
  dbpedia:Family_Guy dbpedia-owl:creator ?creator .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
366,In which city does the Chile Route 68 end?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Chile_Route_68> <http://dbpedia.org/property/end> ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
367,Give me the grandchildren of Elvis Presley.,"```sparql
SELECT DISTINCT ?grandchild
WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
368,When did the Ming dynasty dissolve?,"```sparql
SELECT ?date
WHERE {
  dbpedia:Ming_Dynasty dbo:disestablished ?date
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
369,In which military conflicts did Lawrence of Arabia participate?,"```sparql
SELECT ?conflict
WHERE {
  ?lawrence dbo:activeYearsStartYear ?startYear .
  ?lawrence dbo:activeYearsEndYear ?endYear .
  ?lawrence dbo:militaryCommand ?conflict .
  FILTER (?startYear <= 1918 && ?endYear >= 1918)
  FILTER regex(str(?lawrence), ""Lawrence_of_Arabia"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
370,What is the timezone in San Pedro de Atacama?,"```sparql
SELECT ?timezone
WHERE {
  dbpedia:San_Pedro_de_Atacama dbpedia-owl:timezone ?timezone .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
371,Give me all books by William Goldman with more than 300 pages.,"```sparql
SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:William_Goldman ;
        dbo:numberOfPages ?pages .
  FILTER (?pages > 300)
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
372,What did Bruce Carver die from?,"```sparql
SELECT ?causeOfDeath
WHERE {
  dbpedia:Bruce_Carver dbo:causeOfDeath ?causeOfDeath .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"```sparql
SELECT ?subsidary
WHERE {
  ?subsidary dbo:parentCompany dbr:Lufthansa ;
             dbo:hub dbr:Dortmund_Airport, dbr:Berlin_Tegel_Airport .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
374,Does Abraham Lincoln's death place have a website?,"```sparql
SELECT ?website
WHERE {
  dbpedia:Abraham_Lincoln dbpedia-owl:deathPlace ?deathPlace .
  ?deathPlace foaf:isPrimaryTopicOf ?website .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
375,Did Elvis Presley have children?,"```sparql
SELECT ?child
WHERE {
  dbpedia:Elvis_Presley dbpedia-owl:child ?child .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
376,Is Michelle Obama the wife of Barack Obama?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Michelle_Obama dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Barack_Obama)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
377,In which city does Sylvester Stallone live?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Sylvester_Stallone> <http://dbpedia.org/property/residence> ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
378,Which books by Kerouac were published by Viking Press?,"```sparql
SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:Jack_Kerouac ;
        dbo:publisher dbr:Viking_Press .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
379,Who wrote the song Hotel California?,"```sparql
SELECT ?artist
WHERE {
  ?song dbo:artist ?artist ;
       rdfs:label ""Hotel California""@en .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
380,What is the capital of Canada?,"```sparql
SELECT ?capital
WHERE {
  <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?capital .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
381,Who is the mayor of Tel Aviv?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Tel_Aviv> <http://dbpedia.org/ontology/leaderName> ?mayor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
382,What form of government does Russia have?,"```sparql
SELECT ?governmentType
WHERE {
  dbpedia:Russia dbpedia-owl:governmentType ?governmentType
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:Muhammad_Ali .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
384,Who was the first to climb Mount Everest?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:mountEverestAscents ?ascent .
  ?ascent dbo:firstAscent ""true"" .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
385,How many languages are spoken in Colombia?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:Language ;
           dbo:country dbr:Colombia .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
386,What is the currency of the Czech Republic?,"```sparql
SELECT ?currencyLabel
WHERE {
  <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER(LANG(?currencyLabel) = 'en')
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
387,Where in France is sparkling wine produced?,"```sparql
SELECT DISTINCT ?region
WHERE {
  ?wine a dbo:SparklingWine ;
        dbo:country dbr:France ;
        dbo:region ?region .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
388,When did Boris Becker end his active career?,"```sparql
SELECT ?endDate
WHERE {
  dbpedia:Boris_Becker dbpedia-owl:activeYearsEndDate ?endDate
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke ;
        dbo:director dbr:Guy_Ritchie .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
390,In which films did Julia Roberts as well as Richard Gere play?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
391,Show me Hemingway's autobiography.,"```sparql
SELECT ?autobiography
WHERE {
  ?person foaf:name ""Ernest Hemingway""@en .
  ?person dbp:notableWork ?autobiography .
  FILTER regex(?autobiography, ""autobiography"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
392,How tall is Amazon Eve?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Amazon_Eve dbpedia-owl:height ?height .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
393,What are the five boroughs of New York?,"```sparql
SELECT ?borough
WHERE {
  ?borough dct:subject dbc:Boroughs_of_New_York_City .
}
LIMIT 5
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
394,Give me all Canadian Grunge record labels.,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?label a <http://dbpedia.org/ontology/RecordLabel> ;
         <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> ;
         <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Grunge> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
395,In which country does the Ganges start?,"SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Ganges> dbpedia-owl:origin ?startPoint .
  ?startPoint dbpedia-owl:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
396,Who is the founder of Penguin Books?,"```sparql
SELECT ?founder
WHERE {
  dbpedia:Penguin_Books dbpedia-owl:founder ?founder .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
397,Who wrote the Game of Thrones theme?,"```sparql
SELECT ?composer
WHERE {
  ?gameOfThrones dbo:musicComposer ?composer .
  FILTER regex(?composer, ""Game of Thrones theme"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
398,Who is the president of Eritrea?,"```sparql
SELECT ?president
WHERE {
  <http://dbpedia.org/resource/Eritrea> <http://dbpedia.org/ontology/president> ?president .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
399,In which city did John F. Kennedy die?,"```sparql
SELECT ?city
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:deathPlace ?place .
  ?place dbpedia-owl:city ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
400,What is the highest mountain in Australia?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Australia ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
401,Who writes the Farmers' Almanac?,"```sparql
SELECT ?author
WHERE {
  ?farmersAlmanac dbpedia-owl:author ?author .
  FILTER regex(?farmersAlmanac, ""Farmers'_Almanac"", ""i"")
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
402,Give me the currency of China.,"```sparql
SELECT ?currencyLabel
WHERE {
  <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER(LANG(?currencyLabel) = 'en')
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
403,Give me all Swedish oceanographers.,"```sparql
SELECT DISTINCT ?oceanographer
WHERE {
  ?oceanographer a <http://dbpedia.org/ontology/Oceanographer> ;
                 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Sweden> .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
404,In which city are the headquarters of the United Nations?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/United_Nations> dbpedia-owl:headquarter ?hq .
  ?hq dbpedia-owl:city ?city .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
405,Is Rita Wilson the wife of Tom Hanks?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Rita_Wilson dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Tom_Hanks)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
406,In which countries do people speak Japanese?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbpedia-owl:language dbpedia:Japanese_language .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
407,Which of Tim Burton's films had the highest budget?,"```sparql
SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
408,Which museum in New York has the most visitors?,"```sparql
SELECT ?museum ?visitors
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:New_York_City ;
          dbo:numberOfVisitors ?visitors .
}
ORDER BY DESC(?visitors)
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
409,What was the first Queen album?,"```sparql
SELECT ?album
WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Queen .
}
ORDER BY ?album
LIMIT 1
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
410,What was the first name of the band Queens of the Stone Age?,"```sparql
SELECT ?bandName
WHERE {
  ?band rdf:type dbo:Band ;
       foaf:name ""Queens of the Stone Age""@en ;
       dbo:bandMember ?member .
  ?member foaf:givenName ?bandName .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
411,What was the last movie with Alec Guinness?,"SELECT ?movie ?releaseDate
WHERE {
  ?movie rdf:type dbo:Film ;
         dbo:starring dbr:Alec_Guinness ;
         dbo:releaseDate ?releaseDate .
}
ORDER BY DESC(?releaseDate)
LIMIT 1
OFFSET 0",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
412,Give me all actors starring in Last Action Hero.,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor ;
       rdfs:label ""Last Action Hero""@en .
  ?actor a dbo:Actor .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
413,Who discovered Pluto?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discoverer .
}
```",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
1,List all boardgames by GMT.,"```sparql
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?game
WHERE {
    ?game dct:subject <http://dbpedia.org/resource/Category:GMT_Games_games> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
2,Who developed Skype?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?developer
WHERE {
    ?skype dbo:developer ?developer .
    FILTER regex(str(?skype), ""Skype"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
3,Which people were born in Heraklion?,"SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
4,In which U.S. state is Area 51 located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state
WHERE {
  dbr:Area_51 dbo:location ?location .
  ?location dbo:location ?state .
  ?state dbo:country dbr:United_States
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
5,Who is the mayor of New York City?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?mayor
WHERE {
  dbpedia:New_York_City dbpedia-owl:mayor ?mayor
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
6,Which countries have places with more than two caves?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?country
WHERE {
  ?place a dbo:Place ;
         dbo:location ?country ;
         dbo:numberOfCaves ?numCaves .
  FILTER (?numCaves > 2)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
7,Where did Abraham Lincoln die?,"SELECT ?placeOfDeath WHERE {
  dbpedia:Abraham_Lincoln dbo:deathPlace ?placeOfDeath
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
8,Which airports does Air China serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport
WHERE {
  ?airline dbo:operates ?route.
  ?route dbo:arrivalAirport ?airport.
  FILTER regex(str(?airline), ""Air_China"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
9,Give me all actors starring in movies directed by and starring William Shatner.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor ;
         dbo:director dbr:William_Shatner ;
         dbo:starring dbr:William_Shatner .
  ?actor a dbo:Actor .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
10,What are the official languages of the Philippines?,"SELECT ?language
WHERE {
  <http://dbpedia.org/resource/Philippines> <http://dbpedia.org/ontology/officialLanguage> ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
11,Give me all Danish films.,"SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dct:subject dbc:Danish_films .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Brad_Pitt ;
         dbo:director dbr:Guy_Ritchie .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
13,Give me the grandchildren of Bruce Lee.,"```sparql
SELECT ?grandchild
WHERE {
  dbr:Bruce_Lee dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
14,Which other weapons did the designer of the Uzi develop?,"SELECT ?weapon
WHERE {
  <http://dbpedia.org/resource/Uzi> <http://dbpedia.org/ontology/designer> ?designer .
  ?designer <http://dbpedia.org/ontology/knownFor> ?weapon .
  FILTER (?weapon != <http://dbpedia.org/resource/Uzi>)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
15,Who is the owner of Universal Studios?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Universal_Studios> dbo:owner ?owner
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
16,Which state of the USA has the highest population density?,"SELECT ?state WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?density .
} ORDER BY DESC(?density) LIMIT 1.","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
17,Which monarchs were married to a German?,"SELECT DISTINCT ?monarch
WHERE {
  ?monarch a dbo:Monarch ;
           dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
18,Which organizations were founded in 1950?,"SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:formationYear 1950.
  ?organization rdf:type dbo:Organisation.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
19,Who created the comic Captain America?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?creator
WHERE {
    ?comic dbo:creator ?creator .
    ?comic dbo:wikiPageRedirects <http://dbpedia.org/resource/Captain_America> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
20,Give me the Apollo 14 astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?astronaut
WHERE {
  ?astronaut dbo:mission <http://dbpedia.org/resource/Apollo_14> ;
             dbo:occupation <http://dbpedia.org/resource/Astronaut> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
21,Who wrote the book The pillars of the Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Pillars of the Earth""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
22,Which state of the United States of America has the highest density?,"SELECT ?state
WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?density .
}
ORDER BY DESC(?density)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
23,Which spaceflights were launched from Baikonur?,"SELECT ?spaceflight
WHERE {
  ?spaceflight dbp:launchSite dbr:Baikonur_Cosmodrome .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
24,Give me a list of all trumpet players that were bandleaders.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musician
WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:instrument dbr:Trumpet ;
            dbo:bandMember ?band ;
            dbo:occupation dbr:Bandleader .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
25,Which U.S. states are in the same timezone as Utah?,"SELECT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timezone .
  ?state dbpedia-owl:timeZone ?timezone .
  FILTER (?state != dbpedia:Utah)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
26,Which U.S. states possess gold minerals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?state
WHERE {
  ?state dbo:location dbr:United_States ;
        dbo:goldMine ?goldMine .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
27,Who is the daughter of Ingrid Bergman married to?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  dbpedia:Ingrid_Bergman dbpedia2:children ?child .
  ?child dbpedia2:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
28,How deep is Lake Placid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?depth
WHERE {
  <http://dbpedia.org/resource/Lake_Placid> dbo:maxDepth ?depth
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
29,Show me all museums in London.,"SELECT ?museum
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:London .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
30,Which caves have more than 3 entrances?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?cave
WHERE {
  ?cave a dbo:Cave ;
        dbo:numberOfEntrances ?numEntrances .
  FILTER (?numEntrances > 3)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
31,Who is the tallest player of the Atlanta Falcons?,"SELECT ?player ?height
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
         dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
32,What are the top-10 action role-playing video games according to IGN?,"SELECT ?game ?rank
WHERE {
  ?game rdf:type dbo:VideoGame ;
        dbo:genre dbr:Action_role-playing_video_game ;
        dbo:IGNRank ?rank .
}
ORDER BY DESC(?rank)
LIMIT 10","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?writer
WHERE {
    ?writer a dbo:Writer ;
            dbo:award dbr:Nobel_Prize_in_Literature .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
34,Show me all basketball players that are higher than 2 meters.,"SELECT ?player
WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
  FILTER (?height > 2)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
35,When was the Statue of Liberty built?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?date
WHERE {
    <http://dbpedia.org/resource/Statue_of_Liberty> dbp:beginningDate ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
36,Which states border Illinois?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state
WHERE {
  dbr:Illinois dbo:state dbr:Illinois .
  dbr:Illinois dbo:border ?state .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
37,Who developed Minecraft?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?developer
WHERE {
    ?game dbo:developer ?developer ;
         dbp:name ""Minecraft""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
38,Where did Hillel Slovak die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?placeOfDeath
WHERE {
  <http://dbpedia.org/resource/Hillel_Slovak> dbo:placeOfDeath ?placeOfDeath
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
39,What movies does Jesse Eisenberg play in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
40,Give all swimmers that were born in Moscow.,"```sparql
SELECT ?swimmer
WHERE {
  ?swimmer a dbo:Swimmer ;
           dbo:birthPlace dbr:Moscow .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
41,Give me all cosmonauts.,"```sparql
SELECT ?cosmonaut
WHERE {
  ?cosmonaut a <http://dbpedia.org/ontology/Cosmonaut> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
42,Give me all Swiss non-profit organizations.,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:NonprofitOrganisation ;
               dct:subject dbc:Non-profit_organizations_based_in_Switzerland .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
43,Which presidents were born in 1945?,"SELECT ?president
WHERE {
  ?president a dbpedia-owl:President ;
            dbpedia-owl:birthDate ?birthdate .
  FILTER (regex(str(?birthdate), ""1945""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
44,What kind of music did Lou Reed play?,"SELECT ?genre
WHERE {
  dbpedia:Lou_Reed dbpedia-owl:genre ?genre
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
45,Where do the Red Sox play?,"SELECT ?stadium WHERE {
  dbpedia:Boston_Red_Sox dbpedia-owl:ground ?stadium
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
46,Show a list of soccer clubs that play in the Bundesliga.,"```sparql
SELECT ?club
WHERE {
  ?club rdf:type dbo:SoccerClub .
  ?club dbo:league ?league .
  ?league rdfs:label ""Bundesliga""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
47,Which volcanos in Japan erupted since 2000?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:country dbr:Japan ;
           dbo:eruptionDate ?date .
  FILTER (YEAR(?date) >= 2000)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
48,Which bridges cross the Seine?,"```sparql
SELECT ?bridge
WHERE {
  ?bridge rdf:type dbo:Bridge ;
          dbo:crosses dbr:Seine .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
49,What is the official color of the University of Oxford?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?color
WHERE {
  <http://dbpedia.org/resource/University_of_Oxford> dbo:officialSchoolColour ?color
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
50,How many films did Hal Roach produce?,"SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
51,Give me all Danish movies.,"```sparql
SELECT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dbp:country ""Denmark""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
  ?person dbo:deathCause ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
53,Who are the four youngest MVP basketball players?,"SELECT ?player ?age
WHERE {
  ?player dbp:awardTitle ""NBA Most Valuable Player"" .
  ?player dbp:awardAge ?age .
}
ORDER BY ASC(?age)
LIMIT 4","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
54,Give me all companies in Munich.,"```sparql
SELECT ?company
WHERE {
  ?company rdf:type dbo:Company ;
          dbo:location dbr:Munich .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
55,Give me the capitals of all countries that the Himalayas run through.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?capital
WHERE {
  ?country dbo:location ?location .
  ?country dbo:capital ?capitalResource .
  ?capitalResource dbo:location ?location .
  ?location dbo:locatedInArea dbr:Himalayas .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
56,How many movies did Park Chan-wook direct?,"SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Park_Chan-wook .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
57,Which rivers flow into a German lake?,"```sparql
SELECT DISTINCT ?river
WHERE {
  ?river dbo:mouth ?lake .
  ?lake dbo:country dbr:Germany .
  ?river rdf:type dbo:River .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
59,Give me all islands that belong to Japan.,"SELECT ?island
WHERE {
  ?island rdf:type dbo:Island .
  ?island dbo:country dbr:Japan .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
60,How many inhabitants does Maribor have?,"SELECT ?population WHERE {
  <http://dbpedia.org/resource/Maribor> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
61,Give me all Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut rdf:type dbo:Person .
  ?astronaut dbo:team ?team .
  ?team rdf:type dbo:Astronaut .
  ?team dbo:mission <http://dbpedia.org/resource/Apollo_14> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
62,Which companies have more than 1 million employees?,"SELECT ?company
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film
WHERE {
  ?film dbo:director dbr:Garry_Marshall ;
        dbo:starring dbr:Julia_Roberts .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
64,Give me all soccer clubs in the Premier League.,"```sparql
SELECT ?club
WHERE {
  ?club rdf:type dbo:SoccerClub .
  ?club dbo:league ?league .
  ?league rdfs:label ""Premier League""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
65,What is the highest place of the Urals?,"SELECT ?place WHERE {
  ?place dct:subject dbc:Mountains_of_Russia ;
                 dbo:locatedInArea dbr:Ural_Mountains ;
                 dbo:elevation ?elevation .
} ORDER BY DESC(?elevation)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
66,Who is the governor of Wyoming?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor
WHERE {
  dbr:Wyoming dbo:governor ?governor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
67,Where did the architect of the Eiffel Tower study?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university
WHERE {
  <http://dbpedia.org/resource/Gustave_Eiffel> dbo:almaMater ?university
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
68,Give me all world heritage sites designated within the past two years.,"SELECT ?site
WHERE {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dct:subject dbc:World_Heritage_Sites_by_year_of_designation dbc:World_Heritage_Sites_designated_in_2015 .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
69,Give me all actors who were born in Paris after 1950.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Paris ;
         dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) > 1950)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
70,Which movies star both Liz Taylor and Richard Burton?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
71,Give me all Australian nonprofit organizations.,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:NonprofitOrganisation .
  ?organization dct:subject dbc:Non-profit_organisations_based_in_Australia .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
72,Which pope succeeded John Paul II?,"SELECT ?successor WHERE {
  dbr:Pope_John_Paul_II dbo:successor ?successor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
73,Give me all ESA astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut a <http://dbpedia.org/ontology/Astronaut> .
  ?astronaut <http://dbpedia.org/ontology/agency> <http://dbpedia.org/resource/European_Space_Agency> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
74,Who was president of Pakistan in 1978?,"SELECT ?president
WHERE {
  ?president dbo:office ?office .
  ?office rdfs:label ""President of Pakistan"" .
  ?president dbo:officeStartDate ?start .
  ?president dbo:officeEndDate ?end .
  FILTER (?start <= ""1978-01-01""^^xsd:date && ?end >= ""1978-12-31""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
75,Who is the owner of Rolls-Royce?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Rolls-Royce_Limited> dbo:owner ?owner
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
76,How many museums does Paris have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:Paris .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
77,Where was JFK assassinated?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?place
WHERE {
  dbr:Assassination_of_John_F._Kennedy dbo:location ?place
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
78,Give me all federal chancellors of Germany.,"```sparql
SELECT ?chancellor ?startDate ?endDate
WHERE {
  ?chancellor a dbpedia-owl:Chancellor ;
              dbpprop:title ""Federal Chancellor of Germany""@en ;
              dbpprop:order ?order ;
              dbpprop:startDate ?startDate .
  OPTIONAL { ?chancellor dbpprop:endDate ?endDate }
}
ORDER BY ?startDate
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
79,Show me everyone who was born on Halloween.,"SELECT ?person
WHERE {
  ?person dbo:birthDate ""31-10"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
80,Which beer originated in Ireland?,"SELECT ?beer
WHERE {
  ?beer dbo:origin ?country .
  FILTER (?country = dbr:Ireland)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
81,To which countries does the Himalayan mountain system extend?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  ?himalayas dbo:location ?country .
  ?himalayas dbo:mountainRange dbr:Himalayas .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
82,Which actors were born in Germany?,"SELECT ?actor
WHERE {
  ?actor a <http://dbpedia.org/ontology/Actor> ;
         <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
83,How much carbs does peanut butter have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?carbsAmount
WHERE {
  ?peanutButter dbo:abstract ?abstract .
  FILTER (CONTAINS(?abstract, ""peanut butter"") && CONTAINS(?abstract, ""carbs""))
  ?peanutButter dbo:carbohydrate ?carbsAmount .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:producer ?producer .
}
GROUP BY ?producer
ORDER BY DESC(?numFilms)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
85,How many employees does Google have?,"SELECT ?employees
WHERE {
  <http://dbpedia.org/resource/Google> <http://dbpedia.org/property/employees> ?employees
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
86,Give me all actors who were born in Berlin.,"SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Berlin .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
87,Who created Goofy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?creator
WHERE {
    ?character dbo:creator ?creator .
    ?character foaf:name ""Goofy""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
88,Which music albums contain the song Last Christmas?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?album
WHERE {
  ?album dbo:musicalArtist ?artist .
  ?album dbo:song ?song .
  ?song dbp:title ""Last Christmas""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
89,When was Alberta admitted as province?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?date
WHERE {
  dbr:Alberta dbo:formationDate ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
90,How many missions does the Soyuz programme have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?mission) AS ?count)
WHERE {
    ?program dbo:programmeName ""Soyuz programme""@en .
    ?mission dbo:spacecraft ?program .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
91,Give me all the TV shows with Neil Patrick Harris.,"SELECT DISTINCT ?tvShow
WHERE {
  ?tvShow dbo:starring dbr:Neil_Patrick_Harris .
  ?tvShow rdf:type dbo:TelevisionShow .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
92,When were the Hells Angels founded?,"SELECT ?dateFounded
WHERE {
  dbr:Hells_Angels dbo:formationDate ?dateFounded
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
93,What is the net income of Apple?,"SELECT ?netIncome
WHERE {
  dbpedia:Apple_Inc dbpedia-owl:netIncome ?netIncome
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
94,Give me all Swedish holidays.,"```sparql
SELECT ?holiday
WHERE {
  ?holiday rdf:type dbo:Holiday .
  ?holiday dct:subject dbc:Holidays_in_Sweden .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
95,In which city was the former Dutch queen Juliana buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city
WHERE {
  dbr:Juliana_of_the_Netherlands dbo:burialPlace ?place.
  ?place dbo:location ?city.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
96,List all the musicals with music by Leonard Bernstein.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:composer dbr:Leonard_Bernstein .
  ?musical dbo:genre dbr:Musical_theatre .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
97,Give me all companies in the advertising industry.,"SELECT DISTINCT ?company
WHERE {
  ?company rdf:type dbo:Company .
  ?company dct:subject dbc:Advertising_companies .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
98,What is the largest metropolitan area in Washington state?,"SELECT ?metropolitanArea ?population
WHERE {
  ?metropolitanArea rdf:type dbo:City ;
                   dbo:country dbr:United_States ;
                   dbo:state dbr:Washington ;
                   dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
99,Who killed John Lennon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?killer
WHERE {
  dbo:John_Lennon dbo:deathCause ?deathCause .
  ?deathCause dbo:perpetrator ?killer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
100,Which writers studied in Istanbul?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?writer
WHERE {
  ?writer dct:subject dbc:Writers_who_studied_in_Istanbul .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
101,Give me all Australian metalcore bands.,"```sparql
SELECT DISTINCT ?band
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:genre dbr:Metalcore ;
        dbo:origin dbr:Australia .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
102,Which countries adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  ?country dbo:currency dbr:Euro
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
103,Give me all types of eating disorders.,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?eatingDisorder
WHERE {
    ?eatingDisorder a dbo:EatingDisorder
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
104,Was Marc Chagall a jew?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  dbr:Marc_Chagall dbo:religion dbr:Judaism .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT ?rank
WHERE {
  dbpedia:Brazil dbp:lowestFifaRank ?rank
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
106,How many films did Leonardo DiCaprio star in?,"SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
  ?film rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
107,Was Margaret Thatcher a chemist?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  dbr:Margaret_Thatcher dbo:profession ?person .
  FILTER (?person = ""Chemist"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
108,Which U.S. states are in the same time zone as Utah?,"```sparql
SELECT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timeZone .
  ?state dbpedia-owl:timeZone ?timeZone .
  FILTER (?state != dbpedia:Utah)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
109,Give me all books written by Danielle Steel.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book
WHERE {
  ?book dbo:author dbr:Danielle_Steel .
  ?book a dbo:Book .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
110,Which country has the most official languages?,"SELECT ?country WHERE {
  ?country a dbo:Country ;
           dbo:numberOfOfficialLanguages ?numLanguages .
} ORDER BY DESC(?numLanguages) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
111,What is the total amount of men and women serving in the FDNY?,"SELECT (COUNT(?person) AS ?total) WHERE {
  ?person a dbo:Person ;
          dbo:occupation dbr:Firefighter ;
          dbo:employer dbr:New_York_City_Fire_Department .
  ?person dbo:gender ?gender .
  FILTER (?gender = ""male"" || ?gender = ""female"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
112,Which actor played Chewbacca?,"SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film dbo:abstract ?abstract .
  FILTER regex(?abstract, ""Chewbacca"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
113,Give me all libraries established earlier than 1400.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?library
WHERE {
  ?library a dbo:Library ;
           dbo:established ?date .
  FILTER (?date < ""1400-01-01""^^xsd:date)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
114,Which programming languages were influenced by Perl?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?language
WHERE {
    ?language dbo:influencedBy <http://dbpedia.org/resource/Perl> .
    ?language dct:subject <http://dbpedia.org/resource/Category:Programming_languages> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
115,In which U.S. state is Mount McKinley located?,"SELECT ?state WHERE {
  <http://dbpedia.org/resource/Mount_McKinley> dbpedia-owl:location ?state .
  ?state a dbpedia-owl:State .
  ?state dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
116,What airlines are part of the SkyTeam alliance?,"PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?airline
WHERE {
    ?airline dct:subject dbc:SkyTeam_members .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
117,Which ships were called after Benjamin Franklin?,"```sparql
SELECT ?ship
WHERE {
  ?ship dbo:shipName ""Benjamin Franklin""@en .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
118,Give me all Methodist politicians.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?politician
WHERE {
  ?politician a dbo:Politician ;
              dbo:party dbr:Methodism .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
119,What other books have been written by the author of The Fault in Our Stars?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?book
WHERE {
  ?author foaf:name ""John Green""@en .
  ?book dbo:author ?author .
  FILTER (?book != <http://dbpedia.org/resource/The_Fault_in_Our_Stars>)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
120,What is the highest mountain?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
121,Which poet wrote the most books?,"SELECT ?poet ?count
WHERE {
  ?poet a <http://dbpedia.org/ontology/Writer> .
  ?poet <http://dbpedia.org/ontology/author> ?book .
}
GROUP BY ?poet
ORDER BY DESC(COUNT(?book))
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
122,Which programming languages influenced Javascript?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?language
WHERE {
  dbr:JavaScript dbo:influencedBy ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
123,Which musician wrote the most books?,"SELECT ?musician ?count
WHERE {
  ?musician a dbo:MusicalArtist ;
           dbo:author ?book .
  {
    SELECT ?musician (COUNT(?book) AS ?count)
    WHERE {
      ?musician a dbo:MusicalArtist ;
               dbo:author ?book .
    }
    GROUP BY ?musician
    ORDER BY DESC(?count)
    LIMIT 1
  }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
124,Which films starring Clint Eastwood did he direct himself?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film
WHERE {
  ?film dbo:director dbr:Clint_Eastwood .
  ?film dbo:starring dbr:Clint_Eastwood .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
125,Which software has been developed by organizations founded in California?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?software
WHERE {
  ?org dbo:foundationPlace dbr:California .
  ?org dbo:product ?software .
  ?software a dbo:Software .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
126,Which instruments does Cat Stevens play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?instrument
WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
127,How many airlines are members of the Star Alliance?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline dbo:alliance dbr:Star_Alliance .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
128,Give me all actors called Baldwin.,"SELECT ?actor
WHERE {
  ?actor a dbo:Actor ;
         foaf:surname ""Baldwin"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
129,Who wrote The Hunger Games?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Hunger Games""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
130,For which label did Elvis record his first album?,"SELECT ?label
WHERE {
  ?album dbo:artist dbr:Elvis_Presley ;
        rdfs:label ?label .
  FILTER regex(?label, ""first album"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
131,Is Christian Bale starring in Batman Begins?,"SELECT ?actor
WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  ?film dbo:wikiPageID ""118557"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
132,Where is the residence of the prime minister of Spain?,"SELECT ?residence WHERE {
  <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/property/residence> ?residence
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?film) AS ?numMovies)
WHERE {
  ?actor a dbo:Actor ;
         dbo:starring ?film .
}
GROUP BY ?actor
ORDER BY DESC(?numMovies)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
134,Which countries have more than two official languages?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?country
WHERE {
    ?country rdf:type dbo:Country ;
             dbo:officialLanguage ?language .
    FILTER (COUNT(?language) > 2)
}
GROUP BY ?country","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
135,Which countries have more than ten caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?country
WHERE {
    ?country a dbo:Country ;
             dbo:numberOfCaves ?numCaves .
    FILTER (?numCaves > 10)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song
WHERE {
  ?album dbo:artist dbr:Bruce_Springsteen ;
         dbo:releaseDate ?releaseDate ;
         dbo:song ?song .
  FILTER (YEAR(?releaseDate) >= 1980 && YEAR(?releaseDate) <= 1990)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
137,Which television shows were created by John Cleese?,"SELECT ?show
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show rdf:type dbo:TelevisionShow .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
138,When did Latvia join the EU?,"SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Latvia> <http://dbpedia.org/ontology/formationDate> ?date .
  <http://dbpedia.org/resource/Latvia> <http://dbpedia.org/ontology/organisationMembership> <http://dbpedia.org/resource/European_Union> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
139,Which soccer players were born on Malta?,"SELECT ?player
WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player a dbo:SoccerPlayer
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
140,How many politicians graduated from Columbia University?,"SELECT (COUNT(?politician) AS ?count)
WHERE {
  ?politician dbo:almaMater dbr:Columbia_University .
  ?politician a dbo:Politician .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
141,Give me the birthdays of all actors of the television show Charmed.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?actor ?birthday
WHERE {
  ?charmed dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
  FILTER regex(str(?charmed), ""Charmed"", ""i"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
142,Which telecommunications organizations are located in Belgium?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:location dbr:Belgium .
  ?organization a dbo:Organisation .
  ?organization dbo:industry dbr:Telecommunications .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
143,Give me a list of all lakes in Denmark.,"```sparql
SELECT ?lake
WHERE {
  ?lake rdf:type dbo:Lake ;
        dbo:country dbr:Denmark .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
144,How many children does Eddie Murphy have?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  dbpedia:Eddie_Murphy dbpedia-owl:child ?child .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
145,Show me all English Gothic buildings in Kent.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?building
WHERE {
  ?building dbo:architecturalStyle dbr:English_Gothic_architecture ;
           dbo:location dbr:Kent .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
146,Who is the manager of Real Madrid?,"SELECT ?manager
WHERE {
  <http://dbpedia.org/resource/Real_Madrid_CF> <http://dbpedia.org/ontology/manager> ?manager
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
147,In which countries can you pay using the West African CFA franc?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
    ?country dbo:currency dbp:West_African_CFA_franc .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
148,Which holidays are celebrated around the world?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?holiday
WHERE {
    ?holiday a dbo:Holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
149,What is the longest river?,"SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
150,Which organizations were founded in 1930?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation .
  ?organization dct:subject ?category .
  FILTER regex(str(?category), ""Establishments_in_1930"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
151,What is the birth name of Angela Merkel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  <http://dbpedia.org/resource/Angela_Merkel> dbo:birthName ?birthName
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
152,Who has Tom Cruise been married to?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  dbpedia:Tom_Cruise dbpedia2:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
153,Which weapons did Heckler & Koch develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?weapon
WHERE {
  ?company dct:subject <http://dbpedia.org/resource/Category:Heckler_%26_Koch> ;
           dbo:product ?weapon .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
154,What is the smallest city by area in Germany?,"SELECT ?city ?area
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Germany ;
        dbo:area ?area .
}
ORDER BY ASC(?area)
LIMIT 1
OFFSET 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
155,What is the ruling party in Lisbon?,"SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Lisbon> <http://dbpedia.org/ontology/rulingParty> ?party
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
156,How heavy is Jupiter's lightest moon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?moon ?mass
WHERE {
  dbr:Jupiter dbo:moon ?moon .
  ?moon dbo:meanRadius ?radius .
  ?moon dbo:mass ?mass .
}
ORDER BY ASC(?mass)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
157,How many employees does IBM have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?employees
WHERE {
  <http://dbpedia.org/resource/IBM> dbo:numberOfEmployees ?employees
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
158,List all episodes of the first season of the HBO television series The Sopranos!,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?episode
WHERE {
  dbr:The_Sopranos dbo:numberOfSeasons ""6""^^xsd:integer .
  dbr:The_Sopranos dbo:numberOfEpisodes ?totalEpisodes .
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:season ""1""^^xsd:integer .
  FILTER (regex(str(?episode), ""Episode""))
}
ORDER BY ?episode","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
159,What does ICRO stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?definition
WHERE {
  <http://dbpedia.org/resource/ICRO> rdfs:comment ?definition
  FILTER (langMatches(lang(?definition), ""en""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"SELECT (COUNT(?newEpisode) AS ?newEpisodes) (COUNT(?oldEpisode) AS ?oldEpisodes)
WHERE {
  ?newSeries dbo:numberOfEpisodes ?newEpisodes .
  ?oldSeries dbo:numberOfEpisodes ?oldEpisodes .
  FILTER(?newSeries = <http://dbpedia.org/resource/Battlestar_Galactica_(2004_TV_series)>)
  FILTER(?oldSeries = <http://dbpedia.org/resource/Battlestar_Galactica_(1978_TV_series)>)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
161,Give me all films produced by Hal Roach.,"SELECT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
162,Who played Agent Smith in Matrix?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor
WHERE {
    ?film dbo:starring ?actor .
    ?film dbo:starring <http://dbpedia.org/resource/Hugo_Weaving> .
    ?film dbo:starring <http://dbpedia.org/resource/The_Matrix> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
163,Which Greek parties are pro-European?,"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?party
WHERE {
  ?party dbo:ideology dbr:Pro-European
  FILTER regex(str(?party), ""Greek_party"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
164,Give me a list of all bandleaders that play trumpet.,"SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet ;
              dbo:occupation dbr:Bandleader .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
165,What is the second highest mountain on Earth?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
  FILTER (?height < 8848) 
}
ORDER BY DESC(?height)
LIMIT 1
OFFSET 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
166,Is Egypts largest city also its capital?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Egypt> dbo:largestCity ?city .
  <http://dbpedia.org/resource/Egypt> dbo:capital ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
167,Which rockets were launched from Baikonur?,"SELECT ?rocket
WHERE {
  ?rocket dbp:launchSite dbr:Baikonur_Cosmodrome .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
168,How many programming languages are there?,"SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
169,Which Chess players died in the same place they were born in?,"```sparql
SELECT ?player
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
170,Who is the owner of Facebook?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Facebook> dbo:owner ?owner
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
171,Give me all movies with Tom Cruise.,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie rdf:type dbo:Film .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
172,In which U.S. state is Fort Knox located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state
WHERE {
  dbr:Fort_Knox dbo:location ?state .
  ?state dbo:country dbr:United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"SELECT ?city
WHERE {
  ?city rdf:type dbo:City ;
        dbo:populationTotal ?population ;
        dbo:country dbr:New_Jersey ;
  FILTER (?population > 100000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
174,Which mountains are higher than the Nanga Parbat?,"SELECT ?mountain
WHERE {
  ?mountain dbo:height ?height .
  FILTER (?height > dbo:Nanga_Parbat)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
175,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bSide
WHERE {
  dbr:The_Ramones dbo:bSide ?bSide .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
176,What are the specialities of the UNC Health Care?,"SELECT ?specialty
WHERE {
  <http://dbpedia.org/resource/UNC_Health_Care> <http://dbpedia.org/ontology/specialty> ?specialty
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
177,When was Olof Palme shot?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Assassination_of_Olof_Palme> dbp:date ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
178,List the seven kings of Rome.,"SELECT ?king ?name
WHERE {
  ?king rdf:type dbo:Monarch ;
        dbo:predecessor dbr:Romulus ;
        dbo:successor ?successor ;
        foaf:name ?name .
  FILTER regex(str(?name), ""King of Rome"")
}
LIMIT 7","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
179,Give me all people that were born in Vienna and died in Berlin.,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Vienna ;
         dbo:deathPlace dbr:Berlin .
  ?person a dbo:Person .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
180,Is Darth Vader Luke’s father?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father
WHERE {
  ?father dbpedia-owl:child <http://dbpedia.org/resource/Luke_Skywalker> ;
          dbpedia-owl:child <http://dbpedia.org/resource/Darth_Vader> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
181,Show me all the breweries in Australia.,"SELECT ?brewery
WHERE {
  ?brewery rdf:type dbo:Brewery ;
           dbo:country dbr:Australia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"SELECT ?film
WHERE {
  ?film dbo:producer dbr:Steven_Spielberg ;
        dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
183,Give me all soccer clubs in Spain.,"```sparql
SELECT ?club
WHERE {
  ?club rdf:type dbo:SoccerClub ;
        dbo:country dbr:Spain .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
184,Who produced films starring Natalie Portman?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer
WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Natalie_Portman> .
  ?film dbo:producer ?producer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
185,Give me all breeds of the German Shepherd dog.,"```sparql
SELECT ?breed
WHERE {
  ?breed rdf:type dbo:DogBreed ;
         rdfs:label ?label .
  FILTER regex(?label, ""German Shepherd"", ""i"")
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
186,Who is the heaviest player of the Chicago Bulls?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?weight
WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Chicago_Bulls> ;
          dbp:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
187,Which languages are spoken in Estonia?,"SELECT ?language
WHERE {
  <http://dbpedia.org/resource/Estonia> <http://dbpedia.org/ontology/language> ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
188,What is the largest country in the world?,"SELECT ?country ?area
WHERE {
  ?country rdf:type dbo:Country ;
           dbo:area ?area .
}
ORDER BY DESC(?area)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
189,What is the largest city in america?,"SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:country dbr:United_States .
  ?city dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
190,Who was the pope that founded the Vatican Television?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?pope
WHERE {
    ?pope a dbo:Pope ;
          dbo:birthPlace <http://dbpedia.org/resource/Vatican_City> ;
          dbo:knownFor <http://dbpedia.org/resource/Vatican_Television> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
191,Who discovered Ceres?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?discoverer
WHERE {
  dbo:Ceres dbo:discoverer ?discoverer
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
192,Who is the king of the Netherlands?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?king
WHERE {
    ?king a dbo:Monarch ;
          dbo:birthPlace <http://dbpedia.org/resource/Netherlands> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
193,Is Cola a beverage?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?cola WHERE {
  ?cola rdf:type dbo:Beverage .
  FILTER regex(str(?cola), ""Cola"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"SELECT ?almaMater WHERE {
  dbr:Angela_Merkel dbo:almaMater ?almaMater .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
195,Who wrote the book Les Piliers de la terre?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""Les Piliers de la terre""@fr .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
196,Which airports does Yeti Airlines serve?,"```sparql
SELECT DISTINCT ?airport
WHERE {
  ?airline dbo:wikiPageID ?airlineID .
  ?airline rdfs:label ""Yeti Airlines""@en .
  ?route dbo:operatedBy ?airlineID .
  ?route dbo:arrivalAirport ?airportID .
  ?airportID rdfs:label ?airport .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
197,Where is the birthplace of Goethe?,"SELECT ?birthplace WHERE {
  <http://dbpedia.org/resource/Johann_Wolfgang_von_Goethe> <http://dbpedia.org/ontology/birthPlace> ?birthplace
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

ASK {
  ?event1 dct:subject dbc:Cuban_Missile_Crisis .
  ?event2 dct:subject dbc:Bay_of_Pigs_Invasion .
  FILTER (?event1 < ?event2)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
199,Which ingredients do I need for carrot cake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ingredient
WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
200,Who created Wikipedia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?creator
WHERE {
    ?wikipedia dbo:author ?creator .
    ?wikipedia foaf:name ""Wikipedia""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
201,What is the highest mountain in Saxony Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mountain
WHERE {
  ?mountain dbo:locatedInArea dbr:Saxony ;
           dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
202,Who is the current federal minister of finance in Germany?,"SELECT ?minister
WHERE {
  <http://dbpedia.org/resource/Germany> <http://dbpedia.org/ontology/government> ?government .
  ?government <http://dbpedia.org/ontology/minister> ?minister .
  ?minister <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Minister_of_Finance_(Germany)> .
  ?minister <http://dbpedia.org/ontology/office> <http://dbpedia.org/resource/Federal_Minister_of_Finance_(Germany)> .
  ?minister <http://dbpedia.org/ontology/termStart> ?start .
  FILTER NOT EXISTS { ?minister <http://dbpedia.org/ontology/termEnd> ?end }
}
ORDER BY DESC(?start)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
203,In which country is Mecca located?,"SELECT ?country WHERE {
  dbpedia:Mecca dbpedia-owl:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor
WHERE {
  ?actor dbo:starring dbr:Breaking_Bad ;
        dbo:portrayed dbr:Gus_Fring .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
205,In which country does the Nile start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
    <http://dbpedia.org/resource/Nile> dbo:sourceCountry ?country
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
206,In which state Penn State University is located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state
WHERE {
  dbr:Pennsylvania_State_University dbo:state ?state .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
207,What is the biggest stadium in Spain?,"SELECT ?stadium ?size
WHERE {
  ?stadium rdf:type dbo:Stadium ;
           dbo:country dbr:Spain ;
           dbo:capacity ?size .
}
ORDER BY DESC(?size)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
208,Who is the coach of Ankara's ice hockey team?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?coach
WHERE {
  ?team dbo:city dbpedia:Ankara ;
       dbo:sport dbpedia:Ice_hockey ;
       dbp:coach ?coach .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
209,How large is the area of UK?,"SELECT ?area WHERE {
  <http://dbpedia.org/resource/United_Kingdom> <http://dbpedia.org/ontology/areaTotal> ?area
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
210,Who created Batman?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?creator
WHERE {
    ?batman dbo:creator ?creator .
    FILTER regex(str(?creator), ""Batman"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
211,Was Sigmund Freud married?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?married
WHERE {
  dbpedia:Sigmund_Freud dbpedia-owl:spouse ?married
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
212,Who are the developers of DBpedia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?developer
WHERE {
    dbo:DBpedia dbo:developer ?developer
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
213,Give me all movies directed by Francis Ford Coppola.,"SELECT ?movie
WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
  ?movie rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
214,Are tree frogs a type of amphibian?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?type
WHERE {
  dbr:Tree_frog dbo:wikiPageRedirects ?redirect .
  ?redirect dbo:wikiPageDisambiguates ?type .
  ?type dbo:wikiPageRedirects dbr:Amphibian .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
215,What is the location of the Houses of Parliament?,"SELECT ?location WHERE {
  <http://dbpedia.org/resource/Houses_of_Parliament> dbpedia-owl:location ?location
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
216,how much is the elevation of Düsseldorf Airport ?,"SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
217,How much is the population of mexico city ?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Mexico_City> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
218,when was the founding date of french fifth republic?,"SELECT ?date
WHERE {
  dbr:French_Fifth_Republic dbo:formationDate ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
219,Who was the first King of England?,"SELECT ?king WHERE {
  ?king a dbpedia-owl:Monarch ;
        dbpprop:title ""King of England"" ;
        dbpprop:successor ?successor .
  FILTER NOT EXISTS { ?king dbpprop:predecessor [] }
} LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
220,Who is the editor of Forbes?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?editor
WHERE {
    ?forbes dbo:publisher <http://dbpedia.org/resource/Forbes>.
    ?forbes dbo:editor ?editor.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
221,Which awards did Douglas Hofstadter win?,"SELECT ?award
WHERE {
  dbpedia:Douglas_Hofstadter dbpedia-owl:award ?award
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
222,Who is the youngest Darts player?,"SELECT ?player ?age
WHERE {
  ?player a dbo:DartsPlayer .
  ?player dbo:birthDate ?birthDate .
  BIND(now() - xsd:date(?birthDate) AS ?age) 
}
ORDER BY ?age
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
223,Is horse racing a sport?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?sport
WHERE {
    dbo:Horse_racing rdf:type ?sport .
    FILTER (?sport = dbo:Sport)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river WHERE {
  dbpedia:Brooklyn_Bridge dbpedia-owl:crosses ?river .
  ?river a dbpedia-owl:River
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
225,How many people live in Poland?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
226,When was the last episode of the TV series Friends aired?,"SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Friends> <http://dbpedia.org/ontology/lastAired> ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
227,Is the wife of president Obama called Michelle?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT ?wife
WHERE {
  dbpedia:Barack_Obama dbpprop:spouse ?wife .
  FILTER (?wife = dbpedia:Michelle_Obama)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
229,Who is 8th president of US?,"SELECT ?president WHERE {
  ?president dbo:order 8 ;
             a dbo:President ;
             dbo:office <http://dbpedia.org/resource/Presidency_of_the_United_States> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
230,how much is the total population of  european union?,"SELECT ?population WHERE {
  <http://dbpedia.org/resource/European_Union> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
231,Give me all launch pads operated by NASA.,"SELECT ?launchPad
WHERE {
  ?launchPad rdf:type dbo:LaunchPad ;
            dbo:operator dbr:NASA .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
232,Who developed the video game World of Warcraft?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?developer
WHERE {
    <http://dbpedia.org/resource/World_of_Warcraft> dbo:developer ?developer
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
233,What is the birth name of Adele?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  dbo:Adele dbo:birthName ?birthName
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
234,What is the population of Cairo?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Cairo> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
235,Is Frank Herbert still alive?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Frank Herbert"" ;
          dbo:deathDate ?deathDate .
  FILTER NOT EXISTS { ?person dbo:deathDate ?deathDate2 }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
236,What is the last work of Dan Brown?,"SELECT ?work
WHERE {
  ?author foaf:name ""Dan Brown""@en .
  ?author dbp:notableWork ?work .
}
ORDER BY DESC(?work)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
237,Where is Sungkyunkwan University?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?location
WHERE {
    <http://dbpedia.org/resource/Sungkyunkwan_University> dbo:location ?location
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
238,Who is the author of the interpretation of dreams?,"SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Interpretation of Dreams""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
239,When was the death  of  Shakespeare?,"SELECT ?dateOfDeath
WHERE {
  <http://dbpedia.org/resource/William_Shakespeare> <http://dbpedia.org/ontology/deathDate> ?dateOfDeath
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
241,Who developed Slack?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?developer
WHERE {
    ?s dbo:developer ?developer ;
       dbp:name ""Slack"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
242,Where is the origin of Carolina reaper?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?origin
WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
243,In which year was Rachel Stevens born?,"SELECT ?birthYear
WHERE {
  dbpedia:Rachel_Stevens dbo:birthDate ?birthDate .
  BIND (YEAR(?birthDate) AS ?birthYear)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
244,How often did Jane Fonda marry?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT (COUNT(?spouse) as ?marriage_count)
WHERE {
  dbpedia:Jane_Fonda dbpedia-owl:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
245,Was the wife of president Lincoln called Mary?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT ?wife
WHERE {
    ?president dbpprop:spouse ?wife .
    ?president dbpprop:name ""Abraham Lincoln""@en .
    FILTER (?wife = ""Mary Todd Lincoln""@en)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
246,Which cities does the Weser flow through?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?city
WHERE {
  ?river dbo:riverName ""Weser""@en .
  ?city dbo:locatedInArea ?river .
  ?city a dbo:City .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
247,In which programming language is GIMP written?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language
WHERE {
  dbr:GNU_Image_Manipulation_Program dbo:programmingLanguage ?language
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
248,Which university did Angela Merkel attend?,"SELECT ?university
WHERE {
  <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/ontology/education> ?university .
  ?university a <http://dbpedia.org/ontology/University> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
249,List all the musicals with music by Elton John.,"SELECT ?musical
WHERE {
  ?musical dbo:composer dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
250,How many Aldi stores are there?,"SELECT (COUNT(?store) AS ?count)
WHERE {
  ?store rdf:type dbo:Store ;
         rdfs:label ""Aldi""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
251,What is the longest river in the world?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1.","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
252,When was John Adams born?,"SELECT ?birthDate
WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthDate
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
253,Which companies produce hovercrafts?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
          dbo:product dbr:Hovercraft .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
254,Who was the wife of U.S. president Lincoln?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Abraham_Lincoln dbpedia-owl:spouse ?wife .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
255,Which species does an elephant belong?,"SELECT ?species WHERE {
  dbpedia:Elephant dct:subject ?species .
  ?species dct:subject dbc:Species .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
256,How many people live in the capital of Australia?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Canberra> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
257,In which ancient empire could you pay with cocoa beans?,"SELECT ?empire WHERE {
  ?empire dbo:currency dbr:Cocoa_bean .
  ?empire dct:subject dbc:Ancient_empires .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
258,How many theories did Albert Einstein come up with?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?theory) AS ?count)
WHERE {
  dbr:Albert_Einstein dbo:notableIdea ?theory .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
259,Who composed the soundtrack for Cameron's Titanic?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?composer
WHERE {
  dbpedia:James_Cameron dbo:soundtrack ?soundtrack .
  ?soundtrack dbo:musicComposer ?composer .
  FILTER regex(str(?soundtrack), ""Titanic"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
260,Give me the runtime of Toy Story.,"SELECT ?runtime
WHERE {
  <http://dbpedia.org/resource/Toy_Story> <http://dbpedia.org/ontology/Work/runtime> ?runtime
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
262,With how many countries Iran has borders?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?country) AS ?count)
WHERE {
    <http://dbpedia.org/resource/Iran> dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
263,Which electronics companies were founded in Beijing?,"SELECT DISTINCT ?company
WHERE {
  ?company dct:subject dbc:Electronics_companies_of_China ;
           dbo:foundationPlace dbr:Beijing .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
264,Who was the successor of John F. Kennedy?,"SELECT ?successor
WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
265,Who is the mayor of Paris?,"SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/leaderName> ?mayor .
  <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
266,Did Arnold Schwarzenegger attend a university?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university
WHERE {
  dbr:Arnold_Schwarzenegger dbo:almaMater ?university
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
267,Is James Bond married?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?isMarried
WHERE {
  dbo:James_Bond dbo:spouse ?isMarried
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
268,Does the Isar flow into a lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lake
WHERE {
  dbr:Isar dbo:mouth ?lake .
  ?lake rdf:type dbo:Lake
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
269,Which Indian company has the most employees?,"SELECT ?company ?employees
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:country dbr:India ;
           dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?employees)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
270,Who was John F. Kennedy's vice president?,"SELECT ?vp
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:vicePresident ?vp .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
271,Which country does the creator of Miffy come from?,"SELECT ?country WHERE {
  <http://dbpedia.org/resource/Dick_Bruna> <http://dbpedia.org/ontology/nationality> ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
273,In what city is the Heineken brewery?,"SELECT ?city WHERE {
  <http://dbpedia.org/resource/Heineken_Brewery> dbpedia-owl:location ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
274,Is Barack Obama a democrat?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  dbo:Barack_Obama dbo:party ?party .
  FILTER (?party = dbo:Democratic_Party_(United_States))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
275,List the children of Margaret Thatcher.,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  dbpedia:Margaret_Thatcher dbpedia2:children ?child .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
276,From which region is the Melon de Bourgogne?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?region
WHERE {
    <http://dbpedia.org/resource/Melon_de_Bourgogne> dbo:region ?region
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
278,how big is the total area of North Rhine- Westphalia?,"SELECT ?area WHERE {
  <http://dbpedia.org/resource/North_Rhine-Westphalia> <http://dbpedia.org/ontology/areaTotal> ?area
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
279,Which city has the most inhabitants?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
280,What is Donald Trump's main business?,"SELECT ?business WHERE {
  dbpedia:Donald_Trump dbpedia-owl:occupation ?business .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
281,When will start the final match of the football world cup 2018?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?date
WHERE {
    ?tournament a dbo:FootballTournament ;
                dbp:currentSeason ?season .
    ?season dbp:startDate ?startDate ;
            dbp:endDate ?endDate .
    FILTER (?endDate = ""2018-07-15""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
282,Which films did Stanley Kubrick direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
283,how much is the population  Iraq?,"SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Iraq> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population WHERE {
  <http://dbpedia.org/resource/Toronto> <http://dbpedia.org/ontology/populationTotal> ?population .
} ORDER BY DESC(?population) LIMIT 1.","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
285,Who is the mayor of the capital of French Polynesia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor
WHERE {
  dbr:Papeete dbo:mayor ?mayor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
286,Give me all actors starring in movies directed by William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
287,How tall is Claudia Schiffer?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Claudia_Schiffer> dbo:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
288,how much is the population densty rank of germany?,"SELECT ?populationDensityRank WHERE {
  <http://dbpedia.org/resource/Germany> <http://dbpedia.org/ontology/populationDensityRank> ?populationDensityRank
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
289,What is the highest mountain in Italy?,"SELECT ?mountain
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Italy ;
           dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
290,List all games by GMT.,"SELECT ?game
WHERE {
  ?game dbo:publisher dbr:GMT_Games
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
291,What is the official language of Suriname?,"SELECT ?language 
WHERE {
  <http://dbpedia.org/resource/Suriname> <http://dbpedia.org/ontology/officialLanguage> ?language
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
292,In which city did Nikos Kazantzakis die?,"SELECT ?city WHERE {
  <http://dbpedia.org/resource/Nikos_Kazantzakis> <http://dbpedia.org/ontology/deathPlace> ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
293,What is in a chocolate chip cookie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ingredient
WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
294,In which country is the Limerick Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  dbr:Limerick_Lake dbo:location ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
295,Give me all video games published by Mean Hamster Software.,"SELECT ?game
WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game rdf:type dbo:VideoGame .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
296,Give me all members of Prodigy.,"SELECT ?member
WHERE {
  ?band rdf:type dbo:Band ;
        foaf:name ""The Prodigy""@en ;
        dbo:bandMember ?member .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
297,In which time zone is Rome?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?timeZone
WHERE {
    <http://dbpedia.org/resource/Rome> dbo:timeZone ?timeZone
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
298,How high is the lighthouse in Colombo?,"SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Colombo_Lighthouse> <http://dbpedia.org/ontology/height> ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
299,Who are the writers of the Wall album of Pink Floyd?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer
WHERE {
    <http://dbpedia.org/resource/The_Wall> dbp:writer ?writer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
300,Who is the mayor of Rotterdam?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Rotterdam> dbo:mayor ?mayor
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
301,What is the largest city in Australia?,"SELECT ?city
WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:country dbr:Australia .
  ?city dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
302,Who was married to president Chirac?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
    dbpedia:Jacques_Chirac dbpedia-owl:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
303,What form of government is found in South Africa?,"SELECT ?governmentType WHERE {
  <http://dbpedia.org/resource/South_Africa> <http://dbpedia.org/ontology/governmentType> ?governmentType
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
304,How high is the Yokohama Marine Tower?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Yokohama_Marine_Tower> dbo:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
305,Which holidays are celebrated around the world? test2,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?holiday
WHERE {
    ?holiday a dbo:Holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
306,Who is the tallest basketball player?,"SELECT ?player ?height
WHERE {
  ?player a dbpedia-owl:BasketballPlayer ;
          dbpedia-owl:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
307,How many languages are spoken in Turkmenistan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?language) AS ?count)
WHERE {
  dbr:Turkmenistan dbo:language ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
308,Did Che Guevara have children?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  dbpedia:Che_Guevara dbpedia-owl:child ?child
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT ?film
WHERE {
    ?film dbpedia-owl:award dbpedia:Grand_Prix_(Cannes)
    FILTER regex(str(?film), ""Kaurismäki"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
310,To which party does the mayor of Paris belong?,"SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/mayor> ?mayor .
  ?mayor <http://dbpedia.org/ontology/party> ?party .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver ?name ?count
WHERE {
  ?driver a dbo:FormulaOneRacer ;
          rdfs:label ?name ;
          dbo:careerStation ?station .
  ?station dbo:numberOfRaces ?count .
}
ORDER BY DESC(?count)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
312,What country is Sitecore from?,"SELECT ?country WHERE {
  dbpedia:Sitecore dbpedia:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace WHERE {
  dbpedia:Frank_Sinatra dbpedia-owl:birthPlace ?birthPlace
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
314,Is Christian Bale starring in Velvet Goldmine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor
WHERE {
  ?film dbo:starring ?actor ;
       dbp:title ""Velvet Goldmine""@en .
  FILTER (?actor = dbo:Christian_Bale)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
315,Who is the son of Sonny and Cher?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/property/>

SELECT ?son
WHERE {
  dbpedia:Sonny_and_Cher dbpedia2:children ?son .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
316,How many ethnic groups live in Slovenia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
    <http://dbpedia.org/resource/Slovenia> dbo:ethnicGroups ?ethnicGroup .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
317,What is the capital of Cameroon?,"SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?capital
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
318,Was Natalie Portman born in the United States?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  dbr:Natalie_Portman dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
319,How many pages does War and Peace have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?pages
WHERE {
  <http://dbpedia.org/resource/War_and_Peace> dbo:numberOfPages ?pages
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
320,Who is the oldest child of Meryl Streep?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child
WHERE {
  <http://dbpedia.org/resource/Meryl_Streep> dbpedia-owl:child ?child .
}
ORDER BY ?child
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
321,Which television shows were created by Walt Disney?,"SELECT ?show
WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
322,What does IYCM stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?label
WHERE {
  <http://dbpedia.org/resource/IYCM> rdfs:label ?label
  FILTER (lang(?label) = 'en')
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
323,Which types of grapes grow in Oregon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType dbo:growsIn dbr:Oregon .
  ?grapeType a dbo:Grape .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
324,Was U.S. president Jackson involved in a war?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?war
WHERE {
  dbpedia:Andrew_Jackson dbpedia-owl:militaryCommand ?war .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
325,When was the Titanic completed?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?completionDate
WHERE {
    <http://dbpedia.org/resource/RMS_Titanic> dbpedia-owl:completionDate ?completionDate
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
326,Did Tesla win a nobel prize in physics?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?person ?award
WHERE {
  ?person dbpedia-owl:award ?award .
  ?person dbpedia-owl:birthPlace <http://dbpedia.org/resource/Smiljan> .
  FILTER regex(str(?person), ""Nikola_Tesla"") .
  FILTER regex(str(?award), ""Nobel_Prize_in_Physics"") .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
327,How many states are in Mexico?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?state) AS ?count)
WHERE {
    ?state dbo:country <http://dbpedia.org/resource/Mexico> ;
           a dbo:AdministrativeRegion .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT DISTINCT ?scientist
WHERE {
  ?scientist dbo:award dbr:Nobel_Peace_Prize .
  ?scientist dbo:knownFor dbr:Manhattan_Project .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
329,How much did the Lego Movie cost?,"SELECT ?cost
WHERE {
  dbpedia:The_Lego_Movie dbo:budget ?cost
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
330,Who composed the music for Harold and Maude?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?composer
WHERE {
    ?film dbo:director <http://dbpedia.org/resource/Harold_and_Maude> ;
          dbp:music ?composer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
331,List all episodes of the first season of the HBO television series The Sopranos.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?episode
WHERE {
  ?season dbo:seasonNumber ""1"" .
  ?season dbo:numberOfEpisodes ?numEpisodes .
  ?episode dbo:season ?season .
  ?episode dbo:series dbr:The_Sopranos .
  FILTER (?episode != dbr:The_Sopranos)
}
ORDER BY ?episode","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
332,Which city has the least inhabitants?,"SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
333,Where is Syngman Rhee buried?,"SELECT ?placeOfBurial WHERE {
  dbpedia:Syngman_Rhee dbpedia-owl:placeOfBurial ?placeOfBurial
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
334,Does Neymar play for Real Madrid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player
WHERE {
  dbr:Neymar dbo:team dbr:Real_Madrid
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
335,Who wrote the book The Pillars of the Earth?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Pillars of the Earth""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
336,Do Prince Harry and Prince William have the same parents?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpedia: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbpedia:Prince_Harry dbpedia-owl:parent ?parent .
}
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?supervisor
WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
338,Does Breaking Bad have more episodes than Game of Thrones?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?breakingBadEpisode) AS ?breakingBadEpisodeCount) (COUNT(?gameOfThronesEpisode) AS ?gameOfThronesEpisodeCount)
WHERE {
  ?breakingBad dbo:numberOfEpisodes ?breakingBadEpisode .
  ?gameOfThrones dbo:numberOfEpisodes ?gameOfThronesEpisode .
  FILTER (?breakingBad > ?gameOfThrones)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
339,Who was Vincent van Gogh inspired by?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?inspiredBy
WHERE {
    <http://dbpedia.org/resource/Vincent_van_Gogh> dbo:influenced ?inspiredBy .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building ?floors
WHERE {
  ?building rdf:type dbo:Building ;
           dbo:numberOfFloors ?floors .
  FILTER (?floors > 163 && ?building != dbr:Burj_Khalifa)
}
ORDER BY DESC(?floors)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
341,What was the final result of the War of the Roses?,"SELECT ?result
WHERE {
  dbpedia:War_of_the_Roses dbpedia:finalResult ?result
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
342,How much did Pulp Fiction cost?,"SELECT ?cost
WHERE {
  dbpedia:Pulp_Fiction dbo:budget ?cost
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
343,Is proinsulin a protein?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?protein
WHERE {
    dbo:Proinsulin rdf:type ?protein .
    FILTER (?protein = dbo:Protein)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
344,Do Urdu and Persian have a common root?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language1 ?language2
WHERE {
  dbr:Urdu dbo:related dbo:Persian .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"SELECT ?actor
WHERE {
  ?movie dbp:producer dbr:Benicio_del_Toro ;
         dbp:country dbr:Spain ;
         dbp:starring ?actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?baikalArea ?greatBearArea
WHERE {
  ?baikal dbo:areaTotal ?baikalArea ;
         rdfs:label ""Lake Baikal""@en .
  
  ?greatBear dbo:areaTotal ?greatBearArea ;
            rdfs:label ""Great Bear Lake""@en .
  
  FILTER (?baikalArea > ?greatBearArea)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
347,Show me all books in Asimov's Foundation series.,"SELECT ?book
WHERE {
  ?book dct:subject dbc:Foundation_series_books .
  ?book dbo:author dbr:Isaac_Asimov .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
348,Where was Bach born?,"SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Johann_Sebastian_Bach> <http://dbpedia.org/ontology/birthPlace> ?birthPlace
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
349,Which city has the oldest running metro?,"SELECT ?city WHERE {
  ?metro rdf:type dbo:RapidTransit .
  ?metro dbo:city ?city .
  ?metro dbo:openingYear ?year .
  FILTER NOT EXISTS { ?otherMetro dbo:openingYear ?otherYear .
                     ?otherYear < ?year }
} ORDER BY ?year LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
350,Who designed the Brooklyn Bridge?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?designer
WHERE {
    <http://dbpedia.org/resource/Brooklyn_Bridge> dbp:designer ?designer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
351,How many people live in Eurasia?,"SELECT (SUM(?population) AS ?totalPopulation)
WHERE {
  ?country dbo:populationTotal ?population .
  ?country dbo:region dbr:Eurasia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
352,Who is the host of the BBC Wildlife Specials?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?host
WHERE {
    ?wildlifeSpecial dbo:producer <http://dbpedia.org/resource/BBC_Natural_History_Unit> ;
                     dbp:host ?host .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
353,"What is the total population of Melbourne, Florida?","SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Melbourne,_Florida> <http://dbpedia.org/ontology/populationTotal> ?population
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
354,What country is Mount Everest in?,"SELECT ?country WHERE {
  <http://dbpedia.org/resource/Mount_Everest> dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
355,To which artistic movement did the painter of The Three Dancers belong?,"SELECT ?movementLabel WHERE {
  <http://dbpedia.org/resource/The_Three_Dancers> dbpedia-owl:author ?painter .
  ?painter dbpedia-owl:movement ?movement .
  ?movement rdfs:label ?movementLabel .
  FILTER(LANG(?movementLabel) = 'en')
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
356,When did Operation Overlord commence?,"SELECT ?date
WHERE {
  dbr:Operation_Overlord dbo:startDate ?date
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
357,What is the bridge with the longest span?,"SELECT ?bridge 
WHERE {
  ?bridge rdf:type dbo:Bridge ;
          dbo:longestSpan ?span .
}
ORDER BY DESC(?span)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
358,Is there a video game called Battle Chess?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
359,Who was buried in the Great Pyramid of Giza?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  dbr:Great_Pyramid_of_Giza dbo:burial ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?plant
WHERE {
  dbr:Ford_Motor_Company dbo:manufacturingPlant ?plant .
  ?plant dbo:location dbr:Malaysia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
361,Did Socrates influence Aristotle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?influencedBy
WHERE {
  dbr:Aristotle dbo:influencedBy dbr:Socrates
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
362,How many children did Benjamin Franklin have?,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  dbpedia:Benjamin_Franklin dbpedia-owl:child ?child .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
363,How tall is Michael Jordan?,"SELECT ?height WHERE {
  dbpedia:Michael_Jordan dbpedia-owl:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
364,In which UK city are the headquarters of the MI6?,"SELECT ?city WHERE {
  <http://dbpedia.org/resource/MI6> <http://dbpedia.org/property/headquarters> ?hq .
  ?hq <http://dbpedia.org/ontology/city> ?city .
  ?city <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
365,Who created Family Guy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?creator
WHERE {
    ?tvShow dbo:creator ?creator .
    ?tvShow foaf:name ""Family Guy""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
366,In which city does the Chile Route 68 end?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Chile_Route_68> <http://dbpedia.org/property/end> ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild
WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
368,When did the Ming dynasty dissolve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?date
WHERE {
    ?event dct:subject dbc:Ming_Dynasty ;
           dbo:date ?date .
    FILTER regex(str(?event), ""disestablishment"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
369,In which military conflicts did Lawrence of Arabia participate?,"SELECT ?conflict
WHERE {
  ?lawrence dbo:activeYearsStartYear ""1916""^^xsd:integer .
  ?lawrence dbo:activeYearsEndYear ""1918""^^xsd:integer .
  ?lawrence dbo:participatedIn ?conflict .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
370,What is the timezone in San Pedro de Atacama?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timezone
WHERE {
  dbr:San_Pedro_de_Atacama dbo:timezone ?timezone
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
371,Give me all books by William Goldman with more than 300 pages.,"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbpprop: <http://dbpedia.org/property/>

SELECT ?book
WHERE {
    ?book a dbpedia-owl:Book ;
          dbpprop:author ""William Goldman""@en ;
          dbpprop:numberOfPages ?pages .
    FILTER (?pages > 300)
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
372,What did Bruce Carver die from?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?causeOfDeath
WHERE {
  <http://dbpedia.org/resource/Bruce_Carver> dbo:causeOfDeath ?causeOfDeath
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"SELECT ?subsidairy
WHERE {
  ?subsidairy dbo:parentCompany dbr:Lufthansa ;
              dbo:cityServed dbr:Dortmund, dbr:Berlin_Tegel .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
374,Does Abraham Lincoln's death place have a website?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?website
WHERE {
  dbo:Abraham_Lincoln dbo:deathPlace ?deathPlace .
  ?deathPlace dbo:wikiPageExternalLink ?website .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
375,Did Elvis Presley have children?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  dbpedia:Elvis_Presley dbpedia-owl:child ?child
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
376,Is Michelle Obama the wife of Barack Obama?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Michelle_Obama dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Barack_Obama)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
377,In which city does Sylvester Stallone live?,"SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Sylvester_Stallone> <http://dbpedia.org/ontology/residence> ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
378,Which books by Kerouac were published by Viking Press?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book
WHERE {
  ?book dbo:author dbr:Jack_Kerouac ;
        dbo:publisher dbr:Viking_Press .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
379,Who wrote the song Hotel California?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist
WHERE {
    ?song dbo:artist ?artist ;
          dbp:title ""Hotel California""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
380,What is the capital of Canada?,"SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?capital
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
381,Who is the mayor of Tel Aviv?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?mayor
WHERE {
  dbpedia:Tel_Aviv dbpedia-owl:mayor ?mayor
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
382,What form of government does Russia have?,"SELECT ?governmentType WHERE {
  <http://dbpedia.org/resource/Russia> <http://dbpedia.org/ontology/governmentType> ?governmentType
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book
WHERE {
  ?author dbo:author dbr:Muhammad_Ali .
  ?book dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
384,Who was the first to climb Mount Everest?,"SELECT ?person WHERE {
  ?person dbo:mountEverestAscents ?ascent .
  ?ascent dbo:firstAscent ""true"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
385,How many languages are spoken in Colombia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language dbo:country <http://dbpedia.org/resource/Colombia> .
  ?language a dbo:Language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
386,What is the currency of the Czech Republic?,"SELECT ?currency
WHERE {
  <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?currency
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
387,Where in France is sparkling wine produced?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region
WHERE {
  ?wine a dbo:SparklingWine ;
        dbo:country dbr:France ;
        dbo:region ?region .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
388,When did Boris Becker end his active career?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?endDate
WHERE {
    <http://dbpedia.org/resource/Boris_Becker> dbo:careerEnd ?endDate
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke ;
        dbo:director dbr:Guy_Ritchie .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
391,Show me Hemingway's autobiography.,"PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?autobiography
WHERE {
  dbpedia:Ernest_Hemingway dbo:notableWork ?autobiography .
  ?autobiography dbo:genre dbpedia:Autobiography .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
392,How tall is Amazon Eve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Amazon_Eve> dbo:height ?height
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
393,What are the five boroughs of New York?,"SELECT ?borough WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/ontology/region> ?borough .
  ?borough <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Boroughs_of_New_York_City> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
394,Give me all Canadian Grunge record labels.,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?label a <http://dbpedia.org/ontology/RecordLabel> ;
         <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Canada> ;
         <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Grunge> .
}
```","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
395,In which country does the Ganges start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  dbr:Ganges dbo:sourceCountry ?country
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
396,Who is the founder of Penguin Books?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?founder
WHERE {
    ?penguin dbo:wikiPageRedirects <http://dbpedia.org/resource/Penguin_Books> .
    ?penguin dbo:founder ?founder .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
397,Who wrote the Game of Thrones theme?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?composer
WHERE {
    ?tvShow dbo:themeMusic ?themeMusic .
    ?themeMusic dbp:composer ?composer .
    FILTER regex(?tvShow, ""Game of Thrones"", ""i"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
398,Who is the president of Eritrea?,"SELECT ?president
WHERE {
  <http://dbpedia.org/resource/Eritrea> <http://dbpedia.org/ontology/president> ?president
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
399,In which city did John F. Kennedy die?,"SELECT ?city WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:deathPlace ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
400,What is the highest mountain in Australia?,"SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Australia ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
OFFSET 0
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
401,Who writes the Farmers' Almanac?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author
WHERE {
    ?book dbo:author ?author .
    ?book foaf:name ""Farmers' Almanac""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
402,Give me the currency of China.,"SELECT ?currency
WHERE {
  <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?currency
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
403,Give me all Swedish oceanographers.,"SELECT DISTINCT ?oceanographer
WHERE {
    ?oceanographer a <http://dbpedia.org/ontology/Oceanographer> .
    ?oceanographer <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Sweden> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
404,In which city are the headquarters of the United Nations?,"SELECT ?city WHERE {
  <http://dbpedia.org/resource/United_Nations> <http://dbpedia.org/ontology/headquarter> ?hq .
  ?hq <http://dbpedia.org/ontology/city> ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
405,Is Rita Wilson the wife of Tom Hanks?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Rita_Wilson dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Tom_Hanks)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
406,In which countries do people speak Japanese?,"SELECT DISTINCT ?country WHERE {
  ?country dbpedia-owl:language dbpedia:Japanese_language
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
408,Which museum in New York has the most visitors?,"SELECT ?museum ?visitors
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:New_York_City ;
          dbo:numberOfVisitors ?visitors .
}
ORDER BY DESC(?visitors)
LIMIT 1
","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
409,What was the first Queen album?,"SELECT ?album
WHERE {
  ?album rdf:type dbo:Album ;
         dbp:artist dbr:Queen ;
         dbo:releaseDate ?date .
}
ORDER BY ASC(?date)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
410,What was the first name of the band Queens of the Stone Age?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName
WHERE {
    ?band dbo:bandMember ?member .
    ?band dbp:bandName ""Queens of the Stone Age""@en .
    ?member dbp:name ?bandName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
411,What was the last movie with Alec Guinness?,"SELECT ?movie WHERE {
  ?actor dbpedia-owl:birthName ""Alec Guinness"" .
  ?movie dbpedia-owl:starring ?actor .
} ORDER BY DESC(?movie) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
412,Give me all actors starring in Last Action Hero.,"SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Last Action Hero""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
413,Who discovered Pluto?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?discoverer
WHERE {
    ?pluto dct:subject <http://dbpedia.org/resource/Category:Pluto> ;
          dbo:discoverer ?discoverer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
1,List all boardgames by GMT.,"```sparql
SELECT ?boardgame
WHERE {
  ?boardgame dct:subject dbc:Board_games_by_publisher .
  ?boardgame dct:publisher dbr:GMT_Games .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
2,Who developed Skype?,"```
SELECT ?developer
WHERE {
  dbr:Skype dbo:developer ?developer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
3,Which people were born in Heraklion?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person a dbo:Person .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
4,In which U.S. state is Area 51 located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Area_51> dbpedia-owl:location ?location .
  ?location dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
  ?location dbpedia-owl:state ?state .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
5,Who is the mayor of New York City?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/ontology/leaderName> ?mayor .
  FILTER regex(?mayor, ""Mayor"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
6,Which countries have places with more than two caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?place rdf:type dbo:Place ;
         dbo:location ?country .
  ?country a dbo:Country .
  {
    SELECT ?country (COUNT(?cave) AS ?numCaves)
    WHERE {
      ?cave rdf:type dbo:Cave ;
            dbo:location ?place .
      ?place dbo:location ?country .
    }
    GROUP BY ?country
    HAVING (?numCaves > 2)
  }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
7,Where did Abraham Lincoln die?,"```sparql
SELECT ?placeOfDeath
WHERE {
  dbpedia:Abraham_Lincoln dbo:deathPlace ?placeOfDeath .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
8,Which airports does Air China serve?,"```sparql
SELECT DISTINCT ?airport
WHERE {
  ?airline a dbpedia-owl:Airline ;
           foaf:name ""Air China"" .
  ?route dbpedia-owl:airline ?airline ;
         dbpedia-owl:routeStart ?airport .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
9,Give me all actors starring in movies directed by and starring William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner ;
        dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
10,What are the official languages of the Philippines?,"```sparql
SELECT ?language
WHERE {
  <http://dbpedia.org/resource/Philippines> <http://dbpedia.org/ontology/officialLanguage> ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
11,Give me all Danish films.,"```sparql
SELECT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dct:subject dbc:Danish_films .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dbo:starring dbr:Brad_Pitt ;
         dbo:director dbr:Guy_Ritchie .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
13,Give me the grandchildren of Bruce Lee.,"```sparql
SELECT ?grandchild
WHERE {
  dbr:Bruce_Lee dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
14,Which other weapons did the designer of the Uzi develop?,"```sparql
SELECT ?weapon
WHERE {
  <http://dbpedia.org/resource/Uzi> <http://dbpedia.org/ontology/designer> ?designer .
  ?designer <http://dbpedia.org/ontology/knownFor> ?weapon .
  FILTER (?weapon != <http://dbpedia.org/resource/Uzi>)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
15,Who is the owner of Universal Studios?,"```sparql
SELECT ?owner
WHERE {
  dbpedia:Universal_Studios dbo:owner ?owner .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
16,Which state of the USA has the highest population density?,"```sparql
SELECT ?state ?populationDensity
WHERE {
  ?state a dbpedia-owl:State ;
         dbpedia-owl:populationDensity ?populationDensity .
} 
ORDER BY DESC(?populationDensity)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
17,Which monarchs were married to a German?,"```sparql
SELECT DISTINCT ?monarch
WHERE {
  ?monarch a dbo:Monarch ;
           dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
18,Which organizations were founded in 1950?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization dbo:formationYear 1950 .
  ?organization a dbo:Organisation .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
19,Who created the comic Captain America?,"```sparql
SELECT ?creator
WHERE {
  dbr:Captain_America dbo:creator ?creator .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
20,Give me the Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  dbpedia:Apollo_14 dbpedia-owl:astronaut ?astronaut .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
21,Who wrote the book The pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
       rdfs:label ""The Pillars of the Earth""@en .
  FILTER(langMatches(lang(?author), ""en""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
22,Which state of the United States of America has the highest density?,"```sparql
SELECT ?state ?density
WHERE {
  ?state a dbo:State ;
         dbo:populationDensity ?density .
}
ORDER BY DESC(?density)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
23,Which spaceflights were launched from Baikonur?,"```sparql
SELECT ?spaceflight
WHERE {
  ?spaceflight dbpedia-owl:launchSite dbr:Baikonur_Cosmodrome .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
24,Give me a list of all trumpet players that were bandleaders.,"```sparql
SELECT DISTINCT ?musician
WHERE {
  ?musician a dbo:Person ;
            dbo:instrument dbr:Trumpet ;
            dbo:occupation dbr:Bandleader .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
25,Which U.S. states are in the same timezone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timezone .
  ?state dbpedia-owl:timeZone ?timezone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
26,Which U.S. states possess gold minerals?,"```sparql
SELECT DISTINCT ?state
WHERE {
  ?state dbo:resource ?resource .
  ?resource dbo:goldMine ?goldMine .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
27,Who is the daughter of Ingrid Bergman married to?,"```sparql
SELECT ?spouse
WHERE {
  ?ingridBergman dbo:child ?daughter .
  ?daughter dbo:spouse ?spouse .
  FILTER (?ingridBergman = dbr:Ingrid_Bergman)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
28,How deep is Lake Placid?,"```sparql
SELECT ?depth
WHERE {
  <http://dbpedia.org/resource/Lake_Placid> <http://dbpedia.org/ontology/maximumDepth> ?depth
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
29,Show me all museums in London.,"```sparql
SELECT ?museum
WHERE {
  ?museum a dbo:Museum ;
          dbo:location dbr:London .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
30,Which caves have more than 3 entrances?,"```sparql
SELECT DISTINCT ?cave
WHERE {
  ?cave rdf:type dbo:Cave ;
        dbo:numberOfEntrances ?numEntrances .
  FILTER (?numEntrances > 3)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
31,Who is the tallest player of the Atlanta Falcons?,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
          dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
32,What are the top-10 action role-playing video games according to IGN?,"```sparql
SELECT DISTINCT ?game ?rank
WHERE {
  ?game dbpedia-owl:genre dbpedia:Action_role-playing_video_games ;
        dbpedia-owl:rank ?rank .
  FILTER (?rank <= 10)
}
ORDER BY ?rank
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
SELECT DISTINCT ?writer
WHERE {
  ?writer a dbo:Writer ;
          dbo:award dbr:Nobel_Prize_in_Literature .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
34,Show me all basketball players that are higher than 2 meters.,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:height ?height .
  FILTER (?height > 2)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
35,When was the Statue of Liberty built?,"SELECT ?date
WHERE {
  dbr:Statue_of_Liberty dbo:constructionStart ?date
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
36,Which states border Illinois?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Illinois dbpedia-owl:state ?state .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
37,Who developed Minecraft?,"```sparql
SELECT ?developer
WHERE {
  <http://dbpedia.org/resource/Minecraft> dbpedia-owl:developer ?developer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
38,Where did Hillel Slovak die?,"```
SELECT ?placeOfDeath
WHERE {
  dbpedia:Hillel_Slovak dbpedia-owl:deathPlace ?placeOfDeath .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
39,What movies does Jesse Eisenberg play in?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?actor foaf:name ""Jesse Eisenberg""@en .
  ?film dbpedia-owl:starring ?actor ;
        rdfs:label ?movie .
  FILTER (lang(?movie) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
40,Give all swimmers that were born in Moscow.,"```sparql
SELECT ?swimmer
WHERE {
  ?swimmer a dbo:Person ;
           dbo:birthPlace dbr:Moscow ;
           dbo:occupation dbr:Swimmer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
41,Give me all cosmonauts.,"```sparql
SELECT ?cosmonaut
WHERE {
  ?cosmonaut a <http://dbpedia.org/ontology/Cosmonaut> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
42,Give me all Swiss non-profit organizations.,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a <http://dbpedia.org/ontology/NonprofitOrganisation> ;
                dct:subject <http://dbpedia.org/resource/Category:Non-profit_organisations_based_in_Switzerland> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
43,Which presidents were born in 1945?,"```sparql
SELECT DISTINCT ?president
WHERE {
  ?president a dbpedia-owl:President ;
            dbpedia-owl:birthDate ?birthDate .
  FILTER (regex(str(?birthDate), ""1945""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
44,What kind of music did Lou Reed play?,"```sparql
SELECT DISTINCT ?genre
WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Lou Reed""@en .
  ?artist dbo:genre ?genre .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
45,Where do the Red Sox play?,"```sparql
SELECT ?stadium
WHERE {
  <http://dbpedia.org/resource/Boston_Red_Sox> dbpedia-owl:ground ?stadium .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
46,Show a list of soccer clubs that play in the Bundesliga.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league ?league .
  ?league rdfs:label ""Bundesliga""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
47,Which volcanos in Japan erupted since 2000?,"```sparql
SELECT DISTINCT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:country dbr:Japan ;
           dbo:eruptionDate ?date .
  FILTER (year(?date) >= 2000)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
48,Which bridges cross the Seine?,"```sparql
SELECT DISTINCT ?bridge
WHERE {
  ?bridge a dbpedia-owl:Bridge ;
          dbpedia-owl:crosses <http://dbpedia.org/resource/Seine> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
49,What is the official color of the University of Oxford?,"```sparql
SELECT ?color
WHERE {
  <http://dbpedia.org/resource/University_of_Oxford> dbpedia-owl:officialSchoolColour ?color
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
50,How many films did Hal Roach produce?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:producer dbr:Hal_Roach .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
51,Give me all Danish movies.,"```sparql
SELECT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dct:subject dbc:Danish_films .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
52,What is the most frequent cause of death?,"```sparql
SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
  ?person dbo:causeOfDeath ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
53,Who are the four youngest MVP basketball players?,"```sparql
SELECT DISTINCT ?player ?age
WHERE {
  ?player a dbpedia-owl:BasketballPlayer ;
          dbpprop:award dbpedia:MVP_Award ;
          dbpprop:birthDate ?birthDate .
  BIND(now() - xsd:dateTime(?birthDate) AS ?age)
}
ORDER BY ?age
LIMIT 4
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
54,Give me all companies in Munich.,"```sparql
SELECT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:location dbr:Munich .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
55,Give me the capitals of all countries that the Himalayas run through.,"```sparql
SELECT DISTINCT ?capital
WHERE {
  ?country dbpedia-owl:capital ?capital ;
           dbpedia-owl:location ?location .
  ?location dbpedia-owl:locatedInArea <http://dbpedia.org/resource/Himalayas> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
56,How many movies did Park Chan-wook direct?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Park_Chan-wook .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
57,Which rivers flow into a German lake?,"```sparql
SELECT DISTINCT ?river ?lake
WHERE {
  ?river a dbo:River ;
         dbo:mouth ?lake .
  ?lake a dbo:Lake ;
        dbo:country dbr:Germany .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
58,How many airlines are there?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbpedia-owl:Airline .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
59,Give me all islands that belong to Japan.,"```sparql
SELECT ?island
WHERE {
  ?island rdf:type dbo:Island ;
          dbo:country dbr:Japan .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
60,How many inhabitants does Maribor have?,"```sparql
SELECT ?population
WHERE {
  dbpedia:Maribor dbo:populationTotal ?population .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
61,Give me all Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut dbpedia-owl:team dbpedia:Apollo_14 .
  ?astronaut rdf:type dbpedia-owl:Astronaut .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
62,Which companies have more than 1 million employees?,"```sparql
SELECT DISTINCT ?company ?companyName
WHERE {
  ?company rdf:type dbo:Company ;
           dbo:numberOfEmployees ?numEmployees ;
           rdfs:label ?companyName .
  FILTER (?numEmployees > 1000000)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:director dbr:Garry_Marshall ;
       dbo:starring dbr:Julia_Roberts .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
64,Give me all soccer clubs in the Premier League.,"```sparql
SELECT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league dbr:Premier_League .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
65,What is the highest place of the Urals?,"```sparql
SELECT ?place ?elevation
WHERE {
  ?place rdf:type dbo:Mountain ;
         dbo:locatedInArea dbr:Ural_Mountains ;
         dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
66,Who is the governor of Wyoming?,"```sparql
SELECT ?governor
WHERE {
  dbpedia:Wyoming dbpedia-gov:governor ?governor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
67,Where did the architect of the Eiffel Tower study?,"```
SELECT ?university
WHERE {
  <http://dbpedia.org/resource/Gustave_Eiffel> dbpedia-owl:almaMater ?university .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
68,Give me all world heritage sites designated within the past two years.,"```sparql
SELECT ?site ?siteLabel ?designationDate
WHERE {
  ?site rdf:type dbo:WorldHeritageSite ;
        dbo:designationDate ?designationDate .
  FILTER (YEAR(?designationDate) >= YEAR(NOW()) - 2)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
69,Give me all actors who were born in Paris after 1950.,"```sparql
SELECT DISTINCT ?actor ?actorName ?birthDate
WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?actorName ;
         dbo:birthPlace/dbo:location dbr:Paris ;
         dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) > 1950)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
70,Which movies star both Liz Taylor and Richard Burton?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
  ?movie rdf:type dbo:Film .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
71,Give me all Australian nonprofit organizations.,"```sparql
SELECT DISTINCT ?org
WHERE {
  ?org a <http://dbpedia.org/ontology/NonprofitOrganisation> ;
       dct:subject <http://dbpedia.org/resource/Category:Non-profit_organisations_based_in_Australia> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
72,Which pope succeeded John Paul II?,"```sparql
SELECT ?successor
WHERE {
  dbr:Pope_John_Paul_II dbo:successor ?successor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
73,Give me all ESA astronauts.,"```sparql
SELECT ?astronaut ?name
WHERE {
  ?astronaut a <http://dbpedia.org/ontology/Astronaut> ;
             foaf:name ?name ;
             dbo:agency <http://dbpedia.org/resource/European_Space_Agency> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
74,Who was president of Pakistan in 1978?,"```sparql
SELECT ?president
WHERE {
  ?president dbpedia-owl:office dbpedia:President_of_Pakistan .
  ?president dbpprop:termStart ?start .
  ?president dbpprop:termEnd ?end .
  FILTER (?start <= ""1978-01-01""^^xsd:date && ?end >= ""1978-12-31""^^xsd:date)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
75,Who is the owner of Rolls-Royce?,"```sparql
SELECT ?owner
WHERE {
  dbpedia:Rolls-Royce_Motor_Cars dbo:owner ?owner .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
76,How many museums does Paris have?,"```sparql
SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:Paris .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
77,Where was JFK assassinated?,"```sparql
SELECT ?place
WHERE {
  dbr:Assassination_of_John_F._Kennedy dbo:location ?place .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
78,Give me all federal chancellors of Germany.,"```sparql
SELECT ?chancellor ?birthDate ?deathDate
WHERE {
  ?chancellor a dbpedia-owl:Chancellor ;
              dbpedia-owl:birthDate ?birthDate .
  OPTIONAL { ?chancellor dbpedia-owl:deathDate ?deathDate }
  FILTER regex(str(?chancellor), ""Federal_Chancellor_of_Germany"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
79,Show me everyone who was born on Halloween.,"```sparql
SELECT ?person ?name ?birthdate
WHERE {
  ?person dbo:birthDate ?birthdate ;
         foaf:name ?name .
  FILTER (regex(str(?birthdate), ""10-31""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
80,Which beer originated in Ireland?,"```sparql
SELECT DISTINCT ?beer
WHERE {
  ?beer dbo:origin <http://dbpedia.org/resource/Ireland> .
  ?beer rdf:type dbo:Beer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
81,To which countries does the Himalayan mountain system extend?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?himalayas dbpedia-owl:location ?country .
  ?himalayas rdf:type dbpedia-owl:MountainRange .
  FILTER regex(str(?himalayas), ""Himalayas"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
82,Which actors were born in Germany?,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace/dbo:country dbr:Germany .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
83,How much carbs does peanut butter have?,"```sparql
SELECT ?carbsAmount
WHERE {
  <http://dbpedia.org/resource/Peanut_butter> dbpedia-owl:carbohydrate ?carbsAmount .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
84,Who produced the most films?,"```sparql
SELECT ?producer (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:producer ?producer .
}
GROUP BY ?producer
ORDER BY DESC(?numFilms)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
85,How many employees does Google have?,"```sparql
SELECT ?employees
WHERE {
  <http://dbpedia.org/resource/Google> <http://dbpedia.org/property/numEmployees> ?employees
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
86,Give me all actors who were born in Berlin.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Berlin .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
87,Who created Goofy?,"```sparql
SELECT ?creator
WHERE {
  dbr:Goofy dbo:creator ?creator .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
88,Which music albums contain the song Last Christmas?,"```sparql
SELECT DISTINCT ?album ?albumName
WHERE {
  ?song rdf:type dbo:Song ;
        rdfs:label ""Last Christmas""@en .
  ?album dbo:recordedIn ?song ;
        rdfs:label ?albumName .
  FILTER(langMatches(lang(?albumName), ""en""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
89,When was Alberta admitted as province?,"```sparql
SELECT ?admissionDate
WHERE {
  dbr:Alberta dbo:admissionDate ?admissionDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
90,How many missions does the Soyuz programme have?,"```sparql
SELECT (COUNT(?mission) AS ?numMissions)
WHERE {
  ?programme dbo:wikiPageID 118413 .
  ?mission dbo:programme ?programme .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
91,Give me all the TV shows with Neil Patrick Harris.,"```sparql
SELECT DISTINCT ?tvShow
WHERE {
  ?tvShow dbo:starring dbr:Neil_Patrick_Harris .
  ?tvShow rdf:type dbo:TelevisionShow .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
92,When were the Hells Angels founded?,"```sparql
SELECT ?foundingDate
WHERE {
  dbr:Hells_Angels dbo:foundingDate ?foundingDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
93,What is the net income of Apple?,"```sparql
SELECT ?netIncome
WHERE {
  dbpedia:Apple_Inc dbpedia-owl:netIncome ?netIncome
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
94,Give me all Swedish holidays.,"```sparql
SELECT ?holiday
WHERE {
  ?holiday dct:subject dbc:Public_holidays_in_Sweden .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
95,In which city was the former Dutch queen Juliana buried?,"```sparql
SELECT ?city
WHERE {
  dbr:Juliana_of_the_Netherlands dbp:placeOfBurial ?place .
  ?place dbo:location ?city .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
96,List all the musicals with music by Leonard Bernstein.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical a dbo:Musical ;
           dbo:musicComposer dbr:Leonard_Bernstein .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
97,Give me all companies in the advertising industry.,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dct:subject dbc:Advertising_agencies .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
98,What is the largest metropolitan area in Washington state?,"```sparql
SELECT ?metropolitanArea ?metropolitanAreaName ?populationTotal
WHERE {
  ?metropolitanArea a dbo:MetropolitanArea ;
                   dbo:country dbr:Washington_(state) ;
                   dbo:populationTotal ?populationTotal ;
                   rdfs:label ?metropolitanAreaName .
  FILTER (langMatches(lang(?metropolitanAreaName), ""en""))
}
ORDER BY DESC(?populationTotal)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
99,Who killed John Lennon?,"```sparql
SELECT ?killer
WHERE {
  dbpedia:John_Lennon dbo:deathCause ?cause .
  ?cause rdfs:label ""Assassination"" .
  dbpedia:John_Lennon dbo:assassination ?assassination .
  ?assassination dbo:motive ?motive .
  ?motive rdfs:label ?killer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
100,Which writers studied in Istanbul?,"```sparql
SELECT DISTINCT ?writer
WHERE {
  ?writer dbo:birthPlace dbr:Istanbul .
  ?writer a dbo:Writer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
101,Give me all Australian metalcore bands.,"```sparql
SELECT DISTINCT ?band
WHERE {
  ?band rdf:type dbo:Band ;
        dbo:genre dbr:Metalcore ;
        dbo:hometown dbr:Australia .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
102,Which countries adopted the Euro?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country a dbo:Country ;
           dbo:currency dbr:Euro .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
103,Give me all types of eating disorders.,"```sparql
SELECT DISTINCT ?eatingDisorder
WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
104,Was Marc Chagall a jew?,"```sparql
SELECT ?person
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Marc Chagall"" ;
          dbo:religion dbr:Judaism .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"```sparql
SELECT ?rank
WHERE {
  dbpedia:Brazil dbpedia-owl:lowestFifaRank ?rank .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
106,How many films did Leonardo DiCaprio star in?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film a dbo:Film ;
        dbo:starring dbr:Leonardo_DiCaprio .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
107,Was Margaret Thatcher a chemist?,"```sparql
SELECT ?person
WHERE {
  ?person rdf:type dbo:Person ;
          foaf:name ""Margaret Thatcher"" ;
          dbo:profession dbr:Chemist .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
108,Which U.S. states are in the same time zone as Utah?,"```sparql
SELECT DISTINCT ?state
WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timeZone .
  ?state dbpedia-owl:timeZone ?timeZone .
  ?state a dbpedia-owl:State .
  FILTER (?state != dbpedia:Utah)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
109,Give me all books written by Danielle Steel.,"```sparql
SELECT ?book
WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Danielle Steel"" .
  ?book dbo:author ?author ;
        a dbo:Book .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
110,Which country has the most official languages?,"```sparql
SELECT ?country ?numLanguages
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
  {
    SELECT ?country (COUNT(?language) AS ?numLanguages)
    WHERE {
      ?country a dbo:Country ;
               dbo:officialLanguage ?language .
    }
    GROUP BY ?country
    ORDER BY DESC(?numLanguages)
    LIMIT 1
  }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
111,What is the total amount of men and women serving in the FDNY?,"```sparql
SELECT (COUNT(?person) AS ?total)
WHERE {
  ?person a dbo:Person ;
          dbo:occupation dbr:Firefighter ;
          dbo:employer dbr:New_York_City_Fire_Department .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
112,Which actor played Chewbacca?,"```sparql
SELECT ?actor
WHERE {
  ?film dbpedia-owl:starring ?actor .
  ?film dbpedia-owl:wikiPageWikiLink dbpedia:Chewbacca .
  ?actor a dbpedia-owl:Actor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
113,Give me all libraries established earlier than 1400.,"```sparql
SELECT DISTINCT ?library ?libraryLabel ?established
WHERE {
  ?library rdf:type dbo:Library ;
           dbo:established ?established .
  FILTER(YEAR(?established) < 1400)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
114,Which programming languages were influenced by Perl?,"```sparql
SELECT DISTINCT ?language
WHERE {
  ?language dbo:influencedBy dbr:Perl .
  ?language rdf:type dbo:ProgrammingLanguage .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
115,In which U.S. state is Mount McKinley located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Mount_McKinley> dbpedia-owl:location ?state .
  ?state a dbpedia-owl:State .
  ?state dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
116,What airlines are part of the SkyTeam alliance?,"```sparql
SELECT DISTINCT ?airline
WHERE {
  ?airline dbo:alliance <http://dbpedia.org/resource/SkyTeam> .
  ?airline a dbo:Airline .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
117,Which ships were called after Benjamin Franklin?,"```sparql
SELECT ?ship
WHERE {
  ?ship rdf:type dbo:Ship .
  ?ship dbo:shipName ""Benjamin Franklin"" .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
118,Give me all Methodist politicians.,"```sparql
SELECT DISTINCT ?politician
WHERE {
  ?politician a dbo:Politician ;
              dbo:party dbr:Methodism .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
119,What other books have been written by the author of The Fault in Our Stars?,"```sparql
SELECT ?book
WHERE {
  <http://dbpedia.org/resource/John_Green> <http://dbpedia.org/ontology/notableWork> ?book .
  FILTER (?book != <http://dbpedia.org/resource/The_Fault_in_Our_Stars>)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
120,What is the highest mountain?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain a dbo:Mountain ;
            dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
121,Which poet wrote the most books?,"```sparql
SELECT ?poet (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a dbo:Person ;
        dbo:notableWork ?book .
}
GROUP BY ?poet
ORDER BY DESC(?numBooks)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
122,Which programming languages influenced Javascript?,"```sparql
SELECT DISTINCT ?influencedLanguage
WHERE {
  dbr:JavaScript dbo:influenced ?influencedLanguage .
  ?influencedLanguage a dbo:ProgrammingLanguage .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
123,Which musician wrote the most books?,"```sparql
SELECT ?musician (COUNT(?book) AS ?numBooks)
WHERE {
  ?musician a dbo:MusicalArtist ;
            foaf:publications ?book .
}
GROUP BY ?musician
ORDER BY DESC(?numBooks)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
124,Which films starring Clint Eastwood did he direct himself?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Clint_Eastwood .
  FILTER EXISTS { ?film dbo:director ?director .
                 ?director foaf:name ""Clint Eastwood""@en }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
125,Which software has been developed by organizations founded in California?,"```sparql
SELECT DISTINCT ?software
WHERE {
  ?organization dbo:location dbr:California ;
                dbo:product ?software .
  ?software a dbo:Software .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
126,Which instruments does Cat Stevens play?,"```sparql
SELECT DISTINCT ?instrument
WHERE {
  ?person dbpedia-owl:instrument ?instrument .
  ?person foaf:name ""Cat Stevens""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
127,How many airlines are members of the Star Alliance?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline a dbpedia-owl:Airline ;
           dbpprop:alliance dbpedia:Star_Alliance .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
128,Give me all actors called Baldwin.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         foaf:surname ""Baldwin"" .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
129,Who wrote The Hunger Games?,"```
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Hunger Games""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
130,For which label did Elvis record his first album?,"```sparql
SELECT ?albumLabel
WHERE {
  ?elvis a dbpedia-owl:Artist ;
         dbpedia-owl:album ?album .
  ?album rdfs:label ?albumLabel .
  FILTER regex(?albumLabel, ""Elvis Presley"", ""i"") .
} ORDER BY ?album
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
131,Is Christian Bale starring in Batman Begins?,"```sparql
SELECT ?actor
WHERE {
  ?film dbpedia-owl:starring ?actor ;
        dbpedia-owl:wikiPageID ?id .
  FILTER (?id = 11869)
  FILTER regex(?actor, ""Christian Bale"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
132,Where is the residence of the prime minister of Spain?,"```sparql
SELECT ?residence
WHERE {
  <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/ontology/residence> ?residence .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
133,Which actor was casted in the most movies?,"```sparql
SELECT ?actor (COUNT(?film) AS ?numMovies)
WHERE {
  ?actor a dbo:Actor .
  ?actor dbo:starring ?film .
} 
GROUP BY ?actor
ORDER BY DESC(?numMovies)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
134,Which countries have more than two official languages?,"```sparql
SELECT DISTINCT ?country ?numLanguages
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
  {
    SELECT ?country (COUNT(?language) AS ?numLanguages)
    WHERE {
      ?country a dbo:Country ;
               dbo:officialLanguage ?language .
    }
    GROUP BY ?country
    HAVING (COUNT(?language) > 2)
  }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
135,Which countries have more than ten caves?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbo:location ?country .
  {
    SELECT ?country (COUNT(?cave) AS ?numCaves)
    WHERE {
      ?cave rdf:type dbo:Cave .
      ?cave dbo:location ?country .
    }
    GROUP BY ?country
    HAVING (COUNT(?cave) > 10)
  }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"```sparql
SELECT ?song
WHERE {
  ?album dbo:artist dbr:Bruce_Springsteen ;
         dbo:releaseDate ?date .
  ?song dbo:album ?album ;
        rdf:type dbo:Song .
  FILTER (xsd:integer(?date) >= 1980 && xsd:integer(?date) <= 1990)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
137,Which television shows were created by John Cleese?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:John_Cleese .
  ?show rdf:type dbo:TelevisionShow .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
138,When did Latvia join the EU?,"```sparql
SELECT ?date
WHERE {
  dbr:Latvia dbo:accessionDate ?date.
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
139,Which soccer players were born on Malta?,"```sparql
SELECT DISTINCT ?player
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthPlace dbr:Malta .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
140,How many politicians graduated from Columbia University?,"```sparql
SELECT (COUNT(?politician) AS ?count)
WHERE {
  ?politician a dbpedia-owl:Politician ;
              dbpedia-owl:almaMater dbr:Columbia_University .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
141,Give me the birthdays of all actors of the television show Charmed.,"```sparql
SELECT DISTINCT ?actor ?birthday
WHERE {
  ?actor dbo:starring dbr:Charmed .
  ?actor dbo:birthDate ?birthday .
  ?actor a dbo:Actor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
142,Which telecommunications organizations are located in Belgium?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation ;
                dbo:location dbr:Belgium ;
                dbo:industry dbr:Telecommunications .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
143,Give me a list of all lakes in Denmark.,"```sparql
SELECT ?lake
WHERE {
  ?lake rdf:type dbo:Lake ;
        dbo:country dbr:Denmark .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
144,How many children does Eddie Murphy have?,"```sparql
SELECT (COUNT(?child) as ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Eddie_Murphy> dbpedia-owl:child ?child .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
145,Show me all English Gothic buildings in Kent.,"```sparql
SELECT DISTINCT ?building
WHERE {
  ?building rdf:type dbo:Building ;
           dbo:architecturalStyle dbr:English_Gothic_architecture ;
           dbo:location dbr:Kent .
  FILTER (LANG(?building) = ""en"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
146,Who is the manager of Real Madrid?,"```sparql
SELECT ?manager
WHERE {
  <http://dbpedia.org/resource/Real_Madrid_CF> <http://dbpedia.org/property/manager> ?manager .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
147,In which countries can you pay using the West African CFA franc?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?country dbpedia-owl:currency dbpedia:West_African_CFA_franc .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
148,Which holidays are celebrated around the world?,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
149,What is the longest river?,"```sparql
SELECT ?river ?length
WHERE {
  ?river a dbo:River ;
         dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
150,Which organizations were founded in 1930?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation ;
                dbo:formationDate ?date .
  FILTER (year(?date) = 1930)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
151,What is the birth name of Angela Merkel?,"```sparql
SELECT ?birthName
WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
152,Who has Tom Cruise been married to?,"```sparql
SELECT ?spouse
WHERE {
  dbpedia:Tom_Cruise dbpedia-owl:spouse ?spouse .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
153,Which weapons did Heckler & Koch develop?,"```sparql
SELECT ?weapon
WHERE {
  ?company dbo:developer dbr:Heckler_&_Koch ;
           dbo:product ?weapon .
  FILTER regex(str(?weapon), ""weapon"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
154,What is the smallest city by area in Germany?,"```sparql
SELECT ?city ?area
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Germany ;
        dbo:areaTotal ?area .
} 
ORDER BY ASC(?area)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
155,What is the ruling party in Lisbon?,"```sparql
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Lisbon> dbpedia-owl:rulingParty ?party .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
156,How heavy is Jupiter's lightest moon?,"```sparql
SELECT ?moon ?mass
WHERE {
  ?moon dct:subject dbc:Moons_of_Jupiter ;
       dbo:mass ?mass .
  FILTER (?mass > 0)
}
ORDER BY ?mass
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
157,How many employees does IBM have?,"```sparql
SELECT ?employees
WHERE {
  dbpedia:IBM dbo:numberOfEmployees ?employees
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
158,List all episodes of the first season of the HBO television series The Sopranos!,"```sparql
SELECT ?episode ?episodeLabel
WHERE {
  ?season dbo:seasonNumber ""1""^^xsd:integer ;
         dbo:episodes ?episode .
  ?episode a dbo:TelevisionEpisode ;
           rdfs:label ?episodeLabel .
  FILTER regex(?episodeLabel, ""The Sopranos"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
159,What does ICRO stand for?,"```sparql
SELECT ?definition
WHERE {
  dbpedia:ICRO dbo:wikiPageRedirects ?icro .
  ?icro rdfs:comment ?definition .
  FILTER (lang(?definition) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"```sparql
SELECT ?newEpisodes ?oldEpisodes
WHERE {
  {
    SELECT (COUNT(?episode) AS ?newEpisodes)
    WHERE {
      ?series1 dbo:relatedWork dbr:Battlestar_Galactica_(2004_TV_series) .
      ?episode dbo:series ?series1 .
    }
  }
  {
    SELECT (COUNT(?episode) AS ?oldEpisodes)
    WHERE {
      ?series2 dbo:relatedWork dbr:Battlestar_Galactica_(1978_TV_series) .
      ?episode dbo:series ?series2 .
    }
  }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
161,Give me all films produced by Hal Roach.,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film a dbo:Film .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
162,Who played Agent Smith in Matrix?,"SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""The Matrix""@en .
  ?actor foaf:name ""Hugo Weaving""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
163,Which Greek parties are pro-European?,"```sparql
SELECT DISTINCT ?party
WHERE {
  ?party a dbpedia-owl:PoliticalParty ;
         dbpedia-owl:country dbpedia:Greece ;
         dbpedia-owl:position dbpedia:Pro-European.
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
164,Give me a list of all bandleaders that play trumpet.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:MusicalArtist ;
              dbo:instrument dbr:Trumpet .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
165,What is the second highest mountain on Earth?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:elevation ?height .
} 
ORDER BY DESC(?height)
LIMIT 2
OFFSET 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
166,Is Egypts largest city also its capital?,"```sparql
SELECT ?city ?capital
WHERE {
  dbr:Egypt dbo:largestCity ?city ;
            dbo:capital ?capital .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
167,Which rockets were launched from Baikonur?,"```sparql
SELECT DISTINCT ?rocket
WHERE {
  ?rocket dbp:launchSite dbr:Baikonur_Cosmodrome .
  ?rocket a dbo:Rocket .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
168,How many programming languages are there?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
169,Which Chess players died in the same place they were born in?,"```sparql
SELECT DISTINCT ?player ?birthPlace
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
170,Who is the owner of Facebook?,"```sparql
SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/owner> ?owner .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
171,Give me all movies with Tom Cruise.,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie rdf:type dbo:Film .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
172,In which U.S. state is Fort Knox located?,"```sparql
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Fort_Knox> dbpedia-owl:location ?location .
  ?location dbpedia-owl:country <http://dbpedia.org/resource/United_States> .
  ?location dbpedia-owl:state ?state .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population ;
        dbo:country dbr:New_Jersey ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
174,Which mountains are higher than the Nanga Parbat?,"```sparql
SELECT DISTINCT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:height ?height .
  FILTER (?height > (SELECT ?nangaHeight WHERE { dbr:Nanga_Parbat dbo:height ?nangaHeight }))
}
ORDER BY DESC(?height)
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
175,Give me all B-sides of the Ramones.,"```sparql
SELECT ?bSide
WHERE {
  ?album dbo:artist dbr:Ramones ;
        dbo:type dbr:B-side ;
        dbo:recordedAt ?studio .
  ?bSide dbo:partOf ?album .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
176,What are the specialities of the UNC Health Care?,"```sparql
SELECT ?specialty
WHERE {
  <http://dbpedia.org/resource/UNC_Health_Care> dbpedia-owl:specialty ?specialty .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
177,When was Olof Palme shot?,"```sparql
SELECT ?date
WHERE {
  dbr:Assassination_of_Olof_Palme dbo:date ?date .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
178,List the seven kings of Rome.,"```sparql
SELECT ?king ?name
WHERE {
  ?king a dbo:Monarch ;
        dbo:predecessor dbr:Romulus ;
        dbo:successor ?successor ;
        rdfs:label ?name .
  FILTER(langMatches(lang(?name), ""EN""))
}
ORDER BY ?king
LIMIT 7
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
179,Give me all people that were born in Vienna and died in Berlin.,"```sparql
SELECT ?person ?personLabel
WHERE {
  ?person rdf:type dbo:Person ;
          dbo:birthPlace dbr:Vienna ;
          dbo:deathPlace dbr:Berlin .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
180,Is Darth Vader Luke’s father?,"```sparql
SELECT ?father
WHERE {
  dbpedia:Luke_Skywalker dbpedia-owl:parent ?father .
  FILTER (?father = dbpedia:Darth_Vader)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
181,Show me all the breweries in Australia.,"```sparql
SELECT ?brewery
WHERE {
  ?brewery a dbpedia-owl:Brewery ;
           dbpedia-owl:country dbpedia:Australia .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:producer dbr:Steven_Spielberg ;
        dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
183,Give me all soccer clubs in Spain.,"```sparql
SELECT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:country dbr:Spain .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
184,Who produced films starring Natalie Portman?,"```sparql
SELECT DISTINCT ?producer
WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
185,Give me all breeds of the German Shepherd dog.,"```sparql
SELECT ?breed
WHERE {
  ?breed rdf:type dbo:DogBreed ;
         rdfs:label ?label .
  FILTER regex(?label, ""German Shepherd"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
186,Who is the heaviest player of the Chicago Bulls?,"```sparql
SELECT ?player ?weight
WHERE {
  ?player dbpedia-owl:team dbpedia:Chicago_Bulls ;
          dbpedia-owl:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
187,Which languages are spoken in Estonia?,"```sparql
SELECT DISTINCT ?language
WHERE {
  <http://dbpedia.org/resource/Estonia> dbpedia-owl:language ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
188,What is the largest country in the world?,"```sparql
SELECT ?country ?area
WHERE {
  ?country a dbo:Country ;
           dbo:area ?area .
}
ORDER BY DESC(?area)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
189,What is the largest city in america?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:United_States ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
190,Who was the pope that founded the Vatican Television?,"```sparql
SELECT ?pope
WHERE {
  ?pope dbpedia-owl:founded dbpedia:Vatican_Television .
  ?pope a dbpedia-owl:Pope .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
191,Who discovered Ceres?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Ceres dbo:discoverer ?discoverer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
192,Who is the king of the Netherlands?,"```sparql
SELECT ?king
WHERE {
  dbpedia:Netherlands dbpedia-owl:leader ?king .
  ?king a dbpedia-owl:Monarch .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
193,Is Cola a beverage?,"```sparql
ASK {
  dbpedia:Cola dct:subject dbc:Beverages .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"```sparql
SELECT ?almaMater
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?almaMater .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
195,Who wrote the book Les Piliers de la terre?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
       rdfs:label ""Les Piliers de la terre""@fr .
  FILTER(LANG(?author) = ""en"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
196,Which airports does Yeti Airlines serve?,"```sparql
SELECT DISTINCT ?airport
WHERE {
  ?airline dbo:operates ?route .
  ?route dbo:arrivalAirport ?airport .
  FILTER regex(str(?airline), ""Yeti Airlines"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
197,Where is the birthplace of Goethe?,"```sparql
SELECT ?birthplace
WHERE {
  <http://dbpedia.org/resource/Johann_Wolfgang_von_Goethe> dbpedia-owl:birthPlace ?birthplace .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"```sparql
SELECT ?event1 ?event2
WHERE {
  { 
    ?event1 a dbo:MilitaryConflict ;
            rdfs:label ""Cuban Missile Crisis""@en ;
            dbo:startDate ?date1 .
  }
  UNION
  {
    ?event2 a dbo:MilitaryConflict ;
            rdfs:label ""Bay of Pigs Invasion""@en ;
            dbo:startDate ?date2 .
  }
  FILTER (?date1 < ?date2)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
199,Which ingredients do I need for carrot cake?,"```sparql
SELECT ?ingredient
WHERE {
  ?cake dbo:ingredient ?ingredient .
  FILTER regex(?cake, ""Carrot cake"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
200,Who created Wikipedia?,"```
SELECT ?creator
WHERE {
  dbr:Wikipedia dct:creator ?creator .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
201,What is the highest mountain in Saxony Germany?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:locatedInArea dbr:Saxony ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
202,Who is the current federal minister of finance in Germany?,"```sparql
SELECT ?minister
WHERE {
  <http://dbpedia.org/resource/Germany> <http://dbpedia.org/ontology/government> ?government .
  ?government <http://dbpedia.org/ontology/minister> ?minister .
  ?minister <http://dbpedia.org/ontology/ministerialTitle> ?title .
  FILTER (regex(?title, ""Federal Minister of Finance"", ""i""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
203,In which country is Mecca located?,"```sparql
SELECT ?country
WHERE {
  dbpedia:Mecca dbpedia-owl:country ?country .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
204,Who played Gus Fring in Breaking Bad?,"```sparql
SELECT ?actor
WHERE {
  ?actor dbp:character ?character ;
         dbp:tvShow/dbp:name ""Breaking Bad""@en .
  FILTER regex(?character, ""Gus Fring"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
205,In which country does the Nile start?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Nile> dbpedia-owl:sourceCountry ?country .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
206,In which state Penn State University is located?,"```sparql
SELECT ?state
WHERE {
  dbpedia:Pennsylvania_State_University dbpedia-owl:state ?state .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
207,What is the biggest stadium in Spain?,"```sparql
SELECT ?stadium ?stadiumName ?capacity
WHERE {
  ?stadium a dbpedia-owl:Stadium ;
           dbpedia-owl:location dbpedia:Spain ;
           dbpedia-owl:capacity ?capacity .
  FILTER (?capacity > 80000)
  OPTIONAL { ?stadium rdfs:label ?stadiumName }
  FILTER (lang(?stadiumName) = 'en')
}
ORDER BY DESC(?capacity)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
208,Who is the coach of Ankara's ice hockey team?,"```sparql
SELECT ?coach
WHERE {
  ?team dbpedia-owl:city dbpedia:Ankara ;
        dbpedia-owl:sport dbpedia:Ice_hockey ;
        dbpedia-owl:coach ?coach .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
209,How large is the area of UK?,"```sparql
SELECT ?area
WHERE {
  <http://dbpedia.org/resource/United_Kingdom> <http://dbpedia.org/ontology/areaTotal> ?area
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
210,Who created Batman?,"```sparql
SELECT ?creator
WHERE {
  <http://dbpedia.org/resource/Batman> dbpedia-owl:creator ?creator .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
211,Was Sigmund Freud married?,"```sparql
SELECT ?spouse
WHERE {
  dbpedia:Sigmund_Freud dbpedia-owl:spouse ?spouse .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
212,Who are the developers of DBpedia?,"```sparql
SELECT ?developer
WHERE {
  dbr:DBpedia dbo:developer ?developer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
213,Give me all movies directed by Francis Ford Coppola.,"```sparql
SELECT ?movie
WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
  ?movie rdf:type dbo:Film .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
214,Are tree frogs a type of amphibian?,"```sparql
SELECT ?type
WHERE {
  dbpedia:Tree_frog dct:subject ?type .
  ?type skos:broader category:Amphibians .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
215,What is the location of the Houses of Parliament?,"```sparql
SELECT ?location
WHERE {
  <http://dbpedia.org/resource/Houses_of_Parliament> dbpedia-owl:location ?location .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
216,how much is the elevation of Düsseldorf Airport ?,"```sparql
SELECT ?elevation
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
217,How much is the population of mexico city ?,"```sparql
SELECT ?population
WHERE {
  dbpedia:Mexico_City dbo:populationTotal ?population .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
218,when was the founding date of french fifth republic?,"```sparql
SELECT ?foundingDate
WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?foundingDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
219,Who was the first King of England?,"```sparql
SELECT ?king
WHERE {
  ?king a dbpedia-owl:Monarch ;
        dbpedia-owl:reignStart ?start .
  FILTER (?start = xsd:date(""1066-12-25""))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
220,Who is the editor of Forbes?,"```sparql
SELECT ?editor
WHERE {
  <http://dbpedia.org/resource/Forbes> <http://dbpedia.org/ontology/editor> ?editor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
221,Which awards did Douglas Hofstadter win?,"```sparql
SELECT ?award
WHERE {
  dbpedia:Douglas_Hofstadter dbpedia-owl:award ?award .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
222,Who is the youngest Darts player?,"```sparql
SELECT ?player ?birthdate
WHERE {
  ?player a dbpedia-owl:DartsPlayer ;
          dbpedia-owl:birthDate ?birthdate .
}
ORDER BY ASC(?birthdate)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
223,Is horse racing a sport?,"```sparql
SELECT ?sport
WHERE {
  dbpedia:Horse_racing dct:subject ?sport .
  FILTER regex(str(?sport), ""Sports"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
224,Which river does the Brooklyn Bridge cross?,"```sparql
SELECT ?river
WHERE {
  <http://dbpedia.org/resource/Brooklyn_Bridge> dbpedia-owl:crosses ?river .
  ?river a dbpedia-owl:River .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
225,How many people live in Poland?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/populationTotal> ?population
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
226,When was the last episode of the TV series Friends aired?,"```sparql
SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Friends> <http://dbpedia.org/ontology/lastAired> ?date .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
227,Is the wife of president Obama called Michelle?,"```sparql
SELECT ?wifeName
WHERE {
  ?president a dbpedia-owl:President ;
             foaf:name ""Barack Obama""@en ;
             dbpedia-owl:spouse ?wife .
  ?wife foaf:name ?wifeName .
  FILTER (?wifeName = ""Michelle Obama"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
229,Who is 8th president of US?,"```sparql
SELECT ?president
WHERE {
  ?president a dbo:President ;
             dbo:order 8 .
  FILTER regex(str(?president), ""List_of_Presidents_of_the_United_States"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
230,how much is the total population of  european union?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/European_Union> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
231,Give me all launch pads operated by NASA.,"```sparql
SELECT DISTINCT ?launchPad
WHERE {
  ?launchPad rdf:type dbo:LaunchPad ;
            dbo:operator dbr:NASA .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
232,Who developed the video game World of Warcraft?,"```sparql
SELECT ?developer
WHERE {
  <http://dbpedia.org/resource/World_of_Warcraft> dbpedia-owl:developer ?developer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
233,What is the birth name of Adele?,"```sparql
SELECT ?birthName
WHERE {
  dbpedia:Adele dbpedia-owl:birthName ?birthName
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
234,What is the population of Cairo?,"```
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Cairo> <http://dbpedia.org/ontology/populationTotal> ?population
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
235,Is Frank Herbert still alive?,"SELECT ?person ?deathDate
WHERE {
  ?person foaf:name ""Frank Herbert""@en ;
          dbo:deathDate ?deathDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
236,What is the last work of Dan Brown?,"```sparql
SELECT ?workLabel
WHERE {
  wd:Q36180 wdt:P800 ?work .
  ?work wdt:P577 ?date .
  ?work rdfs:label ?workLabel .
  FILTER(LANG(?workLabel) = ""en"")
}
ORDER BY DESC(?date)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
237,Where is Sungkyunkwan University?,"```
SELECT ?location
WHERE {
  dbpedia:Sungkyunkwan_University dbpedia-owl:location ?location .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
238,Who is the author of the interpretation of dreams?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author .
  ?book foaf:name ""The Interpretation of Dreams""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
239,When was the death  of  Shakespeare?,"```sparql
SELECT ?deathDate
WHERE {
  <http://dbpedia.org/resource/William_Shakespeare> <http://dbpedia.org/ontology/deathDate> ?deathDate .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
241,Who developed Slack?,"```sparql
SELECT ?developer
WHERE {
  dbr:Slack_(software) dbo:developer ?developer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
242,Where is the origin of Carolina reaper?,"```sparql
SELECT ?origin
WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
243,In which year was Rachel Stevens born?,"SELECT ?birthYear
WHERE {
  dbpedia:Rachel_Stevens dbo:birthDate ?birthDate .
  BIND (YEAR(?birthDate) AS ?birthYear)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
244,How often did Jane Fonda marry?,"```sparql
SELECT (COUNT(?spouse) as ?marriage_count)
WHERE {
  <http://dbpedia.org/resource/Jane_Fonda> dbpedia-owl:spouse ?spouse .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
245,Was the wife of president Lincoln called Mary?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?wifeName
WHERE {
  ?president dbpedia-owl:spouse ?wife .
  ?wife foaf:name ""Mary Todd Lincoln"" .
  BIND(""Mary Todd Lincoln"" AS ?wifeName)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
246,Which cities does the Weser flow through?,"```sparql
SELECT DISTINCT ?city
WHERE {
  ?river a dbo:River ;
         rdfs:label ""Weser""@en ;
         dbo:city ?cityResource .
  ?cityResource rdfs:label ?city .
  FILTER (lang(?city) = ""en"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
247,In which programming language is GIMP written?,"```sparql
SELECT ?language
WHERE {
  dbpedia:GIMP dbpedia-owl:programmingLanguage ?language
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
248,Which university did Angela Merkel attend?,"```sparql
SELECT ?university
WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
  ?university a dbo:University .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
249,List all the musicals with music by Elton John.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical a dbo:Musical ;
           dbo:musicComposer dbr:Elton_John .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
250,How many Aldi stores are there?,"```sparql
SELECT (COUNT(?store) AS ?count)
WHERE {
  ?store rdf:type dbo:Store ;
         rdfs:label ""Aldi"" .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
251,What is the longest river in the world?,"```sparql
SELECT ?river ?length
WHERE {
  ?river a dbo:River ;
         dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
252,When was John Adams born?,"```sparql
SELECT ?birthdate
WHERE {
  dbpedia:John_Adams dbo:birthDate ?birthdate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
253,Which companies produce hovercrafts?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?hovercraft dbo:manufacturer ?company .
  ?hovercraft rdf:type dbo:Hovercraft .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
254,Who was the wife of U.S. president Lincoln?,"```sparql
SELECT ?wife
WHERE {
  <http://dbpedia.org/resource/Abraham_Lincoln> dbpedia-owl:spouse ?wife .
  ?wife a dbpedia-owl:Person .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
255,Which species does an elephant belong?,"```sparql
SELECT ?species
WHERE {
  dbpedia:Elephant dct:subject ?species .
  ?species dct:subject dbc:Species .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
256,How many people live in the capital of Australia?,"```sparql
SELECT ?population
WHERE {
  dbr:Canberra dbo:populationTotal ?population .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
257,In which ancient empire could you pay with cocoa beans?,"```sparql
SELECT ?empireLabel
WHERE {
  ?empire wdt:P31 wd:Q28171280; # ancient empire
          wdt:P2067 wd:Q1860. # accepted payment in cocoa beans
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
258,How many theories did Albert Einstein come up with?,"```sparql
SELECT (COUNT(?theory) AS ?num_theories)
WHERE {
  ?einstein a dbo:Scientist ;
           dbo:theories ?theory .
  FILTER (?einstein = dbr:Albert_Einstein)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
259,Who composed the soundtrack for Cameron's Titanic?,"```sparql
SELECT ?composer
WHERE {
  ?film dbpedia-owl:director dbpedia:James_Cameron ;
        dbpedia-owl:musicComposer ?composer .
  FILTER regex(str(?film), ""Titanic"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
260,Give me the runtime of Toy Story.,"```sparql
SELECT ?runtime
WHERE {
  <http://dbpedia.org/resource/Toy_Story> dbpedia-owl:runtime ?runtime .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
262,With how many countries Iran has borders?,"```sparql
SELECT (COUNT(?country) AS ?borderCount)
WHERE {
  dbpedia:Iran dbpedia-owl:country ?country .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
263,Which electronics companies were founded in Beijing?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company dct:subject dbc:Electronics_companies_of_China ;
           dbo:foundationPlace dbr:Beijing .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
264,Who was the successor of John F. Kennedy?,"```sparql
SELECT ?successor
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:successor ?successor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
265,Who is the mayor of Paris?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/leaderName> ?mayor .
  FILTER regex(?mayor, ""Mayor"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
266,Did Arnold Schwarzenegger attend a university?,"```sparql
SELECT ?university
WHERE {
  dbpedia:Arnold_Schwarzenegger dbpedia-owl:almaMater ?university .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
267,Is James Bond married?,"```sparql
SELECT ?person ?personName ?spouse
WHERE {
  ?person a dbo:Agent ;
         foaf:name ?personName ;
         dbo:spouse ?spouse .
  FILTER (?personName = ""James Bond"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
268,Does the Isar flow into a lake?,"```sparql
SELECT ?lake
WHERE {
  dbpedia:Isar dbpedia-owl:mouth ?lake .
  ?lake a dbpedia-owl:Lake
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
269,Which Indian company has the most employees?,"```sparql
SELECT ?company ?employees
WHERE {
  ?company rdf:type dbo:Company ;
          dbo:country dbr:India ;
          dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?employees)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
270,Who was John F. Kennedy's vice president?,"```sparql
SELECT ?vicePresident
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:vicePresident ?vicePresident .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
271,Which country does the creator of Miffy come from?,"```
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Miffy> <http://dbpedia.org/ontology/creator> ?creator .
  ?creator <http://dbpedia.org/ontology/country> ?country .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
273,In what city is the Heineken brewery?,"```
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Heineken_Brewery> dbpedia-owl:location ?city .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
274,Is Barack Obama a democrat?,"```sparql
SELECT ?party
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  FILTER (?party = dbpedia:Democratic_Party_(United_States))
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
275,List the children of Margaret Thatcher.,"```sparql
SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
276,From which region is the Melon de Bourgogne?,"```sparql
SELECT ?region
WHERE {
  <http://dbpedia.org/resource/Melon_de_Bourgogne> dbpedia-owl:region ?region .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
278,how big is the total area of North Rhine- Westphalia?,"```sparql
SELECT ?area
WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?area
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
279,Which city has the most inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
280,What is Donald Trump's main business?,"```sparql
SELECT ?business
WHERE {
  dbpedia:Donald_Trump dbpedia-owl:occupation ?business .
  FILTER regex(?business, ""business"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
281,When will start the final match of the football world cup 2018?,"SELECT ?date
WHERE {
  dbpedia:2018_FIFA_World_Cup dbpedia-owl:finalMatch ?finalMatch .
  ?finalMatch dbpedia-owl:date ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
282,Which films did Stanley Kubrick direct?,"```sparql
SELECT ?film
WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
283,how much is the population  Iraq?,"```sparql
SELECT ?population
WHERE {
  dbpedia:Iraq dbo:populationTotal ?population .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
284,How many inhabitants does the largest city in Canada have?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Toronto> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
285,Who is the mayor of the capital of French Polynesia?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/French_Polynesia> <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://dbpedia.org/ontology/leaderName> ?mayor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
286,Give me all actors starring in movies directed by William Shatner.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner ;
        dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
287,How tall is Claudia Schiffer?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Claudia_Schiffer dbpedia-owl:height ?height
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
288,how much is the population densty rank of germany?,"```sparql
SELECT ?populationDensityRank
WHERE {
  dbpedia:Germany dbpedia-owl:populationDensityRank ?populationDensityRank
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
289,What is the highest mountain in Italy?,"```
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Italy ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
290,List all games by GMT.,"```sparql
SELECT ?game
WHERE {
  ?game dct:creator dbc:GMT_Games .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
291,What is the official language of Suriname?,"```
SELECT ?language
WHERE {
  dbpedia:Suriname dbpedia-owl:officialLanguage ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
292,In which city did Nikos Kazantzakis die?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Nikos_Kazantzakis> <http://dbpedia.org/ontology/deathPlace> ?place.
  ?place <http://dbpedia.org/ontology/isPartOf> ?city.
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
293,What is in a chocolate chip cookie?,"```sparql
SELECT ?ingredient
WHERE {
  <http://dbpedia.org/resource/Chocolate_chip_cookie> dbpedia-owl:ingredient ?ingredient .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
294,In which country is the Limerick Lake?,"```sparql
SELECT ?country
WHERE {
  dbr:Limerick_Lake dbo:country ?country .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
295,Give me all video games published by Mean Hamster Software.,"```sparql
SELECT DISTINCT ?game
WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game rdf:type dbo:VideoGame .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
296,Give me all members of Prodigy.,"```sparql
SELECT ?member
WHERE {
  ?band rdf:type dbo:Band ;
       foaf:name ""The Prodigy""@en ;
       dbo:bandMember ?member .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
297,In which time zone is Rome?,"```sparql
SELECT ?timezone
WHERE {
  dbr:Rome dbo:timeZone ?timezone
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
298,How high is the lighthouse in Colombo?,"```sparql
SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Colombo_Lighthouse> dbo:height ?height
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
299,Who are the writers of the Wall album of Pink Floyd?,"```sparql
SELECT DISTINCT ?writer
WHERE {
  ?album dbo:artist dbr:Pink_Floyd ;
        dbo:musicBy ?writer .
  FILTER (?album = dbr:The_Wall)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
300,Who is the mayor of Rotterdam?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Rotterdam> <http://dbpedia.org/ontology/leaderName> ?mayor .
  FILTER regex(?mayor, ""Mayor"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
301,What is the largest city in Australia?,"```sparql
SELECT ?city ?population
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Australia ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
302,Who was married to president Chirac?,"```sparql
SELECT ?spouse
WHERE {
  <http://dbpedia.org/resource/Jacques_Chirac> dbpedia-owl:spouse ?spouse .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
303,What form of government is found in South Africa?,"```sparql
SELECT ?governmentType
WHERE {
  dbpedia:South_Africa dbpedia-owl:governmentType ?governmentType
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
304,How high is the Yokohama Marine Tower?,"```sparql
SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Yokohama_Marine_Tower> <http://dbpedia.org/property/height> ?height .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
305,Which holidays are celebrated around the world? test2,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
306,Who is the tallest basketball player?,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbpedia-owl:BasketballPlayer ;
          dbpedia-owl:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
307,How many languages are spoken in Turkmenistan?,"```sparql
SELECT (COUNT(?language) AS ?countLanguages)
WHERE {
  <http://dbpedia.org/resource/Turkmenistan> dbpedia-owl:language ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
308,Did Che Guevara have children?,"```sparql
SELECT ?child
WHERE {
  dbpedia:Che_Guevara dbpedia-owl:child ?child .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"```sparql
SELECT ?film
WHERE {
  ?film dbpedia-owl:director dbr:Aki_Kaurismäki ;
        dbpedia-owl:award dbr:Grand_Prix ;
        dbpedia-owl:festival dbr:Cannes_Film_Festival .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
310,To which party does the mayor of Paris belong?,"```sparql
SELECT ?party
WHERE {
  <http://dbpedia.org/resource/Mayor_of_Paris> dbpedia-owl:party ?party .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
311,Who is the Formula 1 race driver with the most races?,"```sparql
SELECT ?driver ?name (COUNT(?race) AS ?numRaces)
WHERE {
  ?driver a dbpedia-owl:FormulaOneRacer ;
          foaf:name ?name ;
          dbpedia-owl:races ?race .
}
GROUP BY ?driver ?name
ORDER BY DESC(?numRaces)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
312,What country is Sitecore from?,"```sparql
SELECT ?country
WHERE {
  dbpedia:Sitecore dbpedia-owl:location ?country .
  ?country a dbpedia-owl:Country .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
313,Give me the birth place of Frank Sinatra.,"```sparql
SELECT ?birthPlace
WHERE {
  dbpedia:Frank_Sinatra dbpedia-owl:birthPlace ?birthPlace .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
314,Is Christian Bale starring in Velvet Goldmine?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Velvet Goldmine""@en .
  ?actor foaf:name ""Christian Bale""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
315,Who is the son of Sonny and Cher?,"```sparql
SELECT ?son
WHERE {
  <http://dbpedia.org/resource/Sonny_and_Cher> dbpedia-owl:child ?son .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
316,How many ethnic groups live in Slovenia?,"```sparql
SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  <http://dbpedia.org/resource/Slovenia> dbpedia-owl:ethnicGroups ?ethnicGroup .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
317,What is the capital of Cameroon?,"```
SELECT ?capital
WHERE {
  <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?capital .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
318,Was Natalie Portman born in the United States?,"```sparql
SELECT ?birthPlace
WHERE {
  dbpedia:Natalie_Portman dbpedia-owl:birthPlace ?birthPlace .
  ?birthPlace a dbpedia-owl:Country ;
              dbpedia-owl:country dbpedia:United_States .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
319,How many pages does War and Peace have?,"```sparql
SELECT ?pages
WHERE {
  <http://dbpedia.org/resource/War_and_Peace> <http://dbpedia.org/ontology/numberOfPages> ?pages
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
320,Who is the oldest child of Meryl Streep?,"```sparql
SELECT ?child
WHERE {
  dbpedia:Meryl_Streep dbpedia-owl:child ?child .
  ?child a dbpedia-owl:Person .
} ORDER BY ?child
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
321,Which television shows were created by Walt Disney?,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
322,What does IYCM stand for?,"```sparql
SELECT ?definition
WHERE {
  dbpedia:IYCM dbo:abbreviation ?definition
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
323,Which types of grapes grow in Oregon?,"```sparql
SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType a dbo:Grape ;
             dbo:growsIn dbr:Oregon .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
324,Was U.S. president Jackson involved in a war?,"```sparql
SELECT ?war
WHERE {
  dbpedia:Andrew_Jackson dct:subject ?war .
  ?war dct:subject dbc:Wars_involving_the_United_States .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
325,When was the Titanic completed?,"```sparql
SELECT ?completionDate
WHERE {
  <http://dbpedia.org/resource/RMS_Titanic> <http://dbpedia.org/ontology/completionDate> ?completionDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
326,Did Tesla win a nobel prize in physics?,"```sparql
SELECT ?scientist ?nobelPrize
WHERE {
  ?scientist foaf:name ""Nikola Tesla""@en .
  ?scientist dbp:nobelPrizes ?nobelPrize .
  FILTER regex(?nobelPrize, ""Physics"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
327,How many states are in Mexico?,"```sparql
SELECT (COUNT(?state) AS ?count)
WHERE {
  ?state a dbo:State ;
         dbo:country dbr:Mexico .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"```sparql
SELECT ?scientist
WHERE {
  ?scientist dbpedia-owl:knownFor dbpedia:Manhattan_Project, dbpedia:Nobel_Peace_Prize .
  ?scientist a dbpedia-owl:Scientist .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
329,How much did the Lego Movie cost?,"```sparql
SELECT ?cost
WHERE {
  dbr:The_Lego_Movie dbo:budget ?cost
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
330,Who composed the music for Harold and Maude?,"```sparql
SELECT ?composer
WHERE {
  ?film dbo:wikiPageID 118073 .
  ?film dbo:musicComposer ?composer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
331,List all episodes of the first season of the HBO television series The Sopranos.,"```sparql
SELECT ?episode ?episodeLabel
WHERE {
  ?season dbo:seasonNumber ""1""^^xsd:integer ;
          dbo:episodes ?episode .
  ?episode rdf:type dbo:TelevisionEpisode ;
           dbo:series dbr:The_Sopranos ;
           rdfs:label ?episodeLabel .
  FILTER(lang(?episodeLabel) = ""en"")
}
ORDER BY ?episode
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
332,Which city has the least inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
333,Where is Syngman Rhee buried?,"```
SELECT ?burialPlace
WHERE {
  dbpedia:Syngman_Rhee dbpedia-owl:burialPlace ?burialPlace .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
334,Does Neymar play for Real Madrid?,"```
SELECT ?player
WHERE {
  ?player rdf:type dbo:SoccerPlayer ;
          foaf:name ""Neymar"" ;
          dbo:team ?team .
  ?team rdf:type dbo:SportsTeam ;
       foaf:name ""Real Madrid"" .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
335,Who wrote the book The Pillars of the Earth?,"```sparql
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
       rdfs:label ""The Pillars of the Earth""@en .
  FILTER(LANG(?author) = ""en"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
336,Do Prince Harry and Prince William have the same parents?,"```sparql
SELECT ?parent
WHERE {
  dbr:Prince_Harry dbo:parent ?parent .
}
```

```sparql
SELECT ?parent
WHERE {
  dbr:Prince_William dbo:parent ?parent .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
337,Who was the doctoral supervisor of Albert Einstein?,"```sparql
SELECT ?supervisorName
WHERE {
  <http://dbpedia.org/resource/Albert_Einstein> dbpedia-owl:doctoralAdvisor ?supervisor .
  ?supervisor foaf:name ?supervisorName .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
338,Does Breaking Bad have more episodes than Game of Thrones?,"```sparql
SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes
WHERE {
  dbpedia:Breaking_Bad dbo:numberOfEpisodes ?breakingBadEpisodes .
  dbpedia:Game_of_Thrones dbo:numberOfEpisodes ?gameOfThronesEpisodes .
  FILTER (?breakingBadEpisodes > ?gameOfThronesEpisodes)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
339,Who was Vincent van Gogh inspired by?,"```sparql
SELECT DISTINCT ?inspiration
WHERE {
  ?artist a dbo:Artist ;
          foaf:name ""Vincent van Gogh""@en .
  ?inspiration dbo:influenced ?artist .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
340,Which building after the Burj Khalifa has the most floors?,"```sparql
SELECT ?building ?floors
WHERE {
  ?building rdf:type dbo:Building ;
           dbo:numberOfFloors ?floors .
  FILTER (?floors > 163 && ?building != dbr:Burj_Khalifa)
}
ORDER BY DESC(?floors)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
341,What was the final result of the War of the Roses?,"```
SELECT ?result
WHERE {
  dbr:Wars_of_the_Roses dbo:result ?result
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
342,How much did Pulp Fiction cost?,"```sparql
SELECT ?cost
WHERE {
  dbpedia:Pulp_Fiction dbo:budget ?cost
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
343,Is proinsulin a protein?,"```sparql
SELECT ?protein
WHERE {
  dbpedia:Proinsulin dct:subject dbc:Proteins .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
344,Do Urdu and Persian have a common root?,"```sparql
SELECT ?language1 ?language2
WHERE {
  ?language1 dbo:languageFamily ?family .
  ?language2 dbo:languageFamily ?family .
  FILTER (?language1 = dbr:Urdu && ?language2 = dbr:Persian)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?movie dbpedia-owl:starring ?actor ;
         dbpedia-owl:producer dbr:Benicio_del_Toro ;
         dbpedia-owl:country dbr:Spain .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
346,Is Lake Baikal bigger than the Great Bear Lake?,"```sparql
SELECT ?lake ?area
WHERE {
  { 
    SELECT ?lake ?area
    WHERE {
      ?lake a dbo:Lake ;
            dbo:area ?area ;
            rdfs:label ""Lake Baikal""@en .
    }
  }
  UNION
  {
    SELECT ?lake ?area
    WHERE {
      ?lake a dbo:Lake ;
            dbo:area ?area ;
            rdfs:label ""Great Bear Lake""@en .
    }
  }
}
ORDER BY DESC(?area)
LIMIT 2
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
347,Show me all books in Asimov's Foundation series.,"```sparql
SELECT ?book
WHERE {
  ?book dct:subject dbc:Foundation_series_books .
  ?book dbo:author dbr:Isaac_Asimov .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
348,Where was Bach born?,"```sparql
SELECT ?birthPlace
WHERE {
  <http://dbpedia.org/resource/Johann_Sebastian_Bach> dbo:birthPlace ?birthPlace .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
349,Which city has the oldest running metro?,"```sparql
SELECT ?city ?metroSystem ?openingYear
WHERE {
  ?city a dbo:City ;
        dbo:metroSystem ?metroSystem .
  ?metroSystem dbo:openingYear ?openingYear .
}
ORDER BY ASC(?openingYear)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
350,Who designed the Brooklyn Bridge?,"```sparql
SELECT ?designer
WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?designer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
351,How many people live in Eurasia?,"```sparql
SELECT (SUM(?population) as ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:populationTotal ?population ;
           dbo:continent dbr:Eurasia .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
352,Who is the host of the BBC Wildlife Specials?,"```sparql
SELECT ?host
WHERE {
  ?wildlifeSpecials dbo:producer dbr:BBC.
  ?wildlifeSpecials dbo:starring ?host.
  FILTER regex(str(?wildlifeSpecials), ""Wildlife_Specials"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
353,"What is the total population of Melbourne, Florida?","```sparql
SELECT ?population
WHERE {
  dbpedia:Melbourne,_Florida dbo:populationTotal ?population .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
354,What country is Mount Everest in?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Mount_Everest> dbpedia-owl:country ?country .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
355,To which artistic movement did the painter of The Three Dancers belong?,"```sparql
SELECT ?movementLabel
WHERE {
  <http://dbpedia.org/resource/The_Three_Dancers> dbpedia-owl:author ?painter .
  ?painter dbpedia-owl:movement ?movement .
  ?movement rdfs:label ?movementLabel .
  FILTER(LANG(?movementLabel) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
356,When did Operation Overlord commence?,"```sparql
SELECT ?date
WHERE {
  dbr:Operation_Overlord dbo:startDate ?date
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
357,What is the bridge with the longest span?,"```sparql
SELECT ?bridge ?span
WHERE {
  ?bridge a dbpedia-owl:Bridge ;
          dbpedia-owl:longestSpan ?span .
}
ORDER BY DESC(?span)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
358,Is there a video game called Battle Chess?,"```sparql
SELECT ?game
WHERE {
  ?game rdf:type dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
359,Who was buried in the Great Pyramid of Giza?,"```sparql
SELECT ?person
WHERE {
  <http://dbpedia.org/resource/Great_Pyramid_of_Giza> dbpedia-owl:burial ?person .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"```sparql
SELECT ?plant
WHERE {
  dbpedia:Ford_Motor_Company dbpedia-owl:subsidiary ?subsidiary .
  ?subsidiary dbpedia-owl:location dbpedia:Malaysia .
  ?subsidiary dbpedia-owl:type dbpedia:Manufacturing .
  ?subsidiary dbpedia-owl:industry dbpedia:Automotive_industry .
  ?subsidiary dbpedia-owl:product ?plant .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
361,Did Socrates influence Aristotle?,"```sparql
SELECT ?influencedBy
WHERE {
  dbpedia:Socrates dbpedia-owl:influenced ?influencedBy .
  FILTER (?influencedBy = dbpedia:Aristotle)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
362,How many children did Benjamin Franklin have?,"```sparql
SELECT (COUNT(?child) as ?numChildren)
WHERE {
  <http://dbpedia.org/resource/Benjamin_Franklin> dbpedia-owl:child ?child .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
363,How tall is Michael Jordan?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Michael_Jordan dbpedia-owl:height ?height .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
364,In which UK city are the headquarters of the MI6?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/MI6> dbpedia-owl:headquarters ?hq .
  ?hq dbpedia-owl:city ?city .
  ?city dbpedia-owl:country <http://dbpedia.org/resource/United_Kingdom> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
365,Who created Family Guy?,"```sparql
SELECT ?creator
WHERE {
  dbpedia:Family_Guy dbpedia-owl:creator ?creator .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
366,In which city does the Chile Route 68 end?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Chile_Route_68> <http://dbpedia.org/property/end> ?city .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
367,Give me the grandchildren of Elvis Presley.,"```sparql
SELECT ?grandchild
WHERE {
  dbr:Elvis_Presley dbo:child/dbo:child ?grandchild .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
368,When did the Ming dynasty dissolve?,"```sparql
SELECT ?date
WHERE {
  dbr:Ming_Dynasty dbo:disestablished ?date
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
369,In which military conflicts did Lawrence of Arabia participate?,"```sparql
SELECT ?conflict
WHERE {
  ?lawrence dbo:activeYearsStartYear ?startYear .
  ?lawrence dbo:activeYearsEndYear ?endYear .
  ?lawrence dbo:militaryCommand ?conflict .
  FILTER (?startYear <= 1918 && ?endYear >= 1918)
  FILTER regex(str(?lawrence), ""Lawrence_of_Arabia"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
370,What is the timezone in San Pedro de Atacama?,"```sparql
SELECT ?timezone
WHERE {
  dbpedia:San_Pedro_de_Atacama dbpedia-owl:timezone ?timezone .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
371,Give me all books by William Goldman with more than 300 pages.,"```sparql
SELECT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:William_Goldman ;
        dbo:numberOfPages ?pages .
  FILTER (?pages > 300)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
372,What did Bruce Carver die from?,"```sparql
SELECT ?causeOfDeath
WHERE {
  dbpedia:Bruce_Carver dbo:causeOfDeath ?causeOfDeath .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"```sparql
SELECT ?subsidary
WHERE {
  ?subsidary dbo:parentCompany dbr:Lufthansa ;
             dbo:cityServed dbr:Dortmund, dbr:Berlin_Tegel .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
374,Does Abraham Lincoln's death place have a website?,"```sparql
SELECT ?website
WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace .
  ?deathPlace foaf:isPrimaryTopicOf ?website .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
375,Did Elvis Presley have children?,"```sparql
SELECT ?child
WHERE {
  dbpedia:Elvis_Presley dbpedia-owl:child ?child .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
376,Is Michelle Obama the wife of Barack Obama?,"SELECT ?wife
WHERE {
  dbpedia:Michelle_Obama dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Barack_Obama)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
377,In which city does Sylvester Stallone live?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Sylvester_Stallone> <http://dbpedia.org/ontology/residence> ?city .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
378,Which books by Kerouac were published by Viking Press?,"```sparql
SELECT DISTINCT ?book
WHERE {
  ?book rdf:type dbo:Book ;
        dbo:author dbr:Jack_Kerouac ;
        dbo:publisher dbr:Viking_Press .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
379,Who wrote the song Hotel California?,"```sparql
SELECT ?artist
WHERE {
  ?song dbo:artist ?artist ;
       rdfs:label ""Hotel California""@en .
  ?artist a dbo:MusicalArtist .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
380,What is the capital of Canada?,"```
SELECT ?capital
WHERE {
  <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?capital .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
381,Who is the mayor of Tel Aviv?,"```sparql
SELECT ?mayor
WHERE {
  dbpedia:Tel_Aviv dbpedia-owl:mayor ?mayor .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
382,What form of government does Russia have?,"```
SELECT ?governmentForm
WHERE {
  <http://dbpedia.org/resource/Russia> dbpedia-owl:governmentForm ?governmentForm
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
383,Show me the book that Muhammad Ali wrote.,"```sparql
SELECT ?book
WHERE {
  ?person foaf:name ""Muhammad Ali""@en .
  ?person dbp:notableWork ?book .
  FILTER regex(?book, ""book"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
384,Who was the first to climb Mount Everest?,"```sparql
SELECT ?climber
WHERE {
  <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/firstAscentPerson> ?climber .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
385,How many languages are spoken in Colombia?,"```sparql
SELECT (COUNT(?language) AS ?numLanguages)
WHERE {
  <http://dbpedia.org/resource/Colombia> dbpedia-owl:language ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
386,What is the currency of the Czech Republic?,"```sparql
SELECT ?currencyLabel
WHERE {
  <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER(LANG(?currencyLabel) = 'en')
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
387,Where in France is sparkling wine produced?,"```
SELECT DISTINCT ?region
WHERE {
  ?wine a dbo:SparklingWine ;
        dbo:country dbr:France ;
        dbo:region ?region .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
388,When did Boris Becker end his active career?,"```sparql
SELECT ?endDate
WHERE {
  dbr:Boris_Becker dbo:careerEnd ?endDate
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?movie rdf:type dbo:Film ;
         dbo:starring dbr:Mickey_Rourke ;
         dbo:director dbr:Guy_Ritchie .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
390,In which films did Julia Roberts as well as Richard Gere play?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
391,Show me Hemingway's autobiography.,"```sparql
SELECT ?autobiography
WHERE {
  ?author foaf:name ""Ernest Hemingway""@en .
  ?author dbp:notableWork ?autobiography .
  FILTER regex(?autobiography, ""autobiography"", ""i"")
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
392,How tall is Amazon Eve?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Amazon_Eve dbpedia-owl:height ?height .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
393,What are the five boroughs of New York?,"```sparql
SELECT ?borough
WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/property/boroughs> ?boroughList .
  ?boroughList <http://dbpedia.org/property/hasPart> ?borough .
}
LIMIT 5
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
394,Give me all Canadian Grunge record labels.,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?label a <http://dbpedia.org/ontology/RecordLabel> ;
         <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> ;
         <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Grunge>.
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
395,In which country does the Ganges start?,"```sparql
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Ganges> dbpedia-owl:origin ?startPoint .
  ?startPoint dbpedia-owl:country ?country .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
396,Who is the founder of Penguin Books?,"```sparql
SELECT ?founder
WHERE {
  dbr:Penguin_Books dbo:founder ?founder .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
397,Who wrote the Game of Thrones theme?,"```sparql
SELECT ?composer
WHERE {
  ?theme a dbo:MusicalWork ;
         foaf:name ""Game of Thrones theme""@en ;
         dbo:composer ?composer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
398,Who is the president of Eritrea?,"SELECT ?president
WHERE {
  <http://dbpedia.org/resource/Eritrea> <http://dbpedia.org/ontology/president> ?president .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
399,In which city did John F. Kennedy die?,"```sparql
SELECT ?city
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:deathPlace ?city .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
400,What is the highest mountain in Australia?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
           dbo:country dbr:Australia ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
401,Who writes the Farmers' Almanac?,"```sparql
SELECT ?author
WHERE {
  ?farmersAlmanac dbpedia-owl:author ?author .
  FILTER (?farmersAlmanac = <http://dbpedia.org/resource/Farmers'_Almanac>)
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
402,Give me the currency of China.,"```sparql
SELECT ?currency
WHERE {
  <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?currency .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
403,Give me all Swedish oceanographers.,"```sparql
SELECT DISTINCT ?oceanographer
WHERE {
  ?oceanographer a <http://dbpedia.org/ontology/Oceanographer> ;
                 dct:subject <http://dbpedia.org/resource/Category:Swedish_oceanographers> .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
404,In which city are the headquarters of the United Nations?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/United_Nations> <http://dbpedia.org/ontology/headquarter> ?hq .
  ?hq <http://dbpedia.org/ontology/city> ?city .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
405,Is Rita Wilson the wife of Tom Hanks?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Rita_Wilson dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Tom_Hanks)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
406,In which countries do people speak Japanese?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?language dbpedia-owl:language dbpedia:Japanese_language .
  ?country dbpedia-owl:language ?language .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
407,Which of Tim Burton's films had the highest budget?,"```sparql
SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
408,Which museum in New York has the most visitors?,"```sparql
SELECT ?museum ?visitors
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:New_York_City ;
          dbo:numberOfVisitors ?visitors .
}
ORDER BY DESC(?visitors)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
409,What was the first Queen album?,"```sparql
SELECT ?album
WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Queen .
}
ORDER BY ?album
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
410,What was the first name of the band Queens of the Stone Age?,"```sparql
SELECT ?bandName
WHERE {
  dbpedia:Queens_of_the_Stone_Age dbpedia-owl:bandMember ?member .
  ?member foaf:name ?bandName .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
411,What was the last movie with Alec Guinness?,"```sparql
SELECT ?movie ?date
WHERE {
  ?movie rdf:type dbo:Film ;
         dbo:starring dbr:Alec_Guinness ;
         dbp:released ?date .
} 
ORDER BY DESC(?date)
LIMIT 1
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
412,Give me all actors starring in Last Action Hero.,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Last Action Hero""@en .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
413,Who discovered Pluto?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discoverer .
}
```","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
1,List all boardgames by GMT.,"```sparql
SELECT DISTINCT ?boardgame
WHERE {
  ?boardgame dct:subject dbc:Board_games_by_publisher .
  ?boardgame dct:subject dbc:GMT_Games .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
2,Who developed Skype?,"```sparql
SELECT DISTINCT ?developer
WHERE {
  ?skype a dbo:Software ;
         dbo:developer ?developer .
  FILTER regex(str(?skype), ""Skype"", ""i"")
}
```
This query retrieves the developer of Skype by searching for a software entity with the name ""Skype"" and retrieving its developer property.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
3,Which people were born in Heraklion?,"```sparql
SELECT DISTINCT ?person
WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person a dbo:Person .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
4,In which U.S. state is Area 51 located?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Area_51> dbo:location ?location .
  ?location dbo:country <http://dbpedia.org/resource/United_States> .
  ?location dbo:locatedInArea ?state .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
5,Who is the mayor of New York City?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/ontology/leaderName> ?mayor .
  FILTER (langMatches(lang(?mayor), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
6,Which countries have places with more than two caves?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  ?place dbo:location ?country ;
         dbo:location ?cave .
  ?cave a dbo:Cave .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 2)
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
7,Where did Abraham Lincoln die?,"```sparql
SELECT ?placeOfDeath WHERE {
  dbpedia:Abraham_Lincoln dbo:deathPlace ?placeOfDeath .
}
```
This query retrieves the place where Abraham Lincoln died.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
8,Which airports does Air China serve?,"```sparql
SELECT DISTINCT ?airport ?airportName
WHERE {
  ?airline a dbpedia-owl:Airline ;
           rdfs:label ""Air China""@en .
  ?route dbpedia-owl:airline ?airline ;
         dbpedia-owl:arrivalAirport ?airport .
  ?airport rdfs:label ?airportName .
  FILTER(langMatches(lang(?airportName), ""en""))
}
```
This query retrieves the airports served by Air China by looking for routes associated with Air China and extracting the arrival airports.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
9,Give me all actors starring in movies directed by and starring William Shatner.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor ;
        dbo:director dbr:William_Shatner ;
        dbo:starring dbr:William_Shatner .
  ?actor a dbo:Actor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
10,What are the official languages of the Philippines?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?language
WHERE {
  <http://dbpedia.org/resource/Philippines> dbo:officialLanguage ?language .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
11,Give me all Danish films.,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dct:subject dbc:Danish_films .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Brad_Pitt ;
        dbo:director dbr:Guy_Ritchie .
  FILTER regex(str(?movie), ""dbpedia.org/resource/"", ""i"")
}
```
This SPARQL query retrieves the movies starring Brad Pitt that were directed by Guy Ritchie from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
13,Give me the grandchildren of Bruce Lee.,"```sparql
SELECT DISTINCT ?grandchild ?grandchildName
WHERE {
  {
    SELECT DISTINCT ?child ?childName
    WHERE {
      ?person dbo:child ?child .
      ?person foaf:name ""Bruce Lee""@en .
      ?child foaf:name ?childName .
    }
  }
  ?grandchild dbo:child ?child .
  ?grandchild foaf:name ?grandchildName .
}
```
This query retrieves the grandchildren of Bruce Lee by first finding his children and then finding their children.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
14,Which other weapons did the designer of the Uzi develop?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?weapon
WHERE {
  ?uzi dbo:designer ?designer .
  ?designer dbo:notableWork ?weapon .
  FILTER (?weapon != <http://dbpedia.org/resource/Uzi>)
}
```
This query retrieves other weapons developed by the designer of the Uzi.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
15,Who is the owner of Universal Studios?,"```sparql
SELECT ?owner WHERE {
  dbpedia:Universal_Studios dbo:owner ?owner .
}
```
This query retrieves the owner of Universal Studios from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
16,Which state of the USA has the highest population density?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?state ?populationDensity
WHERE {
  ?state a dbo:State ;
         dbp:populationDensity ?populationDensity .
} 
ORDER BY DESC(?populationDensity)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
17,Which monarchs were married to a German?,"```sparql
SELECT DISTINCT ?monarch ?monarchLabel
WHERE {
  ?monarch a dbo:Monarch ;
           dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
18,Which organizations were founded in 1950?,"```sparql
SELECT DISTINCT ?organization ?organizationLabel
WHERE {
  ?organization rdf:type dbo:Organisation ;
                dbo:formationYear 1950 .
  ?organization rdfs:label ?organizationLabel .
  FILTER (lang(?organizationLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
19,Who created the comic Captain America?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?creator
WHERE {
  ?comic dbo:creator ?creator ;
         rdfs:label ""Captain America""@en .
  FILTER regex(str(?creator), ""Marvel Comics"", ""i"")
}
```
This SPARQL query retrieves the creator of the comic ""Captain America"" from DBpedia, specifically looking for creators associated with Marvel Comics.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
20,Give me the Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  dbr:Apollo_14 dbo:astronaut ?astronaut .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
21,Who wrote the book The pillars of the Earth?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
       rdfs:label ""The Pillars of the Earth""@en .
  FILTER(langMatches(lang(?author), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
22,Which state of the United States of America has the highest density?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?state ?density
WHERE {
  ?state a dbo:State ;
         dbp:populationDensity ?density .
}
ORDER BY DESC(?density)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
23,Which spaceflights were launched from Baikonur?,"```sparql
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?spaceflight
WHERE {
  ?spaceflight dct:subject <http://dbpedia.org/resource/Category:Baikonur_Cosmodrome_launched_spaceflights> .
}
```
This SPARQL query retrieves the spaceflights that were launched from Baikonur by querying DBpedia for spaceflights that are categorized under ""Baikonur Cosmodrome launched spaceflights"".","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
24,Give me a list of all trumpet players that were bandleaders.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musician
WHERE {
  ?musician a dbo:MusicalArtist ;
            dbo:instrument dbr:Trumpet ;
            dbo:bandMember ?band ;
            dbo:occupation dbr:Bandleader .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
25,Which U.S. states are in the same timezone as Utah?,"```sparql
SELECT DISTINCT ?stateLabel
WHERE {
  ?utah dbpedia-owl:timeZone ?timezone .
  ?state dbpedia-owl:timeZone ?timezone .
  ?state a dbpedia-owl:State .
  ?state rdfs:label ?stateLabel .
  FILTER(langMatches(lang(?stateLabel), ""en""))
  FILTER(?state != ?utah)
}
```
This query retrieves the U.S. states that are in the same timezone as Utah by finding states that share the same timezone property value as Utah.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
26,Which U.S. states possess gold minerals?,"```sparql
SELECT DISTINCT ?state
WHERE {
  ?state rdf:type dbo:State ;
         dbo:resource ?resource .
  FILTER regex(str(?resource), ""gold"", ""i"")
}
```
This query retrieves U.S. states that possess gold minerals by searching for states with resources related to gold.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
27,Who is the daughter of Ingrid Bergman married to?,"```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia2: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  dbpedia:Ingrid_Bergman dbpedia2:child ?daughter .
  ?daughter dbpedia2:spouse ?spouse .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
28,How deep is Lake Placid?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?depth
WHERE {
  <http://dbpedia.org/resource/Lake_Placid> dbo:maxDepth ?depth
}
```
This SPARQL query retrieves the maximum depth of Lake Placid from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
29,Show me all museums in London.,"```sparql
SELECT DISTINCT ?museum ?museumLabel
WHERE {
  ?museum rdf:type dbo:Museum ;
          dct:subject dbc:Museums_in_London .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
30,Which caves have more than 3 entrances?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?cave
WHERE {
  ?cave a dbo:Cave ;
        dbo:entranceCount ?entrances .
  FILTER (?entrances > 3)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
31,Who is the tallest player of the Atlanta Falcons?,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
         dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
32,What are the top-10 action role-playing video games according to IGN?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?game ?name
WHERE {
  ?game dbo:genre dbr:Action_role-playing_video_game ;
       foaf:name ?name .
}
ORDER BY DESC(?name)
LIMIT 10
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
33,Give me all writers that won the Nobel Prize in literature.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer
WHERE {
  ?writer a dbo:Writer ;
          dbo:award dbr:Nobel_Prize_in_Literature .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
34,Show me all basketball players that are higher than 2 meters.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbp:height ?height .
  FILTER (?height > 2)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
35,When was the Statue of Liberty built?,"```sparql
SELECT ?date
WHERE {
  dbr:Statue_of_Liberty dbo:constructionStart ?date .
}
```
This query retrieves the construction start date of the Statue of Liberty.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
36,Which states border Illinois?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?state
WHERE {
    dbr:Illinois dbo:neighboringState ?borderState .
    ?borderState dbo:type dbr:State .
    ?borderState dbo:country dbr:United_States .
    ?borderState rdfs:label ?state .
    FILTER(LANG(?state) = """" || LANGMATCHES(LANG(?state), ""en""))
}
```
This SPARQL query retrieves the states that border Illinois by finding neighboring states of Illinois in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
37,Who developed Minecraft?,"```sparql
SELECT ?developer
WHERE {
  dbr:Minecraft dbo:developer ?developer .
}
```
This query retrieves the developer of Minecraft from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
38,Where did Hillel Slovak die?,"```sparql
SELECT ?placeOfDeath WHERE {
  ?person dbpedia-owl:deathPlace ?placeOfDeath ;
          foaf:name ""Hillel Slovak""@en .
} LIMIT 1
```
This query retrieves the place of death of Hillel Slovak from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
39,What movies does Jesse Eisenberg play in?,"```sparql
SELECT DISTINCT ?movie
WHERE {
  ?actor dbo:wikiPageID dbr:Jesse_Eisenberg ;
        dbo:starring ?movie .
  ?movie a dbo:Film .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
40,Give all swimmers that were born in Moscow.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?swimmer
WHERE {
  ?swimmer a dbo:Person ;
           dbo:birthPlace dbr:Moscow ;
           dbo:occupation dbr:Swimmer .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
41,Give me all cosmonauts.,"```sparql
SELECT DISTINCT ?cosmonaut ?name
WHERE {
  ?cosmonaut a dbo:Cosmonaut ;
             foaf:name ?name .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
42,Give me all Swiss non-profit organizations.,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization a dbo:Organisation ;
                dct:subject dbc:Non-profit_organizations_in_Switzerland .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
43,Which presidents were born in 1945?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?president ?name
WHERE {
  ?president a dbo:President ;
             dbo:birthDate ?birthDate ;
             foaf:name ?name .
  FILTER (YEAR(?birthDate) = 1945)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
44,What kind of music did Lou Reed play?,"```sparql
SELECT DISTINCT ?genreLabel
WHERE {
  ?artist rdf:type dbo:MusicalArtist ;
          foaf:name ""Lou Reed""@en .
  ?artist dbo:genre ?genre .
  ?genre rdfs:label ?genreLabel .
  FILTER(LANG(?genreLabel) = 'en')
}
```
This SPARQL query retrieves the genres of music that Lou Reed played.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
45,Where do the Red Sox play?,"```sparql
SELECT ?team ?stadium
WHERE {
  ?team rdf:type dbo:SportsTeam ;
        rdfs:label ""Boston Red Sox""@en ;
        dbo:ground ?stadium .
  ?stadium rdf:type dbo:Stadium ;
           rdfs:label ?stadiumName .
  FILTER (lang(?stadiumName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
46,Show a list of soccer clubs that play in the Bundesliga.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league ?league .
  ?league rdfs:label ""Bundesliga""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
47,Which volcanos in Japan erupted since 2000?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?volcano
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:country dbr:Japan ;
           dbo:eruptionDate ?eruptionDate .
  FILTER (YEAR(?eruptionDate) >= 2000)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
48,Which bridges cross the Seine?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?bridge
WHERE {
  ?bridge a dbo:Bridge ;
          dbo:crosses <http://dbpedia.org/resource/Seine> .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
49,What is the official color of the University of Oxford?,"```sparql
SELECT ?colorLabel
WHERE {
  <http://dbpedia.org/resource/University_of_Oxford> <http://dbpedia.org/ontology/officialSchoolColour> ?color.
  ?color rdfs:label ?colorLabel.
  FILTER(LANG(?colorLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
50,How many films did Hal Roach produce?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?producer dbo:producerProduced ?film .
  ?producer foaf:name ""Hal Roach""@en .
}
```
This SPARQL query retrieves the count of films produced by Hal Roach from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
51,Give me all Danish movies.,"```sparql
SELECT DISTINCT ?movie ?movieLabel
WHERE {
  ?movie rdf:type dbo:Film ;
         dct:subject dbc:Danish_films .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
52,What is the most frequent cause of death?,"```sparql
SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count)
WHERE {
  ?person dbo:causeOfDeath ?causeOfDeath .
}
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
53,Who are the four youngest MVP basketball players?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player ?age
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:award ?award ;
          dbp:mvp ?mvp ;
          dbp:birthDate ?birthDate .
  BIND(YEAR(NOW()) - YEAR(?birthDate) AS ?age)
  FILTER(?mvp = ""yes"" && ?age > 0)
}
ORDER BY ?age
LIMIT 4
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
54,Give me all companies in Munich.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:location dbr:Munich .
}
```
This SPARQL query retrieves all companies located in Munich from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
55,Give me the capitals of all countries that the Himalayas run through.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?capital
WHERE {
  ?country dbo:location ?himalayas ;
           dbo:capital ?capital .
  FILTER regex(str(?himalayas), ""Himalayas"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
56,How many movies did Park Chan-wook direct?,"```sparql
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Park_Chan-wook .
}
```
This SPARQL query will count the number of movies directed by Park Chan-wook in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
57,Which rivers flow into a German lake?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?river
WHERE {
  ?lake dbo:country dbr:Germany ;
        dbo:river ?river .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
58,How many airlines are there?,"```sparql
SELECT (COUNT(DISTINCT ?airline) AS ?count)
WHERE {
  ?airline a dbo:Airline .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
59,Give me all islands that belong to Japan.,"```sparql
SELECT DISTINCT ?island
WHERE {
  ?island rdf:type dbo:Island ;
          dbo:country dbr:Japan .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
60,How many inhabitants does Maribor have?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Maribor> dbo:populationTotal ?population .
}
```
This SPARQL query retrieves the total population of Maribor from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
61,Give me all Apollo 14 astronauts.,"```sparql
SELECT ?astronaut
WHERE {
  ?astronaut dbo:mission <http://dbpedia.org/resource/Apollo_14> ;
             rdf:type dbo:Astronaut .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
62,Which companies have more than 1 million employees?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?company ?companyName
WHERE {
  ?company a dbo:Company ;
           dbo:numberOfEmployees ?numEmployees .
  FILTER (?numEmployees > 1000000)
  ?company rdfs:label ?companyName .
  FILTER (lang(?companyName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?film
WHERE {
  ?film dbo:director <http://dbpedia.org/resource/Garry_Marshall> ;
        dbo:starring ?actor .
  ?actor foaf:name ""Julia Roberts"" .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
64,Give me all soccer clubs in the Premier League.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:league dbr:Premier_League
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
65,What is the highest place of the Urals?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?place ?placeLabel
WHERE {
  ?place dbo:locatedInArea <http://dbpedia.org/resource/Ural_Mountains> ;
        dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1
```
This SPARQL query retrieves the highest place in the Ural Mountains by finding the place located in the Ural Mountains with the highest elevation.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
66,Who is the governor of Wyoming?,"```sparql
SELECT ?governor
WHERE {
  dbpedia:Wyoming dbpedia-owl:governor ?governor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
67,Where did the architect of the Eiffel Tower study?,"```sparql
SELECT ?architect ?education
WHERE {
  ?architect dbp:name ""Gustave Eiffel""@en .
  ?architect dbp:education ?education .
}
```
This query retrieves the education information of Gustave Eiffel, the architect of the Eiffel Tower.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
68,Give me all world heritage sites designated within the past two years.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?site ?siteLabel ?designationDate
WHERE {
  ?site a dbo:WorldHeritageSite ;
        dct:subject <http://dbpedia.org/resource/Category:World_Heritage_Sites_by_year_of_designation> ;
        dct:subject <http://dbpedia.org/resource/Category:World_Heritage_Sites_by_year_of_designation_2016> ;
        dct:subject <http://dbpedia.org/resource/Category:World_Heritage_Sites_by_year_of_designation_2017> ;
        dct:subject <http://dbpedia.org/resource/Category:World_Heritage_Sites_by_year_of_designation_2018> ;
        dct:subject <http://dbpedia.org/resource/Category:World_Heritage_Sites_by_year_of_designation_2019> ;
        dct:subject <http://dbpedia.org/resource/Category:World_Heritage_Sites_by_year_of_designation_2020> ;
        dct:subject <http://dbpedia.org/resource/Category:World_Heritage_Sites_by_year_of_designation_2021> ;
        dct:subject <http://dbpedia.org/resource/Category:World_Heritage_Sites_by_year_of_designation_2022> ;
        dct:subject ?designationDate .
  ?site rdfs:label ?siteLabel .
  FILTER(langMatches(lang(?siteLabel), ""en""))
}
ORDER BY DESC(?designationDate)
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
69,Give me all actors who were born in Paris after 1950.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?actorName
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Paris ;
         dbo:birthDate ?birthDate ;
         foaf:name ?actorName .
  FILTER (YEAR(?birthDate) > 1950)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
70,Which movies star both Liz Taylor and Richard Burton?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor, dbr:Richard_Burton .
  ?movie a dbo:Film .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
71,Give me all Australian nonprofit organizations.,"```sparql
SELECT DISTINCT ?organization ?organizationLabel
WHERE {
  ?organization rdf:type dbo:NonprofitOrganisation ;
                dct:subject dbc:Non-profit_organisations_based_in_Australia .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
72,Which pope succeeded John Paul II?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  dbo:Pope_John_Paul_II dbo:succeededBy ?successor .
}
```
This query retrieves the pope who succeeded John Paul II.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
73,Give me all ESA astronauts.,"```sparql
SELECT DISTINCT ?astronaut ?name
WHERE {
  ?astronaut a dbo:Astronaut ;
             dbo:agency <http://dbpedia.org/resource/European_Space_Agency> ;
             foaf:name ?name .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
74,Who was president of Pakistan in 1978?,"```sparql
SELECT ?president
WHERE {
  ?president a dbo:President ;
             dbo:office ?office .
  ?office dbo:country dbr:Pakistan ;
         dbo:incumbents ?incumbent .
  ?incumbent dbo:startDate ?start ;
             dbo:endDate ?end .
  FILTER (?start <= ""1978-01-01""^^xsd:date && ?end >= ""1978-12-31""^^xsd:date)
}
```
This query retrieves the president of Pakistan in 1978 by checking the incumbents of the presidential office in Pakistan during that year.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
75,Who is the owner of Rolls-Royce?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner
WHERE {
  dbr:Rolls-Royce dbo:owner ?owner .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
76,How many museums does Paris have?,"```sparql
SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:Paris .
}
```
This SPARQL query will count the number of museums located in Paris.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
77,Where was JFK assassinated?,"```sparql
SELECT ?place
WHERE {
  dbr:Assassination_of_John_F._Kennedy dbo:location ?place .
}
```
This query retrieves the location where John F. Kennedy was assassinated.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
78,Give me all federal chancellors of Germany.,"```sparql
SELECT ?chancellor ?birthDate ?deathDate
WHERE {
  ?chancellor a dbpedia-owl:Chancellor ;
              dbpedia-owl:office dbpedia:Federal_Chancellor_of_Germany ;
              dbpedia-owl:birthDate ?birthDate .
  OPTIONAL { ?chancellor dbpedia-owl:deathDate ?deathDate }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
79,Show me everyone who was born on Halloween.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name
WHERE {
  ?person dbo:birthDate ?date .
  ?person foaf:name ?name .
  FILTER (regex(str(?date), "".*-10-31""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
80,Which beer originated in Ireland?,"```sparql
SELECT DISTINCT ?beer
WHERE {
  ?beer rdf:type dbo:Beer ;
        dbo:origin dbo:Ireland .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
81,To which countries does the Himalayan mountain system extend?,"```sparql
SELECT DISTINCT ?country
WHERE {
  ?himalayas dbo:location ?country .
  ?country a dbo:Country .
  FILTER regex(str(?himalayas), ""Himalayas"", ""i"")
}
```
This SPARQL query retrieves the countries to which the Himalayan mountain system extends by looking for instances where the Himalayas are located in a country.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
82,Which actors were born in Germany?,"```sparql
SELECT DISTINCT ?actor ?birthPlace
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
83,How much carbs does peanut butter have?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?carbsAmount
WHERE {
  ?peanutButter dbo:abstract ?abstract .
  FILTER (CONTAINS(?abstract, ""peanut butter"") && CONTAINS(?abstract, ""carbs""))
  OPTIONAL { ?peanutButter dbo:carbohydrate ?carbsAmount }
}
```
This query retrieves the amount of carbohydrates in peanut butter by searching for information related to peanut butter and carbohydrates in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
84,Who produced the most films?,"```sparql
SELECT ?producer (COUNT(?film) AS ?numFilms)
WHERE {
  ?film dbo:producer ?producer .
}
GROUP BY ?producer
ORDER BY DESC(?numFilms)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
85,How many employees does Google have?,"```sparql
SELECT ?numberOfEmployees
WHERE {
  dbpedia:Google dbo:numberOfEmployees ?numberOfEmployees
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
86,Give me all actors who were born in Berlin.,"```sparql
SELECT DISTINCT ?actor ?actorName
WHERE {
  ?actor a dbo:Actor ;
         dbo:birthPlace dbr:Berlin ;
         foaf:name ?actorName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
87,Who created Goofy?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?creator
WHERE {
  ?goofy dbo:creator ?creator .
  FILTER (?goofy = dbo:Goofy)
}
```
This query retrieves the creator of the character Goofy from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
88,Which music albums contain the song Last Christmas?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?album ?albumName
WHERE {
  ?song dbo:wikiPageRedirects <http://dbpedia.org/resource/Last_Christmas> .
  ?album dbo:wikiPageWikiLink ?song ;
        a dbo:Album ;
        rdfs:label ?albumName .
  FILTER (lang(?albumName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
89,When was Alberta admitted as province?,"```sparql
SELECT ?date
WHERE {
  dbr:Alberta dbo:formationDate ?date .
}
```
This query retrieves the formation date of Alberta as a province from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
90,How many missions does the Soyuz programme have?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT (COUNT(?mission) AS ?numMissions)
WHERE {
  ?program dbo:programmeName ""Soyuz programme""@en .
  ?mission dbo:program ?program .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
91,Give me all the TV shows with Neil Patrick Harris.,"```sparql
SELECT DISTINCT ?show
WHERE {
  ?person dbo:starring dbr:Neil_Patrick_Harris .
  ?show dbo:starring ?person .
  ?show rdf:type dbo:TelevisionShow .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
92,When were the Hells Angels founded?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?foundingDate
WHERE {
    dbr:Hells_Angels dbo:formationDate ?foundingDate
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
93,What is the net income of Apple?,"```sparql
SELECT ?netIncome
WHERE {
  dbpedia:Apple_Inc dbpedia-owl:netIncome ?netIncome
}
```
This query retrieves the net income of Apple Inc. from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
94,Give me all Swedish holidays.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday ;
           dbo:country dbr:Sweden .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
95,In which city was the former Dutch queen Juliana buried?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city
WHERE {
  dbr:Juliana_of_the_Netherlands dbo:burialPlace ?burialPlace.
  ?burialPlace dbo:location ?city.
  ?city a dbo:City.
}
```
This SPARQL query retrieves the city where the former Dutch queen Juliana was buried.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
96,List all the musicals with music by Leonard Bernstein.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:composer dbr:Leonard_Bernstein .
  ?musical dbo:genre dbr:Musical_theatre .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
97,Give me all companies in the advertising industry.,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company a dbo:Company ;
          dct:subject dbc:Advertising_agencies .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
98,What is the largest metropolitan area in Washington state?,"```sparql
SELECT ?metropolitanArea ?metropolitanAreaLabel ?population
WHERE {
  ?metropolitanArea a dbo:MetropolitanArea ;
                   dbo:country dbr:Washington_(state) ;
                   dbo:populationTotal ?population .
  FILTER NOT EXISTS { ?metropolitanArea dbo:dissolutionYear ?year }
}
ORDER BY DESC(?population)
LIMIT 1
```
This SPARQL query retrieves the largest metropolitan area in Washington state based on population data.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
99,Who killed John Lennon?,"```
SELECT ?killer
WHERE {
  dbpedia:John_Lennon dbo:deathCause ?cause .
  ?cause rdfs:label ""assassination"" .
  dbpedia:John_Lennon dbo:deathPlace ?place .
  ?place dbo:death ?death .
  ?death dbo:causeOfDeath ?murder .
  ?murder rdfs:label ""murder"" .
  ?death dbo:perpetrator ?killer .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
100,Which writers studied in Istanbul?,"```sparql
SELECT DISTINCT ?writer
WHERE {
  ?writer dbo:birthPlace dbr:Istanbul .
  ?writer a dbo:Writer .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
101,Give me all Australian metalcore bands.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  ?band dbo:genre dbr:Metalcore ;
       dbo:origin dbr:Australia .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
102,Which countries adopted the Euro?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?country
WHERE {
  ?country a dbo:Country ;
           dbo:currency <http://dbpedia.org/resource/Euro> .
}
```
This SPARQL query retrieves the countries that have adopted the Euro currency from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
103,Give me all types of eating disorders.,"```sparql
SELECT DISTINCT ?eatingDisorder
WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
104,Was Marc Chagall a jew?,"```sparql
SELECT ?personLabel ?religionLabel
WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""Marc Chagall""@en ;
          dbo:religion ?religion .
  ?religion rdfs:label ""Judaism""@en .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```
This query checks if Marc Chagall was Jewish by retrieving his religion from DBpedia and checking if it is Judaism.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?lowestRank
WHERE {
  dbo:Brazil dbp:lowestFifaRank ?lowestRank
}
```
This query retrieves the lowest rank of Brazil in the FIFA World Ranking from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
106,How many films did Leonardo DiCaprio star in?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?film) AS ?count)
WHERE {
  ?actor dbo:starring ?film .
  ?actor foaf:name ""Leonardo DiCaprio""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
107,Was Margaret Thatcher a chemist?,"```sparql
SELECT ?personLabel
WHERE {
  ?person rdf:type dbo:Person ;
          rdfs:label ""Margaret Thatcher""@en ;
          dbo:profession dbr:Chemist .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```
This query checks if Margaret Thatcher was a chemist by looking for a person with the name ""Margaret Thatcher"" who has the profession of a chemist in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
108,Which U.S. states are in the same time zone as Utah?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?state
WHERE {
  dbr:Utah dbo:timeZone ?timeZone .
  ?state dbo:timeZone ?timeZone .
  ?state a dbo:State .
  FILTER (?state != dbr:Utah)
}
```
This SPARQL query retrieves the U.S. states that are in the same time zone as Utah by finding states that have the same timeZone property as Utah.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
109,Give me all books written by Danielle Steel.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?book
WHERE {
  ?author foaf:name ""Danielle Steel""@en .
  ?book dbo:author ?author .
  ?book a dbo:Book .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
110,Which country has the most official languages?,"```sparql
SELECT ?country ?numLanguages
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
  {
    SELECT ?country (COUNT(?language) AS ?numLanguages)
    WHERE {
      ?country a dbo:Country ;
               dbo:officialLanguage ?language .
    }
    GROUP BY ?country
    ORDER BY DESC(?numLanguages)
    LIMIT 1
  }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
111,What is the total amount of men and women serving in the FDNY?,"```sparql
SELECT (COUNT(?person) AS ?total) WHERE {
  ?person a dbo:Person ;
          dbo:occupation dbr:Firefighter ;
          dbo:employer dbr:New_York_City_Fire_Department .
  ?person dbo:gender ?gender .
  FILTER (?gender = ""male"" || ?gender = ""female"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
112,Which actor played Chewbacca?,"```sparql
SELECT ?actorName
WHERE {
  ?actor dbpedia-owl:occupation dbpedia:Actor ;
         dbpedia-owl:starring dbpedia:Chewbacca ;
         rdfs:label ?actorName .
  FILTER (lang(?actorName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
113,Give me all libraries established earlier than 1400.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?library ?name ?established
WHERE {
  ?library a dbo:Library ;
           dct:subject <http://dbpedia.org/resource/Category:Libraries_established_before_1400> ;
           foaf:name ?name ;
           dbo:established ?established .
}
ORDER BY ?established
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
114,Which programming languages were influenced by Perl?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?language
WHERE {
  ?language dbo:influencedBy <http://dbpedia.org/resource/Perl>.
  ?language a dbo:ProgrammingLanguage.
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
115,In which U.S. state is Mount McKinley located?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Mount_McKinley> dbo:location ?state .
  ?state dbo:country <http://dbpedia.org/resource/United_States> .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
116,What airlines are part of the SkyTeam alliance?,"```sparql
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?airline
WHERE {
  ?alliance dct:subject <http://dbpedia.org/resource/SkyTeam> ;
            dbo:airline ?airline .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
117,Which ships were called after Benjamin Franklin?,"```sparql
SELECT DISTINCT ?shipName
WHERE {
  ?ship rdf:type dbo:Ship ;
        rdfs:label ?shipName ;
        dbo:shipName ""Benjamin Franklin""@en .
  FILTER regex(str(?shipName), ""Benjamin Franklin"", ""i"")
}
```
This SPARQL query retrieves the names of ships that were called after Benjamin Franklin by searching for ships with the name ""Benjamin Franklin"" in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
118,Give me all Methodist politicians.,"```sparql
SELECT DISTINCT ?politician ?name
WHERE {
  ?politician a dbo:Politician ;
              dbo:party dbr:Methodism ;
              foaf:name ?name .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
119,What other books have been written by the author of The Fault in Our Stars?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bookTitle
WHERE {
  ?author foaf:name ""John Green""@en .
  ?book dbo:author ?author ;
       foaf:name ?bookTitle .
  FILTER (?bookTitle != ""The Fault in Our Stars""@en)
}
```
This SPARQL query retrieves the titles of books written by the author John Green, excluding ""The Fault in Our Stars"".","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
120,What is the highest mountain?,"```sparql
SELECT ?mountain ?height
WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```
This query retrieves the highest mountain by sorting mountains based on their elevation in descending order and selecting the top result.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
121,Which poet wrote the most books?,"```sparql
SELECT ?poet (COUNT(?book) AS ?numBooks)
WHERE {
  ?poet a dbo:Person ;
        dbo:author ?book .
}
GROUP BY ?poet
ORDER BY DESC(?numBooks)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
122,Which programming languages influenced Javascript?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?language
WHERE {
  ?javascript dbo:influencedBy ?language .
  ?language dct:subject <http://dbpedia.org/resource/Category:Programming_languages> .
}
```

This SPARQL query retrieves the programming languages that influenced JavaScript by looking for the ""influencedBy"" property in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
123,Which musician wrote the most books?,"```sparql
SELECT ?musician ?musicianName (COUNT(?book) AS ?numBooks)
WHERE {
  ?musician a dbo:MusicalArtist ;
            foaf:name ?musicianName ;
            dbo:notableWork ?book .
  ?book a dbo:Book .
}
GROUP BY ?musician ?musicianName
ORDER BY DESC(?numBooks)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
124,Which films starring Clint Eastwood did he direct himself?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?film
WHERE {
  ?film dbo:director <http://dbpedia.org/resource/Clint_Eastwood> .
  ?film dbo:starring <http://dbpedia.org/resource/Clint_Eastwood> .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
125,Which software has been developed by organizations founded in California?,"```sparql
SELECT DISTINCT ?software
WHERE {
  ?organization dbo:location dbr:California .
  ?organization dbo:product ?software .
  ?software a dbo:Software .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
126,Which instruments does Cat Stevens play?,"```sparql
SELECT DISTINCT ?instrumentLabel
WHERE {
  ?person dbo:instrument ?instrument .
  ?person foaf:name ""Cat Stevens""@en .
  ?instrument rdfs:label ?instrumentLabel .
  FILTER(LANG(?instrumentLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
127,How many airlines are members of the Star Alliance?,"```sparql
SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline rdf:type dbo:Airline ;
           dbo:alliance ?alliance .
  FILTER (?alliance = dbr:Star_Alliance)
}
```
This query counts the number of airlines that are members of the Star Alliance.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
128,Give me all actors called Baldwin.,"```sparql
SELECT DISTINCT ?actor
WHERE {
  ?actor a dbo:Actor ;
         foaf:surname ""Baldwin"" .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
129,Who wrote The Hunger Games?,"```
SELECT ?authorLabel 
WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Hunger Games""@en .
  ?author rdfs:label ?authorLabel .
  FILTER(LANG(?authorLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
130,For which label did Elvis record his first album?,"```sparql
SELECT ?albumLabel
WHERE {
  ?elvis a dbo:Artist ;
         foaf:name ""Elvis Presley""@en .
  
  ?album dbo:artist ?elvis ;
         rdf:type dbo:Album ;
         dbo:releaseDate ?date ;
         rdfs:label ?albumLabel .
  
  FILTER (?date >= ""1956-01-01""^^xsd:date && ?date <= ""1956-12-31""^^xsd:date)
}
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
131,Is Christian Bale starring in Batman Begins?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Batman Begins""@en .
  ?actor foaf:name ""Christian Bale""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
132,Where is the residence of the prime minister of Spain?,"```sparql
SELECT ?residence
WHERE {
  <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/ontology/residence> ?residence .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
133,Which actor was casted in the most movies?,"```sparql
SELECT ?actor (COUNT(?film) AS ?numMovies)
WHERE {
  ?actor a dbo:Actor ;
         dbo:starring ?film .
}
GROUP BY ?actor
ORDER BY DESC(?numMovies)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
134,Which countries have more than two official languages?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?country ?countryLabel
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
  FILTER (COUNT(?language) > 2)
  SERVICE <http://dbpedia.org/sparql> {
    ?country rdfs:label ?countryLabel .
    FILTER (lang(?countryLabel) = 'en')
  }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
135,Which countries have more than ten caves?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?country ?countryLabel
WHERE {
  ?country a dbo:Country ;
           dbo:location ?location .
  ?location dbo:caves ?caves .
  FILTER (?caves > 10)
  SERVICE <http://dbpedia.org/sparql> {
    ?country rdfs:label ?countryLabel .
    FILTER (lang(?countryLabel) = 'en')
  }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song
WHERE {
  ?album dbo:artist dbr:Bruce_Springsteen ;
         dbo:releaseDate ?releaseDate ;
         dbo:song ?song .
  FILTER (YEAR(?releaseDate) >= 1980 && YEAR(?releaseDate) <= 1990)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
137,Which television shows were created by John Cleese?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?show
WHERE {
  ?person foaf:name ""John Cleese""@en .
  ?show dbo:creator ?person .
  ?show a dbo:TelevisionShow .
}
```
This SPARQL query retrieves the television shows that were created by John Cleese by searching for instances where John Cleese is listed as the creator of a television show in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
138,When did Latvia join the EU?,"```sparql
SELECT ?date
WHERE {
  dbr:Latvia dbo:accessionDate ?date.
}
```
This SPARQL query retrieves the accession date of Latvia to the EU from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
139,Which soccer players were born on Malta?,"```sparql
SELECT DISTINCT ?player ?birthDate
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthPlace dbr:Malta ;
          dbo:birthDate ?birthDate .
}
```
This SPARQL query retrieves the names and birth dates of soccer players who were born in Malta.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
140,How many politicians graduated from Columbia University?,"```sparql
SELECT (COUNT(?politician) AS ?count)
WHERE {
  ?politician dbo:almaMater dbr:Columbia_University .
  ?politician a dbo:Politician .
}
```
This query counts the number of politicians who graduated from Columbia University.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
141,Give me the birthdays of all actors of the television show Charmed.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?birthday
WHERE {
  ?actor dbo:birthDate ?birthday .
  ?actor dbo:starring dbr:Charmed .
  ?actor a dbo:Actor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
142,Which telecommunications organizations are located in Belgium?,"```sparql
SELECT DISTINCT ?organization
WHERE {
  ?organization rdf:type dbo:Organisation ;
                dbo:location dbr:Belgium ;
                dbo:industry dbr:Telecommunications .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
143,Give me a list of all lakes in Denmark.,"```sparql
SELECT DISTINCT ?lake
WHERE {
  ?lake rdf:type dbo:Lake ;
        dbo:country dbr:Denmark .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
144,How many children does Eddie Murphy have?,"```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT (COUNT(?child) AS ?numChildren)
WHERE {
  dbpedia:Eddie_Murphy dbpedia-owl:child ?child .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
145,Show me all English Gothic buildings in Kent.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?building
WHERE {
  ?building rdf:type dbo:Building ;
            dbo:architecturalStyle dbr:English_Gothic_architecture ;
            dbo:location dbr:Kent ;
            dbo:abstract ?abstract .
  FILTER (langMatches(lang(?abstract), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
146,Who is the manager of Real Madrid?,"```sparql
SELECT ?manager
WHERE {
  dbpedia:Real_Madrid dbpedia-owl:manager ?manager .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
147,In which countries can you pay using the West African CFA franc?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  ?country a dbo:Country ;
           dbp:currency ?currency .
  FILTER(CONTAINS(?currency, ""West African CFA franc""))
}
```

This SPARQL query retrieves the countries where you can pay using the West African CFA franc by looking for countries with the specified currency.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
148,Which holidays are celebrated around the world?,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
  ?holiday dct:subject dbc:Holidays_by_country .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
149,What is the longest river?,"```sparql
SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
150,Which organizations were founded in 1930?,"```sparql
SELECT DISTINCT ?organization ?organizationLabel
WHERE {
  ?organization rdf:type dbo:Organisation ;
                dbo:formationYear 1930 .
  ?organization rdfs:label ?organizationLabel .
  FILTER (lang(?organizationLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
151,What is the birth name of Angela Merkel?,"```sparql
SELECT ?birthName
WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName
}
```
This query retrieves the birth name of Angela Merkel from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
152,Who has Tom Cruise been married to?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  <http://dbpedia.org/resource/Tom_Cruise> dbo:spouse ?spouse .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
153,Which weapons did Heckler & Koch develop?,"```sparql
SELECT DISTINCT ?weapon
WHERE {
  ?company rdf:type dbo:Company ;
           foaf:name ""Heckler & Koch""@en ;
           dbo:product ?weapon .
  ?weapon rdf:type dbo:Weapon .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
154,What is the smallest city by area in Germany?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?city ?area
WHERE {
  ?city a dbo:City ;
        dbo:country <http://dbpedia.org/resource/Germany> ;
        dbo:areaTotal ?area .
} 
ORDER BY ASC(?area)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
155,What is the ruling party in Lisbon?,"```sparql
SELECT ?partyLabel
WHERE {
  ?city dbpedia-owl:country dbpedia:Lisbon .
  ?city dbpedia-owl:rulingParty ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(LANG(?partyLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
156,How heavy is Jupiter's lightest moon?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?moon ?mass
WHERE {
  ?moon dbo:orbitingPlanet dbr:Jupiter ;
        dbo:meanRadius ?radius ;
        dbo:mass ?mass .
  FILTER (?mass > 0)
}
ORDER BY ?mass
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
157,How many employees does IBM have?,"```sparql
SELECT ?employees
WHERE {
  dbpedia:IBM dbo:numberOfEmployees ?employees
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
158,List all episodes of the first season of the HBO television series The Sopranos!,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?episode ?title
WHERE {
  ?series dbo:seasonNumber ""1"" .
  ?series dbo:numberOfEpisodes ?numEpisodes .
  ?series dbp:title ""The Sopranos""@en .
  ?episode dbo:series ?series .
  ?episode dbp:title ?title .
}
ORDER BY xsd:integer(?episode)
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
159,What does ICRO stand for?,"```sparql
SELECT ?definition
WHERE {
  dbpedia:ICRO dbo:wikiPageRedirects ?icro .
  ?icro dbo:abstract ?definition .
  FILTER (langMatches(lang(?definition), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"To determine if the new Battlestar Galactica series has more episodes than the old one, we can compare the number of episodes of each series. The SPARQL query below retrieves the number of episodes for both the old and new Battlestar Galactica series:

```sparql
SELECT ?series ?numberOfEpisodes
WHERE {
  ?series dbo:numberOfEpisodes ?numberOfEpisodes .
  FILTER regex(str(?series), ""Battlestar_Galactica"") .
}
```

By running this query, we can compare the number of episodes of the old and new Battlestar Galactica series to see which one has more episodes.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
161,Give me all films produced by Hal Roach.,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
  ?film a dbo:Film .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
162,Who played Agent Smith in Matrix?,"```sparql
SELECT ?actorName
WHERE {
  ?film dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  ?actor dbo:wikiPageRedirects dbr:Hugo_Weaving .
  ?film foaf:name ""The Matrix""@en .
}
```
This SPARQL query retrieves the name of the actor who played Agent Smith in the movie ""The Matrix"" by querying DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
163,Which Greek parties are pro-European?,"```sparql
SELECT DISTINCT ?partyLabel
WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Greece ;
         dbo:position dbr:Pro-European ;
         rdfs:label ?partyLabel .
  FILTER (lang(?partyLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
164,Give me a list of all bandleaders that play trumpet.,"```sparql
SELECT DISTINCT ?bandleader
WHERE {
  ?bandleader a dbo:Person ;
              dbo:instrument dbr:Trumpet ;
              dbo:occupation dbr:Bandleader .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
165,What is the second highest mountain on Earth?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?mountain ?height
WHERE {
  ?mountain a dbo:Mountain ;
            dbo:elevation ?height .
  FILTER (?height < 8848) 
}
ORDER BY DESC(?height)
LIMIT 1
OFFSET 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
166,Is Egypts largest city also its capital?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city ?capital
WHERE {
  ?country dbo:capital ?capital ;
           dbo:largestCity ?city .
  FILTER (?city = <http://dbpedia.org/resource/Cairo>)
  FILTER (?capital = <http://dbpedia.org/resource/Cairo>)
}
```
This query checks if Cairo, which is Egypt's largest city, is also its capital.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
167,Which rockets were launched from Baikonur?,"```sparql
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?rocket
WHERE {
  ?launch dct:subject <http://dbpedia.org/resource/Category:Baikonur_Cosmodrome_launches> .
  ?launch dbo:rocket ?rocket .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
168,How many programming languages are there?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?language a dbo:ProgrammingLanguage
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
169,Which Chess players died in the same place they were born in?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player ?birthPlace
WHERE {
  ?player a dbo:ChessPlayer ;
          dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?birthPlace .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
170,Who is the owner of Facebook?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?owner
WHERE {
  <http://dbpedia.org/resource/Facebook> dbo:owner ?owner .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
171,Give me all movies with Tom Cruise.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie a dbo:Film .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
172,In which U.S. state is Fort Knox located?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Fort_Knox> dbo:location ?location .
  ?location dbo:locatedInArea ?state .
  ?state a dbo:State .
  FILTER regex(str(?state), ""United_States"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?city
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population ;
        dbo:country dbr:New_Jersey ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
174,Which mountains are higher than the Nanga Parbat?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mountain ?height
WHERE {
  dbr:Nanga_Parbat dbo:height ?nangaHeight .
  ?mountain dbo:height ?height .
  FILTER (?height > ?nangaHeight) .
  FILTER (?mountain != dbr:Nanga_Parbat) .
}
ORDER BY DESC(?height)
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
175,Give me all B-sides of the Ramones.,"```sparql
SELECT DISTINCT ?bSide
WHERE {
  ?album rdf:type dbo:Album ;
         dbp:artist dbr:Ramones ;
         dbo:recordedAt ?studio .
  ?bSide dbo:recordedAt ?studio ;
         rdf:type dbo:B_side .
}
```
This query retrieves all B-sides of songs recorded by the Ramones.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
176,What are the specialities of the UNC Health Care?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?specialty
WHERE {
  dbr:UNC_Health_Care dbo:specialty ?specialty .
}
```
This SPARQL query retrieves the specialties of UNC Health Care from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
177,When was Olof Palme shot?,"```sparql
SELECT ?date
WHERE {
  dbr:Assassination_of_Olof_Palme dbo:date ?date .
}
```
This query retrieves the date when Olof Palme was shot from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
178,List the seven kings of Rome.,"```sparql
SELECT ?king ?name
WHERE {
  ?king a dbo:Monarch ;
        dbo:predecessor dbr:Romulus ;
        dbo:successor ?successor ;
        foaf:name ?name .
  FILTER (?successor != dbr:Romulus)
}
LIMIT 7
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
179,Give me all people that were born in Vienna and died in Berlin.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?personName
WHERE {
  ?person dbo:birthPlace <http://dbpedia.org/resource/Vienna> ;
          dbo:deathPlace <http://dbpedia.org/resource/Berlin> ;
          foaf:name ?personName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
180,Is Darth Vader Luke’s father?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?vader dbo:child ?luke .
  ?vader dbo:spouse ?mother .
  ?father dbo:child ?luke .
  FILTER (?father != ?vader)
}
```
This query checks if there is a father who is different from Darth Vader and is also the father of Luke Skywalker.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
181,Show me all the breweries in Australia.,"```sparql
SELECT DISTINCT ?brewery ?breweryLabel
WHERE {
  ?brewery rdf:type dbo:Brewery ;
          dbo:country dbr:Australia .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?film
WHERE {
  ?film dbo:producer dbr:Steven_Spielberg ;
        dbp:budget ?budget .
  FILTER (?budget >= 80000000)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
183,Give me all soccer clubs in Spain.,"```sparql
SELECT DISTINCT ?club
WHERE {
  ?club a dbo:SoccerClub ;
        dbo:country dbr:Spain .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
184,Who produced films starring Natalie Portman?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer
WHERE {
  ?film dbo:starring dbr:Natalie_Portman ;
       dbo:producer ?producer .
}
```
This SPARQL query retrieves the producers of films starring Natalie Portman from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
185,Give me all breeds of the German Shepherd dog.,"```sparql
SELECT DISTINCT ?breedLabel
WHERE {
  ?breed rdf:type dbo:DogBreed ;
         rdfs:label ?breedLabel ;
         dbo:origin <http://dbpedia.org/resource/German_Shepherd> .
  FILTER (lang(?breedLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
186,Who is the heaviest player of the Chicago Bulls?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?weight
WHERE {
  ?player dbo:team dbr:Chicago_Bulls ;
         dbp:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
187,Which languages are spoken in Estonia?,"```sparql
SELECT DISTINCT ?language
WHERE {
  <http://dbpedia.org/resource/Estonia> dbpedia-owl:language ?language .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
188,What is the largest country in the world?,"```sparql
SELECT ?country ?area
WHERE {
  ?country a dbo:Country ;
           dbo:area ?area .
}
ORDER BY DESC(?area)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
189,What is the largest city in america?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:United_States ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
190,Who was the pope that founded the Vatican Television?,"```sparql
SELECT DISTINCT ?popeName
WHERE {
  ?pope a dbo:Pope ;
        dbo:office ?office .
  ?office rdfs:label ""Bishop of Rome"" .
  ?pope dbo:knownFor ?knownFor .
  FILTER(CONTAINS(?knownFor, ""Vatican Television""))
  BIND(REPLACE(STR(?pope), ""http://dbpedia.org/resource/"", """") AS ?popeName)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
191,Who discovered Ceres?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Ceres dbo:discoverer ?discoverer .
}
```

This query retrieves the discoverer of Ceres from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
192,Who is the king of the Netherlands?,"```sparql
SELECT ?king
WHERE {
  dbpedia:Netherlands dbpedia-owl:leader ?king .
  ?king a dbpedia-owl:Monarch .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
193,Is Cola a beverage?,"Yes, Cola is a type of beverage. It is a carbonated soft drink that typically contains caffeine and is flavored with a combination of vanilla, cinnamon, citrus oils, and other flavorings.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"```sparql
SELECT ?almaMaterLabel
WHERE {
  ?chancellor a dbo:Chancellor ;
              rdfs:label ""Angela Merkel""@en ;
              dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterLabel .
  FILTER(LANG(?almaMaterLabel) = 'en')
}
```
This query retrieves the alma mater of the Chancellor of Germany, Angela Merkel.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
195,Who wrote the book Les Piliers de la terre?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author
WHERE {
  dbr:Les_Piliers_de_la_Terre dbo:author ?author .
}
```
This SPARQL query retrieves the author of the book ""Les Piliers de la Terre"" from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
196,Which airports does Yeti Airlines serve?,"```sparql
SELECT DISTINCT ?airportName
WHERE {
  ?airline rdf:type dbo:Airline ;
           foaf:name ""Yeti Airlines"" .
  ?flight dbo:airline ?airline ;
          dbo:departureAirport ?airport .
  ?airport rdfs:label ?airportName .
  FILTER(langMatches(lang(?airportName), ""en""))
}
```
This SPARQL query retrieves the names of airports served by Yeti Airlines by looking for flights associated with the airline and extracting the departure airports.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
197,Where is the birthplace of Goethe?,"```sparql
SELECT ?birthplaceLabel
WHERE {
  <http://dbpedia.org/resource/Johann_Wolfgang_von_Goethe> dbpedia-owl:birthPlace ?birthplace.
  ?birthplace rdfs:label ?birthplaceLabel.
  FILTER(LANG(?birthplaceLabel) = """" || LANGMATCHES(LANG(?birthplaceLabel), ""en""))
}
```
This SPARQL query retrieves the birthplace of Johann Wolfgang von Goethe from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

ASK {
  SELECT ?event1 ?event2
  WHERE {
    ?event1 a dbo:MilitaryConflict ;
            dbo:startDate ?date1 ;
            rdfs:label ""Cuban Missile Crisis""@en .
    ?event2 a dbo:MilitaryConflict ;
            dbo:startDate ?date2 ;
            rdfs:label ""Bay of Pigs Invasion""@en .
    FILTER (?date1 < ?date2)
  }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
199,Which ingredients do I need for carrot cake?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ingredient
WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient .
}
```
This SPARQL query retrieves the ingredients needed for carrot cake from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
200,Who created Wikipedia?,"```sparql
SELECT ?creator
WHERE {
  dbr:Wikipedia dct:creator ?creator .
}
```
This query retrieves the creator of Wikipedia from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
201,What is the highest mountain in Saxony Germany?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mountain ?height
WHERE {
  ?mountain dbo:location dbr:Saxony ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```

This SPARQL query retrieves the highest mountain in Saxony, Germany by selecting the mountain located in Saxony and ordering them by elevation in descending order to get the highest one.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
202,Who is the current federal minister of finance in Germany?,"```sparql
SELECT ?minister
WHERE {
  ?minister a dbpedia-owl:Person ;
           dbpprop:title ""Federal Minister of Finance of Germany"" ;
           dbpprop:incumbent ?currentMinister .
  FILTER (langMatches(lang(?currentMinister), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
203,In which country is Mecca located?,"```sparql
SELECT ?countryLabel
WHERE {
  dbr:Mecca dbo:location ?country .
  ?country rdf:type dbo:Country .
  ?country rdfs:label ?countryLabel .
  FILTER(LANG(?countryLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
204,Who played Gus Fring in Breaking Bad?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?actorName
WHERE {
  ?actor dbo:starring <http://dbpedia.org/resource/Breaking_Bad> ;
         dbo:birthName ?actorName .
}
```
This query retrieves the name of the actor who played Gus Fring in Breaking Bad.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
205,In which country does the Nile start?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Nile> dbo:sourceCountry ?country .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
206,In which state Penn State University is located?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?state
WHERE {
  <http://dbpedia.org/resource/Penn_State_University> dbo:state ?state .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
207,What is the biggest stadium in Spain?,"```sparql
SELECT ?stadium ?stadiumName ?capacity
WHERE {
  ?stadium a dbo:Stadium ;
           dbo:location dbr:Spain ;
           dbo:capacity ?capacity .
  ?stadium rdfs:label ?stadiumName .
  FILTER (lang(?stadiumName) = 'en')
}
ORDER BY DESC(?capacity)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
208,Who is the coach of Ankara's ice hockey team?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach
WHERE {
  ?team dbo:city dbr:Ankara ;
       dbo:sport dbr:Ice_hockey ;
       dbp:coach ?coach .
}
```
This query retrieves the coach of Ankara's ice hockey team by searching for a team located in Ankara that plays ice hockey and retrieving the coach information associated with that team.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
209,How large is the area of UK?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?area
WHERE {
  <http://dbpedia.org/resource/United_Kingdom> dbo:area ?area .
}
```
This SPARQL query retrieves the area of the United Kingdom from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
210,Who created Batman?,"```sparql
SELECT ?creator
WHERE {
  ?batman dbo:creator ?creator.
  FILTER regex(?creator, ""Batman"", ""i"")
}
```
This query retrieves the creator of Batman from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
211,Was Sigmund Freud married?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?married
WHERE {
  dbo:Sigmund_Freud dbo:spouse ?married .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
212,Who are the developers of DBpedia?,"```sparql
SELECT DISTINCT ?developer
WHERE {
  dbr:DBpedia dbo:developer ?developer .
}
```
This query retrieves the developers of DBpedia by selecting the values of the `developer` property for the DBpedia resource.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
213,Give me all movies directed by Francis Ford Coppola.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:director <http://dbpedia.org/resource/Francis_Ford_Coppola> .
  ?movie a dbo:Film .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
214,Are tree frogs a type of amphibian?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

ASK {
  dbo:Tree_frog dbo:order dbo:Amphibian .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
215,What is the location of the Houses of Parliament?,"```sparql
SELECT ?location
WHERE {
  dbr:Houses_of_Parliament dbo:location ?location .
}
```
This query retrieves the location of the Houses of Parliament from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
216,how much is the elevation of Düsseldorf Airport ?,"```sparql
SELECT ?elevation
WHERE {
  dbpedia:Düsseldorf_Airport dbo:elevation ?elevation
}
```
This query retrieves the elevation of Düsseldorf Airport from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
217,How much is the population of mexico city ?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Mexico_City> dbo:populationTotal ?population .
}
```
This SPARQL query retrieves the total population of Mexico City from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
218,when was the founding date of french fifth republic?,"```sparql
SELECT ?foundingDate
WHERE {
  dbr:French_Fifth_Republic dbo:formationDate ?foundingDate
}
```
This SPARQL query retrieves the founding date of the French Fifth Republic from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
219,Who was the first King of England?,"```sparql
SELECT ?king ?kingName
WHERE {
  ?king a dbo:Monarch ;
        dbo:reignStart ?start ;
        dbo:reignEnd ?end ;
        dbo:title dbr:King_of_England ;
        foaf:name ?kingName .
  FILTER (?start < ""1066-01-01""^^xsd:date)
}
ORDER BY ?start
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
220,Who is the editor of Forbes?,"```sparql
SELECT ?editor
WHERE {
  <http://dbpedia.org/resource/Forbes> dbpedia-owl:editor ?editor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
221,Which awards did Douglas Hofstadter win?,"```sparql
SELECT DISTINCT ?award
WHERE {
  ?person dbo:wikiPageID 108579 .
  ?person dbo:award ?award .
}
```
This SPARQL query retrieves the awards won by Douglas Hofstadter by searching for the person with the DBpedia wikiPageID 108579 (which corresponds to Douglas Hofstadter) and then retrieving the awards associated with that person.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
222,Who is the youngest Darts player?,"```sparql
SELECT DISTINCT ?player ?birthdate
WHERE {
  ?player a dbpedia-owl:DartsPlayer ;
          dbpedia-owl:birthDate ?birthdate .
}
ORDER BY DESC(?birthdate)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
223,Is horse racing a sport?,"```sparql
SELECT DISTINCT ?sport
WHERE {
  dbpedia:Horse_racing dct:subject ?sport .
  FILTER regex(?sport, ""Sport"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
224,Which river does the Brooklyn Bridge cross?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?riverName
WHERE {
  <http://dbpedia.org/resource/Brooklyn_Bridge> dbo:crosses ?river .
  ?river rdfs:label ?riverName .
  FILTER(LANG(?riverName) = """" || LANGMATCHES(LANG(?riverName), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
225,How many people live in Poland?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```
This SPARQL query retrieves the total population of Poland from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
226,When was the last episode of the TV series Friends aired?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?airDate
WHERE {
  ?tvSeries dbo:wikiPageID  1187 ;
            dbp:lastAired ?airDate .
}
```
This query retrieves the air date of the last episode of the TV series Friends.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
227,Is the wife of president Obama called Michelle?,"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
SELECT ?wife
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:spouse ?wife .
  FILTER (?wife = dbpedia:Michelle_Obama)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
229,Who is 8th president of US?,"The 8th president of the United States is Martin Van Buren. 

Here is the SPARQL query to retrieve this information from DBpedia:

```
SELECT ?presidentName
WHERE {
  ?president a dbpedia-owl:President ;
             dbpprop:number ""8"" ;
             rdfs:label ?presidentName .
  FILTER (lang(?presidentName) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
230,how much is the total population of  european union?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/European_Union> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```
This query retrieves the total population of the European Union from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
231,Give me all launch pads operated by NASA.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?launchPad
WHERE {
  ?launchPad a dbo:LaunchPad ;
             dbo:operator dbr:NASA .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
232,Who developed the video game World of Warcraft?,"```sparql
SELECT DISTINCT ?developer
WHERE {
  ?game dbo:developer ?developer ;
       rdfs:label ""World of Warcraft""@en .
  FILTER(langMatches(lang(?developer), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
233,What is the birth name of Adele?,"```sparql
SELECT ?birthName
WHERE {
  dbpedia:Adele dbpedia-owl:birthName ?birthName
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
234,What is the population of Cairo?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Cairo> dbo:populationTotal ?population .
}
```
This SPARQL query retrieves the total population of Cairo from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
235,Is Frank Herbert still alive?,"```sparql
SELECT ?person ?name ?deathDate
WHERE {
  ?person rdf:type dbo:Person ;
          foaf:name ?name ;
          dbo:deathDate ?deathDate .
  FILTER (?name = ""Frank Herbert"")
}
```
This query checks if Frank Herbert is still alive by retrieving his death date from DBpedia. If the death date is present, it means he is no longer alive.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
236,What is the last work of Dan Brown?,"```sparql
SELECT ?workLabel
WHERE {
  ?author rdfs:label ""Dan Brown""@en ;
          dbo:notableWork ?work .
  ?work rdfs:label ?workLabel .
}
ORDER BY DESC(?work)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
237,Where is Sungkyunkwan University?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?location
WHERE {
  dbr:Sungkyunkwan_University dbo:location ?location .
}
```
This SPARQL query retrieves the location of Sungkyunkwan University from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
238,Who is the author of the interpretation of dreams?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?author
WHERE {
  ?book dbo:author ?author ;
        dbo:abstract ?abstract .
  FILTER(REGEX(?abstract, ""interpretation of dreams"", ""i""))
}
```
This query retrieves the author of the book related to the interpretation of dreams from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
239,When was the death  of  Shakespeare?,"```sparql
SELECT ?dateOfDeath
WHERE {
  <http://dbpedia.org/resource/William_Shakespeare> dbpedia-owl:deathDate ?dateOfDeath .
}
```
This SPARQL query retrieves the date of death of William Shakespeare from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
241,Who developed Slack?,"```sparql
SELECT ?developer
WHERE {
  dbr:Slack dbo:developer ?developer .
}
```
This query retrieves the developer(s) of Slack from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
242,Where is the origin of Carolina reaper?,"```sparql
SELECT ?origin
WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}
```
This query retrieves the origin of the Carolina Reaper pepper.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
243,In which year was Rachel Stevens born?,"```sparql
SELECT ?birthYear
WHERE {
  dbpedia:Rachel_Stevens dbo:birthDate ?birthDate .
  BIND(YEAR(?birthDate) AS ?birthYear)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
244,How often did Jane Fonda marry?,"```sparql
SELECT (COUNT(?spouse) AS ?marriageCount)
WHERE {
  ?person dbo:spouse ?spouse.
  ?person foaf:name ""Jane Fonda""@en.
} 
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
245,Was the wife of president Lincoln called Mary?,"```sparql
SELECT ?presidentName
WHERE {
  ?president a dbo:President ;
             foaf:name ""Abraham Lincoln""@en .
  ?president dbo:spouse ?spouse .
  ?spouse foaf:name ""Mary Todd Lincoln""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
246,Which cities does the Weser flow through?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?city
WHERE {
  ?river dbo:riverName ""Weser""@en .
  ?city dbo:locatedInArea ?river .
  ?city a dbo:City .
}
```
This SPARQL query retrieves the cities through which the river Weser flows by looking for cities that are located in the area of the river Weser.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
247,In which programming language is GIMP written?,"```sparql
SELECT DISTINCT ?language
WHERE {
  dbr:GIMP dbo:programmingLanguage ?language .
}
```
This SPARQL query retrieves the programming language in which GIMP is written by querying DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
248,Which university did Angela Merkel attend?,"```sparql
SELECT ?university
WHERE {
  ?person dbpedia-owl:wikiPageID dbpedia:Angela_Merkel ;
          dbpedia-owl:almaMater ?university .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
249,List all the musicals with music by Elton John.,"```sparql
SELECT DISTINCT ?musical
WHERE {
  ?musical dbo:musicComposer dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
250,How many Aldi stores are there?,"```sparql
SELECT (COUNT(?store) AS ?count)
WHERE {
  ?store rdf:type dbo:RetailStore ;
         rdfs:label ""Aldi"" .
}
```
This query counts the number of Aldi stores in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
251,What is the longest river in the world?,"```sparql
SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```
This SPARQL query retrieves the river with the longest length from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
252,When was John Adams born?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthDate
WHERE {
  dbr:John_Adams dbo:birthDate ?birthDate
}
```
This SPARQL query retrieves the birth date of John Adams from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
253,Which companies produce hovercrafts?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?hovercraft dbo:manufacturer ?company .
  ?hovercraft rdf:type dbo:Hovercraft .
}
```
This SPARQL query retrieves the companies that produce hovercrafts by looking for instances of hovercrafts in DBpedia and extracting their manufacturers.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
254,Who was the wife of U.S. president Lincoln?,"```sparql
SELECT ?wifeName
WHERE {
  ?president a dbpedia-owl:President ;
             dbpprop:order ""16""^^xsd:integer ;
             dbpprop:vicePresident ?vicePresident ;
             dbpprop:wife ?wife .
  ?wife foaf:name ?wifeName .
  FILTER regex(?vicePresident, ""Hannibal Hamlin"", ""i"")
}
```
This query retrieves the name of the wife of U.S. President Lincoln, who was Mary Todd Lincoln.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
255,Which species does an elephant belong?,"```sparql
SELECT ?speciesLabel
WHERE {
  ?elephant rdf:type dbo:Animal ;
            dbo:species ?species .
  ?species rdfs:label ?speciesLabel .
  FILTER (LANG(?speciesLabel) = 'en')
  FILTER regex(?speciesLabel, ""Elephant"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
256,How many people live in the capital of Australia?,"```sparql
SELECT ?population
WHERE {
  <http://dbpedia.org/resource/Canberra> <http://dbpedia.org/ontology/populationTotal> ?population .
}
```
This query retrieves the total population of Canberra, the capital of Australia, from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
257,In which ancient empire could you pay with cocoa beans?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?empireLabel
WHERE {
  ?empire dbo:currency <http://dbpedia.org/resource/Cocoa_bean> ;
          dbo:timePeriod/dbo:wikiPageID ?periodId .
  FILTER (?periodId < 0)
  SERVICE <http://dbpedia.org/sparql> {
    ?empire rdfs:label ?empireLabel .
    FILTER (lang(?empireLabel) = 'en')
  }
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
258,How many theories did Albert Einstein come up with?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT (COUNT(?theory) AS ?numTheories)
WHERE {
  ?person dbo:influencedBy dbr:Albert_Einstein .
  ?theory dbo:author ?person .
}
```
This query counts the number of theories authored by individuals who were influenced by Albert Einstein.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
259,Who composed the soundtrack for Cameron's Titanic?,"```sparql
SELECT DISTINCT ?composer
WHERE {
  ?film dbpedia-owl:director dbpedia:James_Cameron ;
        dbpedia-owl:musicComposer ?composer .
  FILTER regex(str(?film), ""Titanic"")
}
```
This SPARQL query retrieves the composer of the soundtrack for the movie ""Titanic"" directed by James Cameron.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
260,Give me the runtime of Toy Story.,"```sparql
SELECT ?runtime
WHERE {
  ?film dbo:runtime ?runtime .
  ?film foaf:name ""Toy Story""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
262,With how many countries Iran has borders?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT (COUNT(?country) AS ?borderCount)
WHERE {
  <http://dbpedia.org/resource/Iran> dbo:country ?country .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
263,Which electronics companies were founded in Beijing?,"```sparql
SELECT DISTINCT ?company
WHERE {
  ?company dct:subject dbc:Electronics_companies_of_China ;
          dbo:foundationPlace dbr:Beijing .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
264,Who was the successor of John F. Kennedy?,"```sparql
SELECT ?successorName
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:successor ?successor .
  ?successor foaf:name ?successorName .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
265,Who is the mayor of Paris?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/leaderName> ?mayor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
266,Did Arnold Schwarzenegger attend a university?,"```sparql
SELECT DISTINCT ?university
WHERE {
  dbpedia:Arnold_Schwarzenegger dbpedia-owl:almaMater ?university .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
267,Is James Bond married?,"```sparql
SELECT ?person ?personName
WHERE {
  ?person a dbo:Agent ;
          foaf:name ?personName ;
          dbo:spouse ?spouse .
  FILTER regex(?personName, ""James Bond"", ""i"")
}
```
This query searches for a person with the name ""James Bond"" in DBpedia and retrieves information about their spouse.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
268,Does the Isar flow into a lake?,"```sparql
SELECT ?lake
WHERE {
  dbpedia:Isar dbpedia-owl:mouth ?lake .
  ?lake a dbpedia-owl:Lake .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
269,Which Indian company has the most employees?,"```sparql
SELECT DISTINCT ?company ?employees
WHERE {
  ?company rdf:type dbo:Company ;
          dbo:country dbr:India ;
          dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?employees)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
270,Who was John F. Kennedy's vice president?,"```sparql
SELECT ?vicePresident
WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:vicePresident ?vicePresident .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
271,Which country does the creator of Miffy come from?,"```sparql
SELECT ?countryLabel
WHERE {
  ?creator dbo:notableWork dbr:Miffy ;
          dbo:birthPlace ?country .
  ?country rdfs:label ?countryLabel .
  FILTER(LANG(?countryLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
273,In what city is the Heineken brewery?,"```sparql
SELECT ?cityLabel
WHERE {
  ?brewery dbo:location ?city .
  ?city rdfs:label ?cityLabel .
  FILTER (LANG(?cityLabel) = 'en' && CONTAINS(?cityLabel, ""Heineken""))
}
```
This query retrieves the city where the Heineken brewery is located by searching for a city with a label containing the word ""Heineken"".","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
274,Is Barack Obama a democrat?,"```sparql
SELECT ?partyLabel
WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(langMatches(lang(?partyLabel), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
275,List the children of Margaret Thatcher.,"```sparql
SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
276,From which region is the Melon de Bourgogne?,"```sparql
SELECT ?regionLabel
WHERE {
  ?melon dbpedia-owl:region ?region .
  ?region rdfs:label ?regionLabel .
  FILTER(LANG(?regionLabel) = 'en')
  FILTER(?melon = dbpedia:Melon_de_Bourgogne)
}
```
This query retrieves the region of the Melon de Bourgogne grape variety.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
278,how big is the total area of North Rhine- Westphalia?,"```sparql
SELECT ?area
WHERE {
  dbpedia:North_Rhine-Westphalia dbo:areaTotal ?area
}
```
This query retrieves the total area of North Rhine-Westphalia from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
279,Which city has the most inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
280,What is Donald Trump's main business?,"```sparql
SELECT ?business
WHERE {
  dbpedia:Donald_Trump dbpedia-owl:occupation ?business .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
281,When will start the final match of the football world cup 2018?,"```sparql
SELECT ?date
WHERE {
  dbpedia:2018_FIFA_World_Cup dbo:startDate ?date .
}
```
This query retrieves the start date of the 2018 FIFA World Cup.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
282,Which films did Stanley Kubrick direct?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film rdf:type dbo:Film ;
        dbo:director dbr:Stanley_Kubrick .
}
```
This SPARQL query retrieves the films directed by Stanley Kubrick by searching for films with the director property set to Stanley Kubrick.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
283,how much is the population  Iraq?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?population
WHERE {
  dbo:Iraq dbo:populationTotal ?population .
}
```
This SPARQL query retrieves the total population of Iraq from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
284,How many inhabitants does the largest city in Canada have?,"```sparql
SELECT ?population
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Canada ;
        dbo:populationTotal ?population .
  FILTER NOT EXISTS {
    ?otherCity dbo:populationTotal ?otherPopulation .
    ?otherCity dbo:country dbr:Canada .
    FILTER (?otherPopulation > ?population)
  }
}
```
This SPARQL query retrieves the population of the largest city in Canada by comparing the population of each city in Canada and selecting the city with the highest population.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
285,Who is the mayor of the capital of French Polynesia?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/French_Polynesia> <http://dbpedia.org/ontology/capital> ?capital .
  ?capital <http://dbpedia.org/ontology/leaderTitle> ?mayor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
286,Give me all actors starring in movies directed by William Shatner.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:director dbr:William_Shatner ;
        dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
287,How tall is Claudia Schiffer?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Claudia_Schiffer dbpedia-owl:height ?height
}
```
This SPARQL query retrieves the height of Claudia Schiffer from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
288,how much is the population densty rank of germany?,"```sparql
SELECT ?rank
WHERE {
  dbpedia:Germany dbo:populationDensityRank ?rank
}
```
This query retrieves the population density rank of Germany from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
289,What is the highest mountain in Italy?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?mountain ?height
WHERE {
  ?mountain a dbo:Mountain ;
           dbo:country <http://dbpedia.org/resource/Italy> ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
290,List all games by GMT.,"```sparql
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?game
WHERE {
  ?game dct:subject <http://dbpedia.org/resource/Category:Games_published_by_GMT_Games> .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
291,What is the official language of Suriname?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?language
WHERE {
  dbo:Suriname dbo:officialLanguage ?language .
}
```
This SPARQL query retrieves the official language of Suriname from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
292,In which city did Nikos Kazantzakis die?,"```sparql
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Nikos_Kazantzakis> <http://dbpedia.org/ontology/deathPlace> ?place .
  ?place <http://dbpedia.org/ontology/isPartOf> ?city .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
293,What is in a chocolate chip cookie?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ingredient
WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient .
}
```

This SPARQL query retrieves the ingredients of a chocolate chip cookie from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
294,In which country is the Limerick Lake?,"```sparql
SELECT ?countryLabel
WHERE {
  ?limerickLake rdf:type dbo:Lake ;
                rdfs:label ""Limerick Lake""@en ;
                dbo:country ?country .
  ?country rdfs:label ?countryLabel .
  FILTER(LANG(?countryLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
295,Give me all video games published by Mean Hamster Software.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?game
WHERE {
  ?game dct:publisher <http://dbpedia.org/resource/Mean_Hamster_Software> ;
        a dbo:VideoGame .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
296,Give me all members of Prodigy.,"```sparql
SELECT DISTINCT ?member
WHERE {
  ?band rdf:type dbo:Band ;
        foaf:name ""The Prodigy""@en ;
        dbo:bandMember ?member .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
297,In which time zone is Rome?,"```sparql
SELECT ?timeZoneLabel
WHERE {
  dbr:Rome dbo:timeZone ?timeZone .
  ?timeZone rdfs:label ?timeZoneLabel .
  FILTER(LANG(?timeZoneLabel) = ""en"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
298,How high is the lighthouse in Colombo?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  dbr:Colombo dbo:height ?height .
  ?height rdf:type dbo:Height .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
299,Who are the writers of the Wall album of Pink Floyd?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer
WHERE {
  ?album dbo:artist dbr:Pink_Floyd ;
        dbp:title ""The_Wall""@en ;
        dbp:writer ?writer .
}
```

This SPARQL query retrieves the writers of the album ""The Wall"" by Pink Floyd from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
300,Who is the mayor of Rotterdam?,"```sparql
SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Rotterdam> dbpedia-owl:mayor ?mayor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
301,What is the largest city in Australia?,"```sparql
SELECT ?cityName
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:Australia ;
        dbo:populationTotal ?population .
  FILTER NOT EXISTS {
    ?otherCity a dbo:City ;
               dbo:country dbr:Australia ;
               dbo:populationTotal ?otherPopulation .
    FILTER (?otherPopulation > ?population)
  }
  ?city rdfs:label ?cityName .
  FILTER (lang(?cityName) = 'en')
}
LIMIT 1
```
This query retrieves the largest city in Australia based on population data from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
302,Who was married to president Chirac?,"```sparql
SELECT ?spouse
WHERE {
  ?president dbpedia-owl:spouse ?spouse .
  FILTER (?president = dbpedia:Jacques_Chirac)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
303,What form of government is found in South Africa?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?governmentType
WHERE {
  dbo:South_Africa dbo:governmentType ?governmentType .
}
```
This SPARQL query retrieves the form of government found in South Africa from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
304,How high is the Yokohama Marine Tower?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?height
WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height .
}
```
This SPARQL query retrieves the height of the Yokohama Marine Tower from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
305,Which holidays are celebrated around the world? test2,"```sparql
SELECT DISTINCT ?holiday
WHERE {
  ?holiday a dbo:Holiday .
  ?holiday dct:subject dbc:Holidays_by_country .
}
```
This query retrieves a list of holidays celebrated around the world.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
306,Who is the tallest basketball player?,"```sparql
SELECT DISTINCT ?player ?height
WHERE {
  ?player a dbo:BasketballPlayer ;
          dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```
This query retrieves the tallest basketball player by sorting the players based on their height in descending order and selecting the player with the highest height.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
307,How many languages are spoken in Turkmenistan?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  ?country dbpedia-owl:officialLanguage ?language ;
           dbpedia-owl:commonName ""Turkmenistan""@en .
}
```
This query retrieves the count of official languages spoken in Turkmenistan.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
308,Did Che Guevara have children?,"```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  dbpedia:Che_Guevara dbpedia-owl:child ?child .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"```sparql
SELECT DISTINCT ?film ?title
WHERE {
  ?film dbpedia-owl:director dbr:Aki_Kaurismäki ;
        dbpedia-owl:award dbr:Grand_Prix_(Cannes_Film_Festival) ;
        dbpedia-owl:title ?title .
}
```
This query retrieves the films directed by Aki Kaurismäki that have won the Grand Prix at the Cannes Film Festival.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
310,To which party does the mayor of Paris belong?,"```sparql
SELECT ?partyLabel
WHERE {
  <http://dbpedia.org/resource/Mayor_of_Paris> dbpedia-owl:party ?party .
  ?party rdfs:label ?partyLabel .
  FILTER(LANG(?partyLabel) = """" || LANGMATCHES(LANG(?partyLabel), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
311,Who is the Formula 1 race driver with the most races?,"```sparql
SELECT ?driver ?name (COUNT(?race) AS ?numRaces)
WHERE {
  ?driver a dbo:FormulaOneRacer ;
          foaf:name ?name ;
          dbo:races ?race .
}
GROUP BY ?driver ?name
ORDER BY DESC(?numRaces)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
312,What country is Sitecore from?,"```sparql
SELECT ?countryLabel
WHERE {
  ?sitecore dbo:location ?country .
  ?country a dbo:Country .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
  FILTER regex(?countryLabel, ""Sitecore"", ""i"")
}
```
This query retrieves the country where Sitecore is from by searching for a country related to Sitecore in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
313,Give me the birth place of Frank Sinatra.,"```sparql
SELECT ?birthPlace
WHERE {
  dbpedia:Frank_Sinatra dbpedia-owl:birthPlace ?birthPlace .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
314,Is Christian Bale starring in Velvet Goldmine?,"```sparql
SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film foaf:name ""Velvet Goldmine""@en .
  ?actor foaf:name ""Christian Bale""@en .
}
```
This query checks if Christian Bale is starring in the movie ""Velvet Goldmine"" by searching for the movie in DBpedia and checking if Christian Bale is listed as one of the actors.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
315,Who is the son of Sonny and Cher?,"```sparql
SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_and_Cher .
  ?son a dbo:Person .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
316,How many ethnic groups live in Slovenia?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  <http://dbpedia.org/resource/Slovenia> dbo:ethnicGroups ?ethnicGroup .
}
```
This SPARQL query retrieves the count of ethnic groups that live in Slovenia by querying DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
317,What is the capital of Cameroon?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?capitalLabel
WHERE {
  <http://dbpedia.org/resource/Cameroon> dbo:capital ?capital.
  ?capital rdfs:label ?capitalLabel.
  FILTER(LANG(?capitalLabel) = """" || LANGMATCHES(LANG(?capitalLabel), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
318,Was Natalie Portman born in the United States?,"```sparql
SELECT ?birthPlace
WHERE {
  dbpedia:Natalie_Portman dbo:birthPlace ?birthPlace .
  FILTER regex(?birthPlace, ""United States"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
319,How many pages does War and Peace have?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?pages
WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?pages
}
```
This SPARQL query retrieves the number of pages of the book ""War and Peace"" from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
320,Who is the oldest child of Meryl Streep?,"```sparql
SELECT ?childName
WHERE {
  ?person dbpedia-owl:parent dbpedia:Meryl_Streep ;
          dbpedia-owl:child ?child ;
          dbpedia-owl:birthDate ?childBirthDate .
  ?child foaf:name ?childName .
}
ORDER BY ASC(?childBirthDate)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
321,Which television shows were created by Walt Disney?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?show
WHERE {
  ?show dct:creator <http://dbpedia.org/resource/Walt_Disney> ;
       a dbo:TelevisionShow .
}
```
This SPARQL query retrieves the television shows created by Walt Disney by searching for instances of television shows with Walt Disney as the creator.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
322,What does IYCM stand for?,"```sparql
SELECT ?definition
WHERE {
  dbpedia:IYCM dbo:wikiPageRedirects ?redirect .
  ?redirect rdfs:comment ?definition .
  FILTER (lang(?definition) = 'en')
}
```
This query retrieves the definition of the term ""IYCM"" by finding the resource that the term redirects to in DBpedia and then retrieving the English comment associated with that resource.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
323,Which types of grapes grow in Oregon?,"```sparql
SELECT DISTINCT ?grapeType
WHERE {
  ?grapeType dbo:region dbr:Oregon .
  ?grapeType a dbo:Grape .
}
```
This SPARQL query retrieves the types of grapes that grow in Oregon by selecting distinct grape types that have a region property of Oregon and are instances of the Grape class in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
324,Was U.S. president Jackson involved in a war?,"```sparql
SELECT ?warLabel
WHERE {
  ?president dbpedia-owl:wikiPageID 11841 ;
             dbpprop:name ""Andrew Jackson""@en .
  ?president dbpprop:serviceStart ?start .
  ?president dbpprop:serviceEnd ?end .
  ?war dbpprop:commander ?president .
  ?war rdf:type dbpedia-owl:War .
  ?war rdfs:label ?warLabel .
  FILTER (?start < ""1837-03-04""^^xsd:date && ?end > ""1829-03-04""^^xsd:date)
}
```

This SPARQL query checks if U.S. President Andrew Jackson was involved in any wars during his presidency (1829-1837).","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
325,When was the Titanic completed?,"```sparql
SELECT ?completionDate
WHERE {
  dbr:Titanic dbo:completionDate ?completionDate
}
```
This query retrieves the completion date of the Titanic from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
326,Did Tesla win a nobel prize in physics?,"```sparql
SELECT ?scientist ?nobelPrize
WHERE {
  ?scientist foaf:name ""Nikola Tesla""@en ;
             dbp:nobelPrizes ?nobelPrize .
  ?nobelPrize rdf:type dbo:NobelPrize ;
              dbo:awardCategory dbr:Physics .
}
```
This query checks if Nikola Tesla won a Nobel Prize in Physics.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
327,How many states are in Mexico?,"```sparql
SELECT (COUNT(?state) AS ?count)
WHERE {
  ?state a dbo:State ;
         dbo:country dbr:Mexico .
}
```
This query counts the number of states in Mexico by searching for instances of the class dbo:State that have a country property pointing to dbr:Mexico.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?scientist
WHERE {
  ?scientist a dbo:Person ;
             dbo:award dbr:Nobel_Peace_Prize ;
             dbo:knownFor dbr:Manhattan_Project .
}
```

This query retrieves the scientist who is known for both the Manhattan Project and has been awarded the Nobel Peace Prize.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
329,How much did the Lego Movie cost?,"```sparql
SELECT ?movie ?budget
WHERE {
  ?movie rdf:type dbo:Film ;
         rdfs:label ""The Lego Movie""@en ;
         dbo:budget ?budget .
}
```
This query retrieves the budget of the movie ""The Lego Movie"" from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
330,Who composed the music for Harold and Maude?,"```sparql
SELECT ?composerLabel
WHERE {
  ?film dbo:composer ?composer .
  ?film foaf:name ""Harold and Maude""@en .
  ?composer rdfs:label ?composerLabel .
  FILTER(LANG(?composerLabel) = 'en')
}
```
This SPARQL query retrieves the composer of the music for the film ""Harold and Maude"" from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
331,List all episodes of the first season of the HBO television series The Sopranos.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?episode ?title
WHERE {
  ?season dbo:seasonNumber ""1"" .
  ?season dbo:numberOfEpisodes ?numEpisodes .
  ?episode dbo:season ?season .
  ?episode dbp:title ?title .
}
ORDER BY xsd:integer(?episode)
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
332,Which city has the least inhabitants?,"```sparql
SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
333,Where is Syngman Rhee buried?,"```sparql
SELECT ?burialPlaceLabel
WHERE {
  ?person dbpedia-owl:wikiPageID 20913 ;
          dbpedia-owl:burialPlace ?burialPlace .
  ?burialPlace rdfs:label ?burialPlaceLabel .
  FILTER(LANG(?burialPlaceLabel) = """" || LANGMATCHES(LANG(?burialPlaceLabel), ""en""))
}
```
This SPARQL query retrieves the burial place of Syngman Rhee from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
334,Does Neymar play for Real Madrid?,"SELECT ?player
WHERE {
  ?player dbo:team dbr:Real_Madrid .
  ?player dbo:position dbr:Forward .
  ?player foaf:name ""Neymar"" .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
335,Who wrote the book The Pillars of the Earth?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?author
WHERE {
  ?book dbo:author ?author ;
        rdfs:label ""The Pillars of the Earth""@en .
  FILTER(langMatches(lang(?author), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
336,Do Prince Harry and Prince William have the same parents?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  dbr:Prince_Harry dbo:parent ?parent .
}
```

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  dbr:Prince_William dbo:parent ?parent .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
337,Who was the doctoral supervisor of Albert Einstein?,"```sparql
SELECT ?supervisorName
WHERE {
  ?einstein dbo:doctoralAdvisor ?supervisor.
  ?supervisor foaf:name ?supervisorName.
  FILTER (?supervisorName != ""Albert Einstein"")
}
```
This query retrieves the name of the doctoral supervisor of Albert Einstein from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
338,Does Breaking Bad have more episodes than Game of Thrones?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes
WHERE {
  ?breakingBad dbo:numberOfEpisodes ?breakingBadEpisodes ;
              dbo:relatedMeanOfProduction <http://dbpedia.org/resource/Breaking_Bad> .
  
  ?gameOfThrones dbo:numberOfEpisodes ?gameOfThronesEpisodes ;
                 dbo:relatedMeanOfProduction <http://dbpedia.org/resource/Game_of_Thrones> .
}
```
This query retrieves the number of episodes for Breaking Bad and Game of Thrones from DBpedia. The result will show the number of episodes for each TV series, allowing for a comparison to determine which one has more episodes.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
339,Who was Vincent van Gogh inspired by?,"```sparql
SELECT DISTINCT ?inspiration
WHERE {
  ?artist dbpedia-owl:influencedBy dbr:Vincent_van_Gogh ;
          dbpedia-owl:influenced ?inspiration .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
340,Which building after the Burj Khalifa has the most floors?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?building ?buildingName ?numberOfFloors
WHERE {
  ?building dbo:height ?height ;
           dbo:numberOfFloors ?numberOfFloors ;
           rdfs:label ?buildingName .
  FILTER (lang(?buildingName) = 'en' && ?height > 828) 
}
ORDER BY DESC(?numberOfFloors)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
341,What was the final result of the War of the Roses?,"```sparql
SELECT ?result
WHERE {
  dbpedia:Wars_of_the_Roses dbpedia-owl:result ?result .
}
```
This query retrieves the final result of the War of the Roses from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
342,How much did Pulp Fiction cost?,"```sparql
SELECT ?film ?budget
WHERE {
  ?film rdf:type dbo:Film ;
        rdfs:label ""Pulp Fiction""@en ;
        dbo:budget ?budget .
}
```
This query retrieves the budget of the film ""Pulp Fiction"" from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
343,Is proinsulin a protein?,"```sparql
SELECT ?label
WHERE {
  dbpedia:Proinsulin rdf:type dbo:Protein ;
                  rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
344,Do Urdu and Persian have a common root?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language1 ?language2
WHERE {
  ?language1 dct:subject dbc:Urdu_language ;
             dbo:related dbc:Persian_language .
  ?language2 dct:subject dbc:Persian_language ;
             dbo:related dbc:Urdu_language .
}
LIMIT 1
OFFSET 0
","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring ?actor ;
        dbo:producer dbr:Benicio_del_Toro ;
        dbo:country dbr:Spain .
  FILTER(langMatches(lang(?actor), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
346,Is Lake Baikal bigger than the Great Bear Lake?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?lake ?area
WHERE {
  { 
    SELECT ?lake ?area
    WHERE {
      ?lake a dbo:Lake ;
            dbo:areaTotal ?area .
      FILTER (?lake = dbo:Lake_Baikal || ?lake = dbo:Great_Bear_Lake)
    }
  }
}
```
This query retrieves the total area of Lake Baikal and Great Bear Lake from DBpedia. The result can be used to compare the sizes of the two lakes.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
347,Show me all books in Asimov's Foundation series.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book
WHERE {
  ?book dbo:series dbr:Foundation_series .
}
```
This SPARQL query retrieves all books in Asimov's Foundation series from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
348,Where was Bach born?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  <http://dbpedia.org/resource/Johann_Sebastian_Bach> dbo:birthPlace ?birthPlace .
}
```
This SPARQL query retrieves the birth place of Johann Sebastian Bach from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
349,Which city has the oldest running metro?,"```sparql
SELECT DISTINCT ?city ?metroSystem ?openingYear
WHERE {
  ?city dbo:metroSystem ?metroSystem ;
       dbo:openingYear ?openingYear .
  FILTER EXISTS { ?city dbo:country ?country }
}
ORDER BY ASC(?openingYear)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
350,Who designed the Brooklyn Bridge?,"```sparql
SELECT ?designer
WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?designer .
}
```
This query retrieves the designer of the Brooklyn Bridge from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
351,How many people live in Eurasia?,"```sparql
SELECT (SUM(?population) AS ?totalPopulation)
WHERE {
  ?country a dbo:Country ;
           dbo:populationTotal ?population ;
           dbo:continent dbr:Eurasia .
}
```
This query calculates the total population of all countries in Eurasia by summing up the population of each country in the DBpedia dataset.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
352,Who is the host of the BBC Wildlife Specials?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?host
WHERE {
  ?wildlifeSpecial dbo:producer <http://dbpedia.org/resource/BBC_Natural_History_Unit> ;
                   dbo:presenter ?host .
  FILTER regex(str(?wildlifeSpecial), ""Wildlife_Specials"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
353,"What is the total population of Melbourne, Florida?","```sparql
SELECT ?population
WHERE {
  dbpedia:Melbourne,_Florida dbo:populationTotal ?population .
}
```
This query retrieves the total population of Melbourne, Florida from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
354,What country is Mount Everest in?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Mount_Everest> dbo:location ?country .
  ?country a dbo:Country .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
355,To which artistic movement did the painter of The Three Dancers belong?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movementLabel
WHERE {
  dbr:The_Three_Dancers dbo:author ?painter .
  ?painter dbo:movement ?movement .
  ?movement rdfs:label ?movementLabel .
  FILTER(LANG(?movementLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
356,When did Operation Overlord commence?,"```sparql
SELECT ?date
WHERE {
  dbr:Operation_Overlord dbo:startDate ?date
}
```
This SPARQL query retrieves the start date of Operation Overlord from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
357,What is the bridge with the longest span?,"```sparql
SELECT ?bridge ?length
WHERE {
  ?bridge rdf:type dbo:Bridge ;
          dbo:longestSpan ?length .
}
ORDER BY DESC(?length)
LIMIT 1
```
This SPARQL query retrieves the bridge with the longest span by selecting the bridge and its length where the property ""longestSpan"" is specified. The results are then ordered in descending order by the length and limited to 1 result.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
358,Is there a video game called Battle Chess?,"```sparql
SELECT DISTINCT ?game
WHERE {
  ?game rdf:type dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}
```
This query will search for a video game with the title ""Battle Chess"" in DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
359,Who was buried in the Great Pyramid of Giza?,"```sparql
SELECT ?person
WHERE {
  <http://dbpedia.org/resource/Great_Pyramid_of_Giza> dbpedia-owl:burial ?person .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"```sparql
SELECT ?plant
WHERE {
  dbpedia:Ford_Motor_Company dbpedia-owl:subsidiary ?subsidiary .
  ?subsidiary dbpedia-owl:location dbpedia:Malaysia .
  ?subsidiary dbpedia-owl:industry dbpedia:Manufacturing .
  ?subsidiary dbpedia-owl:product ?plant .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
361,Did Socrates influence Aristotle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?influencedBy
WHERE {
  ?socrates dct:subject <http://dbpedia.org/resource/Category:Socrates> .
  ?aristotle dct:subject <http://dbpedia.org/resource/Category:Aristotle> .
  ?aristotle dbo:influencedBy ?influencedBy .
  FILTER (?influencedBy = ?socrates)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
362,How many children did Benjamin Franklin have?,"```sparql
PREFIX dbpedia: <http://dbpedia.org/resource/>
SELECT (COUNT(?child) as ?numChildren)
WHERE {
  dbpedia:Benjamin_Franklin dbpedia:child ?child .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
363,How tall is Michael Jordan?,"```sparql
SELECT ?height
WHERE {
  dbpedia:Michael_Jordan dbpedia-owl:height ?height .
}
```
This SPARQL query retrieves the height of Michael Jordan from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
364,In which UK city are the headquarters of the MI6?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/MI6> dbo:headquarter ?hq .
  ?hq dbo:city ?city .
  ?city dbo:country <http://dbpedia.org/resource/United_Kingdom> .
}
```
This SPARQL query retrieves the city where the headquarters of MI6 is located in the United Kingdom.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
365,Who created Family Guy?,"```sparql
SELECT ?creator
WHERE {
  dbr:Family_Guy dbo:creator ?creator .
}
```
This query retrieves the creator of the TV show ""Family Guy"" from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
366,In which city does the Chile Route 68 end?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?city
WHERE {
  ?route a dbo:Route ;
         dbp:terminus ?city ;
         dbp:country ""Chile"" ;
         dbp:number ""68"" .
}
```
This SPARQL query retrieves the city where the Chile Route 68 ends by searching for a route in DBpedia with the properties indicating it is in Chile and has the number 68, and then retrieving the terminus city of that route.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
367,Give me the grandchildren of Elvis Presley.,"```sparql
SELECT DISTINCT ?grandchild ?grandchildName
WHERE {
  {
    SELECT DISTINCT ?child ?childName
    WHERE {
      ?elvis dbo:child ?child .
      ?child foaf:name ""Elvis Presley""@en .
      ?child foaf:name ?childName .
    }
  }
  ?child dbo:child ?grandchild .
  ?grandchild foaf:name ?grandchildName .
}
```
This query retrieves the grandchildren of Elvis Presley by first finding his children and then finding their children.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
368,When did the Ming dynasty dissolve?,"```sparql
SELECT ?date
WHERE {
  dbr:Ming_Dynasty dbo:disestablished ?date
}
```
This SPARQL query retrieves the date when the Ming Dynasty dissolved from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
369,In which military conflicts did Lawrence of Arabia participate?,"```sparql
SELECT DISTINCT ?conflictLabel
WHERE {
  ?lawrence dbo:participant dbr:T._E._Lawrence .
  ?lawrence dbo:participatedIn ?conflict .
  ?conflict rdfs:label ?conflictLabel .
  FILTER(LANG(?conflictLabel) = 'en')
}
```
This SPARQL query retrieves the military conflicts in which T. E. Lawrence (Lawrence of Arabia) participated by searching for his participation in conflicts and then retrieving the labels of those conflicts.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
370,What is the timezone in San Pedro de Atacama?,"```sparql
SELECT ?timezone
WHERE {
  dbpedia:San_Pedro_de_Atacama dbpedia-owl:timezone ?timezone .
}
```
This query retrieves the timezone of San Pedro de Atacama from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
371,Give me all books by William Goldman with more than 300 pages.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?book ?title ?pages
WHERE {
  ?book a dbo:Book ;
        dbo:author dbr:William_Goldman ;
        dbp:pages ?pages ;
        rdfs:label ?title .
  FILTER (lang(?title) = 'en' && ?pages > 300)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
372,What did Bruce Carver die from?,"```sparql
SELECT ?causeOfDeath
WHERE {
  ?person foaf:name ""Bruce Carver""@en .
  ?person dbo:deathCause ?causeOfDeath .
}
```
This query retrieves the cause of death of Bruce Carver from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?subsidiary
WHERE {
  ?subsidiary dbo:parentCompany dbr:Lufthansa ;
              dbo:operates ?airport1, ?airport2 .
  FILTER (?airport1 = dbr:Dortmund_Airport && ?airport2 = dbr:Berlin_Tegel_Airport)
}
```
This query retrieves the subsidiary of Lufthansa that serves both Dortmund and Berlin Tegel airports.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
374,Does Abraham Lincoln's death place have a website?,"```sparql
SELECT ?website
WHERE {
  dbpedia:Abraham_Lincoln dbpedia-owl:deathPlace ?deathPlace .
  ?deathPlace foaf:isPrimaryTopicOf ?website .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
375,Did Elvis Presley have children?,"```sparql
SELECT ?child
WHERE {
  dbpedia:Elvis_Presley dbpedia-owl:child ?child .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
376,Is Michelle Obama the wife of Barack Obama?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?wife
WHERE {
  dbo:Barack_Obama foaf:spouse ?wife .
  FILTER (?wife = dbo:Michelle_Obama)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
377,In which city does Sylvester Stallone live?,"```sparql
SELECT DISTINCT ?city
WHERE {
  ?person dbpedia-owl:residence ?city .
  ?person foaf:name ""Sylvester Stallone""@en .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
378,Which books by Kerouac were published by Viking Press?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?book
WHERE {
  ?book dbo:author dbr:Jack_Kerouac ;
       dbp:publisher dbr:Viking_Press .
}
```
This SPARQL query retrieves the books by Jack Kerouac that were published by Viking Press.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
379,Who wrote the song Hotel California?,"```sparql
SELECT ?artist
WHERE {
  ?song dbo:artist ?artist ;
       rdfs:label ""Hotel California""@en .
  FILTER regex(str(?artist), ""Eagles"", ""i"")
}
```
This query retrieves the artist who wrote the song ""Hotel California"" by filtering for the Eagles as the artist.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
380,What is the capital of Canada?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?capitalLabel
WHERE {
  <http://dbpedia.org/resource/Canada> dbo:capital ?capital .
  ?capital rdfs:label ?capitalLabel .
  FILTER(LANG(?capitalLabel) = """" || LANGMATCHES(LANG(?capitalLabel), ""en""))
}
```
This SPARQL query retrieves the capital of Canada from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
381,Who is the mayor of Tel Aviv?,"```sparql
SELECT ?mayor
WHERE {
  dbpedia:Tel_Aviv dbpedia-owl:mayor ?mayor .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
382,What form of government does Russia have?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?governmentType
WHERE {
    dbo:Russia dbo:governmentType ?governmentType .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
383,Show me the book that Muhammad Ali wrote.,"```sparql
SELECT DISTINCT ?book
WHERE {
  ?author foaf:name ""Muhammad Ali""@en .
  ?book dbp:author ?author ;
       rdf:type dbo:Book .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
384,Who was the first to climb Mount Everest?,"```sparql
SELECT ?person
WHERE {
  ?person dbo:mountEverestAscents ?ascent .
  ?ascent dbo:firstAscent ""true"" .
}
```
This query retrieves the person who was the first to climb Mount Everest by selecting individuals who have made an ascent of Mount Everest and specifying that they were the first to do so.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
385,How many languages are spoken in Colombia?,"```sparql
SELECT (COUNT(?language) AS ?count)
WHERE {
  <http://dbpedia.org/resource/Colombia> dbpedia-owl:language ?language .
}
```
This query retrieves the count of languages spoken in Colombia by querying DBpedia for the languages spoken in Colombia and counting them.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
386,What is the currency of the Czech Republic?,"```sparql
SELECT ?currencyLabel
WHERE {
  wd:Q213 wdt:P38 ?currency.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```
This SPARQL query retrieves the currency of the Czech Republic by querying Wikidata for the currency (P38) of the Czech Republic (Q213).","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
387,Where in France is sparkling wine produced?,"```sparql
SELECT DISTINCT ?region
WHERE {
  ?wine a dbo:SparklingWine ;
        dbo:country dbr:France ;
        dbo:region ?region .
}
```
This query retrieves the regions in France where sparkling wine is produced.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
388,When did Boris Becker end his active career?,"```sparql
SELECT ?endDate
WHERE {
  ?person dbpedia-owl:activeYearsStartYear ?startDate ;
          dbpedia-owl:activeYearsEndYear ?endDate ;
          foaf:name ""Boris Becker""@en .
}
```
This query retrieves the end date of Boris Becker's active career.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?movie
WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke ;
         dbo:director dbr:Guy_Ritchie .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
390,In which films did Julia Roberts as well as Richard Gere play?,"```sparql
SELECT DISTINCT ?film
WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere.
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
391,Show me Hemingway's autobiography.,"```sparql
SELECT ?autobiography
WHERE {
  ?person foaf:name ""Ernest Hemingway""@en .
  ?person dbp:notableWork ?autobiography .
  FILTER regex(?autobiography, ""autobiography"", ""i"")
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
392,How tall is Amazon Eve?,"```sparql
SELECT ?height
WHERE {
  <http://dbpedia.org/resource/Amazon_Eve> <http://dbpedia.org/ontology/height> ?height
}
```
This SPARQL query retrieves the height of Amazon Eve from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
393,What are the five boroughs of New York?,"```sparql
SELECT ?boroughLabel
WHERE {
  ?borough a dbo:Borough ;
          rdfs:label ?boroughLabel ;
          dbo:location dbr:New_York_City .
  FILTER(langMatches(lang(?boroughLabel), ""en""))
}
LIMIT 5
```
This SPARQL query retrieves the names of the five boroughs of New York City from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
394,Give me all Canadian Grunge record labels.,"```sparql
SELECT DISTINCT ?label
WHERE {
  ?label a dbo:RecordLabel ;
         dbo:country dbr:Canada ;
         dbo:genre dbr:Grunge .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
395,In which country does the Ganges start?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  <http://dbpedia.org/resource/Ganges> dbo:sourceCountry ?country .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
396,Who is the founder of Penguin Books?,"```sparql
SELECT ?founder WHERE {
  ?penguin dbpedia-owl:wikiPageRedirects dbpedia:Penguin_Books ;
           dbpedia-owl:author ?founder .
}
```
This query retrieves the founder of Penguin Books by finding the author of the resource that redirects to the Penguin Books DBpedia page.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
397,Who wrote the Game of Thrones theme?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?composer
WHERE {
  ?theme dbo:composer ?composer ;
         rdfs:label ""Game of Thrones theme""@en .
  FILTER(langMatches(lang(?composer), ""en""))
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
398,Who is the president of Eritrea?,"```sparql
SELECT ?president
WHERE {
  <http://dbpedia.org/resource/Eritrea> dbpedia-owl:leader ?president .
  ?president a dbpedia-owl:President .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
399,In which city did John F. Kennedy die?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?city
WHERE {
  <http://dbpedia.org/resource/Assassination_of_John_F._Kennedy> dbo:location ?location .
  ?location dbo:city ?city .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
400,What is the highest mountain in Australia?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?mountain ?height
WHERE {
  ?mountain dbo:country <http://dbpedia.org/resource/Australia> ;
           dbo:elevation ?height .
}
ORDER BY DESC(?height)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
401,Who writes the Farmers' Almanac?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?author
WHERE {
  ?almanac dbo:author ?author ;
           foaf:name ""Farmers' Almanac""@en .
}
```
This query retrieves the author of the Farmers' Almanac from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
402,Give me the currency of China.,"```sparql
SELECT ?currencyLabel
WHERE {
  <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?currency.
  ?currency rdfs:label ?currencyLabel.
  FILTER(LANG(?currencyLabel) = 'en')
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
403,Give me all Swedish oceanographers.,"```sparql
SELECT DISTINCT ?oceanographer
WHERE {
  ?oceanographer a dbo:Person ;
                 dbo:nationality dbr:Sweden ;
                 dbo:occupation dbr:Oceanographer .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
404,In which city are the headquarters of the United Nations?,"```sparql
SELECT ?cityLabel
WHERE {
  wd:Q1065 wdt:P159 ?city.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```
This query retrieves the city where the headquarters of the United Nations (Q1065) is located.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
405,Is Rita Wilson the wife of Tom Hanks?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?wife
WHERE {
  ?person foaf:name ""Tom Hanks""@en .
  ?person dbo:spouse ?wife .
  ?wife foaf:name ""Rita Wilson""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
406,In which countries do people speak Japanese?,"```sparql
SELECT DISTINCT ?countryLabel
WHERE {
  ?country dbpedia-owl:language dbpedia:Japanese_language .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
}
```
This SPARQL query retrieves the countries where people speak Japanese by searching for instances where the language property is Japanese and then filtering the results to display the English labels of the countries.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
407,Which of Tim Burton's films had the highest budget?,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film ?budget
WHERE {
  ?film dbo:director dbr:Tim_Burton ;
        dbp:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
408,Which museum in New York has the most visitors?,"```sparql
SELECT ?museum ?visitors
WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:New_York_City ;
          dbo:numberOfVisitors ?visitors .
}
ORDER BY DESC(?visitors)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
409,What was the first Queen album?,"```sparql
SELECT ?album ?albumName
WHERE {
  ?album rdf:type dbo:Album ;
         dbo:artist dbr:Queen ;
         foaf:name ?albumName .
}
ORDER BY ?album
LIMIT 1
```
This SPARQL query retrieves the first album by the band Queen from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
410,What was the first name of the band Queens of the Stone Age?,"```sparql
SELECT ?bandName
WHERE {
  ?band rdf:type dbo:Band ;
       foaf:name ""Queens of the Stone Age""@en ;
       dbo:bandMember ?member .
  ?member foaf:givenName ?bandName .
}
```
This query retrieves the first name of the band members of Queens of the Stone Age.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
411,What was the last movie with Alec Guinness?,"```sparql
SELECT DISTINCT ?movie ?releaseDate
WHERE {
  ?actor dbo:birthDate ?birthDate ;
         foaf:name ""Alec Guinness""@en .
  ?movie dbo:starring ?actor ;
         dbo:releaseDate ?releaseDate .
}
ORDER BY DESC(?releaseDate)
LIMIT 1
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
412,Give me all actors starring in Last Action Hero.,"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor
WHERE {
  ?film dbo:starring ?actor .
  ?film dbo:wikiPageID ?id .
  FILTER (?id = 1046825)
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
413,Who discovered Pluto?,"```sparql
SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discoverer .
}
```
This query retrieves the discoverer of Pluto from DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
