id,question,sparql,prompt
99,What is the time zone of Salt Lake City?,"SELECT ?timeZone WHERE {
  dbr:Salt_Lake_City dbo:timeZone ?timeZone .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
98,Who killed Caesar?,"SELECT ?killer WHERE {
  dbr:Julius_Caesar dbo:deathCause ?killer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
86,What is the highest mountain in Germany?,"SELECT ?mountain ?elevation 
WHERE {
  ?mountain dbo:country dbr:Germany ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
84,Which American presidents were in office during the Vietnam War?,"SELECT ?president WHERE {
  ?president dbo:office <http://dbpedia.org/resource/President_of_the_United_States> .
  ?president dbo:birthPlace <http://dbpedia.org/resource/United_States> .
  ?president dbo:termStart ?start .
  ?president dbo:termEnd ?end .
  FILTER (?start <= ""1975-04-30""^^xsd:date && ?end >= ""1955-11-01""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
81,Butch Otter is the governor of which U.S. state?,"SELECT ?state WHERE {
  ?state dbp:governor dbr:Butch_Otter .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,"SELECT COUNT(?goldMedals) WHERE {
  ?goldMedals dbo:goldMedalist dbr:Michael_Phelps .
  ?goldMedals dbo:olympicGames dbr:2008_Summer_Olympics .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
66,Which artists were born on the same date as Rachel Stevens?,"SELECT ?artist WHERE {
  dbr:Rachel_Stevens dbo:birthDate ?birthDate .
  ?artist dbo:birthDate ?birthDate .
  ?artist rdf:type dbo:Artist .
  FILTER (?artist != dbr:Rachel_Stevens)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
64,What is the profession of Frank Herbert?,"SELECT ?profession WHERE {
  dbr:Frank_Herbert dbo:occupation ?profession .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
6,Are Taiko some kind of Japanese musical instrument?,"SELECT ?answer 
WHERE {
  dbr:Taiko dbo:wikiPageRedirects ?redirects .
  ?redirects rdf:type dbo:MusicalInstrument .
  ?redirects dbo:country dbr:Japan .
  BIND(""Yes"" AS ?answer)
} 
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
56,How many seats does the home stadium of FC Porto have?,"SELECT ?seats WHERE {
  dbr:FC_Porto dbo:ground ?stadium .
  ?stadium dbo:seatingCapacity ?seats .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
49,Which frequent flyer program has the most airlines?,"SELECT ?program (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:frequentFlyer ?program .
} 
GROUP BY ?program 
ORDER BY DESC(?count) 
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
44,Which European countries have a constitutional monarchy?,"SELECT ?country WHERE {
  ?country dct:subject dbc:Countries_in_Europe .
  ?country dbo:governmentType dbr:Constitutional_monarchy .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
42,Which countries have places with more than two caves?,"SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:location ?place .
  ?place dbo:country ?country .
  ?cave a dbo:Cave .
}
GROUP BY ?country
HAVING (?caveCount > 2)",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
4,"Which airports are located in California, USA?","SELECT ?airport WHERE {
  ?airport rdf:type dbo:Airport .
  ?airport dbo:location ?location .
  ?location dbo:isPartOf dbr:California .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
37,What are the nicknames of San Francisco?,"SELECT ?nickname WHERE {
  dbr:San_Francisco dbp:nickname ?nickname .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
32,What is Angela Merkelâ€™s birth name?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
31,Who is the mayor of Berlin?,"SELECT ?person WHERE {
  dbr:Berlin dbp:leader ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
29,Which countries in the European Union adopted the Euro?,"SELECT ?country WHERE {
  ?country dbo:currency <http://dbpedia.org/resource/Euro> .
  ?country dct:subject dbc:Countries_in_the_European_Union .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
23,Which software has been published by Mean Hamster Software?,"SELECT ?software WHERE {
  ?software dbo:publisher dbr:Mean_Hamster_Software .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
68,Which country was Bill Gates born in?,"SELECT ?country WHERE {
  dbr:Bill_Gates dbo:birthPlace ?place .
  ?place dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
22,How many grand-children did Jacques Cousteau have?,"SELECT (COUNT(?grandchild) AS ?count) WHERE {
  dbr:Jacques_Cousteau dbo:child ?child .
  ?child dbo:child ?grandchild .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
214,Give me all professional skateboarders from Sweden.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Skateboarding .
  ?person dbo:birthPlace dbr:Sweden .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
210,Which monarchs of the United Kingdom were married to a German?,"SELECT ?monarch ?spouse
WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch dct:subject dbc:Monarchs_of_the_United_Kingdom .
  ?spouse dbo:birthPlace dbr:Germany .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
199,Give me all Argentine films.,"SELECT ?film WHERE {
  ?film dbo:country dbr:Argentina .
  ?film rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
203,How did Michael Jackson die?,"SELECT ?causeOfDeath WHERE {
  dbr:Michael_Jackson dbo:deathCause ?causeOfDeath .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
197,Which U.S. state has been admitted latest?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbp:admittanceDate ?date .
} ORDER BY DESC(?date) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
196,Which classes does the Millepede belong to?,"SELECT ?class WHERE {
  dbr:Millipede rdf:type ?class .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
188,Give me the homepage of Forbes.,"SELECT ?homepage WHERE {
  dbr:Forbes foaf:homepage ?homepage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
187,Who is the husband of Amanda Palmer?,"SELECT ?husband WHERE {
  dbr:Amanda_Palmer dbo:spouse ?husband .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
176,Who painted The Storm on the Sea of Galilee?,"SELECT ?painter WHERE {
  dbr:The_Storm_on_the_Sea_of_Galilee dbo:author ?painter .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
62,What is the highest place of Karakoram?,"SELECT ?place ?elevation 
WHERE {
  ?place dbo:location dbr:Karakoram .
  ?place dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
173,When did Finland join the EU?,"SELECT ?date WHERE {
  dbr:Finland dbp:accessioneudate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
168,Which actors play in Big Bang Theory?,"SELECT ?actor WHERE {
  dbr:The_Big_Bang_Theory dbo:starring ?actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
166,Which computer scientist won an oscar?,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Computer_scientist ;
          dbo:award dbr:Academy_Awards .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
160,Who wrote Harry Potter?,"SELECT ?author WHERE {
  dbr:Harry_Potter ?p ?author .
  FILTER (?p IN (dbo:author, dbp:author))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
158,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer WHERE {
  ?writer dbo:occupation dbr:Writer .
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
157,Give me English actors starring in Lovesick.,"SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?place .
  ?place dbo:country dbr:England .
  ?film rdfs:label ""Lovesick""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
155,What is the nick name of Baghdad?,"SELECT ?nickName WHERE {
  dbr:Baghdad foaf:nick ?nickName .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
150,In which city was the president of Montenegro born?,"SELECT ?city WHERE {
  ?person dbo:birthPlace ?city .
  ?person dbo:office dbr:President_of_Montenegro .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
149,Which U.S. state has the highest population density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbp:populationDensity ?populationDensity .
} ORDER BY DESC(?populationDensity) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
25,What is the longest river in China?,"SELECT ?river WHERE {
  ?river dbo:country dbr:China ;
         rdf:type dbo:River .
  {
    SELECT ?river (MAX(?length) AS ?maxLength) WHERE {
      ?river dbo:length ?length .
    } GROUP BY ?river
  }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
143,What is the area code of Berlin?,"SELECT ?areaCode WHERE {
  dbr:Berlin dbo:areaCode ?areaCode .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
140,How many scientists graduated from an Ivy League university?,"SELECT (COUNT(DISTINCT ?scientist) AS ?count) WHERE {
  ?scientist dbo:almaMater ?university .
  ?scientist rdf:type dbo:Scientist .
  ?university dct:subject dbc:Ivy_League_universities .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
139,Which professional surfers were born in Australia?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Australia .
  ?surfer rdf:type dbo:Surfer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
137,Give me all Dutch parties.,"SELECT ?party WHERE {
  ?party dbo:country dbr:Netherlands .
  ?party rdf:type dbo:PoliticalParty .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
136,How many moons does Mars have?,"SELECT ?moons WHERE {
  dbr:Mars dbp:satellites ?moons .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
134,What is Batman's real name?,"SELECT ?realName WHERE {
  dbr:Batman foaf:name ?realName .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
132,What is Elon Musk famous for?,"SELECT ?knownFor WHERE {
  dbr:Elon_Musk dbo:knownFor ?knownFor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
128,Who is the author of WikiLeaks?,"SELECT ?author WHERE {
  dbr:WikiLeaks dbo:author ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
126,Sean Parnell was the governor of which U.S. state?,"SELECT ?state WHERE {
  ?state dbo:governor dbr:Sean_Parnell .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
125,How many years was the Ford Model T manufactured?,"SELECT (MAX(?endYear) - MIN(?startYear)) as ?manufactureYears
WHERE {
  dbr:Ford_Model_T dbo:productionStartYear ?startYear .
  dbr:Ford_Model_T dbo:productionEndYear ?endYear .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
124,When was Carlo Giuliani shot?,"SELECT ?date WHERE {
  dbr:Carlo_Giuliani dbo:deathDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
123,Give me all animals that are extinct.,"SELECT ?animal WHERE {
  ?animal dbo:status <http://dbpedia.org/resource/Extinction> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
122,Who was the wife of President Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
111,How many awards has Bertrand Russell?,"SELECT (COUNT(?award) AS ?count) WHERE {
  dbr:Bertrand_Russell dbp:awards ?award .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
117,Is Pamela Anderson a vegan?,"SELECT ?answer WHERE {
  dbr:Pamela_Anderson dbo:diet ?answer .
  FILTER (str(?answer) = ""Veganism"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
59,Which space probes were sent into orbit around the sun?,"SELECT ?spaceProbe WHERE {
  ?spaceProbe dbo:type dbr:Space_probe .
  ?spaceProbe dbo:orbit dbp:Sun .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
113,Which German cities have more than 250000 inhabitants?,"SELECT ?city WHERE {
  ?city dbo:country dbr:Germany .
  ?city dbo:populationTotal ?population .
  FILTER (?population > 250000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
104,Who is the daughter of Robert Kennedy married to?,"SELECT ?spouse WHERE {
  ?person dbo:child ?daughter .
  ?daughter dbo:spouse ?spouse .
  ?person foaf:name ""Robert Kennedy""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
10,How many students does the Free University of Amsterdam have?,"SELECT ?numberOfStudents WHERE {
  dbr:VU_University_Amsterdam dbo:numberOfStudents ?numberOfStudents .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
1,What is the revenue of IBM?,"SELECT ?revenue WHERE {
  dbr:IBM dbo:revenue ?revenue .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
178,How many James Bond movies do exist?,"SELECT (COUNT(?movie) AS ?count) WHERE {
  ?movie dbo:series dbr:James_Bond_in_film.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
129,Who does the voice of Bart Simpson?,"SELECT ?person WHERE {
  dbr:Bart_Simpson dbp:voice ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
183,Who was Tom Hanks married to?,"SELECT ?person WHERE {
  dbr:Tom_Hanks dbo:spouse ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
181,Through which countries does the Yenisei river flow?,"SELECT ?country WHERE {
  dbr:Yenisei_River dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
7,Give me all cars that are produced in Germany.,"SELECT ?car WHERE {
  ?car dbo:manufacturer ?manufacturer .
  ?manufacturer dbo:locationCountry dbr:Germany .
  ?car rdf:type dbo:Automobile .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
135,When did Michael Jackson die?,"SELECT ?deathDate WHERE {
  dbr:Michael_Jackson dbo:deathDate ?deathDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
50,What is the highest volcano in Africa?,"SELECT ?volcano WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:location dbr:Africa ;
           dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
39,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
GROUP BY ?poet
ORDER BY DESC(?bookCount)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
83,Give me all gangsters from the prohibition era.,"SELECT ?gangster WHERE {
  ?gangster dbo:occupation dbr:Gangster .
  ?gangster dbo:birthDate ?birthDate .
  FILTER (?birthDate >= ""1920-01-17""^^xsd:date && ?birthDate <= ""1933-12-05""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
71,Give me all spacecrafts that flew to Mars.,"SELECT ?spacecraft WHERE {
  ?spacecraft dbo:mission ?mission .
  ?mission dbo:destination dbr:Mars .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
213,Show me all Czech movies.,"SELECT ?movie WHERE {
  ?movie dbo:country dbr:Czech_Republic .
  ?movie rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
209,Give me all taikonauts.,"SELECT ?taikonaut WHERE {
  ?taikonaut dbo:occupation dbr:Taikonaut .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
105,Which countries have more than ten volcanoes?,"SELECT ?country WHERE {
  {
    SELECT ?country (COUNT(?volcano) AS ?volcanoCount) WHERE {
      ?volcano dbo:locatedInArea ?country .
      ?volcano rdf:type dbo:Volcano .
    } GROUP BY ?country
  }
  FILTER (?volcanoCount > 10)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
52,Give me all movies with Tom Cruise.,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdf:type dbo:Film.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
102,When did Dracula's creator die?,"SELECT ?date WHERE {
  dbr:Bram_Stoker dbo:deathDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
21,Who created English Wikipedia?,"SELECT ?creator WHERE {
  dbr:English_Wikipedia dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
34,Give me all female German chancellors.,"SELECT ?person WHERE {
  ?person dbo:office dbr:Chancellor_of_Germany .
  ?person dbo:gender dbr:Female .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
145,Who owns Aldi?,"SELECT ?founders WHERE {
  dbr:Aldi dbp:founders ?founders .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
154,Which books were written by Danielle Steel?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
198,Who was influenced by Socrates?,"SELECT ?person WHERE {
  ?person dbo:influencedBy dbr:Socrates .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
162,How deep is Lake Chiemsee?,"SELECT ?depth WHERE {
  dbr:Lake_Chiemsee dbo:depth ?depth .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
212,Which companies work in the aerospace industry as well as in medicine?,"SELECT DISTINCT ?company WHERE {
  ?company rdf:type dbo:Company .
  ?company dbo:industry dbr:Aerospace .
  ?company dbo:industry dbr:Medicine .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
96,Which professional surfers were born on the Philippines?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Philippines .
  ?surfer rdf:type dbo:Surfer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
40,Who were the parents of Queen Victoria?,"SELECT ?parent WHERE {
  dbr:Queen_Victoria dbo:parent ?parent .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
79,Are there any castles in the United States?,"SELECT ?castle WHERE {
  ?castle dbo:country dbr:United_States ;
          a dbo:Castle .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
141,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
80,Give me a list of all critically endangered birds.,"SELECT ?bird WHERE {
  ?bird dbo:status <http://dbpedia.org/resource/Critically_Endangered>;
        rdf:type dbo:Bird.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
159,Which countries are connected by the Rhine?,"SELECT ?country WHERE {
  dbr:Rhine dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
107,Who was the father of Queen Elizabeth II?,"SELECT ?father WHERE {
  dbr:Elizabeth_II dbp:father ?father .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
163,Give me all chemical elements.,"SELECT ?chemicalElement WHERE {
  ?chemicalElement dbo:wikiPageDisambiguates dbr:Chemical_element.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
211,Give me all American presidents of the last 20 years.,"SELECT ?president ?start ?end
WHERE {
  ?president dbo:office dbr:President_of_the_United_States .
  ?president dbo:termPeriod ?term .
  ?term dbo:startDate ?start .
  ?term dbo:endDate ?end .
  FILTER (?start >= ""1996-10-01""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,"SELECT ?date WHERE {
  ?movie rdfs:label ""Worst Case Scenario""@en.
  ?movie dbo:releaseDate ?date.
  ?movie dbo:country dbr:Netherlands.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
144,Whom did Lance Bass marry?,"SELECT ?spouse WHERE {
  dbr:Lance_Bass dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"SELECT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:TUI_Travel .
  ?subsidiary dbo:targetAirport dbr:Glasgow_Airport, dbr:Dublin_Airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
131,What languages are spoken in Pakistan?,"SELECT ?language WHERE {
  dbr:Pakistan dbo:officialLanguage ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
120,Who is the daughter of Bill Clinton married to?,"SELECT ?person WHERE {
  dbr:Bill_Clinton dbo:child ?child .
  ?child dbo:spouse ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
164,Who was on the Apollo 11 mission?,"SELECT ?person WHERE {
  dbr:Apollo_11 dbp:crewMembers ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
88,What is the wavelength of Indigo?,"SELECT ?wavelength WHERE {
  dbr:Indigo dbo:wavelength ?wavelength .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
151,Give me all B-sides of the Ramones.,"SELECT ?bSide WHERE {
  ?song dbo:artist dbr:Ramones .
  ?song dbo:bSide ?bSide .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
63,Who was called Scarface?,"SELECT ?person WHERE {
  ?person dbo:alias ""Scarface""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
27,Which rivers flow into the North Sea?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:mouth dbr:North_Sea .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
156,Where is Fort Knox located?,"SELECT ?location WHERE {
  dbr:Fort_Knox dbo:location ?location .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
207,Which daughters of British earls died at the same place they were born at?,"SELECT ?daughter WHERE {
  ?earl dbo:parent ?daughter .
  ?earl a dbo:Noble .
  ?earl dbo:country dbr:United_Kingdom .
  ?daughter dbo:birthPlace ?place .
  ?daughter dbo:deathPlace ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
24,How many emperors did China have?,"SELECT (COUNT(?emperor) AS ?count) WHERE {
  ?emperor dbo:wikiPageRedirects dbr:Emperor_of_China .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
133,What are the names of the Teenage Mutant Ninja Turtles?,"SELECT ?name WHERE {
  dbr:Teenage_Mutant_Ninja_Turtles dbo:character ?character.
  ?character foaf:name ?name.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
103,Where does Piccadilly start?,"SELECT ?start WHERE {
  dbr:Piccadilly dbo:routeStart ?start .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
165,What is the name of the university where Obama's wife studied?,"SELECT ?university WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse .
  ?spouse dbo:almaMater ?university .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
108,When did Paraguay proclaim its independence?,"SELECT ?date WHERE {
  dbr:Paraguay dbo:foundingDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
15,How short is the shortest active NBA player?,"SELECT ?player ?height WHERE {
  ?player dbo:height ?height .
  ?player dbo:team ?team .
  ?team rdf:type dbo:BasketballTeam .
  ?player dbo:activeYearsEndYear ?endYear
  FILTER (?endYear >= 2016)
} ORDER BY ASC(?height) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
45,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
82,When was Jack Wolfskin founded?,"SELECT ?foundingYear WHERE {
  dbr:Jack_Wolfskin dbo:foundingYear ?foundingYear .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
9,In which city is the headquarter of Air China?,"SELECT ?city WHERE {
  dbr:Air_China dbo:location ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
201,What is the founding year of the brewery that produces Pilsner Urquell?,"SELECT ?foundingYear WHERE {
  ?brewery dbo:product dbr:Pilsner_Urquell ;
           dbo:foundingYear ?foundingYear .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
171,When did the Boston Tea Party take place?,"SELECT ?date WHERE {
  dbr:Boston_Tea_Party dbp:date ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
182,Which animals are critically endangered?,"SELECT ?animal WHERE {
  ?animal dbo:status <http://dbpedia.org/resource/Critically_Endangered> .
  ?animal rdf:type dbo:Animal .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
13,Which politicians were married to a German?,"SELECT ?politician WHERE {
  ?politician dbo:spouse ?spouse .
  ?politician rdf:type dbo:Politician .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
114,How big is the earth's diameter?,"SELECT ?diameter WHERE {
  dbr:Earth dbo:diameter ?diameter .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
92,Is the wife of President Obama called Michelle?,"SELECT ?answer 
WHERE {
  dbr:Barack_Obama dbo:spouse ?answer .
  FILTER (str(?answer) = ""Michelle Obama"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
194,Which U.S. state has the abbreviation MN?,"SELECT ?state WHERE {
  ?state dbo:country dbr:United_States ;
         dbp:postalabbreviation ""MN"" .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
175,When did Muhammad die?,"SELECT ?deathDate WHERE {
  dbr:Muhammad dbo:deathDate ?deathDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
26,What is the atmosphere of the Moon composed of?,"SELECT ?atmosphereComposition WHERE {
  dbr:Moon dbp:atmosphereComposition ?atmosphereComposition .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
60,Who is the governor of Texas?,"SELECT ?person WHERE {
  dbr:Texas dbp:governor ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
110,Which movies did Kurosawa direct?,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Akira_Kurosawa .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
206,What was the name of the famous battle in 1836 in San Antonio?,"SELECT ?battle WHERE {
  ?battle dbo:isPartOf <http://dbpedia.org/resource/San_Antonio> .
  ?battle dbo:date ""1836-01-01T00:00:00Z""^^xsd:dateTime .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
97,Give me the official websites of actors of the television show Charmed.,"SELECT ?actor ?website
WHERE {
  ?show dbo:starring ?actor.
  ?actor foaf:homepage ?website.
  FILTER (str(?show) = ""http://dbpedia.org/resource/Charmed"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
20,How many calories does a baguette have?,"SELECT ?calories WHERE {
  dbr:Baguette dbp:calories ?calories .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
169,Give me all libraries established before 1400.,"SELECT ?library WHERE {
  ?library rdf:type dbo:Library .
  ?library dbo:foundingYear ?year .
  FILTER (?year < 1400)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
38,Give me all Frisian islands that belong to the Netherlands.,"SELECT ?island WHERE {
  ?island dbo:isPartOf <http://dbpedia.org/resource/West_Frisian_Islands> .
  ?island dbo:country <http://dbpedia.org/resource/Netherlands> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
192,Which museum exhibits The Scream by Munch?,"SELECT ?museum WHERE {
  ?artwork dbo:author dbr:Edvard_Munch .
  ?artwork rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER (regex(?label, ""The Scream"")) .
  ?artwork dbp:museum ?museum .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
78,When was the De Beers company founded?,"SELECT ?foundingYear WHERE {
  dbr:De_Beers dbo:foundingYear ?foundingYear .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
19,Who became president after JFK died?,"SELECT ?person WHERE {
  dbr:John_F._Kennedy dbo:deathDate ?deathDate .
  ?person dbo:presidentStart ?start .
  FILTER (?start > ?deathDate)
} ORDER BY ?start LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
190,Who are the parents of the wife of Juan Carlos I?,"SELECT ?parent WHERE {
  dbr:Juan_Carlos_I_of_Spain dbo:spouse ?wife .
  ?wife dbo:parent ?parent .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
174,Who is the novelist of the work a song of ice and fire?,"SELECT ?author WHERE {
  ?book rdfs:label ""A Song of Ice and Fire""@en.
  ?book dbo:author ?author.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
189,In which studio did the Beatles record their first album?,"SELECT ?studio WHERE {
  ?album dbo:artist dbr:The_Beatles .
  ?album dbo:recordLabel ?studio .
  ?album dbo:releaseDate ?date .
} ORDER BY ASC(?date) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
152,Which beer brewing companies are located in North-Rhine Westphalia?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Brewery .
  ?company dbo:location dbr:North_Rhine-Westphalia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
94,When did princess Diana die?,"SELECT ?date WHERE {
  dbr:Diana,_Princess_of_Wales dbo:deathDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
8,Who founded Intel?,"SELECT ?founder WHERE {
  dbr:Intel dbp:founders ?founder .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
95,Who is the youngest player in the Premier League?,"SELECT ?player WHERE {
  ?player dbo:team ?team .
  ?team dbo:league dbr:Premier_League .
  ?player dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
119,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
115,How many rivers and lakes are in South Carolina?,"SELECT (COUNT(?lake) AS ?lakeCount) (COUNT(?river) AS ?riverCount) WHERE {
  { ?lake dbo:country dbr:South_Carolina . ?lake rdf:type dbo:Lake . }
  UNION
  { ?river dbo:country dbr:South_Carolina . ?river rdf:type dbo:River . }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
116,Who was called Rodzilla?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER(LANG(?label) = ""en"") .
  FILTER(CONTAINS(LCASE(?label), ""rodzilla"")) .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
138,Give me the capitals of all countries in Africa.,"SELECT ?country ?capital
WHERE {
  ?country dct:subject dbc:Countries_in_Africa .
  ?country dbo:capital ?capital .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
177,Which bridges are of the same type as the Manhattan Bridge?,"SELECT ?bridge WHERE {
  dbr:Manhattan_Bridge dbo:bridgeType ?type .
  ?bridge dbo:bridgeType ?type .
  FILTER (?bridge != dbr:Manhattan_Bridge)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
101,How many companies were founded by the founder of Facebook?,"SELECT (COUNT(?company) AS ?count)
WHERE {
  ?facebook dbo:foundingYear ?year .
  ?facebook foaf:name ""Facebook""@en .
  ?facebook dbo:foundedBy ?founder .
  ?company dbo:foundedBy ?founder .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,"SELECT ?hikingTrail WHERE {
  ?hikingTrail dbo:location dbr:Grand_Canyon.
  ?hikingTrail rdf:type dbo:HikingTrail.
  OPTIONAL { ?hikingTrail dbp:hazards ?hazard. }
  FILTER (!bound(?hazard) || !strcontains(str(?hazard), ""flash floods""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
87,Which book has the most pages?,"SELECT ?book WHERE {
  ?book a dbo:Book ;
        dbo:numberOfPages ?pages .
} ORDER BY DESC(?pages) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
148,What is the largest state in the United States?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:isPartOf dbr:United_States .
  ?state dbo:areaTotal ?area .
} ORDER BY DESC(?area) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
43,Give me the websites of companies with more than 500000 employees.,"SELECT ?company ?website
WHERE {
  ?company dbo:numberOfEmployees ?employees .
  ?company foaf:homepage ?website .
  FILTER (?employees > 500000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
179,What were the names of the three ships by Columbus?,"SELECT ?ship ?name WHERE {
  ?ship dbo:operator dbr:Christopher_Columbus.
  ?ship rdfs:label ?name.
  FILTER(lang(?name) = ""en"")
} LIMIT 3",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
99,What is the time zone of Salt Lake City?,"SELECT ?timeZone WHERE {
  dbr:Salt_Lake_City dbo:timeZone ?timeZone .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
98,Who killed Caesar?,"SELECT ?killer WHERE {
  dbr:Julius_Caesar dbo:deathCause ?killer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
86,What is the highest mountain in Germany?,"SELECT ?mountain WHERE {
  ?mountain dbo:country dbr:Germany .
  ?mountain rdf:type dbo:Mountain .
} ORDER BY DESC(?elevation) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
84,Which American presidents were in office during the Vietnam War?,"SELECT ?president WHERE {
  ?president dbo:office <http://dbpedia.org/resource/President_of_the_United_States> .
  ?president dbo:birthPlace <http://dbpedia.org/resource/United_States> .
  ?president dbo:termStart ?start .
  ?president dbo:termEnd ?end .
  FILTER (?start <= ""1975-04-30""^^xsd:date && ?end >= ""1955-11-01""^^xsd:date)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
81,Butch Otter is the governor of which U.S. state?,"SELECT ?state WHERE {
  ?state dbp:governor dbr:Butch_Otter .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,"SELECT (COUNT(?medal) AS ?count) WHERE {
  ?medal dbo:goldMedalist dbr:Michael_Phelps .
  ?medal dbo:olympicGames dbr:2008_Summer_Olympics .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
66,Which artists were born on the same date as Rachel Stevens?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?rachel a dbo:Artist ;
          dbo:birthDate ?birthdate ;
          foaf:name ""Rachel Stevens""@en .
  ?artist a dbo:Artist ;
          dbo:birthDate ?birthdate .
  FILTER (?artist != ?rachel)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
64,What is the profession of Frank Herbert?,"SELECT ?profession WHERE {
  dbr:Frank_Herbert dbo:occupation ?profession .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
6,Are Taiko some kind of Japanese musical instrument?,"SELECT ?answer 
WHERE {
  dbr:Taiko dbo:abstract ?abstract .
  FILTER (lang(?abstract) = 'en') .
  BIND (CONTAINS(lcase(str(?abstract)), ""japanese musical instrument"") AS ?answer) .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
56,How many seats does the home stadium of FC Porto have?,"SELECT ?seats WHERE {
  dbr:FC_Porto dbo:ground ?stadium .
  ?stadium dbo:seatingCapacity ?seats .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
49,Which frequent flyer program has the most airlines?,"SELECT ?program (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:frequentFlyer ?program .
} GROUP BY ?program ORDER BY DESC(?count) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
44,Which European countries have a constitutional monarchy?,"SELECT ?country WHERE {
  ?country dct:subject dbc:Countries_in_Europe .
  ?country dbo:governmentType dbr:Constitutional_monarchy .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
42,Which countries have places with more than two caves?,"SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:location ?place .
  ?place dbo:country ?country .
  ?cave a dbo:Cave .
}
GROUP BY ?country
HAVING (?caveCount > 2)",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
4,"Which airports are located in California, USA?","SELECT ?airport WHERE {
  ?airport rdf:type dbo:Airport .
  ?airport dbo:location ?location .
  ?location dbo:isPartOf dbo:California .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
37,What are the nicknames of San Francisco?,"SELECT ?nicknames WHERE {
  dbr:San_Francisco foaf:nick ?nicknames .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
32,What is Angela Merkelâ€™s birth name?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
31,Who is the mayor of Berlin?,"SELECT ?mayor WHERE {
  dbr:Berlin dbp:leader ?mayor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
29,Which countries in the European Union adopted the Euro?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro ;
           dct:subject dbc:Member_states_of_the_European_Union .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
23,Which software has been published by Mean Hamster Software?,"SELECT ?software WHERE {
  ?software dbo:publisher dbr:Mean_Hamster_Software
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
68,Which country was Bill Gates born in?,"SELECT ?country WHERE {
  dbo:Bill_Gates dbo:birthPlace ?place .
  ?place dbo:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
22,How many grand-children did Jacques Cousteau have?,"SELECT (COUNT(?grandchild) AS ?count) WHERE {
  dbr:Jacques_Cousteau dbo:child ?child .
  ?child dbo:child ?grandchild .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
214,Give me all professional skateboarders from Sweden.,"SELECT ?skateboarder WHERE {
  ?skateboarder dbo:occupation dbr:Skateboarding ;
                dbo:birthPlace dbr:Sweden .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
210,Which monarchs of the United Kingdom were married to a German?,"SELECT ?monarch WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch dct:subject dbc:Monarchs_of_the_United_Kingdom .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dct:subject dbc:Germany .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
199,Give me all Argentine films.,"SELECT ?film WHERE {
  ?film dbo:country dbr:Argentina .
  ?film rdf:type dbo:Film .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
203,How did Michael Jackson die?,"SELECT ?causeOfDeath WHERE {
  dbr:Michael_Jackson dbo:deathCause ?causeOfDeath .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
197,Which U.S. state has been admitted latest?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbp:admittanceDate ?date .
} ORDER BY DESC(?date) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
196,Which classes does the Millepede belong to?,"SELECT ?class WHERE {
  dbr:Millipede dct:subject ?class .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
188,Give me the homepage of Forbes.,"SELECT ?homepage WHERE {
  dbr:Forbes foaf:homepage ?homepage .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
187,Who is the husband of Amanda Palmer?,"SELECT ?husband WHERE {
  dbr:Amanda_Palmer dbo:spouse ?husband .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
176,Who painted The Storm on the Sea of Galilee?,"SELECT ?artist WHERE {
  dbr:The_Storm_on_the_Sea_of_Galilee dbo:author ?artist .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
62,What is the highest place of Karakoram?,"SELECT ?place ?elevation 
WHERE {
  ?place dbo:location dbr:Karakoram.
  ?place dbo:elevation ?elevation.
}
ORDER BY DESC(?elevation)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
173,When did Finland join the EU?,"SELECT ?date WHERE {
  dbr:Finland dbp:accessioneudate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
168,Which actors play in Big Bang Theory?,"SELECT ?actor WHERE {
  dbr:The_Big_Bang_Theory dbo:starring ?actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
166,Which computer scientist won an oscar?,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Computer_scientist ;
          dbo:award dbr:Academy_Awards .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
160,Who wrote Harry Potter?,"SELECT ?author WHERE {
  dbr:Harry_Potter dbo:author ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
158,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer WHERE {
  ?writer dbo:occupation dbr:Writer .
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
157,Give me English actors starring in Lovesick.,"SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""Lovesick""@en .
  ?actor dbo:birthPlace ?place .
  ?place dbo:country dbr:England .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
155,What is the nick name of Baghdad?,"SELECT ?nickName WHERE {
  dbr:Baghdad foaf:nick ?nickName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
150,In which city was the president of Montenegro born?,"SELECT ?city WHERE {
  ?person dbo:birthPlace ?city .
  ?person dbp:title ""President of Montenegro""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
149,Which U.S. state has the highest population density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbo:populationDensity ?density .
} ORDER BY DESC(?density) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
25,What is the longest river in China?,"SELECT ?river WHERE {
  ?river dbo:country dbr:China .
  ?river rdf:type dbo:River .
} ORDER BY DESC(?length) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
143,What is the area code of Berlin?,"SELECT ?areaCode WHERE {
  dbr:Berlin dbo:areaCode ?areaCode .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
140,How many scientists graduated from an Ivy League university?,"SELECT (COUNT(DISTINCT ?scientist) AS ?count) WHERE {
  ?scientist dbo:almaMater ?university .
  ?scientist rdf:type dbo:Scientist .
  ?university dct:subject dbc:Ivy_League_universities .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
139,Which professional surfers were born in Australia?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Australia .
  ?surfer rdf:type dbo:Surfer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
137,Give me all Dutch parties.,"SELECT ?party WHERE {
  ?party dbo:country dbr:Netherlands .
  ?party rdf:type dbo:PoliticalParty .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
136,How many moons does Mars have?,"SELECT ?moons WHERE {
  dbr:Mars dbp:satellites ?moons .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
134,What is Batman's real name?,"SELECT ?realName WHERE {
  dbr:Batman foaf:name ?realName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
132,What is Elon Musk famous for?,"SELECT ?knownFor WHERE {
  dbr:Elon_Musk dbo:knownFor ?knownFor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
128,Who is the author of WikiLeaks?,"SELECT ?author WHERE {
  dbr:WikiLeaks dbo:founder ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
126,Sean Parnell was the governor of which U.S. state?,"SELECT ?state WHERE {
  ?state dbp:governor dbr:Sean_Parnell .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
125,How many years was the Ford Model T manufactured?,"SELECT (MAX(?endYear) - MIN(?startYear)) as ?manufactureYears
WHERE {
  dbr:Ford_Model_T dbo:productionStartYear ?startYear .
  dbr:Ford_Model_T dbo:productionEndYear ?endYear .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
124,When was Carlo Giuliani shot?,"SELECT ?date WHERE {
  dbr:Carlo_Giuliani dbo:deathDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
123,Give me all animals that are extinct.,"SELECT ?animal WHERE {
  ?animal dbo:status <http://dbpedia.org/resource/Extinction> .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
122,Who was the wife of President Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
111,How many awards has Bertrand Russell?,"SELECT (COUNT(?awards) AS ?count) WHERE {
  dbr:Bertrand_Russell dbp:awards ?awards .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
117,Is Pamela Anderson a vegan?,"SELECT ?answer WHERE {
  dbr:Pamela_Anderson dbo:diet ?answer .
  FILTER (str(?answer) = ""Veganism"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
59,Which space probes were sent into orbit around the sun?,"SELECT ?probe WHERE {
  ?probe dbo:wikiPageRedirects dbr:List_of_Solar_System_probes.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
113,Which German cities have more than 250000 inhabitants?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:isPartOf dbr:Germany .
  ?city dbo:populationTotal ?population .
  FILTER (?population > 250000)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
104,Who is the daughter of Robert Kennedy married to?,"SELECT ?husband WHERE {
  ?person dbo:parent dbr:Robert_F._Kennedy .
  ?person dbo:spouse ?husband .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
10,How many students does the Free University of Amsterdam have?,"SELECT ?numberOfStudents WHERE {
  dbr:VU_University_Amsterdam dbo:numberOfStudents ?numberOfStudents .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
1,What is the revenue of IBM?,"SELECT ?revenue WHERE {
  dbr:IBM dbo:revenue ?revenue .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
178,How many James Bond movies do exist?,"SELECT (COUNT(?movie) AS ?count) WHERE {
  ?movie dbo:series dbr:James_Bond_in_film.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
129,Who does the voice of Bart Simpson?,"SELECT ?actor WHERE {
  dbr:Bart_Simpson dbp:voice ?actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
183,Who was Tom Hanks married to?,"SELECT ?name WHERE {
  dbr:Tom_Hanks dbo:spouse ?spouse .
  ?spouse foaf:name ?name .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
181,Through which countries does the Yenisei river flow?,"SELECT ?country WHERE {
  dbr:Yenisei_River dbp:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
7,Give me all cars that are produced in Germany.,"SELECT ?car WHERE {
  ?car dbo:assembly dbr:Germany .
  ?car rdf:type dbo:Automobile .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
135,When did Michael Jackson die?,"SELECT ?deathDate WHERE {
  dbr:Michael_Jackson dbo:deathDate ?deathDate .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
50,What is the highest volcano in Africa?,"SELECT ?volcano WHERE {
  ?volcano rdf:type dbo:Mountain ;
           dbo:locatedInArea dbr:Africa ;
           dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
39,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
ORDER BY DESC(?bookCount)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
83,Give me all gangsters from the prohibition era.,"SELECT ?gangster WHERE {
  ?gangster dbo:occupation dbr:Gangster ;
            dbo:activeYearsStartYear ?startYear ;
            dbo:activeYearsEndYear ?endYear .
  FILTER (?startYear >= ""1920""^^xsd:dateTime && ?endYear <= ""1933""^^xsd:dateTime)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
71,Give me all spacecrafts that flew to Mars.,"SELECT ?spacecraft WHERE {
  ?spacecraft dbo:mission ?mission .
  ?mission dbo:destination dbr:Mars .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
213,Show me all Czech movies.,"SELECT ?movie WHERE {
  ?movie dbo:country dbr:Czech_Republic .
  ?movie rdf:type dbo:Film .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
209,Give me all taikonauts.,"SELECT ?taikonaut WHERE {
  ?taikonaut dbo:occupation dbr:Taikonaut .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
105,Which countries have more than ten volcanoes?,"SELECT ?country (COUNT(?volcano) AS ?volcanoCount)
WHERE {
  ?volcano dbo:locatedInArea ?country .
  ?volcano rdf:type dbo:Volcano .
}
GROUP BY ?country
HAVING (?volcanoCount > 10)",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
52,Give me all movies with Tom Cruise.,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
102,When did Dracula's creator die?,"SELECT ?date WHERE {
  dbr:Bram_Stoker dbo:deathDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
21,Who created English Wikipedia?,"SELECT ?creator WHERE {
  dbr:English_Wikipedia dbo:creator ?creator
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
34,Give me all female German chancellors.,"SELECT ?chancellor WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
  ?chancellor dbo:gender dbr:Female .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
145,Who owns Aldi?,"SELECT ?founder WHERE {
  dbr:Aldi dbp:founders ?founder .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
154,Which books were written by Danielle Steel?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
198,Who was influenced by Socrates?,"SELECT ?person WHERE {
  ?person dbo:influencedBy dbr:Socrates .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
162,How deep is Lake Chiemsee?,"SELECT ?depth WHERE {
  dbr:Lake_Chiemsee dbo:depth ?depth .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
212,Which companies work in the aerospace industry as well as in medicine?,"SELECT DISTINCT ?company WHERE {
  ?company rdf:type dbo:Company .
  ?company dbo:industry <http://dbpedia.org/resource/Aerospace> .
  ?company dbo:industry <http://dbpedia.org/resource/Medicine> .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
96,Which professional surfers were born on the Philippines?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Philippines .
  ?surfer rdf:type dbo:Surfer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
40,Who were the parents of Queen Victoria?,"SELECT ?parent WHERE {
  dbr:Queen_Victoria dbo:parent ?parent .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
79,Are there any castles in the United States?,"SELECT ?castle WHERE {
  ?castle dbo:country dbr:United_States .
  ?castle rdf:type dbo:Castle .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
141,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
80,Give me a list of all critically endangered birds.,"SELECT ?bird WHERE {
  ?bird rdf:type dbo:Species .
  ?bird dbo:conservationStatus dbr:Critically_Endangered .
  ?bird dbo:class dbr:Bird
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
159,Which countries are connected by the Rhine?,"SELECT ?country WHERE {
  dbr:Rhine dbo:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
107,Who was the father of Queen Elizabeth II?,"SELECT ?father WHERE {
  dbr:Elizabeth_II dbp:father ?father .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
163,Give me all chemical elements.,"SELECT ?chemicalElement WHERE {
  ?chemicalElement dbo:wikiPageDisambiguates dbr:Chemical_element.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
211,Give me all American presidents of the last 20 years.,"SELECT ?president ?start ?end
WHERE {
  ?president dbo:office dbr:President_of_the_United_States .
  ?president dbo:termPeriod ?term .
  ?term dbo:startDate ?start .
  ?term dbo:endDate ?end .
  FILTER (?start >= ""1996-10-01""^^xsd:date)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,"SELECT ?date WHERE {
  dbr:Worst_Case_Scenario_(film) dbo:releaseDate ?date .
  FILTER (langMatches(lang(?date), ""NL""))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
144,Whom did Lance Bass marry?,"SELECT ?spouse WHERE {
  dbr:Lance_Bass dbo:spouse ?spouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"SELECT ?airline WHERE {
  ?airline dbo:parentCompany dbr:TUI_Travel .
  ?airline dbo:targetAirport dbr:Glasgow_Airport .
  ?airline dbo:targetAirport dbr:Dublin_Airport .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
131,What languages are spoken in Pakistan?,"SELECT ?language WHERE {
  dbr:Pakistan dbo:officialLanguage ?language .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
120,Who is the daughter of Bill Clinton married to?,"SELECT ?person WHERE {
  dbr:Bill_Clinton dbo:child ?child .
  ?child dbo:spouse ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
164,Who was on the Apollo 11 mission?,"SELECT ?crewMember WHERE {
  dbr:Apollo_11 dbp:crewMembers ?crewMember .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
88,What is the wavelength of Indigo?,"SELECT ?wavelength WHERE {
  dbr:Indigo dbo:wavelength ?wavelength .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
151,Give me all B-sides of the Ramones.,"SELECT ?bSide WHERE {
  ?song dbo:artist dbr:Ramones .
  ?song dbo:bSide ?bSide .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
63,Who was called Scarface?,"SELECT ?person WHERE {
  ?person dbo:alias ""Scarface""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
27,Which rivers flow into the North Sea?,"SELECT ?river WHERE {
  ?river dbo:riverMouth dbr:North_Sea .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
156,Where is Fort Knox located?,"SELECT ?location WHERE {
  dbr:Fort_Knox dbo:location ?location .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
207,Which daughters of British earls died at the same place they were born at?,"SELECT ?daughter WHERE {
  ?earl rdf:type dbo:Noble .
  ?earl dbo:country dbr:United_Kingdom .
  ?earl dbo:nobleTitle ?title .
  ?title rdf:type dbo:Earl .
  ?daughter dbo:parent ?earl .
  ?daughter dbo:birthPlace ?place .
  ?daughter dbo:deathPlace ?place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
24,How many emperors did China have?,"SELECT (COUNT(?emperor) AS ?count) WHERE {
  ?emperor dbo:wikiPageRedirects dbr:Emperor_of_China .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
133,What are the names of the Teenage Mutant Ninja Turtles?,"SELECT ?name WHERE {
  ?turtle dbo:series dbr:Teenage_Mutant_Ninja_Turtles.
  ?turtle foaf:givenName ?name.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
103,Where does Piccadilly start?,"SELECT ?start WHERE {
  dbr:Piccadilly dbo:routeStart ?start .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
165,What is the name of the university where Obama's wife studied?,"SELECT ?university WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse .
  ?spouse dbo:almaMater ?university .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
108,When did Paraguay proclaim its independence?,"SELECT ?date WHERE {
  dbr:Paraguay dbo:foundingDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
15,How short is the shortest active NBA player?,"SELECT ?player ?height WHERE {
  ?player dbo:height ?height .
  ?player dbo:team ?team .
  ?team dbo:league dbr:National_Basketball_Association .
  ?player dbo:activeYearsEndYear ?endYear
  FILTER (?endYear >= 2016)
} ORDER BY ?height LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
45,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
82,When was Jack Wolfskin founded?,"SELECT ?foundingYear WHERE {
  dbr:Jack_Wolfskin dbo:foundingYear ?foundingYear .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
9,In which city is the headquarter of Air China?,"SELECT ?city WHERE {
  dbr:Air_China dbo:location ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
201,What is the founding year of the brewery that produces Pilsner Urquell?,"SELECT ?foundingYear WHERE {
  ?brewery dbo:product dbr:Pilsner_Urquell ;
           dbo:foundingYear ?foundingYear .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
171,When did the Boston Tea Party take place?,"SELECT ?date WHERE {
  dbr:Boston_Tea_Party dbp:date ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
182,Which animals are critically endangered?,"SELECT ?animal WHERE {
  ?animal rdf:type dbo:Species .
  ?animal dbo:conservationStatus dbr:Critically_Endangered .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
13,Which politicians were married to a German?,"SELECT ?politician WHERE {
  ?politician dbo:spouse ?spouse .
  ?politician rdf:type dbo:Politician .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
114,How big is the earth's diameter?,"SELECT ?diameter WHERE {
  dbr:Earth dbo:diameter ?diameter .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
92,Is the wife of President Obama called Michelle?,"SELECT ?answer 
WHERE { 
  dbr:Barack_Obama dbo:spouse ?answer .
  FILTER (str(?answer) = ""Michelle Obama"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
194,Which U.S. state has the abbreviation MN?,"SELECT ?state WHERE {
  ?state dbo:country dbr:United_States ;
         dbp:postalabbreviation ""MN"" .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
175,When did Muhammad die?,"SELECT ?date WHERE {
  dbr:Muhammad dbo:deathDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
26,What is the atmosphere of the Moon composed of?,"SELECT ?atmosphereComposition WHERE {
  dbr:Moon dbp:atmosphereComposition ?atmosphereComposition .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
60,Who is the governor of Texas?,"SELECT ?person WHERE {
  dbr:Texas dbp:governor ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
110,Which movies did Kurosawa direct?,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Akira_Kurosawa .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
206,What was the name of the famous battle in 1836 in San Antonio?,"SELECT ?battle WHERE {
  ?battle dbo:isPartOf dbr:San_Antonio .
  ?battle dbo:date ""1836""^^xsd:date .
  ?battle rdf:type dbo:MilitaryConflict .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
97,Give me the official websites of actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?website
WHERE {
  dbr:Charmed dbo:starring ?actor .
  ?actor foaf:homepage ?website .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
20,How many calories does a baguette have?,"SELECT ?calories WHERE {
  dbr:Baguette dbp:calories ?calories .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
169,Give me all libraries established before 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library
WHERE {
  ?library dbo:establishmentYear ?year .
  ?library rdf:type dbo:Library .
  FILTER (?year < ""1400""^^xsd:gYear)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
38,Give me all Frisian islands that belong to the Netherlands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island WHERE {
  ?island dbo:isPartOf dbr:West_Frisian_Islands ;
          dbo:country dbr:Netherlands .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
192,Which museum exhibits The Scream by Munch?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?museum WHERE {
  ?artwork dbo:museum ?museum .
  ?artwork rdfs:label ""The Scream""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
78,When was the De Beers company founded?,"SELECT ?foundingYear WHERE {
  dbr:De_Beers dbo:foundingYear ?foundingYear .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
19,Who became president after JFK died?,"SELECT ?person WHERE {
  dbr:John_F._Kennedy dbo:deathDate ?deathDate .
  ?person dbo:presidentStart ?start .
  FILTER (?start > ?deathDate)
} ORDER BY ?start LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
190,Who are the parents of the wife of Juan Carlos I?,"SELECT ?parent WHERE {
  dbr:Juan_Carlos_I_of_Spain dbo:spouse ?wife .
  ?wife dbo:parent ?parent .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
174,Who is the novelist of the work a song of ice and fire?,"SELECT ?novelist WHERE {
  ?work rdfs:label ""A Song of Ice and Fire""@en.
  ?work dbo:author ?novelist.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
189,In which studio did the Beatles record their first album?,"SELECT ?studio WHERE {
  ?album dbo:artist dbr:The_Beatles .
  ?album dbo:releaseDate ?date .
  ?album dbp:studio ?studio .
} ORDER BY ?date
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
152,Which beer brewing companies are located in North-Rhine Westphalia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?companyLabel WHERE {
  ?company dbo:industry dbr:Brewery ;
           dbo:location dbr:North_Rhine-Westphalia .
  ?company rdfs:label ?companyLabel .
  FILTER (lang(?companyLabel) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
94,When did princess Diana die?,"SELECT ?deathDate WHERE {
  dbr:Diana,_Princess_of_Wales dbo:deathDate ?deathDate .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
8,Who founded Intel?,"SELECT ?founder WHERE {
  dbr:Intel dbp:founders ?founder .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
95,Who is the youngest player in the Premier League?,"SELECT ?player ?birthDate WHERE {
  ?player dbo:birthDate ?birthDate .
  ?player dbo:team ?team .
  ?team dbo:league dbr:Premier_League .
} ORDER BY ASC(?birthDate) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
119,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
115,How many rivers and lakes are in South Carolina?,"SELECT (COUNT(?lake) AS ?lakeCount) (COUNT(?river) AS ?riverCount) WHERE {
  { SELECT ?lake WHERE { ?lake dbo:country dbr:South_Carolina . ?lake rdf:type dbo:Lake . } }
  UNION
  { SELECT ?river WHERE { ?river dbo:country dbr:South_Carolina . ?river rdf:type dbo:River . } }
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
116,Who was called Rodzilla?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  ?person dbo:alias ""Rodzilla""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
138,Give me the capitals of all countries in Africa.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?capital
WHERE {
  ?country dct:subject dbc:Countries_in_Africa ;
           dbo:capital ?capital .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
177,Which bridges are of the same type as the Manhattan Bridge?,"SELECT ?bridge WHERE {
  dbr:Manhattan_Bridge dbo:bridgeType ?type .
  ?bridge dbo:bridgeType ?type .
  FILTER (?bridge != dbr:Manhattan_Bridge)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
101,How many companies were founded by the founder of Facebook?,"SELECT (COUNT(?company) AS ?count) WHERE {
  ?fb dbo:foundingYear ?year .
  ?fb foaf:name ""Facebook""@en .
  ?fb dbo:foundedBy ?founder .
  ?company dbo:foundedBy ?founder .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,"SELECT ?hikingTrail WHERE {
  ?hikingTrail dbo:location dbr:Grand_Canyon .
  ?hikingTrail rdf:type dbo:HikingTrail .
  OPTIONAL { ?hikingTrail dbp:hazards ?hazard . }
  FILTER (!bound(?hazard) || !strcontains(str(?hazard), ""flash floods""))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
87,Which book has the most pages?,"SELECT ?book WHERE {
  ?book a dbo:Book ;
        dbo:numberOfPages ?pages .
} ORDER BY DESC(?pages) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
148,What is the largest state in the United States?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:isPartOf dbr:United_States .
  ?state dbo:areaTotal ?area .
} ORDER BY DESC(?area) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
43,Give me the websites of companies with more than 500000 employees.,"SELECT ?company ?website
WHERE {
  ?company dbo:numberOfEmployees ?employees .
  ?company foaf:homepage ?website .
  FILTER (?employees > 500000)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
179,What were the names of the three ships by Columbus?,"SELECT ?shipName WHERE {
  dbr:Christopher_Columbus dbo:ship ?ship .
  ?ship rdfs:label ?shipName .
  FILTER (lang(?shipName) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
99,What is the time zone of Salt Lake City?,"SELECT ?timeZone WHERE {
  dbr:Salt_Lake_City dbo:timeZone ?timeZone .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
98,Who killed Caesar?,"SELECT ?person WHERE {
  dbr:Julius_Caesar dbo:deathCause ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
86,What is the highest mountain in Germany?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:location dbr:Germany .
} ORDER BY DESC(?elevation) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
84,Which American presidents were in office during the Vietnam War?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?president WHERE {
  ?president dbo:office dbr:President_of_the_United_States .
  ?president dbo:termStart ?start .
  ?president dbo:termEnd ?end .
  FILTER (?start <= ""1975-04-30""^^xsd:date && ?end >= ""1955-11-01""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
81,Butch Otter is the governor of which U.S. state?,"SELECT ?state WHERE {
  ?state dbp:governor dbr:Butch_Otter .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,"SELECT COUNT(?goldMedals) WHERE {
  ?goldMedals dbo:goldMedalist dbr:Michael_Phelps .
  ?goldMedals dbo:olympicGames dbr:2008_Summer_Olympics .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
66,Which artists were born on the same date as Rachel Stevens?,"SELECT ?artist WHERE {
  dbpedia:Rachel_Stevens dbo:birthDate ?date .
  ?artist dbo:birthDate ?date .
  ?artist rdf:type dbo:Artist .
  FILTER (?artist != dbpedia:Rachel_Stevens)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
64,What is the profession of Frank Herbert?,"SELECT ?profession WHERE {
  dbr:Frank_Herbert dbo:occupation ?profession .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
6,Are Taiko some kind of Japanese musical instrument?,"SELECT ?item WHERE {
  ?item rdfs:label ""Taiko""@en .
  ?item dbo:type ?type .
  ?type rdfs:label ?typeLabel .
  FILTER (lang(?typeLabel) = 'en')
  FILTER (CONTAINS(?typeLabel, ""Japanese musical instrument""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
56,How many seats does the home stadium of FC Porto have?,"SELECT ?seats
WHERE {
  dbr:FC_Porto dbo:ground ?stadium .
  ?stadium dbo:seatingCapacity ?seats .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
49,Which frequent flyer program has the most airlines?,"SELECT ?program (COUNT(?airline) AS ?count) WHERE {
  ?airline dbp:frequentFlyer ?program .
} GROUP BY ?program ORDER BY DESC(?count) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
44,Which European countries have a constitutional monarchy?,"SELECT ?country WHERE {
  ?country dct:subject dbc:Countries_in_Europe .
  ?country dbo:governmentType dbr:Constitutional_monarchy .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
42,Which countries have places with more than two caves?,"SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:location ?place .
  ?place dbo:country ?country .
  ?cave a dbo:Cave .
}
GROUP BY ?country
HAVING (?caveCount > 2)","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
4,"Which airports are located in California, USA?","SELECT ?airport WHERE {
  ?airport rdf:type dbo:Airport .
  ?airport dbo:location ?location .
  ?location dbo:isPartOf dbr:California .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
37,What are the nicknames of San Francisco?,"SELECT ?nicknames WHERE {
  dbr:San_Francisco dbp:nickname ?nicknames .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
32,What is Angela Merkelâ€™s birth name?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
31,Who is the mayor of Berlin?,"SELECT ?person WHERE {
  dbr:Berlin dbp:leader ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
29,Which countries in the European Union adopted the Euro?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro ;
           dct:subject dbc:Countries_in_the_European_Union .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
23,Which software has been published by Mean Hamster Software?,"SELECT ?software WHERE {
  ?software dbo:publisher dbr:Mean_Hamster_Software .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
68,Which country was Bill Gates born in?,"SELECT ?country WHERE {
  dbr:Bill_Gates dbo:birthPlace ?place .
  ?place dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
22,How many grand-children did Jacques Cousteau have?,"SELECT (COUNT(?grandchild) AS ?count) WHERE {
  ?person dbo:birthName ""Jacques-Yves Cousteau""@en.
  ?person dbo:child ?child.
  ?child dbo:child ?grandchild.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
214,Give me all professional skateboarders from Sweden.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Skateboarding ;
          dbo:birthPlace dbr:Sweden .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
210,Which monarchs of the United Kingdom were married to a German?,"SELECT ?monarch WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch dct:subject dbc:Monarchs_of_the_United_Kingdom .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dct:subject dbc:Germany .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
199,Give me all Argentine films.,"SELECT ?film WHERE {
  ?film dbo:country dbr:Argentina .
  ?film rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
203,How did Michael Jackson die?,"SELECT ?causeOfDeath WHERE {
  dbr:Michael_Jackson dbo:deathCause ?causeOfDeath .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
197,Which U.S. state has been admitted latest?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbp:admittancedate ?date .
} ORDER BY DESC(?date) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
196,Which classes does the Millepede belong to?,"SELECT ?class WHERE {
  dbr:Millipede rdf:type ?class .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
188,Give me the homepage of Forbes.,"SELECT ?homepage WHERE {
  dbr:Forbes foaf:homepage ?homepage .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
187,Who is the husband of Amanda Palmer?,"SELECT ?husband WHERE {
  dbr:Amanda_Palmer dbo:spouse ?husband .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
176,Who painted The Storm on the Sea of Galilee?,"SELECT ?artist WHERE {
  dbr:The_Storm_on_the_Sea_of_Galilee dbo:author ?artist .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
62,What is the highest place of Karakoram?,"SELECT ?place ?elevation 
WHERE {
  ?place dbo:location dbr:Karakoram .
  ?place dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
173,When did Finland join the EU?,"SELECT ?date WHERE {
  dbr:Finland dbp:accessioneudate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
168,Which actors play in Big Bang Theory?,"SELECT ?actor WHERE {
  dbr:The_Big_Bang_Theory dbo:starring ?actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
166,Which computer scientist won an oscar?,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Computer_scientist ;
          dbo:award dbr:Academy_Awards .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
160,Who wrote Harry Potter?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book dbp:name ""Harry Potter"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
158,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer WHERE {
  ?writer rdf:type dbo:Writer .
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
157,Give me English actors starring in Lovesick.,"SELECT ?actor WHERE {
  ?actor dbo:starring <http://dbpedia.org/resource/Lovesick_(TV_series)> .
  ?actor dbo:birthPlace ?place .
  ?place dbo:country <http://dbpedia.org/resource/England> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
155,What is the nick name of Baghdad?,"SELECT ?nickName WHERE {
  dbr:Baghdad foaf:nick ?nickName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
150,In which city was the president of Montenegro born?,"SELECT ?city WHERE {
  ?person dbo:birthPlace ?city .
  ?person dbp:title ""President of Montenegro""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
149,Which U.S. state has the highest population density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbp:density ?density .
} ORDER BY DESC(?density) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
25,What is the longest river in China?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River ;
         dbo:country dbr:China ;
         dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
143,What is the area code of Berlin?,"SELECT ?areaCode WHERE {
  dbr:Berlin dbo:areaCode ?areaCode .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
140,How many scientists graduated from an Ivy League university?,"SELECT (COUNT(?scientist) AS ?count) WHERE {
  ?scientist rdf:type dbo:Scientist .
  ?scientist dbo:almaMater ?university .
  ?university dct:subject dbc:Ivy_League_universities .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
139,Which professional surfers were born in Australia?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Australia .
  ?surfer rdf:type dbo:Surfer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
137,Give me all Dutch parties.,"SELECT ?party WHERE {
  ?party dbo:country dbr:Netherlands .
  ?party rdf:type dbo:PoliticalParty .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
136,How many moons does Mars have?,"SELECT ?moons WHERE {
  dbr:Mars dbp:satellites ?moons .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
134,What is Batman's real name?,"SELECT ?realName WHERE {
  dbr:Batman foaf:name ?realName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
132,What is Elon Musk famous for?,"SELECT ?knownFor WHERE {
  dbr:Elon_Musk dbo:knownFor ?knownFor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
128,Who is the author of WikiLeaks?,"SELECT ?author WHERE {
  dbr:WikiLeaks dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
126,Sean Parnell was the governor of which U.S. state?,"SELECT ?state WHERE {
  ?state dbo:governor dbr:Sean_Parnell .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
125,How many years was the Ford Model T manufactured?,"SELECT (MAX(?endYear) - MIN(?startYear)) WHERE {
  ?car dbo:manufacturer dbr:Ford_Motor_Company .
  ?car rdfs:label ""Ford Model T""@en .
  ?car dbo:productionStartYear ?startYear .
  ?car dbo:productionEndYear ?endYear .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
124,When was Carlo Giuliani shot?,"SELECT ?date WHERE {
  dbr:Carlo_Giuliani dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
123,Give me all animals that are extinct.,"SELECT ?animal WHERE {
  ?animal dbo:status dbr:Extinct .
  ?animal rdf:type dbo:Animal .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
122,Who was the wife of President Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
111,How many awards has Bertrand Russell?,"SELECT (COUNT(?award) AS ?count) WHERE {
  dbr:Bertrand_Russell dbp:awards ?award .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
117,Is Pamela Anderson a vegan?,"SELECT ?answer WHERE {
  dbr:Pamela_Anderson dbo:diet ?answer .
  FILTER (str(?answer) = ""Veganism"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
59,Which space probes were sent into orbit around the sun?,"SELECT ?probe WHERE {
  ?probe dbo:type dbr:Space_probe .
  ?probe dbo:orbit dbp:Sun .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
113,Which German cities have more than 250000 inhabitants?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:isPartOf dbr:Germany .
  ?city dbo:populationTotal ?population .
  FILTER (?population > 250000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
104,Who is the daughter of Robert Kennedy married to?,"SELECT ?person WHERE {
  dbr:Robert_F._Kennedy dbo:child ?child .
  ?child dbo:spouse ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
10,How many students does the Free University of Amsterdam have?,"SELECT ?numberOfStudents WHERE {
  dbr:VU_University_Amsterdam dbo:numberOfStudents ?numberOfStudents .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
1,What is the revenue of IBM?,"SELECT ?revenue WHERE {
  dbr:IBM dbo:revenue ?revenue .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
178,How many James Bond movies do exist?,"SELECT COUNT(?movie) WHERE {
  ?movie dbo:series dbr:James_Bond_in_film.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
129,Who does the voice of Bart Simpson?,"SELECT ?person WHERE {
  dbr:Bart_Simpson dbp:voice ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
183,Who was Tom Hanks married to?,"SELECT ?person WHERE {
  dbr:Tom_Hanks dbo:spouse ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
181,Through which countries does the Yenisei river flow?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  res:Yenisei_River dbp:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
7,Give me all cars that are produced in Germany.,"SELECT ?car WHERE {
  ?car dbo:assembly dbr:Germany .
  ?car rdf:type dbo:Automobile .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
135,When did Michael Jackson die?,"SELECT ?date WHERE {
  dbr:Michael_Jackson dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
50,What is the highest volcano in Africa?,"SELECT ?volcano WHERE {
  ?volcano dbo:locatedInArea dbr:Africa ;
           rdf:type dbo:Mountain ;
           dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
39,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
ORDER BY DESC(?bookCount)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
83,Give me all gangsters from the prohibition era.,"SELECT ?gangster WHERE {
  ?gangster dbo:occupation dbr:Gangster .
  ?gangster dbo:birthDate ?birthDate .
  FILTER (?birthDate >= ""1920-01-17""^^xsd:date && ?birthDate <= ""1933-12-05""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
71,Give me all spacecrafts that flew to Mars.,"SELECT ?spacecraft WHERE {
  ?spacecraft dbo:mission ?mission .
  ?mission dbo:destination dbr:Mars .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
213,Show me all Czech movies.,"SELECT ?movie WHERE {
  ?movie dbo:country dbr:Czech_Republic .
  ?movie rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
209,Give me all taikonauts.,"SELECT ?taikonaut WHERE {
  ?taikonaut dbo:occupation dbr:Taikonaut .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
105,Which countries have more than ten volcanoes?,"SELECT ?country WHERE {
  {
    SELECT ?country (COUNT(?volcano) AS ?volcanoCount) WHERE {
      ?volcano dbo:locatedInArea ?country .
      ?volcano rdf:type dbo:Mountain .
      ?country rdf:type dbo:Country .
    } GROUP BY ?country
  }
  FILTER (?volcanoCount > 10)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
52,Give me all movies with Tom Cruise.,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
102,When did Dracula's creator die?,"SELECT ?date WHERE {
  ?person dbo:deathDate ?date .
  ?person rdfs:label ""Bram Stoker""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
21,Who created English Wikipedia?,"SELECT ?creator WHERE {
  dbr:English_Wikipedia dbo:creator ?creator .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
34,Give me all female German chancellors.,"SELECT ?person WHERE {
  ?person dbo:office dbr:Chancellor_of_Germany .
  ?person dbo:gender dbr:Female .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
145,Who owns Aldi?,"SELECT ?founder WHERE {
  dbr:Aldi dbp:founders ?founder .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
154,Which books were written by Danielle Steel?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
  ?book rdf:type dbo:Book .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
198,Who was influenced by Socrates?,"SELECT ?person WHERE {
  ?person dbo:influencedBy dbr:Socrates .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
162,How deep is Lake Chiemsee?,"SELECT ?depth WHERE {
  dbr:Lake_Chiemsee dbo:depth ?depth .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
212,Which companies work in the aerospace industry as well as in medicine?,"SELECT DISTINCT ?company WHERE {
  ?company rdf:type dbo:Company .
  ?company dbo:industry dbr:Aerospace .
  ?company dbo:industry dbr:Medicine .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
96,Which professional surfers were born on the Philippines?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Philippines .
  ?surfer rdf:type dbo:Surfer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
40,Who were the parents of Queen Victoria?,"SELECT ?parent WHERE {
  dbr:Queen_Victoria dbo:parent ?parent .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
79,Are there any castles in the United States?,"SELECT ?castle WHERE {
  ?castle dbo:country dbr:United_States ;
          rdf:type dbo:Castle .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
141,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
80,Give me a list of all critically endangered birds.,"SELECT ?bird WHERE {
  ?bird rdf:type dbo:Species .
  ?bird dbo:conservationStatus dbr:Critically_Endangered .
  ?bird dbo:class dbr:Bird
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
159,Which countries are connected by the Rhine?,"SELECT ?country WHERE {
  dbr:Rhine dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
107,Who was the father of Queen Elizabeth II?,"SELECT ?father WHERE {
  dbr:Elizabeth_II dbp:father ?father .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
163,Give me all chemical elements.,"SELECT ?chemicalElement WHERE {
  ?chemicalElement dbo:wikiPageDisambiguates dbr:Chemical_element.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
211,Give me all American presidents of the last 20 years.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?president ?start ?end
WHERE {
  ?president dbo:office <http://dbpedia.org/resource/President_of_the_United_States> .
  ?president dbo:termPeriod ?term .
  ?term dbo:startDate ?start .
  ?term dbo:endDate ?end .
  FILTER (?start >= ""1996-10-01""^^xsd:date AND ?end <= ""2016-10-01""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,"SELECT ?date WHERE {
  dbr:Worst_Case_Scenario_(film) dbo:releaseDate ?date .
  FILTER (langMatches(lang(?date), ""NL""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
144,Whom did Lance Bass marry?,"SELECT ?spouse WHERE {
  dbr:Lance_Bass dbo:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?subsidiary WHERE {
  ?subsidiary rdf:type dbo:Company ;
              dbo:parentCompany dbr:TUI_Travel .
  ?subsidiary dbo:targetAirport dbr:Glasgow_Airport, dbr:Dublin_Airport .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
131,What languages are spoken in Pakistan?,"SELECT ?language WHERE {
  dbr:Pakistan dbo:officialLanguage ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
120,Who is the daughter of Bill Clinton married to?,"SELECT ?person WHERE {
  dbr:Bill_Clinton dbo:child ?child .
  ?child dbo:spouse ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
164,Who was on the Apollo 11 mission?,"SELECT ?person WHERE {
  dbr:Apollo_11 dbp:crewMembers ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
88,What is the wavelength of Indigo?,"SELECT ?wavelength WHERE {
  dbr:Indigo dbo:wavelength ?wavelength .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
151,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bSide WHERE {
  dbr:Ramones dbo:bSide ?bSide .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
63,Who was called Scarface?,"SELECT ?person WHERE {
  ?person dbo:alias ""Scarface""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
27,Which rivers flow into the North Sea?,"SELECT ?river WHERE {
  ?river dbo:mouth dbr:North_Sea .
  ?river rdf:type dbo:River .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
156,Where is Fort Knox located?,"SELECT ?location WHERE {
  dbr:Fort_Knox dbo:location ?location .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
207,Which daughters of British earls died at the same place they were born at?,"SELECT ?person WHERE {
  ?person dbo:parent ?parent .
  ?parent a dbo:Earl .
  ?parent dbo:country dbr:United_Kingdom .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
24,How many emperors did China have?,"SELECT (COUNT(?emperor) AS ?count) WHERE {
  ?emperor dbo:wikiPageRedirects <http://dbpedia.org/resource/Emperor_of_China> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
133,What are the names of the Teenage Mutant Ninja Turtles?,"SELECT ?name WHERE {
  ?turtle dbo:series dbr:Teenage_Mutant_Ninja_Turtles .
  ?turtle foaf:givenName ?name .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
103,Where does Piccadilly start?,"SELECT ?start WHERE {
  dbr:Piccadilly dbo:routeStart ?start .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
165,What is the name of the university where Obama's wife studied?,"SELECT ?university WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse .
  ?spouse dbo:almaMater ?university .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
108,When did Paraguay proclaim its independence?,"SELECT ?date WHERE {
  dbr:Paraguay dbo:foundingDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
15,How short is the shortest active NBA player?,"SELECT ?player ?height WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
  ?player dbo:team ?team .
  ?team dbo:league dbr:National_Basketball_Association .
  ?player dbo:activeYearsEndYear ?endYear .
  FILTER (?endYear >= 2016)
} ORDER BY ASC(?height) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
45,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
82,When was Jack Wolfskin founded?,"SELECT ?foundingYear WHERE {
  dbr:Jack_Wolfskin dbo:foundingYear ?foundingYear .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
9,In which city is the headquarter of Air China?,"SELECT ?city WHERE {
  dbr:Air_China dbo:headquarter ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
201,What is the founding year of the brewery that produces Pilsner Urquell?,"SELECT ?foundingYear WHERE {
  ?brewery dbo:product dbr:Pilsner_Urquell ;
           dbo:foundingYear ?foundingYear .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
171,When did the Boston Tea Party take place?,"SELECT ?date WHERE {
  dbr:Boston_Tea_Party dbp:date ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
182,Which animals are critically endangered?,"SELECT ?animal WHERE {
  ?animal rdf:type dbo:Species .
  ?animal dbo:conservationStatus dbr:Critically_Endangered .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
13,Which politicians were married to a German?,"SELECT ?politician WHERE {
  ?politician dbo:spouse ?spouse .
  ?spouse dbo:nationality dbr:Germany .
  ?politician rdf:type dbo:Politician .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
114,How big is the earth's diameter?,"SELECT ?diameter WHERE {
  dbr:Earth dbo:diameter ?diameter .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
92,Is the wife of President Obama called Michelle?,"SELECT ?answer 
WHERE { 
  dbr:Barack_Obama dbo:spouse ?answer . 
  FILTER (str(?answer) = ""Michelle Obama"") 
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
194,Which U.S. state has the abbreviation MN?,"SELECT ?state WHERE {
  ?state dbo:country dbr:United_States ;
         dbp:postalabbreviation ""MN"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
175,When did Muhammad die?,"SELECT ?date WHERE {
  dbr:Muhammad dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
26,What is the atmosphere of the Moon composed of?,"SELECT ?atmosphereComposition WHERE {
  dbr:Moon dbp:atmosphereComposition ?atmosphereComposition .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
60,Who is the governor of Texas?,"SELECT ?person WHERE {
  ?place dbo:leaderTitle ""Governor"" .
  ?place rdfs:label ""Texas""@en .
  ?place dbo:leader ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
110,Which movies did Kurosawa direct?,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Akira_Kurosawa .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
206,What was the name of the famous battle in 1836 in San Antonio?,"SELECT ?battle WHERE {
  ?battle rdf:type dbo:MilitaryConflict .
  ?battle dbo:date ""1836-01-01T00:00:00Z""^^xsd:dateTime .
  ?battle dbo:place dbr:San_Antonio .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
97,Give me the official websites of actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?actor ?website
WHERE {
  ?show dbo:starring ?actor .
  ?actor foaf:homepage ?website .
  ?show rdfs:label ""Charmed""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
20,How many calories does a baguette have?,"SELECT ?calories WHERE {
  dbr:Baguette dbp:calories ?calories .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
169,Give me all libraries established before 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library
WHERE {
  ?library rdf:type dbo:Library .
  ?library dbo:foundingYear ?year .
  FILTER (?year < ""1400""^^xsd:gYear)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
38,Give me all Frisian islands that belong to the Netherlands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island WHERE {
  ?island dbo:isPartOf dbr:West_Frisian_Islands .
  ?island dbo:country dbr:Netherlands .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
192,Which museum exhibits The Scream by Munch?,"SELECT ?museum WHERE {
  ?artwork dbo:artist dbr:Edvard_Munch ;
           rdfs:label ""The Scream""@en ;
           dbo:museum ?museum .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
78,When was the De Beers company founded?,"SELECT ?foundingYear WHERE {
  dbr:De_Beers dbo:foundingYear ?foundingYear .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
19,Who became president after JFK died?,"SELECT ?person WHERE {
  ?person dbo:office ""President of the United States"" .
  ?person dbp:presidentStart ?start .
  dbr:John_F._Kennedy dbo:deathDate ?end .
  FILTER (?start > ?end)
} ORDER BY ?start LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
190,Who are the parents of the wife of Juan Carlos I?,"SELECT ?parent WHERE {
  dbr:Juan_Carlos_I dbo:spouse ?wife .
  ?wife dbo:parent ?parent .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
174,Who is the novelist of the work a song of ice and fire?,"SELECT ?novelist WHERE {
  ?work rdfs:label ""A Song of Ice and Fire""@en.
  ?work dbp:author ?novelist.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
189,In which studio did the Beatles record their first album?,"SELECT ?studio WHERE {
  ?album dbo:artist dbr:The_Beatles .
  ?album dbo:releaseDate ?date .
  ?album dbp:studio ?studio .
} ORDER BY ?date LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
152,Which beer brewing companies are located in North-Rhine Westphalia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company WHERE {
  ?company dbo:industry dbr:Brewery ;
           dbo:location dbr:North_Rhine-Westphalia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
94,When did princess Diana die?,"SELECT ?date WHERE {
  dbr:Princess_Diana dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
8,Who founded Intel?,"SELECT ?founder WHERE {
  dbr:Intel dbp:founders ?founder .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
95,Who is the youngest player in the Premier League?,"SELECT ?player WHERE {
  ?player dbo:team ?team .
  ?team dbo:league dbr:Premier_League .
  ?player dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
119,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
115,How many rivers and lakes are in South Carolina?,"SELECT (COUNT(?lake) AS ?lakeCount) (COUNT(?river) AS ?riverCount) WHERE {
  { ?lake dbo:type dbr:Lake .
    ?lake dbo:location dbr:South_Carolina . }
  UNION
  { ?river dbo:type dbr:River .
    ?river dbo:location dbr:South_Carolina . }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
116,Who was called Rodzilla?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER(LANG(?label) = ""en"") .
  FILTER(CONTAINS(LCASE(?label), ""rodzilla"")) .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
138,Give me the capitals of all countries in Africa.,"SELECT ?country ?capital
WHERE {
  ?country dct:subject dbc:Countries_in_Africa .
  ?country dbo:capital ?capital .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
177,Which bridges are of the same type as the Manhattan Bridge?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?bridge WHERE {
  dbr:Manhattan_Bridge rdf:type ?type .
  ?bridge rdf:type ?type .
  FILTER (?bridge != dbr:Manhattan_Bridge)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
101,How many companies were founded by the founder of Facebook?,"SELECT COUNT(?company) WHERE {
  ?person dbo:wikiPageID dbpedia:Mark_Zuckerberg .
  ?company dbo:foundedBy ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,"SELECT ?hikingTrail WHERE {
  ?hikingTrail dbo:isPartOf dbr:Grand_Canyon .
  ?hikingTrail rdf:type dbo:HikingTrail .
  OPTIONAL { ?hikingTrail dbp:hazards ?hazard . }
  FILTER (!bound(?hazard) || !strstarts(str(?hazard), ""Flash flood""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
87,Which book has the most pages?,"SELECT ?book WHERE {
  ?book a dbo:Book .
  ?book dbo:numberOfPages ?pages .
} ORDER BY DESC(?pages) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
148,What is the largest state in the United States?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:isPartOf dbr:United_States .
  ?state dbo:areaTotal ?area .
} ORDER BY DESC(?area) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
43,Give me the websites of companies with more than 500000 employees.,"SELECT ?company ?website
WHERE {
  ?company a dbo:Company ;
           dbo:numberOfEmployees ?employees ;
           foaf:homepage ?website .
  FILTER (?employees > 500000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
179,What were the names of the three ships by Columbus?,"SELECT ?ship ?name WHERE {
  ?ship dbo:operator dbr:Christopher_Columbus.
  ?ship rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
99,What is the time zone of Salt Lake City?,"SELECT ?timeZone WHERE {
  dbr:Salt_Lake_City dbo:timeZone ?timeZone .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
98,Who killed Caesar?,"SELECT ?person WHERE {
  ?person dbo:knownFor ?event .
  ?event dbo:mainEvent dbr:Assassination_of_Julius_Caesar .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
86,What is the highest mountain in Germany?,"SELECT ?mountain ?elevation 
WHERE {
  ?mountain dbo:country dbr:Germany ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
84,Which American presidents were in office during the Vietnam War?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?president ?start ?end WHERE {
  ?president dbo:office <http://dbpedia.org/resource/President_of_the_United_States> .
  ?president dbo:birthPlace <http://dbpedia.org/resource/United_States> .
  ?president dbo:termStart ?start .
  ?president dbo:termEnd ?end .
  FILTER (?start <= ""1975-04-30""^^xsd:date && ?end >= ""1955-11-01""^^xsd:date)
} ORDER BY ?start","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
81,Butch Otter is the governor of which U.S. state?,"SELECT ?state WHERE {
  ?state dbo:leader ?person .
  ?person foaf:name ""Butch Otter""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,"SELECT COUNT(?goldMedal) WHERE {
  ?goldMedal dbo:goldMedalist dbr:Michael_Phelps .
  ?goldMedal dbo:olympicGames dbr:2008_Summer_Olympics .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
66,Which artists were born on the same date as Rachel Stevens?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?rachel foaf:name ""Rachel Stevens""@en .
  ?rachel dbo:birthDate ?birthdate .
  ?artist dbo:birthDate ?birthdate .
  ?artist rdf:type dbo:MusicalArtist .
  FILTER (?artist != ?rachel)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
64,What is the profession of Frank Herbert?,"SELECT ?profession WHERE {
  dbr:Frank_Herbert dbo:occupation ?profession .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
6,Are Taiko some kind of Japanese musical instrument?,"SELECT ?description WHERE {
  dbr:Taiko dbo:abstract ?description .
  FILTER (lang(?description) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
56,How many seats does the home stadium of FC Porto have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?seats
WHERE {
  res:FC_Porto dbo:ground ?stadium .
  ?stadium dbo:seatingCapacity ?seats .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
49,Which frequent flyer program has the most airlines?,"SELECT ?program (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:frequentFlyer ?program .
} 
GROUP BY ?program 
ORDER BY DESC(?count) 
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
44,Which European countries have a constitutional monarchy?,"SELECT ?country WHERE {
  ?country dct:subject dbc:Countries_in_Europe .
  ?country dbo:governmentType dbr:Constitutional_monarchy .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
42,Which countries have places with more than two caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbo:location ?place .
  ?place dbo:country ?country .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 2)","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
4,"Which airports are located in California, USA?","SELECT ?airport WHERE {
  ?airport rdf:type dbo:Airport .
  ?airport dbo:location ?location .
  ?location dbo:isPartOf dbo:California .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
37,What are the nicknames of San Francisco?,"SELECT ?nickname WHERE {
  dbr:San_Francisco foaf:nick ?nickname .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
32,What is Angela Merkelâ€™s birth name?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
31,Who is the mayor of Berlin?,"SELECT ?mayor WHERE {
  dbr:Berlin dbp:leader ?mayor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
29,Which countries in the European Union adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro ;
           dbo:isPartOf dbr:European_Union .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
23,Which software has been published by Mean Hamster Software?,"SELECT ?software WHERE {
  ?software dbo:publisher dbr:Mean_Hamster_Software.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
68,Which country was Bill Gates born in?,"SELECT ?country WHERE {
  dbr:Bill_Gates dbo:birthPlace ?place .
  ?place dbo:country ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
22,How many grand-children did Jacques Cousteau have?,"SELECT (COUNT(?grandchild) AS ?count) WHERE {
  ?person dbo:birthName ""Jacques-Yves Cousteau""@en.
  ?person dbo:child ?child.
  ?child dbo:child ?grandchild.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
214,Give me all professional skateboarders from Sweden.,"SELECT ?skateboarder WHERE {
  ?skateboarder dbo:occupation dbr:Skateboarding ;
                dbo:birthPlace dbr:Sweden .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
210,Which monarchs of the United Kingdom were married to a German?,"SELECT ?monarch ?spouse
WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch dct:subject dbc:Monarchs_of_the_United_Kingdom .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dct:subject dbc:Germany .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
199,Give me all Argentine films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?film WHERE {
  ?film dbo:country dbr:Argentina .
  ?film rdf:type dbo:Film .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
203,How did Michael Jackson die?,"SELECT ?causeOfDeath WHERE {
  dbr:Michael_Jackson dbo:deathCause ?causeOfDeath .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
197,Which U.S. state has been admitted latest?,"SELECT ?state ?date WHERE {
  ?state rdf:type dbo:Place ;
         dbo:country dbr:United_States ;
         dbp:admittanceDate ?date .
} ORDER BY DESC(?date) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
196,Which classes does the Millepede belong to?,"SELECT ?class WHERE {
  dbr:Millipede rdf:type ?class .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
188,Give me the homepage of Forbes.,"SELECT ?homepage 
WHERE { 
  dbr:Forbes foaf:homepage ?homepage . 
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
187,Who is the husband of Amanda Palmer?,"SELECT ?husband WHERE {
  dbr:Amanda_Palmer dbo:spouse ?husband .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
176,Who painted The Storm on the Sea of Galilee?,"SELECT ?artist WHERE {
  dbr:The_Storm_on_the_Sea_of_Galilee dbo:author ?artist .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
62,What is the highest place of Karakoram?,"SELECT ?place ?elevation 
WHERE {
  ?place dbo:location dbr:Karakoram ;
         dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
173,When did Finland join the EU?,"SELECT ?date WHERE {
  dbr:Finland dbp:accessioneudate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
168,Which actors play in Big Bang Theory?,"SELECT ?actor WHERE {
  dbr:The_Big_Bang_Theory dbo:starring ?actor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
166,Which computer scientist won an oscar?,"SELECT ?scientist WHERE {
  ?scientist rdf:type dbo:Scientist .
  ?scientist dbo:award ?award .
  ?award rdf:type dbo:AcademyAward .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
160,Who wrote Harry Potter?,"SELECT ?author WHERE {
  dbr:Harry_Potter_(film_series) dbo:author ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
158,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer WHERE {
  ?writer dbo:occupation dbr:Writer .
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
157,Give me English actors starring in Lovesick.,"SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""Lovesick""@en .
  ?actor dbo:birthPlace ?place .
  ?place dbo:country dbr:England .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
155,What is the nick name of Baghdad?,"SELECT ?nickName WHERE {
  dbr:Baghdad foaf:nick ?nickName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
150,In which city was the president of Montenegro born?,"SELECT ?city WHERE {
  ?person dbo:birthPlace ?city .
  ?person dbp:title ""President of Montenegro""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
149,Which U.S. state has the highest population density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbo:populationDensity ?populationDensity .
} ORDER BY DESC(?populationDensity) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
25,What is the longest river in China?,"SELECT ?river ?length
WHERE {
  ?river dbo:country dbr:China ;
         dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
143,What is the area code of Berlin?,"SELECT ?areaCode WHERE {
  dbr:Berlin dbo:areaCode ?areaCode .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
140,How many scientists graduated from an Ivy League university?,"SELECT (COUNT(DISTINCT ?scientist) AS ?count) WHERE {
  ?scientist rdf:type dbo:Scientist .
  ?scientist dbo:almaMater ?university .
  ?university dct:subject dbc:Ivy_League_universities .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
139,Which professional surfers were born in Australia?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Australia .
  ?surfer rdf:type dbo:Surfer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
137,Give me all Dutch parties.,"SELECT ?party WHERE {
  ?party dbo:country dbr:Netherlands .
  ?party rdf:type dbo:PoliticalParty .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
136,How many moons does Mars have?,"SELECT ?moons WHERE {
  dbr:Mars dbp:satellites ?moons .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
134,What is Batman's real name?,"SELECT ?realName WHERE {
  dbr:Batman foaf:name ?realName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
132,What is Elon Musk famous for?,"SELECT ?knownFor WHERE {
  dbr:Elon_Musk dbo:knownFor ?knownFor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
128,Who is the author of WikiLeaks?,"SELECT ?author WHERE {
  dbr:WikiLeaks dbo:author ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
126,Sean Parnell was the governor of which U.S. state?,"SELECT ?state WHERE {
  ?state dbp:governor dbr:Sean_Parnell .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
125,How many years was the Ford Model T manufactured?,"SELECT (MAX(?endYear) - MIN(?startYear)) as ?manufactureYears
WHERE {
  ?car dbo:manufacturer dbr:Ford_Motor_Company .
  ?car rdfs:label ""Ford Model T""@en .
  ?car dbo:productionStartYear ?startYear .
  ?car dbo:productionEndYear ?endYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
124,When was Carlo Giuliani shot?,"SELECT ?date WHERE {
  dbr:Carlo_Giuliani dbo:deathDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
123,Give me all animals that are extinct.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?animal WHERE {
  ?animal dbo:extinct true .
  ?animal rdf:type dbo:Animal .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
122,Who was the wife of President Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
111,How many awards has Bertrand Russell?,"SELECT (COUNT(?award) AS ?count) WHERE {
  dbr:Bertrand_Russell dbp:awards ?award .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
117,Is Pamela Anderson a vegan?,"SELECT ?isVegan WHERE {
  dbr:Pamela_Anderson dbo:diet ?isVegan .
  FILTER (str(?isVegan) = ""Veganism"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
59,Which space probes were sent into orbit around the sun?,"SELECT ?probe WHERE {
  ?probe rdf:type dbo:SpaceProbe .
  ?probe dbo:orbit ?orbit .
  ?orbit rdfs:label ?orbitLabel .
  FILTER (lang(?orbitLabel) = 'en') .
  FILTER (regex(?orbitLabel, ""Sun"", ""i"")) .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
113,Which German cities have more than 250000 inhabitants?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  ?city dbo:country dbr:Germany .
  ?city dbo:populationTotal ?population .
  FILTER (?population > 250000)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
104,Who is the daughter of Robert Kennedy married to?,"SELECT ?spouse
WHERE {
  ?person dbo:parent <http://dbpedia.org/resource/Robert_F._Kennedy> .
  ?person dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
10,How many students does the Free University of Amsterdam have?,"SELECT ?numberOfStudents WHERE {
  dbr:Vrije_Universiteit_Amsterdam dbo:numberOfStudents ?numberOfStudents .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
1,What is the revenue of IBM?,"SELECT ?revenue WHERE {
  dbr:IBM dbo:revenue ?revenue .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
178,How many James Bond movies do exist?,"SELECT (COUNT(?movie) AS ?count) WHERE {
  ?movie dbo:series dbr:James_Bond_in_film.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
129,Who does the voice of Bart Simpson?,"SELECT ?actor WHERE {
  dbr:Bart_Simpson dbp:voice ?actor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
183,Who was Tom Hanks married to?,"SELECT ?spouseName WHERE {
  dbr:Tom_Hanks dbo:spouse ?spouse.
  ?spouse foaf:name ?spouseName.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
181,Through which countries does the Yenisei river flow?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Yenisei_River dbo:country ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
7,Give me all cars that are produced in Germany.,"SELECT ?car WHERE {
  ?car dbo:manufacturer ?manufacturer .
  ?manufacturer dbo:locationCountry dbr:Germany .
  ?car rdf:type dbo:Automobile .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
135,When did Michael Jackson die?,"SELECT ?deathDate WHERE {
  dbr:Michael_Jackson dbo:deathDate ?deathDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
50,What is the highest volcano in Africa?,"SELECT ?volcano ?elevation WHERE {
  ?volcano dbo:locatedInArea dbr:Africa ;
           rdf:type dbo:Volcano ;
           dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
39,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
GROUP BY ?poet
ORDER BY DESC(?bookCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
83,Give me all gangsters from the prohibition era.,"SELECT ?gangster WHERE {
  ?gangster dbo:occupation dbr:Gangster ;
            dbo:birthDate ?birthDate .
  FILTER (?birthDate >= ""1920-01-17""^^xsd:date && ?birthDate <= ""1933-12-05""^^xsd:date)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
71,Give me all spacecrafts that flew to Mars.,"SELECT ?spacecraft WHERE {
  ?spacecraft dbo:mission ?mission .
  ?mission dbo:target dbr:Mars .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
213,Show me all Czech movies.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?movie WHERE {
  ?movie dbo:country dbr:Czech_Republic .
  ?movie rdf:type dbo:Film .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
209,Give me all taikonauts.,"SELECT ?taikonaut WHERE {
  ?taikonaut dbo:occupation dbr:Taikonaut .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
105,Which countries have more than ten volcanoes?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country (COUNT(?volcano) AS ?volcanoCount)
WHERE {
  ?volcano dbo:mountainType ""volcano""^^rdfs:Literal ;
           dbo:location ?country .
  ?country a dbo:Country .
}
GROUP BY ?country
HAVING (COUNT(?volcano) > 10)","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
52,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?movie dbo:starring res:Tom_Cruise.
  ?movie rdf:type dbo:Film.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
102,When did Dracula's creator die?,"SELECT ?deathDate WHERE {
  ?person dbo:deathDate ?deathDate .
  ?person rdfs:label ""Bram Stoker""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
21,Who created English Wikipedia?,"SELECT ?creator
WHERE {
  dbr:Wikipedia dbo:founder ?creator .
  FILTER (langMatches(lang(?creator), ""EN""))
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
34,Give me all female German chancellors.,"SELECT ?chancellor WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
  ?chancellor dbo:gender dbr:Female .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
145,Who owns Aldi?,"SELECT ?owner 
WHERE { 
  dbr:Aldi dbp:founders ?owner . 
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
154,Which books were written by Danielle Steel?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
198,Who was influenced by Socrates?,"SELECT ?person WHERE {
  ?person dbo:influencedBy dbr:Socrates .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
162,How deep is Lake Chiemsee?,"SELECT ?depth WHERE {
  dbr:Lake_Chiemsee dbo:depth ?depth .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
212,Which companies work in the aerospace industry as well as in medicine?,"SELECT DISTINCT ?company WHERE {
  ?company rdf:type dbo:Company .
  ?company dbo:industry dbr:Aerospace .
  ?company dbo:industry dbr:Medicine .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
96,Which professional surfers were born on the Philippines?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Philippines .
  ?surfer rdf:type dbo:Surfer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
40,Who were the parents of Queen Victoria?,"SELECT ?parentName WHERE {
  dbr:Queen_Victoria dbo:parent ?parent.
  ?parent foaf:name ?parentName.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
79,Are there any castles in the United States?,"SELECT ?castle WHERE {
  ?castle dbo:country dbr:United_States ;
          rdf:type dbo:Castle .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
141,Which languages are spoken in Estonia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
80,Give me a list of all critically endangered birds.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bird WHERE {
  ?bird rdf:type dbo:Bird .
  ?bird dbo:conservationStatus dbr:Critically_Endangered .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
159,Which countries are connected by the Rhine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?countryLabel
WHERE {
  dbr:Rhine dbo:country ?country .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
107,Who was the father of Queen Elizabeth II?,"SELECT ?father WHERE {
  dbr:Elizabeth_II dbo:parent ?father .
  ?father dbo:gender dbr:Male .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
163,Give me all chemical elements.,"SELECT ?chemicalElement WHERE {
  ?chemicalElement dbo:wikiPageDisambiguates dbr:Chemical_element.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
211,Give me all American presidents of the last 20 years.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?president ?start ?end
WHERE {
  ?president dbo:office <http://dbpedia.org/resource/President_of_the_United_States> .
  ?president dbo:termPeriod ?term .
  ?term dbo:startDate ?start ;
        dbo:endDate ?end .
  FILTER (?start >= ""1996-10-01""^^xsd:date)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,"SELECT ?releaseDate WHERE {
  ?movie rdfs:label ""Worst Case Scenario""@en.
  ?movie dbo:releaseDate ?releaseDate.
  ?movie dbo:country dbr:Netherlands.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
144,Whom did Lance Bass marry?,"SELECT ?spouse
WHERE {
  dbr:Lance_Bass dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:TUI_Travel .
  ?subsidiary dbo:targetAirport dbr:Glasgow_Airport .
  ?subsidiary dbo:targetAirport dbr:Dublin_Airport .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
131,What languages are spoken in Pakistan?,"SELECT ?language WHERE {
  dbr:Pakistan dbo:officialLanguage ?language .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
120,Who is the daughter of Bill Clinton married to?,"SELECT ?spouse
WHERE {
  ?person dbo:child ?daughter .
  ?daughter dbo:spouse ?spouse .
  ?person foaf:name ""Bill Clinton""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
164,Who was on the Apollo 11 mission?,"SELECT ?crewMember WHERE {
  dbr:Apollo_11 dbp:crew ?crewMember .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
88,What is the wavelength of Indigo?,"SELECT ?wavelength WHERE {
  dbr:Indigo dbo:wavelength ?wavelength .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
151,Give me all B-sides of the Ramones.,"SELECT ?bSide WHERE {
  ?song dbo:artist dbr:Ramones ;
        dbo:bSide ?bSide .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
63,Who was called Scarface?,"SELECT ?person WHERE {
  ?person dbo:alias ""Scarface""@en.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
27,Which rivers flow into the North Sea?,"SELECT ?river WHERE {
  ?river dbo:mouth dbr:North_Sea .
  ?river rdf:type dbo:River .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
156,Where is Fort Knox located?,"SELECT ?location WHERE {
  dbr:Fort_Knox dbo:location ?location .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
207,Which daughters of British earls died at the same place they were born at?,"SELECT ?daughter WHERE {
  ?earl rdf:type dbo:Noble .
  ?earl dbo:country dbr:United_Kingdom .
  ?earl dbo:nobleTitle ?title .
  ?title rdf:type dbo:Earl .
  ?daughter dbo:parent ?earl .
  ?daughter dbo:birthPlace ?place .
  ?daughter dbo:deathPlace ?place .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
24,How many emperors did China have?,"SELECT (COUNT(?emperor) AS ?count) WHERE {
  ?emperor dbo:wikiPageRedirects dbr:Emperor_of_China .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
133,What are the names of the Teenage Mutant Ninja Turtles?,"SELECT ?name WHERE {
  ?turtle dbo:series dbr:Teenage_Mutant_Ninja_Turtles .
  ?turtle foaf:name ?name
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
103,Where does Piccadilly start?,"SELECT ?start WHERE {
  dbr:Piccadilly dbo:routeStart ?start .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
165,What is the name of the university where Obama's wife studied?,"SELECT ?university WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse .
  ?spouse dbo:almaMater ?university .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
108,When did Paraguay proclaim its independence?,"SELECT ?date WHERE {
  dbr:Paraguay dbo:foundingDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
15,How short is the shortest active NBA player?,"SELECT ?player ?height WHERE {
  ?player dbo:height ?height ;
          dbo:team ?team .
  ?team rdf:type dbo:BasketballTeam .
  ?player dbo:activeYearsEndYear ?endYear
  FILTER (?endYear >= 2016)
} ORDER BY ?height LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
45,Where did Abraham Lincoln die?,"SELECT ?deathPlace WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
82,When was Jack Wolfskin founded?,"SELECT ?foundingYear WHERE {
  dbr:Jack_Wolfskin dbo:foundingYear ?foundingYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
9,In which city is the headquarter of Air China?,"SELECT ?city WHERE {
  dbr:Air_China dbo:headquarter ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
201,What is the founding year of the brewery that produces Pilsner Urquell?,"SELECT ?foundingYear WHERE {
  ?brewery dbo:product dbr:Pilsner_Urquell ;
           dbo:foundingYear ?foundingYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
171,When did the Boston Tea Party take place?,"SELECT ?date WHERE {
  dbr:Boston_Tea_Party dbp:date ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
182,Which animals are critically endangered?,"SELECT ?animal WHERE {
  ?animal dbo:conservationStatus dbr:Critically_Endangered.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
13,Which politicians were married to a German?,"SELECT ?politician ?spouse
WHERE {
  ?politician dbo:spouse ?spouse .
  ?politician rdf:type dbo:Politician .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
114,How big is the earth's diameter?,"SELECT ?diameter WHERE {
  dbr:Earth dbo:diameter ?diameter .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
92,Is the wife of President Obama called Michelle?,"SELECT ?name WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse .
  ?spouse rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  FILTER (str(?name) = ""Michelle Obama"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
194,Which U.S. state has the abbreviation MN?,"SELECT ?state WHERE {
  ?state dbo:country dbr:United_States ;
         dbp:postalabbreviation ""MN"" .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
175,When did Muhammad die?,"SELECT ?deathDate WHERE {
  dbr:Muhammad dbo:deathDate ?deathDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
26,What is the atmosphere of the Moon composed of?,"SELECT ?atmosphereComposition WHERE {
  dbr:Moon dbp:atmosphereComposition ?atmosphereComposition .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
60,Who is the governor of Texas?,"SELECT ?person WHERE {
  dbr:Texas dbp:governor ?person .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
110,Which movies did Kurosawa direct?,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Akira_Kurosawa .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
206,What was the name of the famous battle in 1836 in San Antonio?,"SELECT ?battle WHERE {
  ?battle dbo:isPartOf <http://dbpedia.org/resource/San_Antonio>;
           dbo:date ""1836-01-01T00:00:00Z""^^xsd:dateTime.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
97,Give me the official websites of actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?website
WHERE {
  ?show dbo:starring ?actor .
  ?actor foaf:homepage ?website .
  ?show foaf:name ""Charmed""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
20,How many calories does a baguette have?,"SELECT ?calories
WHERE {
  dbr:Baguette dbp:calories ?calories .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
169,Give me all libraries established before 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library
WHERE {
  ?library dbo:established ?year .
  ?library rdf:type dbo:Library .
  FILTER (?year < ""1400""^^xsd:gYear)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
38,Give me all Frisian islands that belong to the Netherlands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island
WHERE {
  ?island dbo:isPartOf dbr:West_Frisian_Islands ;
          dbo:country dbr:Netherlands .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
192,Which museum exhibits The Scream by Munch?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?museum WHERE {
  ?artwork dbo:museum ?museum .
  ?artwork rdfs:label ""The Scream""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
78,When was the De Beers company founded?,"SELECT ?foundingYear WHERE {
  dbr:De_Beers dbo:foundingYear ?foundingYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
19,Who became president after JFK died?,"SELECT ?person WHERE {
  ?person dbo:office ""President of the United States"" .
  ?person dbp:presidentStart ?start .
  dbr:John_F._Kennedy dbo:deathDate ?death .
  FILTER (?start > ?death)
} 
ORDER BY ?start
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
190,Who are the parents of the wife of Juan Carlos I?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentName
WHERE {
  dbr:Juan_Carlos_I_of_Spain dbo:spouse ?wife .
  ?wife dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (lang(?parentName) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
174,Who is the novelist of the work a song of ice and fire?,"SELECT ?author WHERE {
  ?book rdfs:label ""A Song of Ice and Fire""@en.
  ?book dbo:author ?author.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
189,In which studio did the Beatles record their first album?,"SELECT ?studio WHERE {
  ?album dbo:artist dbr:The_Beatles .
  ?album dbo:releaseDate ?date .
  ?album dbp:studio ?studio .
} ORDER BY ?date LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
152,Which beer brewing companies are located in North-Rhine Westphalia?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Brewery ;
           dbo:location dbr:North_Rhine-Westphalia .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
94,When did princess Diana die?,"SELECT ?deathDate WHERE {
  dbr:Princess_Diana dbo:deathDate ?deathDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
8,Who founded Intel?,"SELECT ?founder WHERE {
  dbr:Intel dbp:founders ?founder .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
95,Who is the youngest player in the Premier League?,"SELECT ?player ?birthdate WHERE {
  ?player dbo:team ?team .
  ?team dbo:league dbr:Premier_League .
  ?player dbo:birthDate ?birthdate .
} ORDER BY DESC(?birthdate) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
119,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
115,How many rivers and lakes are in South Carolina?,"SELECT (COUNT(?lake) AS ?lakeCount) (COUNT(?river) AS ?riverCount) WHERE {
  { ?lake dbo:country dbr:South_Carolina . ?lake rdf:type dbo:Lake . }
  UNION
  { ?river dbo:country dbr:South_Carolina . ?river rdf:type dbo:River . }
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
116,Who was called Rodzilla?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER(LANG(?label) = ""en"") .
  FILTER(CONTAINS(LCASE(?label), ""rodzilla"")) .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
138,Give me the capitals of all countries in Africa.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?country ?capital
WHERE {
  ?country dct:subject dbc:Countries_in_Africa ;
           dbo:capital ?capital .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
177,Which bridges are of the same type as the Manhattan Bridge?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?bridge
WHERE {
  dbr:Manhattan_Bridge rdf:type ?type .
  ?bridge rdf:type ?type .
  FILTER (?bridge != dbr:Manhattan_Bridge)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
101,How many companies were founded by the founder of Facebook?,"SELECT COUNT(?company) WHERE {
  ?facebook dbo:foundingYear ?year .
  ?facebook rdfs:label ""Facebook""@en .
  ?facebook dbo:foundedBy ?founder .
  ?company dbo:foundedBy ?founder .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,"SELECT ?trail WHERE {
  ?trail dbo:location dbr:Grand_Canyon .
  ?trail rdf:type dbo:HikingTrail .
  OPTIONAL { ?trail dbp:hazards ?hazard . }
  FILTER (!BOUND(?hazard) || !STRSTARTS(STR(?hazard), ""Flash flood""))
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
87,Which book has the most pages?,"SELECT ?book ?pages
WHERE {
  ?book rdf:type dbo:Book .
  ?book dbo:numberOfPages ?pages .
}
ORDER BY DESC(?pages)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
148,What is the largest state in the United States?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbo:areaTotal ?area .
} ORDER BY DESC(?area) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
43,Give me the websites of companies with more than 500000 employees.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?company ?website
WHERE {
  ?company a dbo:Company ;
           dbo:numberOfEmployees ?employees ;
           foaf:homepage ?website .
  FILTER (?employees > 500000)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
179,What were the names of the three ships by Columbus?,"SELECT ?shipName WHERE {
  ?ship dbo:operator dbr:Christopher_Columbus.
  ?ship rdfs:label ?shipName.
  FILTER (lang(?shipName) = 'en')
} LIMIT 3","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
99,What is the time zone of Salt Lake City?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?timeZone WHERE {
  res:Salt_Lake_City dbo:timeZone ?timeZone .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
98,Who killed Caesar?,"SELECT ?person WHERE {
  ?person dbo:deathCause dbr:Assassination_of_Julius_Caesar.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
86,What is the highest mountain in Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:location <http://dbpedia.org/resource/Germany> .
  ?mountain dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
84,Which American presidents were in office during the Vietnam War?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?president ?start ?end WHERE {
  ?president dbo:office dbr:President_of_the_United_States .
  ?president dbo:termPeriod ?term .
  ?term dbo:activeYearsStartDate ?start .
  ?term dbo:activeYearsEndDate ?end .
  FILTER (?start <= ""1975-04-30""^^xsd:date && ?end >= ""1955-11-01""^^xsd:date)
} ORDER BY ?start","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
81,Butch Otter is the governor of which U.S. state?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  ?state dbo:leader ?person .
  ?person rdfs:label ""Butch Otter""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT (COUNT(?event) AS ?goldMedals) 
WHERE {
  ?event rdf:type dbo:Event .
  ?event dbo:goldMedalist dbr:Michael_Phelps .
  ?event dbo:year ""2008""^^xsd:gYear .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
66,Which artists were born on the same date as Rachel Stevens?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?rachel a dbo:MusicalArtist ;
          dbo:birthDate ?birthdate ;
          foaf:name ""Rachel Stevens""@en .
  ?artist a dbo:MusicalArtist ;
          dbo:birthDate ?birthdate .
  FILTER (?artist != ?rachel)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
64,What is the profession of Frank Herbert?,"SELECT ?profession WHERE {
  dbr:Frank_Herbert dbo:occupation ?profession .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
6,Are Taiko some kind of Japanese musical instrument?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label ?comment
WHERE {
  dbr:Taiko rdfs:label ?label ;
              rdfs:comment ?comment .
  FILTER (lang(?label) = 'en' && lang(?comment) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
56,How many seats does the home stadium of FC Porto have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?seats
WHERE {
  res:FC_Porto dbo:ground ?stadium .
  ?stadium dbo:seatingCapacity ?seats .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
49,Which frequent flyer program has the most airlines?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?program (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:frequentFlyer ?program .
} 
GROUP BY ?program
ORDER BY DESC(?count)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
44,Which European countries have a constitutional monarchy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?country WHERE {
  ?country dct:subject dbc:Countries_in_Europe .
  ?country dbo:governmentType ?government .
  FILTER (CONTAINS(str(?government), ""Constitutional monarchy""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
42,Which countries have places with more than two caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbo:location ?place .
  ?place dbo:country ?country .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 2)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
4,"Which airports are located in California, USA?","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport WHERE {
  ?airport dbo:location dbr:California .
  ?airport rdf:type dbo:Airport .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
37,What are the nicknames of San Francisco?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname
WHERE {
  ?city a dbo:Place ;
        rdfs:label ""San Francisco""@en ;
        dbp:nickname ?nickname .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
32,What is Angela Merkelâ€™s birth name?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  res:Angela_Merkel dbp:birthName ?birthName .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
31,Who is the mayor of Berlin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  res:Berlin dbp:leader ?mayor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
29,Which countries in the European Union adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro ;
           dbo:isPartOf dbr:European_Union .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
23,Which software has been published by Mean Hamster Software?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?software WHERE {
  ?software dbo:publisher dbr:Mean_Hamster_Software.
  ?software rdf:type dbo:Software.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
68,Which country was Bill Gates born in?,"SELECT ?country WHERE {
  dbr:Bill_Gates dbo:birthPlace ?place .
  ?place dbo:country ?country .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
22,How many grand-children did Jacques Cousteau have?,"SELECT (COUNT(?grandchild) AS ?count) WHERE {
  dbr:Jacques_Cousteau dbo:child ?child .
  ?child dbo:child ?grandchild .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
214,Give me all professional skateboarders from Sweden.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?skateboarder WHERE {
  ?skateboarder dbo:birthPlace dbr:Sweden .
  ?skateboarder dbo:occupation dbr:Skateboarding .
  ?skateboarder rdf:type foaf:Person .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
210,Which monarchs of the United Kingdom were married to a German?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?monarch ?spouse
WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch dbo:country dbr:United_Kingdom .
  ?monarch rdf:type dbo:Monarch .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
199,Give me all Argentine films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?film WHERE {
  ?film dct:subject dbc:Argentine_films.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
203,How did Michael Jackson die?,"SELECT ?causeOfDeath WHERE {
  dbr:Michael_Jackson dbo:deathCause ?causeOfDeath.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
197,Which U.S. state has been admitted latest?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?state WHERE {
  ?state dbo:country <http://dbpedia.org/resource/United_States> .
  ?state dbp:admittancedate ?date .
} ORDER BY DESC(?date) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
196,Which classes does the Millepede belong to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?class WHERE {
  ?millepede dbo:class ?class .
  ?millepede rdfs:label ""Millipede""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
188,Give me the homepage of Forbes.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?homepage 
WHERE { 
  ?company dbo:wikiPageID 32868 .
  ?company foaf:homepage ?homepage .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
187,Who is the husband of Amanda Palmer?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?husband WHERE {
  ?person dbo:spouse ?husband .
  ?person rdfs:label ""Amanda Palmer""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
176,Who painted The Storm on the Sea of Galilee?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  dbr:The_Storm_on_the_Sea_of_Galilee dbo:author ?artist .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
62,What is the highest place of Karakoram?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?place ?elevation
WHERE {
  ?place dbo:location dbr:Karakoram.
  ?place dbo:elevation ?elevation.
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
173,When did Finland join the EU?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?date WHERE {
  dbo:Finland dbp:accessioneudate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
168,Which actors play in Big Bang Theory?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  dbr:The_Big_Bang_Theory dbo:starring ?actorResource.
  ?actorResource rdfs:label ?actor.
  FILTER (lang(?actor) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
166,Which computer scientist won an oscar?,"SELECT ?person ?personLabel WHERE {
  ?person dbo:occupation dbr:Computer_scientist ;
          dbo:award dbr:Academy_Awards .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
160,Who wrote Harry Potter?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorName WHERE {
  ?book rdfs:label ""Harry Potter""@en.
  ?book dbo:author ?author.
  ?author rdfs:label ?authorName.
  FILTER (lang(?authorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
158,Give me all writers that won the Nobel Prize in literature.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer ?writerLabel WHERE {
  ?writer dbo:literaryGenre dbr:Nobel_Prize_in_Literature.
  ?writer rdfs:label ?writerLabel.
  FILTER (lang(?writerLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
157,Give me English actors starring in Lovesick.,"Based on the lexical entries provided, the SPARQL query to generate the response to the user's question would be:

```
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?film rdf:type dbo:Film .
  ?film rdfs:label ""Lovesick""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?place .
  ?place dbo:country dbr:England .
}
```

This query selects the actors (`?actor`) who starred in the film ""Lovesick"" and were born in England. The `dbo:birthPlace` property is used to determine the actor's birthplace, and the `dbo:country` property of the birthplace is checked to be England.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
155,What is the nick name of Baghdad?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickName WHERE {
  ?city a dbo:Place ;
        rdfs:label ""Baghdad""@en ;
        foaf:nick ?nickName .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
150,In which city was the president of Montenegro born?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  ?person dbo:birthPlace ?city .
  ?person dbp:title ""President of Montenegro""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
149,Which U.S. state has the highest population density?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?state WHERE {
  ?state dbo:country dbo:United_States .
  ?state dbo:populationDensity ?density .
} ORDER BY DESC(?density) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
25,What is the longest river in China?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River ;
         dbo:country dbr:China ;
         dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
143,What is the area code of Berlin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?areaCode WHERE {
  res:Berlin dbo:areaCode ?areaCode .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
140,How many scientists graduated from an Ivy League university?,"SELECT (COUNT(?scientist) AS ?count) WHERE {
  ?scientist rdf:type dbo:Scientist .
  ?scientist dbo:almaMater ?university .
  ?university dbo:wikiPageWikiLink dbr:Ivy_League .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
139,Which professional surfers were born in Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Australia .
  ?surfer rdf:type dbo:Surfer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
137,Give me all Dutch parties.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?party WHERE {
  ?party dct:subject dbc:Political_parties_in_the_Netherlands .
  ?party rdf:type dbo:PoliticalParty .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
136,How many moons does Mars have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?moons
WHERE {
  ?planet rdfs:label ""Mars""@en.
  ?planet dbp:satellites ?moons.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
134,What is Batman's real name?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?real_name WHERE {
  ?batman dbo:wikiPageRedirects <http://dbpedia.org/resource/Batman>.
  ?batman foaf:name ?real_name.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
132,What is Elon Musk famous for?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?knownFor
WHERE {
  ?person dbo:knownFor ?knownFor .
  ?person rdfs:label ""Elon Musk""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
128,Who is the author of WikiLeaks?,"SELECT ?author WHERE {
  dbr:WikiLeaks dbo:founder ?author .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
126,Sean Parnell was the governor of which U.S. state?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  ?person rdfs:label ""Sean Parnell""@en .
  ?state dbp:governor ?person .
  ?state a dbo:Place .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
125,How many years was the Ford Model T manufactured?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT (MAX(?endYear) - MIN(?startYear) as ?manufactureYears)
WHERE {
  res:Ford_Model_T dbo:productionStartYear ?startYear .
  res:Ford_Model_T dbo:productionEndYear ?endYear .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
124,When was Carlo Giuliani shot?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Carlo_Giuliani dbo:deathDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
123,Give me all animals that are extinct.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?animal WHERE {
  ?animal dbo:extinct dbr:True .
  ?animal rdf:type dbo:Animal .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
122,Who was the wife of President Lincoln?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name WHERE {
  res:Abraham_Lincoln dbo:spouse ?spouse.
  ?spouse foaf:name ?name.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
111,How many awards has Bertrand Russell?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT (COUNT(?award) AS ?count)
WHERE {
  ?person rdfs:label ""Bertrand Russell""@en .
  ?person dbp:awards ?award .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
117,Is Pamela Anderson a vegan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?isVegan WHERE {
  res:Pamela_Anderson dbo:diet ?diet.
  ?diet rdfs:label ?isVegan.
  FILTER (lang(?isVegan) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
59,Which space probes were sent into orbit around the sun?,"SELECT ?spaceProbe WHERE {
  ?spaceProbe dbo:type dbr:Space_probe ;
              dbo:orbit ?orbit .
  FILTER (str(?orbit) = ""Sun"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
113,Which German cities have more than 250000 inhabitants?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?city WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:isPartOf dbr:Germany .
  ?city dbo:populationTotal ?population .
  FILTER (?population > 250000)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
104,Who is the daughter of Robert Kennedy married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  dbr:Robert_F._Kennedy dbo:child ?daughter .
  ?daughter dbo:spouse ?spouse .
  ?spouse rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
10,How many students does the Free University of Amsterdam have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?numberOfStudents WHERE {
  res:Vrije_Universiteit_Amsterdam dbo:numberOfStudents ?numberOfStudents .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
1,What is the revenue of IBM?,"SELECT ?revenue WHERE {
  dbr:IBM dbo:revenue ?revenue .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
178,How many James Bond movies do exist?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?movie) AS ?count)
WHERE {
  ?movie dbo:series dbr:James_Bond_in_film.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
129,Who does the voice of Bart Simpson?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?character rdfs:label ""Bart Simpson""@en.
  ?character dbp:voice ?actor.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
183,Who was Tom Hanks married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?spouse
WHERE {
  res:Tom_Hanks dbo:spouse ?spouse .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
181,Through which countries does the Yenisei river flow?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  dbr:Yenisei_River dbp:country ?countryResource.
  ?countryResource rdfs:label ?country.
  FILTER (lang(?country) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
7,Give me all cars that are produced in Germany.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?car WHERE {
  ?car dbo:manufacturer ?manufacturer .
  ?manufacturer dbo:locationCountry dbr:Germany .
  ?car rdf:type dbo:Automobile .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
135,When did Michael Jackson die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?deathDate WHERE {
  res:Michael_Jackson dbo:deathDate ?deathDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
50,What is the highest volcano in Africa?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?volcano ?elevation
WHERE {
  ?volcano rdf:type dbo:Volcano ;
           dbo:location <http://dbpedia.org/resource/Africa> ;
           dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
39,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
ORDER BY DESC(?bookCount)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
83,Give me all gangsters from the prohibition era.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?gangster WHERE {
  ?gangster dct:subject dbc:Prohibition-era_gangsters .
  ?gangster dbo:occupation dbc:Gangsters .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
71,Give me all spacecrafts that flew to Mars.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spacecraft WHERE {
  ?spacecraft dbo:mission ?mission .
  ?mission dbo:destination dbr:Mars .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
213,Show me all Czech movies.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?label
WHERE {
  ?movie dbo:country dbr:Czech_Republic .
  ?movie rdf:type dbo:Film .
  ?movie rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
209,Give me all taikonauts.,"SELECT ?taikonaut WHERE {
  ?taikonaut rdf:type dbo:Astronaut .
  ?taikonaut dbo:nationality dbr:China .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
105,Which countries have more than ten volcanoes?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country (COUNT(?volcano) AS ?volcanoCount)
WHERE {
  ?volcano rdf:type dbo:Volcano .
  ?volcano dbo:location ?country .
  ?country rdf:type dbo:Country .
}
GROUP BY ?country
HAVING (COUNT(?volcano) > 10)
ORDER BY DESC(?volcanoCount)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
52,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise .
  ?movie rdf:type dbo:Film .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
102,When did Dracula's creator die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?deathDate WHERE {
  res:Bram_Stoker dbo:deathDate ?deathDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
21,Who created English Wikipedia?,"SELECT ?creator WHERE {
  dbr:Wikipedia dbo:creator ?creator .
  FILTER (langMatches(lang(?creator), ""EN""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
34,Give me all female German chancellors.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT DISTINCT ?chancellor ?name WHERE {
  ?chancellor rdf:type dbo:Person .
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
  ?chancellor dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
  ?chancellor foaf:gender ""female""@en .
  ?chancellor rdfs:label ?name .
  FILTER (lang(?name) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
145,Who owns Aldi?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?founder WHERE {
  ?company rdfs:label ""Aldi""@en .
  ?company dbp:founders ?founder .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
154,Which books were written by Danielle Steel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
  ?book rdf:type dbo:Book .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
198,Who was influenced by Socrates?,"SELECT ?person ?personLabel WHERE {
  ?person dbo:influencedBy dbr:Socrates.
  OPTIONAL {
    ?person rdfs:label ?personLabel.
    FILTER (lang(?personLabel) = 'en')
  }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
162,How deep is Lake Chiemsee?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?depth WHERE {
  res:Lake_Chiemsee dbo:depth ?depth .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
212,Which companies work in the aerospace industry as well as in medicine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?company WHERE {
  ?company rdf:type dbo:Company .
  ?company dbo:industry dbr:Aerospace .
  ?company dbo:industry dbr:Medicine .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
96,Which professional surfers were born on the Philippines?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Philippines .
  ?surfer rdf:type dbo:Surfer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
40,Who were the parents of Queen Victoria?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentName WHERE {
  dbr:Queen_Victoria dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (lang(?parentName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
79,Are there any castles in the United States?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?castle ?name WHERE {
  ?castle dbo:location dbr:United_States .
  ?castle dbo:buildingType dbr:Castle .
  ?castle rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
141,Which languages are spoken in Estonia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language WHERE {
  ?language dbo:spokenIn <http://dbpedia.org/resource/Estonia> .
  ?language rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
80,Give me a list of all critically endangered birds.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bird WHERE {
  ?bird dbo:status dbr:Critically_Endangered.
  ?bird rdf:type dbo:Bird.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
159,Which countries are connected by the Rhine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country 
WHERE {
  dbr:Rhine dbp:country ?countryResource.
  ?countryResource dbo:abstract ?country.
  FILTER (lang(?country) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
107,Who was the father of Queen Elizabeth II?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?queen dbo:parent ?father .
  ?queen rdfs:label ""Elizabeth II""@en .
  ?father dbo:royalty ?royalty .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
163,Give me all chemical elements.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?chemicalElement WHERE {
  ?chemicalElement dbo:wikiPageDisambiguates ?element .
  ?element rdf:type dbo:ChemicalElement .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
211,Give me all American presidents of the last 20 years.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?president ?start ?end
WHERE {
  ?president dbo:office <http://dbpedia.org/resource/President_of_the_United_States> .
  ?president dbo:termPeriod ?term .
  ?term dbo:startDate ?start .
  ?term dbo:endDate ?end .
  FILTER (?start >= ""1996-10-01""^^xsd:date)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,"SELECT ?releaseDate WHERE {
  dbr:Worst_Case_Scenario_(film) dbo:releaseDate ?releaseDate .
  FILTER (langMatches(lang(?releaseDate), ""NL""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
144,Whom did Lance Bass marry?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?spouse
WHERE {
  res:Lance_Bass dbo:spouse ?spouse .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:TUI_Travel .
  ?subsidiary dbo:targetAirport dbr:Glasgow_Airport .
  ?subsidiary dbo:targetAirport dbr:Dublin_Airport .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
131,What languages are spoken in Pakistan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language
WHERE {
  dbr:Pakistan dbo:officialLanguage ?lang .
  ?lang rdfs:label ?language .
  FILTER (lang(?language) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
120,Who is the daughter of Bill Clinton married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Bill_Clinton dbo:child ?child .
  ?child dbo:spouse ?spouse .
  ?spouse rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
164,Who was on the Apollo 11 mission?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?crewMember
WHERE {
  dbr:Apollo_11 dbp:crewMembers ?crewMember
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
88,What is the wavelength of Indigo?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?wavelength WHERE {
  ?indigo dbo:wavelength ?wavelength .
  ?indigo rdfs:label ""Indigo""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
151,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bSide
WHERE {
  ?song dbo:artist dbr:Ramones ;
        dbo:bSide ?bSide .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
63,Who was called Scarface?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name
WHERE {
  ?person dbo:alias ""Scarface""@en.
  ?person rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
27,Which rivers flow into the North Sea?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?river ?riverLabel WHERE {
  ?river dbo:mouth dbr:North_Sea .
  ?river rdfs:label ?riverLabel .
  FILTER (lang(?riverLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
156,Where is Fort Knox located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?location WHERE {
  ?fort a dbo:Place ;
        rdfs:label ""Fort Knox""@en ;
        dbo:location ?location .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
207,Which daughters of British earls died at the same place they were born at?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?daughter ?place
WHERE {
  ?daughter dbo:parent ?parent .
  ?parent dbo:title ?title .
  ?title rdfs:label ?label .
  FILTER (lang(?label) = ""en"") .
  FILTER (contains(?label, ""Earl"")) .
  ?daughter dbo:birthPlace ?place .
  ?daughter dbo:deathPlace ?place .
  ?daughter rdfs:label ?name .
  FILTER (lang(?name) = ""en"") .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
24,How many emperors did China have?,"SELECT (COUNT(?emperor) AS ?count) WHERE {
  ?emperor dbo:wikiPageRedirects dbr:Emperor_of_China .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
133,What are the names of the Teenage Mutant Ninja Turtles?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name WHERE {
  ?turtle dbo:series <http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles> .
  ?turtle foaf:givenName ?name .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
103,Where does Piccadilly start?,"SELECT ?start WHERE {
  dbr:Piccadilly dbo:routeStart ?start .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
165,What is the name of the university where Obama's wife studied?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?universityName WHERE {
  res:Barack_Obama dbo:spouse ?spouse .
  ?spouse dbo:almaMater ?university .
  ?university rdfs:label ?universityName .
  FILTER (lang(?universityName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
108,When did Paraguay proclaim its independence?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Paraguay dbo:foundingDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
15,How short is the shortest active NBA player?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player ?height
WHERE {
  ?player dbo:height ?height .
  ?player dbo:team ?team .
  ?team a dbo:BasketballTeam .
  ?player dbo:careerStart ?start .
  FILTER (?start >= ""2016-10-01""^^xsd:date) .
}
ORDER BY ASC(?height)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
45,Where did Abraham Lincoln die?,"SPARQL Query:
```
SELECT ?deathPlace WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
82,When was Jack Wolfskin founded?,"The SPARQL query to find when Jack Wolfskin was founded would be:

```
SELECT ?foundingYear WHERE {
  dbr:Jack_Wolfskin dbo:foundingYear ?foundingYear .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
9,In which city is the headquarter of Air China?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?city WHERE {
  dbr:Air_China dbo:location ?city .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
201,What is the founding year of the brewery that produces Pilsner Urquell?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?foundingYear WHERE {
  ?brewery dbo:product dbr:Pilsner_Urquell ;
           dbo:foundingYear ?foundingYear .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
171,When did the Boston Tea Party take place?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?date
WHERE {
  <http://dbpedia.org/resource/Boston_Tea_Party> dbp:date ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
182,Which animals are critically endangered?,"SELECT ?animal WHERE {
  ?animal rdf:type dbo:Species .
  ?animal dbo:conservationStatus dbr:Critically_Endangered .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
13,Which politicians were married to a German?,"SELECT ?politician ?politicianLabel WHERE {
  ?politician dbo:spouse ?spouse .
  ?politician rdf:type dbo:Politician .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
114,How big is the earth's diameter?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?diameter
WHERE {
  res:Earth dbo:diameter ?diameter .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
92,Is the wife of President Obama called Michelle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name
WHERE {
  dbo:Barack_Obama dbo:spouse ?spouse .
  ?spouse rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
194,Which U.S. state has the abbreviation MN?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?state WHERE {
  ?state dbo:country <http://dbpedia.org/resource/United_States> ;
         dbp:postalabbreviation ""MN"" .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
175,When did Muhammad die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?deathDate WHERE {
  res:Muhammad dbo:deathDate ?deathDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
26,What is the atmosphere of the Moon composed of?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?atmosphereComposition WHERE {
  dbr:Moon dbp:atmosphereComposition ?atmosphereComposition .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
60,Who is the governor of Texas?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  dbr:Texas dbp:governor ?governor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
110,Which movies did Kurosawa direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?movieLabel WHERE {
  ?movie dbo:director dbr:Akira_Kurosawa .
  ?movie rdfs:label ?movieLabel .
  FILTER (lang(?movieLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
206,What was the name of the famous battle in 1836 in San Antonio?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battle WHERE {
  ?battle dbo:isPartOf <http://dbpedia.org/resource/San_Antonio> ;
          dbo:date ""1836-01-01""^^xsd:date ;
          a dbo:MilitaryConflict .
  ?battle rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
97,Give me the official websites of actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?website
WHERE {
  ?show rdfs:label ""Charmed""@en.
  ?show dbo:starring ?actor.
  ?actor foaf:homepage ?website.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
20,How many calories does a baguette have?,"SELECT ?calories
WHERE {
  dbr:Baguette dbp:calories ?calories .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
169,Give me all libraries established before 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library WHERE {
  ?library rdf:type dbo:Library .
  ?library dbp:established ?year .
  FILTER (?year < ""1400""^^xsd:gYear)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
38,Give me all Frisian islands that belong to the Netherlands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island WHERE {
  ?island dbo:isPartOf dbr:West_Frisian_Islands ;
          dbo:country dbr:Netherlands .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
192,Which museum exhibits The Scream by Munch?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?museum WHERE {
  ?artwork dbo:museum ?museum .
  ?artwork rdfs:label ""The Scream""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
78,When was the De Beers company founded?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?foundingYear WHERE {
  res:De_Beers dbo:foundingYear ?foundingYear .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
19,Who became president after JFK died?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?start
WHERE {
  ?jfk dbo:deathDate ?deathDate .
  ?jfk rdfs:label ""John F. Kennedy""@en .
  ?person dbp:presidentStart ?start .
  FILTER (?start > ?deathDate)
}
ORDER BY ?start
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
190,Who are the parents of the wife of Juan Carlos I?,"The SPARQL query for the question ""Who are the parents of the wife of Juan Carlos I?"" would be:

```
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentName WHERE {
  res:Juan_Carlos_I_of_Spain dbo:spouse ?wife .
  ?wife dbo:parent ?parent .
  ?parent foaf:name ?parentName .
}
```

This query first finds the spouse (wife) of Juan Carlos I, then finds the parents of that spouse, and finally retrieves the names of those parents.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
174,Who is the novelist of the work a song of ice and fire?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorName WHERE {
  ?work rdfs:label ""A Song of Ice and Fire""@en.
  ?work dbo:author ?author.
  ?author rdfs:label ?authorName.
  FILTER (lang(?authorName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
189,In which studio did the Beatles record their first album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?studio WHERE {
  ?album dbo:artist dbr:The_Beatles .
  ?album dbo:releaseDate ?date .
  ?album dbp:studio ?studio .
} ORDER BY ?date LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
152,Which beer brewing companies are located in North-Rhine Westphalia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?companyLabel WHERE {
  ?company dbo:industry dbr:Brewery ;
           dbo:location dbr:North_Rhine-Westphalia .
  ?company rdfs:label ?companyLabel .
  FILTER (lang(?companyLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
94,When did princess Diana die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Princess_Diana dbo:deathDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
8,Who founded Intel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?founderName WHERE {
  dbo:Intel dbp:founders ?founder .
  ?founder rdfs:label ?founderName .
  FILTER (lang(?founderName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
95,Who is the youngest player in the Premier League?,"SELECT ?player ?birthDate WHERE {
  ?player dbo:team ?team .
  ?team dbo:league dbr:Premier_League .
  ?player dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
119,Which instruments does Cat Stevens play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrumentLink.
  ?instrumentLink rdfs:label ?instrument.
  FILTER (lang(?instrument) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
115,How many rivers and lakes are in South Carolina?,"The SPARQL queries to answer the question ""How many rivers and lakes are in South Carolina?"" would be:

For rivers:

```
SELECT (COUNT(?river) AS ?count) 
WHERE {
  ?river dbo:isPartOf dbr:South_Carolina .
  ?river rdf:type dbo:River .
}
```

For lakes:

```
SELECT (COUNT(?lake) AS ?count) 
WHERE {
  ?lake dbo:isPartOf dbr:South_Carolina .
  ?lake rdf:type dbo:Lake .
}
```

These queries count the number of resources that are part of South Carolina and are of type River or Lake, respectively.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
116,Who was called Rodzilla?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name WHERE {
  ?person rdfs:label ?name .
  ?person foaf:nick ""Rodzilla""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
138,Give me the capitals of all countries in Africa.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?capital
WHERE {
  ?country dct:subject dbc:Countries_in_Africa ;
           dbo:capital ?capital .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
177,Which bridges are of the same type as the Manhattan Bridge?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bridge WHERE {
  dbr:Manhattan_Bridge dbo:bridgeType ?type .
  ?bridge dbo:bridgeType ?type .
  FILTER (?bridge != dbr:Manhattan_Bridge)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
101,How many companies were founded by the founder of Facebook?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT (COUNT(?company) AS ?count)
WHERE {
  ?person dbo:founded dbr:Facebook .
  ?company dbo:foundingPerson ?person .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,"I'm sorry, but DBpedia does not contain specific information about the danger of flash floods on hiking trails in the Grand Canyon. Therefore, it's not possible to create a SPARQL query for this specific request. However, you can find general information about hiking trails in the Grand Canyon with the following SPARQL query:

```
SELECT ?hikingTrail WHERE {
  ?hikingTrail dbo:location dbr:Grand_Canyon.
  ?hikingTrail rdf:type dbo:HikingTrail.
}
```

This query will return all hiking trails located in the Grand Canyon according to the DBpedia database. For detailed and up-to-date information about the danger of flash floods on these trails, I recommend checking the official website or contacting the park's information center directly.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
87,Which book has the most pages?,"SELECT ?book ?pages
WHERE {
  ?book rdf:type dbo:Book .
  ?book dbo:numberOfPages ?pages .
}
ORDER BY DESC(?pages)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
148,What is the largest state in the United States?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:isPartOf <http://dbpedia.org/resource/United_States> .
  ?state dbo:areaTotal ?area .
} ORDER BY DESC(?area) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
43,Give me the websites of companies with more than 500000 employees.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?company ?website
WHERE {
  ?company dbo:numberOfEmployees ?employees .
  ?company foaf:homepage ?website .
  FILTER (?employees > 500000)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
179,What were the names of the three ships by Columbus?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?shipName WHERE {
  dbr:Christopher_Columbus dbo:ship ?ship .
  ?ship rdfs:label ?shipName .
  FILTER (lang(?shipName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
