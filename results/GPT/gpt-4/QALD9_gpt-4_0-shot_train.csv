id,question,sparql,prompt
1,List all boardgames by GMT.,"SELECT ?boardgame WHERE {
  ?boardgame dbo:publisher dbr:GMT_Games.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
2,Who developed Skype?,"SELECT ?developer WHERE {
  dbr:Skype dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
3,Which people were born in Heraklion?,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person rdf:type dbo:Person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
4,In which U.S. state is Area 51 located?,"SELECT ?state WHERE {
  dbr:Area_51 dbo:location ?state .
  ?state dct:subject dbc:States_of_the_United_States .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
5,Who is the mayor of New York City?,"SELECT ?mayor WHERE {
  dbr:New_York_City dbo:mayor ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
6,Which countries have places with more than two caves?,"SELECT DISTINCT ?country WHERE {
  ?place dbo:country ?country ;
         dbo:type dbr:Cave .
  {
    SELECT ?place WHERE {
      ?place dbo:type dbr:Cave .
    } GROUP BY ?place HAVING (COUNT(?place) > 2)
  }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
7,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
8,Which airports does Air China serve?,"SELECT ?airport WHERE {
  ?airport dbo:operator dbr:Air_China.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
9,Give me all actors starring in movies directed by and starring William Shatner.,"SELECT DISTINCT ?actor WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
10,What are the official languages of the Philippines?,"SELECT ?officialLanguage WHERE {
  dbr:Philippines dbo:officialLanguage ?officialLanguage
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
11,Give me all Danish films.,"SELECT ?film WHERE {
  ?film dbo:country dbr:Denmark .
  ?film rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Brad_Pitt .
  ?movie dbo:director dbr:Guy_Ritchie .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
13,Give me the grandchildren of Bruce Lee.,"SELECT ?grandchild WHERE {
  ?person dbo:birthName ""Bruce Lee""@en.
  ?child dbo:parent ?person.
  ?grandchild dbo:parent ?child.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
14,Which other weapons did the designer of the Uzi develop?,"SELECT ?weapon WHERE {
  ?weapon dbo:designer ?designer .
  dbr:Uzi dbo:designer ?designer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
15,Who is the owner of Universal Studios?,"SELECT ?owner WHERE {
  dbr:Universal_Studios dbo:owner ?owner .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
16,Which state of the USA has the highest population density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:populationDensity ?populationDensity.
} ORDER BY DESC(?populationDensity) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
17,Which monarchs were married to a German?,"SELECT ?monarch ?monarchLabel WHERE {
  ?monarch dbo:spouse ?spouse .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
  ?monarch dbo:occupation dbr:Monarch .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
18,Which organizations were founded in 1950?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear 1950 .
  ?organization rdf:type dbo:Organisation .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
19,Who created the comic Captain America?,"SELECT ?creator WHERE {
  dbr:Captain_America dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
20,Give me the Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
21,Who wrote the book The pillars of the Earth?,"SELECT ?author WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
22,Which state of the United States of America has the highest density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:populationDensity ?density.
} ORDER BY DESC(?density) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
23,Which spaceflights were launched from Baikonur?,"SELECT ?spaceflight WHERE {
  ?spaceflight dbo:launchSite dbr:Baikonur_Cosmodrome.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
24,Give me a list of all trumpet players that were bandleaders.,"SELECT ?person WHERE {
  ?person dbo:instrument dbr:Trumpet .
  ?person dbo:occupation dbr:Bandleader .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
25,Which U.S. states are in the same timezone as Utah?,"SELECT ?state WHERE {
  ?state dbo:country dbr:United_States .
  ?state dbo:timeZone ?timezone .
  dbr:Utah dbo:timeZone ?utahTimezone .
  FILTER(?timezone = ?utahTimezone)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
26,Which U.S. states possess gold minerals?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:gold ?gold.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
27,Who is the daughter of Ingrid Bergman married to?,"SELECT ?spouse WHERE {
  ?person dbo:parent dbr:Ingrid_Bergman .
  ?person dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
28,How deep is Lake Placid?,"SELECT ?depth WHERE {
  dbr:Lake_Placid_(New_York) dbo:depth ?depth .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
29,Show me all museums in London.,"SELECT ?museum WHERE {
  ?museum dbo:location dbr:London .
  ?museum rdf:type dbo:Museum .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
30,Which caves have more than 3 entrances?,"SELECT ?cave WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbo:numberOfEntrances ?entrances .
  FILTER(?entrances > 3)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
31,Who is the tallest player of the Atlanta Falcons?,"SELECT ?player ?height WHERE {
  ?player dbo:team :Atlanta_Falcons .
  ?player dbo:height ?height .
} ORDER BY DESC(?height) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
32,What are the top-10 action role-playing video games according to IGN?,"SELECT ?game ?IGN_rating
WHERE {
  ?game rdf:type dbo:VideoGame ;
        dbo:genre dbr:Action_role-playing_game ;
        dbo:rating ?IGN_rating .
  OPTIONAL { ?game dbp:ign ?IGN_rating . }
}
ORDER BY DESC(?IGN_rating)
LIMIT 10",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
33,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer ?writerLabel WHERE {
  ?writer dbo:award dbr:Nobel_Prize_in_Literature.
  ?writer rdf:type dbo:Writer.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
34,Show me all basketball players that are higher than 2 meters.,"SELECT ?player WHERE {
  ?player dbo:height ?height .
  ?player rdf:type dbo:BasketballPlayer .
  FILTER (?height > 2.0)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
35,When was the Statue of Liberty built?,"SELECT ?date WHERE {
  dbr:Statue_of_Liberty dbo:completionDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
36,Which states border Illinois?,"SELECT ?state WHERE {
  dbr:Illinois dbo:border ?state .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
37,Who developed Minecraft?,"SELECT ?developer WHERE {
  dbr:Minecraft dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
38,Where did Hillel Slovak die?,"SELECT ?place WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
39,What movies does Jesse Eisenberg play in?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
40,Give all swimmers that were born in Moscow.,"SELECT ?swimmer WHERE {
  ?swimmer dbo:birthPlace dbr:Moscow .
  ?swimmer rdf:type dbo:Swimmer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
41,Give me all cosmonauts.,"SELECT ?cosmonaut WHERE {
  ?cosmonaut dbo:occupation dbr:Cosmonaut.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
42,Give me all Swiss non-profit organizations.,"SELECT ?organization WHERE {
  ?organization dbo:country dbr:Switzerland .
  ?organization rdf:type dbo:Non-ProfitOrganisation .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
43,Which presidents were born in 1945?,"SELECT ?president WHERE {
  ?president dbo:birthYear 1945 .
  ?president rdf:type dbo:President .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
44,What kind of music did Lou Reed play?,"SELECT ?genre WHERE {
  dbr:Lou_Reed dbo:genre ?genre .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
45,Where do the Red Sox play?,"SELECT ?stadium WHERE {
  dbr:Boston_Red_Sox dbo:ground ?stadium .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
46,Show a list of soccer clubs that play in the Bundesliga.,"SELECT ?club WHERE {
  ?club dbo:league dbr:Bundesliga.
  ?club rdf:type dbo:SoccerClub.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
47,Which volcanos in Japan erupted since 2000?,"SELECT ?volcano ?eruptionDate WHERE {
  ?volcano dbo:country dbr:Japan;
           rdf:type dbo:Volcano;
           dbo:eruption ?eruption.
  ?eruption dbo:eruptionDate ?eruptionDate.
  FILTER (?eruptionDate >= ""2000-01-01""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
48,Which bridges cross the Seine?,"SELECT ?bridge WHERE {
  ?bridge dbo:crosses dbr:Seine.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
49,What is the official color of the University of Oxford?,"SELECT ?officialColor WHERE {
  dbr:University_of_Oxford dbo:colour ?officialColor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
50,How many films did Hal Roach produce?,"SELECT COUNT(?film) WHERE {
  ?film dbo:producer dbr:Hal_Roach.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
51,Give me all Danish movies.,"SELECT ?movie WHERE {
  ?movie dbo:country dbr:Denmark .
  ?movie rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count) WHERE {
  ?person dbo:deathCause ?causeOfDeath .
} 
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
53,Who are the four youngest MVP basketball players?,"SELECT ?player ?age WHERE {
  ?player dbo:award dbr:NBA_Most_Valuable_Player_Award .
  ?player dbo:birthDate ?birthDate .
  BIND(year(now()) - year(?birthDate) AS ?age)
} ORDER BY ?age LIMIT 4",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
54,Give me all companies in Munich.,"SELECT ?company WHERE {
  ?company dbo:location dbr:Munich .
  ?company rdf:type dbo:Company .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
55,Give me the capitals of all countries that the Himalayas run through.,"SELECT ?country ?capital WHERE {
  ?mountain dbo:range ?country .
  ?country dbo:capital ?capital .
  FILTER (str(?mountain) = ""Himalayas"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
56,How many movies did Park Chan-wook direct?,"SELECT COUNT(?movie) WHERE {
  ?movie dbo:director dbr:Park_Chan-wook .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
57,Which rivers flow into a German lake?,"SELECT ?river WHERE {
  ?river dbo:mouth ?lake .
  ?lake dbo:country dbr:Germany .
  ?river rdf:type dbo:River .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
58,How many airlines are there?,"SELECT (COUNT(DISTINCT ?airline) AS ?count) WHERE {
  ?airline rdf:type dbo:Airline .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
59,Give me all islands that belong to Japan.,"SELECT ?island WHERE {
  ?island dbo:country dbr:Japan.
  ?island rdf:type dbo:Island.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
60,How many inhabitants does Maribor have?,"SELECT ?population WHERE {
  dbr:Maribor dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
61,Give me all Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
62,Which companies have more than 1 million employees?,"SELECT ?company WHERE {
  ?company dbo:numberOfEmployees ?employees .
  FILTER(?employees > 1000000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
63,In which films directed by Garry Marshall was Julia Roberts starring?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Garry_Marshall .
  ?film dbo:starring dbr:Julia_Roberts .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
64,Give me all soccer clubs in the Premier League.,"SELECT ?club WHERE {
  ?club dbo:league dbr:Premier_League .
  ?club rdf:type dbo:SoccerClub .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
65,What is the highest place of the Urals?,"SELECT ?place ?elevation
WHERE {
  ?place dbo:mountainRange dbr:Ural_Mountains.
  ?place dbo:elevation ?elevation.
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
66,Who is the governor of Wyoming?,"SELECT ?governor WHERE {
  dbr:Wyoming dbo:leader ?governor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
67,Where did the architect of the Eiffel Tower study?,"SELECT ?university WHERE {
  ?person dbo:knownFor dbr:Eiffel_Tower .
  ?person dbo:almaMater ?university .
  ?person rdf:type dbo:Architect .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
68,Give me all world heritage sites designated within the past two years.,"SELECT ?site WHERE {
  ?site rdf:type yago:WorldHeritageSitesInCountry108223802 .
  ?site dbp:year ?year .
  FILTER (?year >= 2014 && ?year <= 2016)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
69,Give me all actors who were born in Paris after 1950.,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Paris .
  ?actor dbo:birthDate ?date .
  ?actor rdf:type dbo:Actor .
  FILTER (?date > ""1950-01-01""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
70,Which movies star both Liz Taylor and Richard Burton?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor .
  ?movie dbo:starring dbr:Richard_Burton .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
71,Give me all Australian nonprofit organizations.,"SELECT ?organization WHERE {
  ?organization dbo:country dbr:Australia .
  ?organization rdf:type dbo:Non-ProfitOrganisation .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
72,Which pope succeeded John Paul II?,"SELECT ?successor WHERE {
  dbpedia:John_Paul_II dbo:successor ?successor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
73,Give me all ESA astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dct:subject dbc:European_astronauts .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
74,Who was president of Pakistan in 1978?,"SELECT ?person WHERE {
  ?person dbo:office ?office .
  ?office rdfs:label ?officeLabel .
  FILTER (lang(?officeLabel) = 'en' && regex(?officeLabel, ""President of Pakistan"", ""i"")) .
  ?person dbo:termPeriod ?term .
  ?term dbo:startDate ?start .
  ?term dbo:endDate ?end .
  FILTER (?start <= ""1978-12-31""^^xsd:date && ?end >= ""1978-01-01""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
75,Who is the owner of Rolls-Royce?,"SELECT ?owner WHERE {
  dbr:Rolls-Royce_Motor_Cars dbo:owner ?owner .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
76,How many museums does Paris have?,"SELECT (COUNT(?museum) AS ?count) WHERE {
  ?museum dbo:location dbr:Paris .
  ?museum rdf:type dbo:Museum .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
77,Where was JFK assassinated?,"SELECT ?place WHERE {
  dbr:Assassination_of_John_F._Kennedy dbo:location ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
78,Give me all federal chancellors of Germany.,"SELECT ?chancellor ?chancellorLabel WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
79,Show me everyone who was born on Halloween.,"SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (datatype(?date) = xsd:date && month(?date) = 10 && day(?date) = 31)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
80,Which beer originated in Ireland?,"SELECT ?beer WHERE {
  ?beer dbo:country dbr:Ireland .
  ?beer rdf:type dbo:Beer
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
81,To which countries does the Himalayan mountain system extend?,"SELECT ?country WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country rdf:type dbo:Country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
82,Which actors were born in Germany?,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Germany .
  ?actor rdf:type dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
83,How much carbs does peanut butter have?,"SELECT ?carbs WHERE {
  dbr:Peanut_butter dbo:carbohydrate ?carbs .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?filmCount) WHERE {
  ?film dbo:producer ?producer .
} 
GROUP BY ?producer
ORDER BY DESC(?filmCount)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
85,How many employees does Google have?,"SELECT ?employees WHERE {
  dbr:Google dbo:numberOfEmployees ?employees .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
86,Give me all actors who were born in Berlin.,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Berlin .
  ?actor rdf:type dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
87,Who created Goofy?,"SELECT ?creator WHERE {
  dbr:Goofy dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
88,Which music albums contain the song Last Christmas?,"SELECT ?album WHERE {
  ?song rdfs:label ""Last Christmas""@en.
  ?song dbo:album ?album.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
89,When was Alberta admitted as province?,"SELECT ?date WHERE {
  dbr:Alberta dbo:formationDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
90,How many missions does the Soyuz programme have?,"SELECT (COUNT(?mission) AS ?count) WHERE {
  ?mission dbo:programme dbr:Soyuz_programme .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
91,Give me all the TV shows with Neil Patrick Harris.,"SELECT ?show WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris.
  ?show rdf:type dbo:TelevisionShow.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
92,When were the Hells Angels founded?,"SELECT ?date WHERE {
  dbr:Hells_Angels dbo:foundingDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
93,What is the net income of Apple?,"SELECT ?netIncome WHERE {
  dbr:Apple_Inc. dbo:netIncome ?netIncome .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
94,Give me all Swedish holidays.,"SELECT ?holiday WHERE {
  ?holiday dbo:country dbr:Sweden.
  ?holiday rdf:type dbo:Holiday.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
95,In which city was the former Dutch queen Juliana buried?,"SELECT ?city WHERE {
  dbr:Juliana_of_the_Netherlands dbo:deathPlace ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
96,List all the musicals with music by Leonard Bernstein.,"SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Leonard_Bernstein.
  ?musical rdf:type dbo:Musical.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
97,Give me all companies in the advertising industry.,"SELECT ?company WHERE {
  ?company dct:subject dbc:Advertising_agencies.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
98,What is the largest metropolitan area in Washington state?,"SELECT ?city ?population WHERE {
  ?city dbo:isPartOf dbr:Washington_(state) .
  ?city dbo:populationMetro ?population .
} ORDER BY DESC(?population) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
99,Who killed John Lennon?,"SELECT ?killer WHERE {
  dbr:John_Lennon dbo:deathCause ?cause .
  ?killer dbo:causeOfDeath ?cause .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
100,Which writers studied in Istanbul?,"SELECT ?writer WHERE {
  ?writer dbo:occupation dbr:Writer .
  ?writer dbo:education ?education .
  ?education dbo:location dbr:Istanbul .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
101,Give me all Australian metalcore bands.,"SELECT ?band WHERE {
  ?band dbo:genre dbr:Metalcore ;
        dbo:origin dbr:Australia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
102,Which countries adopted the Euro?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
103,Give me all types of eating disorders.,"SELECT ?eatingDisorder WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
104,Was Marc Chagall a jew?,"SELECT ?answer WHERE {
  dbr:Marc_Chagall dbo:ethnicity ?answer .
  FILTER (str(?answer) = ""Jews"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT MIN(?rank) WHERE {
  dbr:Brazil dct:subject dbc:National_associations_of_FIFA.
  ?resource dbo:wikiPageRedirects dbr:Brazil_national_football_team.
  ?resource dbo:fifaRank ?rank.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
106,How many films did Leonardo DiCaprio star in?,"SELECT COUNT(?film) WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
107,Was Margaret Thatcher a chemist?,"SELECT ?answer WHERE {
  dbr:Margaret_Thatcher dbo:occupation ?occupation .
  BIND(EXISTS { ?occupation rdfs:label ?label . FILTER(LANG(?label) = ""en"" && LCASE(STR(?label)) = ""chemist"") } AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
108,Which U.S. states are in the same time zone as Utah?,"SELECT ?state WHERE {
  ?state dbo:country dbr:United_States.
  ?state dbo:timeZone ?timeZone.
  dbr:Utah dbo:timeZone ?timeZone.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
109,Give me all books written by Danielle Steel.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
110,Which country has the most official languages?,"SELECT ?country WHERE {
  ?country dbo:officialLanguage ?language .
} ORDER BY DESC(COUNT(?language)) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
111,What is the total amount of men and women serving in the FDNY?,"SELECT ?totalMen ?totalWomen WHERE {
  dbr:New_York_City_Fire_Department dbo:numberOfMaleEmployees ?totalMen .
  dbr:New_York_City_Fire_Department dbo:numberOfFemaleEmployees ?totalWomen .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
112,Which actor played Chewbacca?,"SELECT ?actor WHERE {
  dbr:Chewbacca dbo:portrayer ?actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
113,Give me all libraries established earlier than 1400.,"SELECT ?library WHERE {
  ?library dbo:openingYear ?year .
  ?library rdf:type yago:Library103660909 .
  FILTER (?year < 1400)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
114,Which programming languages were influenced by Perl?,"SELECT ?programmingLanguage WHERE {
  ?programmingLanguage dbo:influencedBy dbr:Perl.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
115,In which U.S. state is Mount McKinley located?,"SELECT ?state WHERE {
  dbr:Denali dbo:location ?state .
  ?state dbo:country dbr:United_States .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
116,What airlines are part of the SkyTeam alliance?,"SELECT ?airline WHERE {
  ?airline dbo:alliance dbr:SkyTeam .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
117,Which ships were called after Benjamin Franklin?,"SELECT ?ship WHERE {
  ?ship dbo:namesake dbr:Benjamin_Franklin .
  ?ship rdf:type dbo:Ship .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
118,Give me all Methodist politicians.,"SELECT ?politician WHERE {
  ?politician dbo:religion dbr:Methodism .
  ?politician rdf:type dbo:Politician .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
119,What other books have been written by the author of The Fault in Our Stars?,"SELECT ?book WHERE {
  ?author dbo:author dbr:The_Fault_in_Our_Stars.
  ?book dbo:author ?author.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
120,What is the highest mountain?,"SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:elevation ?elevation .
  ?mountain rdf:type dbo:Mountain .
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
121,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount) WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
} 
ORDER BY DESC(?bookCount) 
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
122,Which programming languages influenced Javascript?,"SELECT ?programmingLanguage WHERE {
  dbr:JavaScript dbo:influencedBy ?programmingLanguage .
  ?programmingLanguage rdf:type dbo:ProgrammingLanguage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
123,Which musician wrote the most books?,"SELECT ?musician (COUNT(?book) AS ?bookCount)
WHERE {
  ?musician rdf:type dbo:MusicalArtist.
  ?book dbo:author ?musician.
}
ORDER BY DESC(?bookCount)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
124,Which films starring Clint Eastwood did he direct himself?,"SELECT DISTINCT ?film WHERE {
  ?film dbo:starring dbr:Clint_Eastwood .
  ?film dbo:director dbr:Clint_Eastwood .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
125,Which software has been developed by organizations founded in California?,"SELECT ?software WHERE {
  ?org dbo:foundingPlace dbr:California .
  ?software dbo:developer ?org .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
126,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
127,How many airlines are members of the Star Alliance?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:alliance dbr:Star_Alliance.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
128,Give me all actors called Baldwin.,"SELECT ?actor WHERE {
  ?actor dbo:occupation dbr:Actor .
  ?actor foaf:name ?name .
  FILTER(CONTAINS(?name, ""Baldwin""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
129,Who wrote The Hunger Games?,"SELECT ?author WHERE {
  dbr:The_Hunger_Games dbo:author ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
130,For which label did Elvis record his first album?,"SELECT ?label WHERE {
  dbr:Elvis_Presley dbo:recordLabel ?label .
  {
    SELECT (MIN(?date) AS ?firstDate) WHERE {
      dbr:Elvis_Presley dbo:musicalArtist ?album .
      ?album dbo:releaseDate ?date .
    }
  }
  ?album dbo:releaseDate ?firstDate .
  ?album dbo:recordLabel ?label .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
131,Is Christian Bale starring in Batman Begins?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Batman_Begins"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
132,Where is the residence of the prime minister of Spain?,"SELECT ?residence WHERE {
  ?person dbo:office dbr:Prime_Minister_of_Spain .
  ?person dbo:residence ?residence .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?movie) AS ?movieCount) WHERE {
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor
} 
ORDER BY DESC(?movieCount) 
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
134,Which countries have more than two official languages?,"SELECT ?country WHERE {
  ?country rdf:type dbo:Country.
  {
    SELECT ?country (COUNT(?language) AS ?languageCount) WHERE {
      ?country dbo:officialLanguage ?language.
    } GROUP BY ?country
  } FILTER(?languageCount > 2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
135,Which countries have more than ten caves?,"SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:location ?country .
  ?cave rdf:type dbo:Cave .
  ?country rdf:type dbo:Country .
} 
GROUP BY ?country
HAVING (COUNT(?cave) > 10)",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"SELECT ?song ?releaseDate WHERE {
  ?song dbo:musicalArtist dbr:Bruce_Springsteen .
  ?song dbo:releaseDate ?releaseDate .
  FILTER (?releaseDate >= ""1980-01-01""^^xsd:date && ?releaseDate <= ""1990-12-31""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
137,Which television shows were created by John Cleese?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:John_Cleese.
  ?show rdf:type dbo:TelevisionShow.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
138,When did Latvia join the EU?,"SELECT ?date WHERE {
  dbr:Latvia dbp:accessionEU ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
139,Which soccer players were born on Malta?,"SELECT ?player WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player rdf:type dbo:SoccerPlayer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
140,How many politicians graduated from Columbia University?,"SELECT COUNT(?politician) WHERE {
  ?politician dbo:almaMater dbr:Columbia_University .
  ?politician rdf:type dbo:Politician .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
141,Give me the birthdays of all actors of the television show Charmed.,"SELECT ?actor ?birthday WHERE {
  ?show dbo:starring ?actor.
  ?actor dbo:birthDate ?birthday.
  FILTER (str(?show) = ""http://dbpedia.org/resource/Charmed"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
142,Which telecommunications organizations are located in Belgium?,"SELECT ?organization WHERE {
  ?organization dbo:industry dbr:Telecommunication ;
                dbo:locationCountry dbr:Belgium .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
143,Give me a list of all lakes in Denmark.,"SELECT ?lake ?lakeLabel WHERE {
  ?lake dbo:country dbr:Denmark .
  ?lake rdf:type dbo:Lake .
  ?lake rdfs:label ?lakeLabel .
  FILTER (lang(?lakeLabel) = ""en"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
144,How many children does Eddie Murphy have?,"SELECT ?childrenCount WHERE {
  dbr:Eddie_Murphy dbo:children ?children .
  SELECT (COUNT(?children) AS ?childrenCount) WHERE {
    dbr:Eddie_Murphy dbo:children ?children .
  }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
145,Show me all English Gothic buildings in Kent.,"SELECT ?building WHERE {
  ?building dbo:architecturalStyle dbr:English_Gothic_architecture ;
            dbo:location dbr:Kent .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
146,Who is the manager of Real Madrid?,"SELECT ?manager WHERE {
  dbr:Real_Madrid_C.F. dbo:manager ?manager .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
147,In which countries can you pay using the West African CFA franc?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
148,Which holidays are celebrated around the world?,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
149,What is the longest river?,"SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
150,Which organizations were founded in 1930?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear 1930 .
  ?organization rdf:type dbo:Organisation .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
151,What is the birth name of Angela Merkel?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
152,Who has Tom Cruise been married to?,"SELECT ?person WHERE {
  ?person dbo:spouse dbr:Tom_Cruise.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
153,Which weapons did Heckler & Koch develop?,"SELECT ?weapon WHERE {
  ?weapon dbo:manufacturer dbr:Heckler_&_Koch .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
154,What is the smallest city by area in Germany?,"SELECT ?city ?area WHERE {
  ?city dbo:country dbr:Germany.
  ?city dbo:areaTotal ?area.
} ORDER BY ASC(?area) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
155,What is the ruling party in Lisbon?,"SELECT ?party WHERE {
  dbr:Lisbon dbo:governingBody ?governingBody.
  ?governingBody dbo:politicalParty ?party.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
156,How heavy is Jupiter's lightest moon?,"SELECT ?mass WHERE {
  ?moon dbo:parent dbr:Jupiter .
  ?moon dbo:mass ?mass .
} ORDER BY ASC(?mass) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
157,How many employees does IBM have?,"SELECT ?employees WHERE {
  dbr:IBM dbo:numberOfEmployees ?employees .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
158,List all episodes of the first season of the HBO television series The Sopranos!,"SELECT ?episode ?episodeLabel WHERE {
  ?series rdfs:label ""The Sopranos""@en.
  ?season dbo:series ?series.
  ?season dbo:number ""1""^^xsd:integer.
  ?episode dbo:series ?season.
  ?episode rdfs:label ?episodeLabel.
  FILTER(lang(?episodeLabel) = ""en"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
159,What does ICRO stand for?,"SELECT ?description WHERE {
  dbr:ICRO rdfs:comment ?description .
  FILTER(lang(?description) = ""en"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
160,Does the new Battlestar Galactica series have more episodes than the old one?,"SELECT ?newSeriesEpisodes ?oldSeriesEpisodes WHERE {
  ?newSeries dbo:series ?oldSeries ;
             rdfs:label ""Battlestar Galactica (2004 TV series)""@en ;
             dbo:numberOfEpisodes ?newSeriesEpisodes .
  ?oldSeries rdfs:label ""Battlestar Galactica (1978 TV series)""@en ;
             dbo:numberOfEpisodes ?oldSeriesEpisodes .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
161,Give me all films produced by Hal Roach.,"SELECT ?film WHERE {
  ?film dbo:producer dbr:Hal_Roach.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
162,Who played Agent Smith in Matrix?,"SELECT ?actor WHERE {
  dbr:The_Matrix dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (LANG(?actorLabel) = ""en"") .
  FILTER (CONTAINS(?actorLabel, ""Hugo Weaving"")) .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
163,Which Greek parties are pro-European?,"SELECT ?party WHERE {
  ?party dbo:country dbr:Greece .
  ?party dbo:ideology dbr:Pro-Europeanism .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
164,Give me a list of all bandleaders that play trumpet.,"SELECT ?bandleader WHERE {
  ?bandleader dbo:instrument dbr:Trumpet .
  ?bandleader rdf:type dbo:BandLeader .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
165,What is the second highest mountain on Earth?,"SELECT ?mountain WHERE {
  ?mountain dbo:height ?height .
  ?mountain dbo:mountainRange dbr:Himalayas .
} ORDER BY DESC(?height) LIMIT 2 OFFSET 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
166,Is Egypts largest city also its capital?,"SELECT ?city WHERE {
  dbr:Egypt dbo:capital ?city .
  dbr:Egypt dbo:largestCity ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
167,Which rockets were launched from Baikonur?,"SELECT ?rocket WHERE {
  ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
168,How many programming languages are there?,"SELECT (COUNT(?programmingLanguage) AS ?count) WHERE {
  ?programmingLanguage dbo:wikiPageID ?id .
  ?programmingLanguage rdf:type dbo:ProgrammingLanguage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
169,Which Chess players died in the same place they were born in?,"SELECT ?player ?place WHERE {
  ?player dbo:deathPlace ?place .
  ?player dbo:birthPlace ?place .
  ?player rdf:type dbo:ChessPlayer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
170,Who is the owner of Facebook?,"SELECT ?owner WHERE {
  dbr:Facebook dbo:owner ?owner .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
171,Give me all movies with Tom Cruise.,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdf:type dbo:Film.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
172,In which U.S. state is Fort Knox located?,"SELECT ?state WHERE {
  dbr:Fort_Knox dbo:location ?state .
  ?state dct:subject dbc:States_of_the_United_States .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"SELECT ?city WHERE {
  ?city dbo:isPartOf dbr:New_Jersey .
  ?city dbo:populationTotal ?population .
  FILTER(?population > 100000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
174,Which mountains are higher than the Nanga Parbat?,"SELECT ?mountain WHERE {
  ?mountain dbo:elevation ?elevation.
  dbr:Nanga_Parbat dbo:elevation ?nangaParbatElevation.
  FILTER(?elevation > ?nangaParbatElevation)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
175,Give me all B-sides of the Ramones.,"SELECT ?bside WHERE {
  ?album dbo:artist dbr:Ramones .
  ?album dbo:bside ?bside .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
176,What are the specialities of the UNC Health Care?,"SELECT ?specialities WHERE {
  dbr:UNC_Health_Care dbo:speciality ?specialities .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
177,When was Olof Palme shot?,"SELECT ?date WHERE {
  dbr:Olof_Palme dbo:deathDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
178,List the seven kings of Rome.,"SELECT ?king WHERE {
  ?king dbo:monarchOf dbr:Kingdom_of_Rome .
} LIMIT 7",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
179,Give me all people that were born in Vienna and died in Berlin.,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Vienna .
  ?person dbo:deathPlace dbr:Berlin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
180,Is Darth Vader Luke’s father?,"SELECT ?answer WHERE {
  dbr:Darth_Vader dbo:child dbr:Luke_Skywalker.
  BIND(""Yes"" AS ?answer)
} UNION {
  FILTER NOT EXISTS { dbr:Darth_Vader dbo:child dbr:Luke_Skywalker }
  BIND(""No"" AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
181,Show me all the breweries in Australia.,"SELECT ?brewery WHERE {
  ?brewery dbo:industry dbr:Brewery ;
           dbo:location dbr:Australia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"SELECT ?film WHERE {
  ?film dbo:director dbr:Steven_Spielberg .
  ?film dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
183,Give me all soccer clubs in Spain.,"SELECT ?club WHERE {
  ?club dbo:location dbr:Spain .
  ?club rdf:type dbo:SoccerClub .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
184,Who produced films starring Natalie Portman?,"SELECT DISTINCT ?producer WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
185,Give me all breeds of the German Shepherd dog.,"SELECT ?breed WHERE {
  dbr:German_Shepherd dbo:breed ?breed .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Chicago_Bulls> .
  ?player dbo:weight ?weight .
} ORDER BY DESC(?weight) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
187,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
188,What is the largest country in the world?,"SELECT ?country WHERE {
  ?country dbo:areaTotal ?area .
  FILTER NOT EXISTS { ?country dbo:areaTotal ?area2 . ?area2 > ?area }
} ORDER BY DESC(?area) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
189,What is the largest city in america?,"SELECT ?city WHERE {
  ?city dbo:country dbr:United_States .
  ?city dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
190,Who was the pope that founded the Vatican Television?,"SELECT ?pope WHERE {
  ?pope dbo:positionHeld dbr:Pope .
  ?pope dbo:founded dbr:Vatican_Television_Center .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
191,Who discovered Ceres?,"SELECT ?person WHERE {
  dbr:Ceres_(dwarf_planet) dbo:discoverer ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
192,Who is the king of the Netherlands?,"SELECT ?person WHERE {
  ?person dbo:positionHeld dbr:Monarchy_of_the_Netherlands .
  ?person rdf:type dbo:Person .
} LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
193,Is Cola a beverage?,"SELECT ?answer WHERE { 
  dbr:Cola rdf:type ?type .
  ?type rdfs:subClassOf* dbc:Beverages .
  BIND(EXISTS { dbr:Cola rdf:type ?type . ?type rdfs:subClassOf* dbc:Beverages } AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"SELECT ?almaMater WHERE {
  ?person dbo:almaMater ?almaMater .
  ?person dbo:office ?office .
  ?office rdfs:label ""Chancellor of Germany""@en .
  ?person rdfs:label ""Angela Merkel""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
195,Who wrote the book Les Piliers de la terre?,"SELECT ?author WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
196,Which airports does Yeti Airlines serve?,"SELECT ?airport WHERE {
  ?airport dbo:operator dbr:Yeti_Airlines .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
197,Where is the birthplace of Goethe?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthPlace .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"SELECT ?cubanMissileCrisisDate ?bayOfPigsInvasionDate WHERE {
  dbr:Cuban_Missile_Crisis dbo:date ?cubanMissileCrisisDate .
  dbr:Bay_of_Pigs_Invasion dbo:date ?bayOfPigsInvasionDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
199,Which ingredients do I need for carrot cake?,"SELECT ?ingredient WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
200,Who created Wikipedia?,"SELECT ?creator WHERE {
  dbr:Wikipedia dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
201,What is the highest mountain in Saxony Germany?,"SELECT ?mountain ?elevation WHERE {
  ?mountain dbo:location dbr:Saxony ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
202,Who is the current federal minister of finance in Germany?,"SELECT ?person WHERE {
  ?person dbp:office dbr:Minister_of_Finance_(Germany) .
  ?person dbp:termEnd ""present"" .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
203,In which country is Mecca located?,"SELECT ?country WHERE {
  dbr:Mecca dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor WHERE {
  ?actor dbo:series dbr:Breaking_Bad .
  ?actor dbo:character dbr:Gus_Fring .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
205,In which country does the Nile start?,"SELECT ?country WHERE {
  dbr:Nile dbo:sourceCountry ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
206,In which state Penn State University is located?,"SELECT ?state WHERE {
  dbr:Pennsylvania_State_University dbo:location ?location .
  ?location dbo:isPartOf ?state .
  ?state rdf:type dbo:State .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
207,What is the biggest stadium in Spain?,"SELECT ?stadium ?capacity
WHERE {
  ?stadium dbo:location dbr:Spain ;
           dbo:capacity ?capacity .
}
ORDER BY DESC(?capacity)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach WHERE {
  ?team dbo:location dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
209,How large is the area of UK?,"SELECT ?area WHERE {
  dbr:United_Kingdom dbo:areaTotal ?area .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
210,Who created Batman?,"SELECT ?creator WHERE {
  dbr:Batman dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
211,Was Sigmund Freud married?,"SELECT ?answer WHERE {
  dbr:Sigmund_Freud dbo:spouse ?answer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
212,Who are the developers of DBpedia?,"SELECT ?developer WHERE {
  dbr:DBpedia dbo:developer ?developer
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
213,Give me all movies directed by Francis Ford Coppola.,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
214,Are tree frogs a type of amphibian?,"SELECT ?answer WHERE {
  dbr:Tree_frog rdf:type ?type .
  ?type rdfs:subClassOf* dbo:Amphibian .
  BIND(EXISTS{dbr:Tree_frog rdf:type ?type . ?type rdfs:subClassOf* dbo:Amphibian} AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
215,What is the location of the Houses of Parliament?,"SELECT ?location WHERE {
  dbr:Houses_of_Parliament dbo:location ?location .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
216,how much is the elevation of Düsseldorf Airport ?,"SELECT ?elevation WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
217,How much is the population of mexico city ?,"SELECT ?population WHERE {
  dbr:Mexico_City dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
218,when was the founding date of french fifth republic?,"SELECT ?foundingDate WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?foundingDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
219,Who was the first King of England?,"SELECT ?person WHERE {
  ?person dbo:positionHeld dbr:Monarchy_of_the_United_Kingdom .
  ?person dbo:reignStart ?reignStart .
} ORDER BY ?reignStart LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
220,Who is the editor of Forbes?,"SELECT ?editor WHERE {
  dbr:Forbes dbo:editor ?editor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
221,Which awards did Douglas Hofstadter win?,"SELECT ?award WHERE {
  dbr:Douglas_Hofstadter dbo:award ?award .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
222,Who is the youngest Darts player?,"SELECT ?player ?birthDate WHERE {
  ?player dbo:occupation dbr:Darts ;
          dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
223,Is horse racing a sport?,"SELECT ?answer WHERE {
  dbr:Horse_racing rdf:type ?type .
  FILTER (str(?type) = ""http://dbpedia.org/ontology/Sport"")
  BIND(""Yes"" AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
  ?river rdf:type dbo:River .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
225,How many people live in Poland?,"SELECT ?population WHERE {
  dbr:Poland dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
226,When was the last episode of the TV series Friends aired?,"SELECT ?date WHERE {
  dbr:Friends dbo:finalEpisode ?episode .
  ?episode dbo:releaseDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
227,Is the wife of president Obama called Michelle?,"SELECT ?answer WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Michelle Obama"")
  BIND(IF(BOUND(?spouse), ""Yes"", ""No"") AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
229,Who is 8th president of US?,"SELECT ?president WHERE {
  ?president dbo:orderInOffice 8 ;
             dct:subject dbc:Presidents_of_the_United_States .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
230,how much is the total population of  european union?,"SELECT ?population WHERE {
  dbr:European_Union dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
231,Give me all launch pads operated by NASA.,"SELECT ?launch_pad WHERE {
  ?launch_pad dbo:operator dbr:NASA .
  ?launch_pad rdf:type yago:LaunchPad104377057 .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
232,Who developed the video game World of Warcraft?,"SELECT ?developer WHERE {
  dbr:World_of_Warcraft dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
233,What is the birth name of Adele?,"SELECT ?birthName WHERE {
  dbr:Adele dbo:birthName ?birthName .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
234,What is the population of Cairo?,"SELECT ?population WHERE {
  dbr:Cairo dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
235,Is Frank Herbert still alive?,"SELECT ?deathDate WHERE {
  dbr:Frank_Herbert dbo:deathDate ?deathDate.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
236,What is the last work of Dan Brown?,"SELECT ?work ?date WHERE {
  ?work dbo:author dbr:Dan_Brown.
  ?work dbo:publicationDate ?date.
} ORDER BY DESC(?date) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
237,Where is Sungkyunkwan University?,"SELECT ?location WHERE {
  dbr:Sungkyunkwan_University dbo:location ?location .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
238,Who is the author of the interpretation of dreams?,"SELECT ?author WHERE {
  dbr:The_Interpretation_of_Dreams dbo:author ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
239,When was the death  of  Shakespeare?,"SELECT ?deathDate WHERE {
  dbr:William_Shakespeare dbo:deathDate ?deathDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
241,Who developed Slack?,"SELECT ?developer WHERE {
  dbr:Slack_Technologies dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
242,Where is the origin of Carolina reaper?,"SELECT ?origin WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
243,In which year was Rachel Stevens born?,"SELECT ?birthYear WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
244,How often did Jane Fonda marry?,"SELECT COUNT(?spouse) WHERE {
  dbr:Jane_Fonda dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
245,Was the wife of president Lincoln called Mary?,"SELECT ?answer WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Mary Todd Lincoln"")
  BIND(EXISTS{dbr:Abraham_Lincoln dbo:spouse dbr:Mary_Todd_Lincoln} AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
246,Which cities does the Weser flow through?,"SELECT ?city WHERE {
  ?city dbo:river dbr:Weser .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
247,In which programming language is GIMP written?,"SELECT ?programmingLanguage WHERE {
  dbr:GIMP dbo:programmingLanguage ?programmingLanguage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
248,Which university did Angela Merkel attend?,"SELECT ?university WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
249,List all the musicals with music by Elton John.,"SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Elton_John.
  ?musical rdf:type dbo:Musical.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
250,How many Aldi stores are there?,"SELECT (COUNT(?store) AS ?count) WHERE {
  ?store dbo:owner dbr:Aldi.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
251,What is the longest river in the world?,"SELECT ?river ?length WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
252,When was John Adams born?,"SELECT ?birthDate WHERE {
  dbr:John_Adams dbo:birthDate ?birthDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
253,Which companies produce hovercrafts?,"SELECT ?company WHERE {
  ?company dbo:product ?product .
  ?product rdf:type dbo:Hovercraft .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
254,Who was the wife of U.S. president Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
255,Which species does an elephant belong?,"SELECT ?species WHERE {
  dbr:Elephant dbo:species ?species .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
256,How many people live in the capital of Australia?,"SELECT ?population WHERE {
  dbr:Canberra dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
257,In which ancient empire could you pay with cocoa beans?,"SELECT ?empire WHERE {
  ?empire dbo:currency ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER (lang(?currencyLabel) = 'en')
  FILTER (contains(lcase(?currencyLabel), ""cocoa beans""))
  ?empire dbo:historicalPeriod ?period .
  ?period dbo:pointInTime ?time .
  FILTER (?time < ""476-01-01T00:00:00Z""^^xsd:dateTime)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
258,How many theories did Albert Einstein come up with?,"SELECT COUNT(?theory) WHERE {
  ?theory dbo:discoverer dbr:Albert_Einstein.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
259,Who composed the soundtrack for Cameron's Titanic?,"SELECT ?composer WHERE {
  dbr:Titanic_(1997_film) dbo:musicComposer ?composer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
260,Give me the runtime of Toy Story.,"SELECT ?runtime WHERE {
  dbr:Toy_Story dbo:runtime ?runtime .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
262,With how many countries Iran has borders?,"SELECT COUNT(?country) WHERE {
  dbr:Iran dbo:sharesBorderWith ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
263,Which electronics companies were founded in Beijing?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Electronics.
  ?company dbo:foundingLocation dbr:Beijing.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
264,Who was the successor of John F. Kennedy?,"SELECT ?successor WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
265,Who is the mayor of Paris?,"SELECT ?mayor WHERE {
  dbr:Paris dbo:mayor ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
266,Did Arnold Schwarzenegger attend a university?,"SELECT ?university WHERE {
  dbr:Arnold_Schwarzenegger dbo:almaMater ?university .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
267,Is James Bond married?,"SELECT ?maritalStatus WHERE {
  dbr:James_Bond dbo:spouse ?maritalStatus .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
268,Does the Isar flow into a lake?,"SELECT ?lake WHERE {
  dbr:Isar dbo:mouth ?lake .
  ?lake rdf:type dbo:Lake .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
269,Which Indian company has the most employees?,"SELECT ?company ?employees
WHERE {
  ?company dbo:locationCountry dbr:India .
  ?company dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?employees)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
270,Who was John F. Kennedy's vice president?,"SELECT ?vicePresident WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
271,Which country does the creator of Miffy come from?,"SELECT ?country WHERE {
  ?person dbo:knownFor dbr:Miffy .
  ?person dbo:birthPlace ?place .
  ?place dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
273,In what city is the Heineken brewery?,"SELECT ?city WHERE {
  dbr:Heineken_Brewery dbo:location ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
274,Is Barack Obama a democrat?,"SELECT ?party WHERE {
  dbr:Barack_Obama dbo:party ?party .
  FILTER (?party = dbr:Democratic_Party_(United_States))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
275,List the children of Margaret Thatcher.,"SELECT ?child WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
276,From which region is the Melon de Bourgogne?,"SELECT ?region WHERE {
  dbr:Melon_de_Bourgogne dbo:region ?region .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
278,how big is the total area of North Rhine- Westphalia?,"SELECT ?area WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?area .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
279,Which city has the most inhabitants?,"SELECT ?city WHERE {
  ?city dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
280,What is Donald Trump's main business?,"SELECT ?mainBusiness WHERE {
  dbr:Donald_Trump dbo:occupation ?mainBusiness .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
281,When will start the final match of the football world cup 2018?,"SELECT ?date WHERE {
  dbr:2018_FIFA_World_Cup_Final dbo:startTime ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
282,Which films did Stanley Kubrick direct?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Stanley_Kubrick.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
283,how much is the population  Iraq?,"SELECT ?population WHERE {
  dbr:Iraq dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population WHERE {
  ?city dbo:country dbr:Canada;
        dbo:populationTotal ?population.
} ORDER BY DESC(?population) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
285,Who is the mayor of the capital of French Polynesia?,"SELECT ?mayor WHERE {
  dbr:Papeete dbo:mayor ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
286,Give me all actors starring in movies directed by William Shatner.,"SELECT ?actor WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
287,How tall is Claudia Schiffer?,"SELECT ?height WHERE {
  dbr:Claudia_Schiffer dbo:height ?height.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
288,how much is the population densty rank of germany?,"SELECT ?populationDensityRank WHERE {
  dbr:Germany dbo:populationDensityRank ?populationDensityRank .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
289,What is the highest mountain in Italy?,"SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:country dbr:Italy ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
290,List all games by GMT.,"SELECT ?game WHERE {
  ?game dbo:publisher dbr:GMT_Games.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
291,What is the official language of Suriname?,"SELECT ?officialLanguage WHERE {
  dbr:Suriname dbo:officialLanguage ?officialLanguage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
292,In which city did Nikos Kazantzakis die?,"SELECT ?city WHERE {
  dbr:Nikos_Kazantzakis dbo:deathPlace ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
293,What is in a chocolate chip cookie?,"SELECT ?ingredient WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
294,In which country is the Limerick Lake?,"SELECT ?country WHERE {
  dbr:Limerick_Lake dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
295,Give me all video games published by Mean Hamster Software.,"SELECT ?videogame WHERE {
  ?videogame dbo:publisher dbr:Mean_Hamster_Software.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
296,Give me all members of Prodigy.,"SELECT ?member WHERE {
  dbr:The_Prodigy dbo:bandMember ?member.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
297,In which time zone is Rome?,"SELECT ?timezone WHERE {
  dbr:Rome dbo:timeZone ?timezone .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
298,How high is the lighthouse in Colombo?,"SELECT ?height WHERE {
  dbr:Colombo_Lighthouse dbo:height ?height .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
299,Who are the writers of the Wall album of Pink Floyd?,"SELECT ?writer WHERE {
  dbr:The_Wall dbo:musicBy ?writer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
300,Who is the mayor of Rotterdam?,"SELECT ?mayor WHERE {
  dbr:Rotterdam dbp:leader ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
301,What is the largest city in Australia?,"SELECT ?city WHERE {
  ?city dbo:country dbr:Australia .
  ?city dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
302,Who was married to president Chirac?,"SELECT ?spouse WHERE {
  dbr:Jacques_Chirac dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
303,What form of government is found in South Africa?,"SELECT ?formOfGovernment WHERE {
  dbr:South_Africa dbo:governmentType ?formOfGovernment .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
304,How high is the Yokohama Marine Tower?,"SELECT ?height WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
305,Which holidays are celebrated around the world? test2,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
306,Who is the tallest basketball player?,"SELECT ?player ?height
WHERE {
  ?player dbo:height ?height;
          rdf:type dbo:BasketballPlayer.
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
307,How many languages are spoken in Turkmenistan?,"SELECT COUNT(?language) WHERE {
  dbr:Turkmenistan dbo:officialLanguage ?language
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
308,Did Che Guevara have children?,"SELECT ?child WHERE {
  dbr:Che_Guevara dbo:child ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"SELECT ?film ?year WHERE {
  ?film dbo:director dbr:Aki_Kaurismäki .
  ?film dbo:award dbr:Grand_Prix_(Cannes_Film_Festival) .
  ?film dbo:releaseDate ?date .
  BIND(year(?date) AS ?year)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
310,To which party does the mayor of Paris belong?,"SELECT ?party WHERE {
  ?mayor dbp:office ""Mayor of Paris"".
  ?mayor dbp:party ?party.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver WHERE {
  ?driver dbo:wikiPageRedirects dbr:List_of_Formula_One_Grand_Prix_starts_records.
  ?driver dbo:wikiPageRedirects ?record.
  ?record dbo:wikiPageRedirects dbr:Rubens_Barrichello.
} LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
312,What country is Sitecore from?,"SELECT ?country WHERE {
  dbr:Sitecore dbo:locationCountry ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
314,Is Christian Bale starring in Velvet Goldmine?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Velvet_Goldmine"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_Bono, dbr:Cher.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
316,How many ethnic groups live in Slovenia?,"SELECT (COUNT(?ethnicGroup) AS ?count) WHERE {
  dbr:Slovenia dbo:ethnicGroup ?ethnicGroup .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
317,What is the capital of Cameroon?,"SELECT ?capital WHERE {
  dbr:Cameroon dbo:capital ?capital .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
318,Was Natalie Portman born in the United States?,"SELECT ?answer WHERE {
  dbr:Natalie_Portman dbo:birthPlace ?place .
  ?place rdfs:label ?answer .
  FILTER (lang(?answer) = 'en')
  FILTER CONTAINS(?answer, ""United States"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
319,How many pages does War and Peace have?,"SELECT ?pages WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?pages .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
320,Who is the oldest child of Meryl Streep?,"SELECT ?child WHERE {
  dbr:Meryl_Streep dbo:child ?child .
  ?child dbo:birthDate ?birthDate .
} ORDER BY ASC(?birthDate) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
321,Which television shows were created by Walt Disney?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
322,What does IYCM stand for?,"SELECT ?description WHERE {
  ?subject rdfs:label ""IYCM""@en .
  ?subject dbo:abstract ?description .
  FILTER (lang(?description) = ""en"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
323,Which types of grapes grow in Oregon?,"SELECT ?grape WHERE {
  ?oregon dbr:Oregon.
  ?grape dbo:region ?oregon.
  ?grape rdf:type dbo:Grape.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
324,Was U.S. president Jackson involved in a war?,"SELECT ?war WHERE {
  dbr:Andrew_Jackson dbo:militaryConflict ?war .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
325,When was the Titanic completed?,"SELECT ?date WHERE {
  dbr:Titanic dbo:completionDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
326,Did Tesla win a nobel prize in physics?,"SELECT ?award WHERE {
  dbr:Nikola_Tesla dbo:award ?award .
  FILTER (str(?award) = ""Nobel Prize in Physics"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
327,How many states are in Mexico?,"SELECT (COUNT(?state) AS ?count) WHERE {
  ?state dbo:country dbr:Mexico .
  ?state rdf:type dbo:AdministrativeRegion .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project, dbr:Nobel_Peace_Prize.
  ?scientist rdf:type dbo:Scientist.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
329,How much did the Lego Movie cost?,"SELECT ?cost WHERE {
  dbr:The_Lego_Movie dbo:budget ?cost .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
330,Who composed the music for Harold and Maude?,"SELECT ?composer WHERE {
  dbr:Harold_and_Maude dbo:musicComposer ?composer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
331,List all episodes of the first season of the HBO television series The Sopranos.,"SELECT ?episode ?episodeLabel WHERE {
  ?series rdfs:label ""The Sopranos""@en.
  ?series dbo:numberOfSeasons ?seasons.
  ?episode dbo:series ?series.
  ?episode dbo:seasonNumber 1.
  ?episode rdfs:label ?episodeLabel.
  FILTER(lang(?episodeLabel) = ""en"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
332,Which city has the least inhabitants?,"SELECT ?city WHERE {
  ?city dbo:populationTotal ?population .
  ?city rdf:type dbo:City .
} 
ORDER BY ?population 
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
333,Where is Syngman Rhee buried?,"SELECT ?place WHERE {
  dbr:Syngman_Rhee dbo:deathPlace ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
334,Does Neymar play for Real Madrid?,"SELECT ?team WHERE {
  dbr:Neymar dbo:team ?team .
  FILTER (?team = dbr:Real_Madrid_C.F.)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
335,Who wrote the book The Pillars of the Earth?,"SELECT ?author WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
336,Do Prince Harry and Prince William have the same parents?,"SELECT ?sibling1Parent ?sibling2Parent WHERE {
  dbr:Prince_Harry ?p1 ?sibling1Parent .
  dbr:Prince_William,_Duke_of_Cambridge ?p2 ?sibling2Parent .
  ?sibling1Parent rdf:type dbo:Person .
  ?sibling2Parent rdf:type dbo:Person .
  FILTER (?p1 = dbo:parent && ?p2 = dbo:parent && ?sibling1Parent = ?sibling2Parent)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?supervisor WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
338,Does Breaking Bad have more episodes than Game of Thrones?,"SELECT ?bbEpisodes ?gotEpisodes WHERE {
  dbr:Breaking_Bad dbo:numberOfEpisodes ?bbEpisodes.
  dbr:Game_of_Thrones dbo:numberOfEpisodes ?gotEpisodes.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
339,Who was Vincent van Gogh inspired by?,"SELECT ?person WHERE {
  dbr:Vincent_van_Gogh dbo:influencedBy ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building WHERE {
  ?building dbo:floorCount ?floorCount .
  FILTER(?floorCount < (SELECT ?burjFloorCount WHERE {
    dbr:Burj_Khalifa dbo:floorCount ?burjFloorCount
  }))
} ORDER BY DESC(?floorCount) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
341,What was the final result of the War of the Roses?,"SELECT ?result WHERE {
  dbr:Wars_of_the_Roses dbo:result ?result .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
342,How much did Pulp Fiction cost?,"SELECT ?cost WHERE {
  dbr:Pulp_Fiction dbo:budget ?cost .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
343,Is proinsulin a protein?,"SELECT ?answer WHERE {
  dbr:Proinsulin rdf:type ?type .
  ?type rdfs:label ?label .
  FILTER (lang(?label) = 'en')
  BIND (CONTAINS(lcase(str(?label)), ""protein"") AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
344,Do Urdu and Persian have a common root?,"SELECT ?language ?root WHERE {
  { dbr:Urdu dbo:languageFamily ?root . }
  UNION
  { dbr:Persian dbo:languageFamily ?root . }
  ?language dbo:languageFamily ?root .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
345,Who is starring in Spanish movies produced by Benicio del Toro?,"SELECT ?person WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:country dbr:Spain .
  ?movie dbo:producer dbr:Benicio_del_Toro .
  ?movie dbo:starring ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
346,Is Lake Baikal bigger than the Great Bear Lake?,"SELECT ?lake ?area WHERE {
  {
    SELECT ?lake (MAX(?area1) as ?area) WHERE {
      VALUES ?lake { dbr:Lake_Baikal }
      ?lake dbo:area ?area1 .
    } GROUP BY ?lake
  }
  UNION
  {
    SELECT ?lake (MAX(?area2) as ?area) WHERE {
      VALUES ?lake { dbr:Great_Bear_Lake }
      ?lake dbo:area ?area2 .
    } GROUP BY ?lake
  }
} ORDER BY DESC(?area) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
347,Show me all books in Asimov's Foundation series.,"SELECT ?book WHERE {
  ?book dbo:series dbr:Foundation_series.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
348,Where was Bach born?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
349,Which city has the oldest running metro?,"SELECT ?city WHERE {
  ?city dbo:wikiPageID ?pageID .
  ?city dbo:metroSystem ?metro .
  ?metro dbo:openingDate ?date .
} ORDER BY ASC(?date) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
350,Who designed the Brooklyn Bridge?,"SELECT ?designer WHERE {
  dbr:Brooklyn_Bridge dbo:designer ?designer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
351,How many people live in Eurasia?,"SELECT ?population 
WHERE {
  dbr:Eurasia dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host WHERE {
  dbr:BBC_Wildlife_Specials dbo:presenter ?host.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
353,"What is the total population of Melbourne, Florida?","SELECT ?population WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
354,What country is Mount Everest in?,"SELECT ?country WHERE {
  dbr:Mount_Everest dbo:location ?country .
  ?country a dbo:Country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
355,To which artistic movement did the painter of The Three Dancers belong?,"SELECT ?movement WHERE {
  dbr:The_Three_Dancers dbo:author ?author .
  ?author dbo:movement ?movement .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
356,When did Operation Overlord commence?,"SELECT ?date WHERE {
  dbr:Operation_Overlord dbo:startDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
357,What is the bridge with the longest span?,"SELECT ?bridge ?span WHERE {
  ?bridge dbo:longestSpan ?span .
} ORDER BY DESC(?span) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
358,Is there a video game called Battle Chess?,"SELECT ?video_game WHERE {
  ?video_game rdf:type dbo:VideoGame .
  ?video_game rdfs:label ?label .
  FILTER (lcase(str(?label)) = ""battle chess""@en)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
359,Who was buried in the Great Pyramid of Giza?,"SELECT ?person WHERE {
  dbr:Great_Pyramid_of_Giza dbo:architecturalStyle ?person .
  ?person rdf:type dbo:Person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"SELECT ?plant WHERE {
  dbr:Ford_Motor_Company dbo:location ?plant .
  ?plant dbo:country dbr:Malaysia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
361,Did Socrates influence Aristotle?,"SELECT ?influence WHERE {
  dbr:Aristotle dbo:influencedBy ?influence .
  FILTER (?influence = dbr:Socrates)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
362,How many children did Benjamin Franklin have?,"SELECT COUNT(?child) WHERE {
  dbr:Benjamin_Franklin dbo:child ?child
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
363,How tall is Michael Jordan?,"SELECT ?height WHERE {
  dbr:Michael_Jordan dbo:height ?height .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
364,In which UK city are the headquarters of the MI6?,"SELECT ?city WHERE {
  dbr:Secret_Intelligence_Service dbo:location ?city .
  ?city dbo:country dbr:United_Kingdom .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
365,Who created Family Guy?,"SELECT ?creator WHERE {
  dbr:Family_Guy dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
366,In which city does the Chile Route 68 end?,"SELECT ?city WHERE {
  dbr:Chile_Route_68 dbo:terminus ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
368,When did the Ming dynasty dissolve?,"SELECT ?date WHERE {
  dbr:Ming_dynasty dbo:dissolutionYear ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
369,In which military conflicts did Lawrence of Arabia participate?,"SELECT ?conflict WHERE {
  dbr:Lawrence_of_Arabia_(film) dbo:militaryConflict ?conflict .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
370,What is the timezone in San Pedro de Atacama?,"SELECT ?timezone WHERE {
  dbr:San_Pedro_de_Atacama dbo:timeZone ?timezone .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
371,Give me all books by William Goldman with more than 300 pages.,"SELECT ?book ?pages WHERE {
  ?book dbo:author dbr:William_Goldman .
  ?book dbo:numberOfPages ?pages .
  FILTER(?pages > 300)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
372,What did Bruce Carver die from?,"SELECT ?cause_of_death WHERE {
  dbr:Bruce_Carver dbo:deathCause ?cause_of_death.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"SELECT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:Lufthansa .
  ?subsidiary dbo:hub dbr:Dortmund_Airport, dbr:Berlin_Tegel_Airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
374,Does Abraham Lincoln's death place have a website?,"SELECT ?website WHERE {
  ?place dbo:deathPlace dbr:Abraham_Lincoln .
  ?place foaf:homepage ?website .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
375,Did Elvis Presley have children?,"SELECT ?children WHERE {
  dbr:Elvis_Presley dbo:children ?children .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
376,Is Michelle Obama the wife of Barack Obama?,"SELECT ?answer 
WHERE { 
  dbr:Michelle_Obama dbo:spouse ?answer . 
  FILTER (?answer = dbr:Barack_Obama) 
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
377,In which city does Sylvester Stallone live?,"SELECT ?city WHERE {
  dbr:Sylvester_Stallone dbo:residence ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
378,Which books by Kerouac were published by Viking Press?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Jack_Kerouac .
  ?book dbo:publisher dbr:Viking_Press .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
379,Who wrote the song Hotel California?,"SELECT ?author WHERE {
  dbr:Hotel_California_(Eagles_song) dbo:writer ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
380,What is the capital of Canada?,"SELECT ?capital WHERE {
  dbr:Canada dbo:capital ?capital .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
381,Who is the mayor of Tel Aviv?,"SELECT ?mayor WHERE {
  dbr:Tel_Aviv dbo:mayor ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
382,What form of government does Russia have?,"SELECT ?formOfGovernment WHERE {
  dbr:Russia dbo:governmentType ?formOfGovernment .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Muhammad_Ali .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
384,Who was the first to climb Mount Everest?,"SELECT ?person WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
385,How many languages are spoken in Colombia?,"SELECT COUNT(?language) WHERE {
  dbr:Colombia dbo:officialLanguage ?language
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
386,What is the currency of the Czech Republic?,"SELECT ?currency WHERE {
  dbr:Czech_Republic dbo:currency ?currency .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
387,Where in France is sparkling wine produced?,"SELECT ?region WHERE {
  ?region dbo:country dbr:France .
  ?region dbo:product dbr:Sparkling_wine .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
388,When did Boris Becker end his active career?,"SELECT ?endCareer WHERE {
  dbr:Boris_Becker dbo:careerEnd ?endCareer.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke .
  ?movie dbo:director dbr:Guy_Ritchie .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
391,Show me Hemingway's autobiography.,"SELECT ?book ?description WHERE {
  ?book dbo:author dbr:Ernest_Hemingway .
  ?book dbo:literaryGenre dbr:Autobiography .
  ?book rdfs:comment ?description .
  FILTER(lang(?description) = ""en"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
392,How tall is Amazon Eve?,"SELECT ?height WHERE {
  dbr:Amazon_Eve dbo:height ?height .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
393,What are the five boroughs of New York?,"SELECT ?borough WHERE {
  dbr:New_York_City dbo:borough ?borough .
} LIMIT 5",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
394,Give me all Canadian Grunge record labels.,"SELECT ?label WHERE {
  ?label rdf:type dbo:RecordLabel .
  ?label dbo:country dbr:Canada .
  ?label dbo:genre dbr:Grunge_music .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
395,In which country does the Ganges start?,"SELECT ?country WHERE {
  dbr:Ganges dbo:sourceCountry ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
396,Who is the founder of Penguin Books?,"SELECT ?founder WHERE {
  dbr:Penguin_Books dbo:founder ?founder .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
397,Who wrote the Game of Thrones theme?,"SELECT ?composer WHERE {
  dbr:Game_of_Thrones_Theme dbo:composer ?composer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
398,Who is the president of Eritrea?,"SELECT ?president WHERE {
  dbr:Eritrea dbp:leader ?president .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
399,In which city did John F. Kennedy die?,"SELECT ?city WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
400,What is the highest mountain in Australia?,"SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:location dbr:Australia ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
401,Who writes the Farmers' Almanac?,"SELECT ?author WHERE {
  dbr:Farmers'_Almanac dbo:author ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
402,Give me the currency of China.,"SELECT ?currency WHERE {
  dbr:China dbo:currency ?currency .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
403,Give me all Swedish oceanographers.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Oceanographer .
  ?person dbo:nationality dbr:Sweden .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
404,In which city are the headquarters of the United Nations?,"SELECT ?city WHERE {
  dbr:United_Nations dbo:headquarter ?headquarters.
  ?headquarters dbo:city ?city.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
405,Is Rita Wilson the wife of Tom Hanks?,"SELECT ?answer WHERE {
  dbr:Tom_Hanks dbo:spouse dbr:Rita_Wilson .
  BIND(""Yes"" AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
406,In which countries do people speak Japanese?,"SELECT ?country WHERE {
  ?country dbo:officialLanguage dbr:Japanese_language.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget
WHERE {
  ?film dbo:director dbr:Tim_Burton.
  ?film dbo:budget ?budget.
}
ORDER BY DESC(?budget)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
408,Which museum in New York has the most visitors?,"SELECT ?museum WHERE {
  ?museum dbo:location dbr:New_York_City .
  ?museum rdf:type dbo:Museum .
  ?museum dbo:numberOfVisitors ?visitors
} ORDER BY DESC(?visitors) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
409,What was the first Queen album?,"SELECT ?album ?date WHERE {
  ?album dbo:artist dbr:Queen_(band) .
  ?album dbo:releaseDate ?date .
} ORDER BY ?date LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?first_name WHERE {
  dbr:Queens_of_the_Stone_Age dbo:formerName ?first_name .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
411,What was the last movie with Alec Guinness?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Alec_Guinness .
  ?movie dbo:releaseDate ?date .
} ORDER BY DESC(?date) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
412,Give me all actors starring in Last Action Hero.,"SELECT ?actor WHERE {
  dbr:Last_Action_Hero dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
413,Who discovered Pluto?,"SELECT ?person WHERE {
  dbr:Pluto dbo:discoverer ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
1,List all boardgames by GMT.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?boardgame WHERE {
  ?boardgame dbo:publisher dbr:GMT_Games.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
2,Who developed Skype?,"SELECT ?developer WHERE {
  dbr:Skype dbo:developer ?developer
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
3,Which people were born in Heraklion?,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person rdf:type dbo:Person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
4,In which U.S. state is Area 51 located?,"SELECT ?state WHERE {
  dbr:Area_51 dbo:location ?state .
  ?state dct:subject dbc:States_of_the_United_States .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
5,Who is the mayor of New York City?,"SELECT ?mayor WHERE {
  dbr:New_York_City dbo:leader ?mayor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
6,Which countries have places with more than two caves?,"SELECT ?country WHERE {
  ?place dbo:country ?country .
  ?place dbo:type dbr:Cave .
} GROUP BY ?country HAVING (COUNT(?place) > 2)",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
7,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
8,Which airports does Air China serve?,"SELECT ?airport WHERE {
  ?airport dbo:operator dbr:Air_China .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
9,Give me all actors starring in movies directed by and starring William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorName WHERE {
  ?movie dbo:director dbr:William_Shatner ;
         dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (LANG(?actorName) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
10,What are the official languages of the Philippines?,"SELECT ?language WHERE {
  dbr:Philippines dbo:officialLanguage ?language
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
11,Give me all Danish films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?film WHERE {
  ?film dbo:country dbr:Denmark .
  ?film rdf:type dbo:Film .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Brad_Pitt .
  ?movie dbo:director dbr:Guy_Ritchie .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
13,Give me the grandchildren of Bruce Lee.,"SELECT ?grandchild WHERE {
  dbr:Bruce_Lee dbo:child ?child .
  ?child dbo:child ?grandchild .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
14,Which other weapons did the designer of the Uzi develop?,"SELECT ?weapon WHERE {
  ?weapon dbo:designer ?designer .
  dbr:Uzi dbo:designer ?designer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
15,Who is the owner of Universal Studios?,"SELECT ?owner WHERE {
  dbr:Universal_Studios dbo:owner ?owner .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
16,Which state of the USA has the highest population density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:populationDensity ?populationDensity.
} ORDER BY DESC(?populationDensity) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
17,Which monarchs were married to a German?,"SELECT ?monarch ?monarchLabel WHERE {
  ?monarch dbo:spouse ?spouse .
  ?spouse dbo:birthPlace res:Germany .
  ?monarch dbo:occupation res:Monarch .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
18,Which organizations were founded in 1950?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear 1950 .
  ?organization rdf:type dbo:Organisation .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
19,Who created the comic Captain America?,"SELECT ?creator WHERE {
  dbr:Captain_America dbo:creator ?creator
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
20,Give me the Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
21,Who wrote the book The pillars of the Earth?,"SELECT ?author WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
22,Which state of the United States of America has the highest density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:populationDensity ?density.
} ORDER BY DESC(?density) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
23,Which spaceflights were launched from Baikonur?,"SELECT ?spaceflight WHERE {
  ?spaceflight dbo:launchSite dbr:Baikonur_Cosmodrome.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
24,Give me a list of all trumpet players that were bandleaders.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?player ?playerLabel WHERE {
  ?player dbo:instrument dbr:Trumpet ;
          rdf:type dbo:MusicalArtist ;
          dbo:occupation dbr:Bandleader .
  ?player rdfs:label ?playerLabel .
  FILTER (lang(?playerLabel) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
25,Which U.S. states are in the same timezone as Utah?,"SELECT ?state WHERE {
  ?state dbo:country dbr:United_States .
  ?state dbo:timeZone ?timezone .
  dbr:Utah dbo:timeZone ?utahTimezone .
  FILTER(?timezone = ?utahTimezone)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
26,Which U.S. states possess gold minerals?,"SELECT DISTINCT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbo:goldmine ?mine .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
27,Who is the daughter of Ingrid Bergman married to?,"SELECT ?spouse WHERE {
  ?person dbo:parent dbr:Ingrid_Bergman .
  ?person dbo:spouse ?spouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
28,How deep is Lake Placid?,"SELECT ?depth WHERE {
  dbr:Lake_Placid_(New_York) dbo:depth ?depth .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
29,Show me all museums in London.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?museum ?museumLabel WHERE {
  ?museum dbo:location dbr:London ;
          a dbo:Museum .
  ?museum rdfs:label ?museumLabel .
  FILTER (lang(?museumLabel) = ""en"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
30,Which caves have more than 3 entrances?,"SELECT ?cave WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbo:numberOfEntrances ?entrances .
  FILTER(?entrances > 3)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
31,Who is the tallest player of the Atlanta Falcons?,"SELECT ?player ?height WHERE {
  ?team dbo:abstract ?abstract .
  FILTER (lang(?abstract) = 'en') .
  FILTER (regex(?abstract, ""Atlanta Falcons"")) .
  ?player dbo:team ?team .
  ?player dbo:height ?height .
} ORDER BY DESC(?height) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
32,What are the top-10 action role-playing video games according to IGN?,"SELECT ?game WHERE {
  ?game rdf:type dbo:VideoGame ;
        dbo:genre dbr:Action_role-playing_game ;
        dbo:reviewScore ?score ;
        dbo:review ?review .
  ?review dbo:reviewer dbr:IGN .
} ORDER BY DESC(?score) LIMIT 10",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
33,Give me all writers that won the Nobel Prize in literature.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writer ?writerLabel WHERE {
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
  ?writer rdfs:label ?writerLabel .
  FILTER (lang(?writerLabel) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
34,Show me all basketball players that are higher than 2 meters.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?height
WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
  FILTER (?height > 2)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
35,When was the Statue of Liberty built?,"SELECT ?date WHERE {
  dbr:Statue_of_Liberty dbo:completionDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
36,Which states border Illinois?,"SELECT ?state WHERE {
  dbr:Illinois dbo:border ?state .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
37,Who developed Minecraft?,"SELECT ?developer WHERE {
  dbr:Minecraft dbo:developer ?developer
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
38,Where did Hillel Slovak die?,"SELECT ?place WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
39,What movies does Jesse Eisenberg play in?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg.
  ?movie rdf:type dbo:Film.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
40,Give all swimmers that were born in Moscow.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?swimmer WHERE {
  ?swimmer dbo:birthPlace dbr:Moscow .
  ?swimmer dbo:occupation dbr:Swimming_(sport) .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
41,Give me all cosmonauts.,"SELECT ?cosmonaut WHERE {
  ?cosmonaut dbo:occupation dbr:Cosmonaut .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
42,Give me all Swiss non-profit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?organization dbo:locationCountry dbr:Switzerland .
  ?organization dbo:type dbr:Non-profit_organization .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
43,Which presidents were born in 1945?,"SELECT ?president WHERE {
  ?president dbo:birthYear 1945 .
  ?president rdf:type dbo:President .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
44,What kind of music did Lou Reed play?,"SELECT ?genre WHERE {
  dbr:Lou_Reed dbo:genre ?genre .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
45,Where do the Red Sox play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?stadium
WHERE {
  res:Boston_Red_Sox dbo:ground ?stadium .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
46,Show a list of soccer clubs that play in the Bundesliga.,"SELECT ?club WHERE {
  ?club dbo:league dbr:Bundesliga .
  ?club rdf:type dbo:SoccerClub .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
47,Which volcanos in Japan erupted since 2000?,"SELECT ?volcano WHERE {
  ?volcano dbo:country dbr:Japan .
  ?volcano dbo:latestEruption ?date .
  FILTER (?date >= ""2000-01-01T00:00:00Z""^^xsd:dateTime)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
48,Which bridges cross the Seine?,"SELECT ?bridge WHERE {
  ?bridge dbo:crosses dbr:Seine.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
49,What is the official color of the University of Oxford?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?color WHERE {
  dbr:University_of_Oxford dbp:colors ?color .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
50,How many films did Hal Roach produce?,"SELECT (COUNT(?film) AS ?count) WHERE {
  ?film dbo:producer dbr:Hal_Roach.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
51,Give me all Danish movies.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?movie WHERE {
  ?movie dbo:country dbr:Denmark .
  ?movie rdf:type dbo:Film .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count) WHERE {
  ?person dbo:deathCause ?causeOfDeath .
} 
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
53,Who are the four youngest MVP basketball players?,"SELECT ?player ?age WHERE {
  ?player dbo:award dbr:NBA_Most_Valuable_Player_Award .
  ?player dbo:birthDate ?birthDate .
  BIND(year(now()) - year(?birthDate) AS ?age)
} ORDER BY ?age LIMIT 4",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
54,Give me all companies in Munich.,"SELECT ?company WHERE {
  ?company dbo:location dbr:Munich .
  ?company rdf:type dbo:Company .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
55,Give me the capitals of all countries that the Himalayas run through.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.rdfs.org/ns/void#>

SELECT DISTINCT ?capital ?capitalLabel WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country dbo:capital ?capital .
  ?capital rdfs:label ?capitalLabel .
  FILTER (lang(?capitalLabel) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
56,How many movies did Park Chan-wook direct?,"SELECT (COUNT(?movie) AS ?count) WHERE {
  ?movie dbo:director dbr:Park_Chan-wook.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
57,Which rivers flow into a German lake?,"SELECT ?river WHERE {
  ?river dbo:mouth ?lake .
  ?lake dbo:country dbr:Germany .
  ?river rdf:type dbo:River .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:type dbr:Airline .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
59,Give me all islands that belong to Japan.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island WHERE {
  ?island dbo:country dbr:Japan .
  ?island rdf:type dbo:Island .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
60,How many inhabitants does Maribor have?,"SELECT ?population WHERE {
  dbr:Maribor dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
61,Give me all Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
62,Which companies have more than 1 million employees?,"SELECT ?company WHERE {
  ?company dbo:numberOfEmployees ?employees .
  FILTER(?employees > 1000000)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
63,In which films directed by Garry Marshall was Julia Roberts starring?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Garry_Marshall .
  ?film dbo:starring dbr:Julia_Roberts .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
64,Give me all soccer clubs in the Premier League.,"SELECT ?club WHERE {
  ?club dbo:league dbr:Premier_League .
  ?club rdf:type dbo:SoccerClub .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
65,What is the highest place of the Urals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?place ?elevation
WHERE {
  ?place dbo:mountainRange dbr:Ural_Mountains.
  ?place dbo:elevation ?elevation.
}
ORDER BY DESC(?elevation)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
66,Who is the governor of Wyoming?,"SELECT ?governor WHERE {
  dbr:Wyoming dbo:leader ?governor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
67,Where did the architect of the Eiffel Tower study?,"SELECT ?university WHERE {
  dbr:Gustave_Eiffel dbo:almaMater ?university
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
68,Give me all world heritage sites designated within the past two years.,"Sorry, I can't generate a SPARQL query for this question as the DBpedia version from October 2016 doesn't contain data about events or designations that occurred within the past two years.",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
69,Give me all actors who were born in Paris after 1950.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Paris .
  ?actor dbo:birthDate ?date .
  ?actor rdf:type dbo:Actor .
  FILTER (?date > ""1950-01-01""^^xsd:date)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
70,Which movies star both Liz Taylor and Richard Burton?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor .
  ?movie dbo:starring dbr:Richard_Burton .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
71,Give me all Australian nonprofit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?organization dbo:locationCountry dbr:Australia .
  ?organization dbo:type dbr:Nonprofit_organization .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
72,Which pope succeeded John Paul II?,"SELECT ?pope WHERE {
  ?pope dbo:predecessor dbr:Pope_John_Paul_II .
  ?pope rdf:type yago:Pope110453713 .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
73,Give me all ESA astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dct:subject dbc:European_astronauts .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
74,Who was president of Pakistan in 1978?,"SELECT ?person WHERE {
  ?person dbo:office dbr:President_of_Pakistan .
  ?person dbo:termStart ?start .
  ?person dbo:termEnd ?end .
  FILTER (YEAR(?start) <= 1978 && YEAR(?end) >= 1978)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
75,Who is the owner of Rolls-Royce?,"SELECT ?owner WHERE {
  dbr:Rolls-Royce_Motor_Cars dbo:owner ?owner
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
76,How many museums does Paris have?,"SELECT (COUNT(?museum) AS ?count) WHERE {
  ?museum dbo:location dbr:Paris .
  ?museum rdf:type dbo:Museum .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
77,Where was JFK assassinated?,"SELECT ?place WHERE {
  dbr:Assassination_of_John_F._Kennedy dbo:location ?place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
78,Give me all federal chancellors of Germany.,"SELECT ?chancellor ?chancellorLabel WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
  ?chancellor rdfs:label ?chancellorLabel .
  FILTER (lang(?chancellorLabel) = ""en"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
79,Show me everyone who was born on Halloween.,"SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (datatype(?date) = xsd:date && MONTH(?date) = 10 && DAY(?date) = 31)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
80,Which beer originated in Ireland?,"SELECT ?beer WHERE {
  ?beer dbo:country dbr:Ireland .
  ?beer rdf:type dbo:Beer
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
81,To which countries does the Himalayan mountain system extend?,"SELECT ?country WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country rdf:type dbo:Country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
82,Which actors were born in Germany?,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Germany .
  ?actor rdf:type dbo:Actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
83,How much carbs does peanut butter have?,"SELECT ?carbs WHERE {
  dbr:Peanut_butter dbo:carbohydrate ?carbs .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?filmCount) WHERE {
  ?film dbo:producer ?producer .
} 
ORDER BY DESC(?filmCount) 
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
85,How many employees does Google have?,"SELECT ?employees WHERE {
  dbr:Google dbo:numberOfEmployees ?employees .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
86,Give me all actors who were born in Berlin.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Berlin .
  ?actor dbo:occupation dbr:Actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
87,Who created Goofy?,"SELECT ?creator WHERE {
  dbr:Goofy dbo:creator ?creator .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
88,Which music albums contain the song Last Christmas?,"SELECT ?album WHERE {
  ?song rdfs:label ""Last Christmas""@en.
  ?song dbo:album ?album.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
89,When was Alberta admitted as province?,"SELECT ?date WHERE {
  dbr:Alberta dbo:formationDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
90,How many missions does the Soyuz programme have?,"SELECT (COUNT(?mission) AS ?count) WHERE {
  ?mission dbo:programme dbr:Soyuz_programme.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
91,Give me all the TV shows with Neil Patrick Harris.,"SELECT ?show WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris.
  ?show rdf:type dbo:TelevisionShow.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
92,When were the Hells Angels founded?,"SELECT ?date WHERE {
  dbr:Hells_Angels dbo:foundingDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
93,What is the net income of Apple?,"SELECT ?netIncome WHERE {
  dbr:Apple_Inc. dbo:netIncome ?netIncome .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
94,Give me all Swedish holidays.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?holiday WHERE {
  ?holiday dbo:country dbr:Sweden .
  ?holiday rdf:type dbo:Holiday .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
95,In which city was the former Dutch queen Juliana buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  res:Juliana_of_the_Netherlands dbo:deathPlace ?city .
  ?city rdf:type dbo:City .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
96,List all the musicals with music by Leonard Bernstein.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
97,Give me all companies in the advertising industry.,"SELECT ?company WHERE {
  ?company dct:subject dbc:Advertising_agencies.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
98,What is the largest metropolitan area in Washington state?,"SELECT ?city WHERE {
  ?city dbo:isPartOf dbr:Washington_(state) .
  ?city dbo:populationMetro ?population .
} ORDER BY DESC(?population) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
99,Who killed John Lennon?,"SELECT ?killer WHERE {
  dbr:John_Lennon dbo:deathCause ?killer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
100,Which writers studied in Istanbul?,"SELECT ?writer WHERE {
  ?writer dbo:education ?education .
  ?education dbo:city dbr:Istanbul .
  ?writer rdf:type dbo:Writer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
101,Give me all Australian metalcore bands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?band
WHERE {
  ?band dbo:genre dbr:Metalcore .
  ?band dbo:origin dbr:Australia .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
102,Which countries adopted the Euro?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
103,Give me all types of eating disorders.,"SELECT ?eatingDisorder WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
104,Was Marc Chagall a jew?,"SELECT ?answer WHERE {
  dbr:Marc_Chagall dbo:ethnicity ?ethnicity .
  FILTER (str(?ethnicity) = ""Jews"")
  BIND(""Yes"" AS ?answer)
} UNION {
  FILTER NOT EXISTS { dbr:Marc_Chagall dbo:ethnicity ?ethnicity }
  BIND(""No information available"" AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT ?lowestRank WHERE {
  dbr:Brazil_national_football_team dbo:lowestRank ?lowestRank .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
106,How many films did Leonardo DiCaprio star in?,"SELECT COUNT(?film) WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
107,Was Margaret Thatcher a chemist?,"SELECT ?answer WHERE {
  dbr:Margaret_Thatcher dbo:occupation ?occupation .
  BIND(EXISTS { ?occupation rdfs:label ?label . FILTER(LANG(?label) = ""en"" && REGEX(?label, ""chemist"", ""i"")) } AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
108,Which U.S. states are in the same time zone as Utah?,"SELECT ?state WHERE {
  dbr:Utah dbo:timeZone ?timeZone .
  ?state dbo:timeZone ?timeZone .
  ?state dbo:country dbr:United_States .
  FILTER (?state != dbr:Utah)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
109,Give me all books written by Danielle Steel.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  ?book dbo:author dbr:Danielle_Steel .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = ""en"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
110,Which country has the most official languages?,"SELECT ?country WHERE {
  ?country a dbo:Country.
  {
    SELECT ?country (COUNT(?language) AS ?languageCount) WHERE {
      ?country dbo:officialLanguage ?language.
    } GROUP BY ?country
  } ORDER BY DESC(?languageCount) LIMIT 1
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
111,What is the total amount of men and women serving in the FDNY?,"SELECT ?totalMen ?totalWomen WHERE {
  dbr:New_York_City_Fire_Department dbo:numberOfMaleMembers ?totalMen .
  dbr:New_York_City_Fire_Department dbo:numberOfFemaleMembers ?totalWomen .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
112,Which actor played Chewbacca?,"SELECT ?actor WHERE {
  dbr:Chewbacca dbo:portrayer ?actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
113,Give me all libraries established earlier than 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library WHERE {
  ?library dbo:established ?date .
  ?library rdf:type dbo:Library .
  FILTER (?date < ""1400-01-01""^^xsd:date) .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
114,Which programming languages were influenced by Perl?,"SELECT ?lang WHERE {
  ?lang dbo:influencedBy dbr:Perl.
  ?lang rdf:type dbo:ProgrammingLanguage.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
115,In which U.S. state is Mount McKinley located?,"SELECT ?state WHERE {
  dbr:Denali dbo:location ?state .
  ?state dct:subject dbc:States_of_the_United_States .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
116,What airlines are part of the SkyTeam alliance?,"SELECT ?airline WHERE {
  ?airline dbo:alliance dbr:SkyTeam .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
117,Which ships were called after Benjamin Franklin?,"SELECT ?ship WHERE {
  ?ship dbo:namesake dbr:Benjamin_Franklin .
  ?ship rdf:type dbo:Ship .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
118,Give me all Methodist politicians.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Politician .
  ?person dbo:religion dbr:Methodism .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
119,What other books have been written by the author of The Fault in Our Stars?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  dbr:The_Fault_in_Our_Stars dbo:author ?author .
  ?book dbo:author ?author .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
120,What is the highest mountain?,"SELECT ?mountain ?elevation WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
121,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet.
  ?poet rdf:type dbo:Poet.
}
ORDER BY DESC(?bookCount)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
122,Which programming languages influenced Javascript?,"SELECT ?lang WHERE {
  dbr:JavaScript dbo:influencedBy ?lang .
  ?lang rdf:type dbo:ProgrammingLanguage .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
123,Which musician wrote the most books?,"SELECT ?musician (COUNT(?book) AS ?bookCount) WHERE {
  ?musician rdf:type dbo:MusicalArtist.
  ?book dbo:author ?musician.
} 
ORDER BY DESC(?bookCount) 
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
124,Which films starring Clint Eastwood did he direct himself?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Clint_Eastwood .
  ?film dbo:director dbr:Clint_Eastwood .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
125,Which software has been developed by organizations founded in California?,"SELECT ?software WHERE {
  ?org dbo:foundingLocation dbr:California .
  ?org dbo:product ?software .
  ?software rdf:type dbo:Software
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
126,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
127,How many airlines are members of the Star Alliance?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:alliance dbr:Star_Alliance.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
128,Give me all actors called Baldwin.,"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor foaf:name ?name .
  FILTER(CONTAINS(?name, ""Baldwin""))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
129,Who wrote The Hunger Games?,"SELECT ?author WHERE {
  dbr:The_Hunger_Games ?p dbo:author ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
130,For which label did Elvis record his first album?,"SELECT ?label WHERE {
  dbr:Elvis_Presley dbo:recordLabel ?label .
  ?album dbo:artist dbr:Elvis_Presley ;
         dbo:releaseDate ?date .
} ORDER BY ?date LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
131,Is Christian Bale starring in Batman Begins?,"SELECT ?film WHERE {
  dbr:Christian_Bale dbo:starring ?film .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Batman_Begins"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
132,Where is the residence of the prime minister of Spain?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:Prime_Minister_of_Spain dbo:residence ?residence .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?movie) AS ?movieCount)
WHERE {
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}
ORDER BY DESC(?movieCount)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
134,Which countries have more than two official languages?,"SELECT ?country WHERE {
  ?country rdf:type dbo:Country.
  ?country dbo:officialLanguage ?language.
} GROUP BY ?country HAVING (COUNT(?language) > 2)",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
135,Which countries have more than ten caves?,"SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:type dbr:Cave .
  ?cave dbo:location ?country .
  ?country rdf:type dbo:Country .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 10)",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?song ?releaseDate WHERE {
  ?song dbo:musicalArtist <http://dbpedia.org/resource/Bruce_Springsteen> .
  ?song dbp:released ?releaseDate .
  FILTER (xsd:dateTime(?releaseDate) >= ""1980-01-01T00:00:00Z""^^xsd:dateTime && xsd:dateTime(?releaseDate) <= ""1990-12-31T23:59:59Z""^^xsd:dateTime)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
137,Which television shows were created by John Cleese?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:John_Cleese.
  ?show rdf:type dbo:TelevisionShow.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
138,When did Latvia join the EU?,"SELECT ?date WHERE { 
  dbr:Latvia dbo:EUAccession ?date . 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
139,Which soccer players were born on Malta?,"SELECT ?player WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player rdf:type dbo:SoccerPlayer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
140,How many politicians graduated from Columbia University?,"SELECT (COUNT(?person) AS ?count) WHERE {
  ?person dbo:almaMater dbr:Columbia_University .
  ?person rdf:type dbo:Politician .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
141,Give me the birthdays of all actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?birthday WHERE {
  ?show dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
  FILTER (?show = dbr:Charmed)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
142,Which telecommunications organizations are located in Belgium?,"SELECT ?organization WHERE {
  ?organization dbo:industry dbr:Telecommunications.
  ?organization dbo:locationCountry dbr:Belgium.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
143,Give me a list of all lakes in Denmark.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lake WHERE {
  ?lake dbo:country dbr:Denmark .
  ?lake rdf:type dbo:Lake .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
144,How many children does Eddie Murphy have?,"SELECT ?children WHERE {
  dbr:Eddie_Murphy dbo:children ?children
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
145,Show me all English Gothic buildings in Kent.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?building WHERE {
  ?building dbo:architecturalStyle dbr:English_Gothic_architecture ;
            dbo:location dbr:Kent .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
146,Who is the manager of Real Madrid?,"SELECT ?manager WHERE {
  dbr:Real_Madrid_C.F. dbo:manager ?manager .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
147,In which countries can you pay using the West African CFA franc?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
148,Which holidays are celebrated around the world?,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
149,What is the longest river?,"SELECT ?river ?length WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
150,Which organizations were founded in 1930?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear 1930 .
  ?organization rdf:type dbo:Organisation .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
151,What is the birth name of Angela Merkel?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
152,Who has Tom Cruise been married to?,"SELECT ?spouse WHERE {
  dbr:Tom_Cruise dbo:spouse ?spouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
153,Which weapons did Heckler & Koch develop?,"SELECT ?weapon WHERE {
  ?weapon dbo:manufacturer dbr:Heckler_&_Koch .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
154,What is the smallest city by area in Germany?,"SELECT ?city WHERE {
  ?city dbo:country dbr:Germany.
  ?city dbo:areaTotal ?area.
} ORDER BY ASC(?area) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
155,What is the ruling party in Lisbon?,"SELECT ?party WHERE {
  dbr:Lisbon dbo:leaderParty ?party .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
156,How heavy is Jupiter's lightest moon?,"SELECT ?mass WHERE {
  ?moon dbo:parent dbr:Jupiter .
  ?moon dbo:mass ?mass .
} ORDER BY ASC(?mass) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
157,How many employees does IBM have?,"SELECT ?employees WHERE {
  dbr:IBM dbo:numberOfEmployees ?employees .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
158,List all episodes of the first season of the HBO television series The Sopranos!,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?episode ?episodeLabel WHERE {
  ?season dbo:series dbr:The_Sopranos ;
          dbo:seasonNumber ""1""^^xsd:integer ;
          dbo:episode ?episode .
  ?episode rdfs:label ?episodeLabel .
  FILTER (lang(?episodeLabel) = ""en"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
159,What does ICRO stand for?,"SELECT ?description WHERE {
  dbr:ICRO rdfs:comment ?description .
  FILTER (lang(?description) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
160,Does the new Battlestar Galactica series have more episodes than the old one?,"# Query for the new Battlestar Galactica series
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?numberOfEpisodes WHERE {
  ?series rdfs:label ""Battlestar Galactica (2004 TV series)""@en .
  ?series dbo:numberOfEpisodes ?numberOfEpisodes .
}

# Query for the old Battlestar Galactica series
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?numberOfEpisodes WHERE {
  ?series rdfs:label ""Battlestar Galactica (1978 TV series)""@en .
  ?series dbo:numberOfEpisodes ?numberOfEpisodes .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
161,Give me all films produced by Hal Roach.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?filmLabel WHERE {
  ?film dbo:producer dbr:Hal_Roach.
  ?film rdfs:label ?filmLabel.
  FILTER (lang(?filmLabel) = ""en"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
162,Who played Agent Smith in Matrix?,"SELECT ?actor WHERE {
  dbr:The_Matrix dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
  FILTER regex(?actorLabel, ""Hugo Weaving"", ""i"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
163,Which Greek parties are pro-European?,"SELECT ?party WHERE {
  ?party dbo:country dbr:Greece .
  ?party dbo:ideology dbr:Pro-Europeanism .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
164,Give me a list of all bandleaders that play trumpet.,"SELECT ?bandleader WHERE {
  ?bandleader dbo:instrument dbr:Trumpet .
  ?bandleader rdf:type dbo:BandLeader .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
165,What is the second highest mountain on Earth?,"SELECT ?mountain WHERE {
  ?mountain dbo:rank 2 ;
             rdf:type dbo:Mountain .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
166,Is Egypts largest city also its capital?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

ASK WHERE {
  dbr:Egypt dbo:capital ?capital .
  dbr:Egypt dbo:largestCity ?largestCity .
  FILTER (?capital = ?largestCity)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
167,Which rockets were launched from Baikonur?,"SELECT ?rocket WHERE {
  ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
168,How many programming languages are there?,"SELECT (COUNT(?programmingLanguage) AS ?count) WHERE {
  ?programmingLanguage dbo:wikiPageID ?id .
  ?programmingLanguage rdf:type dbo:ProgrammingLanguage .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
169,Which Chess players died in the same place they were born in?,"SELECT ?player ?place WHERE {
  ?player dbo:deathPlace ?place .
  ?player dbo:birthPlace ?place .
  ?player rdf:type dbo:ChessPlayer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
170,Who is the owner of Facebook?,"SELECT ?owner WHERE {
  dbr:Facebook dbo:owner ?owner
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
171,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdf:type dbo:Film.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
172,In which U.S. state is Fort Knox located?,"SELECT ?state WHERE {
  dbr:Fort_Knox dbo:location ?location .
  ?location dbo:isPartOf ?state .
  ?state dbo:country dbr:United_States .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?city ?population
WHERE {
  ?city dbo:isPartOf <http://dbpedia.org/resource/New_Jersey> ;
        a dbo:City ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
174,Which mountains are higher than the Nanga Parbat?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?height
WHERE {
  ?mountain dbo:elevation ?height .
  ?mountain rdf:type dbo:Mountain .
  ?nanga dbo:elevation ?nangaHeight .
  FILTER(?height > ?nangaHeight) .
  FILTER(?nanga = res:Nanga_Parbat)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
175,Give me all B-sides of the Ramones.,"SELECT ?bside WHERE {
  ?song dbo:artist dbr:Ramones .
  ?song dbo:B-side ?bside .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
176,What are the specialities of the UNC Health Care?,"SELECT ?speciality WHERE {
  dbr:UNC_Health_Care dbo:speciality ?speciality
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
177,When was Olof Palme shot?,"SELECT ?date WHERE {
  dbr:Olof_Palme dbo:deathDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
178,List the seven kings of Rome.,"SELECT ?king WHERE {
  ?king dbo:monarchOf dbr:Kingdom_of_Rome .
} LIMIT 7",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
179,Give me all people that were born in Vienna and died in Berlin.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Vienna .
  ?person dbo:deathPlace dbr:Berlin .
  ?person a dbo:Person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
180,Is Darth Vader Luke’s father?,"SELECT ?answer WHERE {
  dbpedia:Darth_Vader dbpedia-owl:child dbpedia:Luke_Skywalker.
  BIND(""Yes"" AS ?answer)
} UNION {
  FILTER NOT EXISTS { dbpedia:Darth_Vader dbpedia-owl:child dbpedia:Luke_Skywalker. }
  BIND(""No"" AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
181,Show me all the breweries in Australia.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?brewery WHERE {
  ?brewery dbo:location dbr:Australia .
  ?brewery rdf:type dbo:Brewery .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?film WHERE {
  ?film dbo:director dbr:Steven_Spielberg .
  ?film dbo:budget ?budget .
  FILTER (?budget >= 80000000^^xsd:decimal)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
183,Give me all soccer clubs in Spain.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:location dbr:Spain .
  ?club rdf:type dbo:SoccerClub .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
184,Who produced films starring Natalie Portman?,"SELECT DISTINCT ?producer WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
185,Give me all breeds of the German Shepherd dog.,"SELECT ?breed WHERE {
  dbr:German_Shepherd dbo:breed ?breed .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Chicago_Bulls> .
  ?player dbo:weight ?weight .
} ORDER BY DESC(?weight) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
187,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
188,What is the largest country in the world?,"SELECT ?country WHERE {
  ?country rdf:type dbo:Country .
  OPTIONAL { ?country dbo:areaTotal ?area }
} ORDER BY DESC(?area) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
189,What is the largest city in america?,"SELECT ?city WHERE {
  ?city dct:subject dbc:Cities_in_the_United_States.
  ?city dbo:populationTotal ?population.
} ORDER BY DESC(?population) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
190,Who was the pope that founded the Vatican Television?,"SELECT ?pope WHERE {
  ?pope dbo:positionHeld dbr:Pope .
  ?pope dbo:founded dbr:Vatican_Television_Center .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
191,Who discovered Ceres?,"SELECT ?person WHERE {
  dbr:Ceres_(dwarf_planet) dbo:discoverer ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
192,Who is the king of the Netherlands?,"SELECT ?king WHERE {
  dbr:Netherlands dbo:monarch ?king .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
193,Is Cola a beverage?,"SELECT ?answer WHERE { 
  dbr:Cola rdf:type ?type .
  ?type rdfs:subClassOf* dbo:Beverage .
  BIND(""Yes"" AS ?answer)
} UNION {
  FILTER NOT EXISTS { dbr:Cola rdf:type ?type . ?type rdfs:subClassOf* dbo:Beverage }
  BIND(""No"" AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  res:Angela_Merkel dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?label .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
195,Who wrote the book Les Piliers de la terre?,"SELECT ?author WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
196,Which airports does Yeti Airlines serve?,"SELECT ?airport WHERE {
  ?airline dbo:wikiPageID ?id .
  ?airline rdfs:label ?label .
  FILTER (lang(?label) = 'en' && ?label = ""Yeti Airlines"") .
  ?airport dbo:operator ?airline .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
197,Where is the birthplace of Goethe?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthPlace .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"SELECT ?cubanMissileCrisisDate ?bayOfPigsInvasionDate WHERE {
  dbr:Cuban_Missile_Crisis dbo:date ?cubanMissileCrisisDate .
  dbr:Bay_of_Pigs_Invasion dbo:date ?bayOfPigsInvasionDate .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
199,Which ingredients do I need for carrot cake?,"SELECT ?ingredient WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
200,Who created Wikipedia?,"SELECT ?creator WHERE { 
  dbr:Wikipedia dbo:creator ?creator 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
201,What is the highest mountain in Saxony Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:location <http://dbpedia.org/resource/Saxony> ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
202,Who is the current federal minister of finance in Germany?,"SELECT ?person WHERE {
  ?person dbp:office dbr:Minister_of_Finance_(Germany) .
  ?person dbp:termEnd ""present"" .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
203,In which country is Mecca located?,"SELECT ?country WHERE {
  dbr:Mecca dbo:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor WHERE {
  ?show dbo:starring ?actor .
  ?show rdfs:label ""Breaking Bad""@en .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = ""en"") .
  ?actor dbo:abstract ?abstract .
  FILTER (lang(?abstract) = ""en"") .
  FILTER regex(?abstract, ""Gus Fring"") .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
205,In which country does the Nile start?,"SELECT ?country WHERE {
  dbr:Nile dbo:sourceCountry ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
206,In which state Penn State University is located?,"SELECT ?state WHERE {
  dbr:Pennsylvania_State_University dbo:location ?location .
  ?location dbo:isPartOf ?state .
  ?state rdf:type dbo:State .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
207,What is the biggest stadium in Spain?,"SELECT ?stadium ?capacity
WHERE {
  ?stadium dbo:location dbr:Spain ;
           dbo:capacity ?capacity .
}
ORDER BY DESC(?capacity)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach WHERE {
  ?team dbo:location dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
209,How large is the area of UK?,"SELECT ?area WHERE {
  dbr:United_Kingdom dbo:areaTotal ?area .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
210,Who created Batman?,"SELECT ?creator WHERE { 
  dbr:Batman dbo:creator ?creator 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
211,Was Sigmund Freud married?,"SELECT ?answer WHERE {
  dbr:Sigmund_Freud dbo:spouse ?answer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
212,Who are the developers of DBpedia?,"SELECT ?developer WHERE {
  dbr:DBpedia dbo:developer ?developer
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
213,Give me all movies directed by Francis Ford Coppola.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola.
  ?movie rdf:type dbo:Film.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
214,Are tree frogs a type of amphibian?,"SELECT ?answer WHERE {
  dbr:Tree_frog rdf:type ?type .
  ?type rdfs:subClassOf* dbc:Amphibians .
  BIND(""Yes"" AS ?answer)
} UNION {
  FILTER NOT EXISTS { dbr:Tree_frog rdf:type ?type . ?type rdfs:subClassOf* dbc:Amphibians }
  BIND(""No"" AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
215,What is the location of the Houses of Parliament?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?location WHERE { res:Palace_of_Westminster dbo:location ?location . }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
216,how much is the elevation of Düsseldorf Airport ?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?elevation WHERE {
  res:Düsseldorf_Airport dbo:elevation ?elevation .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
217,How much is the population of mexico city ?,"SELECT ?population WHERE {
  dbr:Mexico_City dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
218,when was the founding date of french fifth republic?,"SELECT ?date WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
219,Who was the first King of England?,"SELECT ?person WHERE {
  ?person dbo:successor ?successor .
  ?person dbo:title ?title .
  ?title rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER regex(?label, ""King of England"") .
  FILTER NOT EXISTS { ?person dbo:predecessor ?anyPredecessor . }
} LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
220,Who is the editor of Forbes?,"SELECT ?editor WHERE {
  dbr:Forbes dbo:editor ?editor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
221,Which awards did Douglas Hofstadter win?,"SELECT ?award WHERE {
  dbr:Douglas_Hofstadter dbo:award ?award .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
222,Who is the youngest Darts player?,"SELECT ?player ?birthDate WHERE {
  ?player dbo:occupation dbr:Darts ;
          dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
223,Is horse racing a sport?,"SELECT ?answer WHERE { 
  dbr:Horse_racing rdf:type ?type .
  ?type rdfs:label ?answer .
  FILTER (lang(?answer) = 'en') .
  FILTER (str(?answer) = 'sport') 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
  ?river rdf:type dbo:River .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
225,How many people live in Poland?,"SELECT ?population WHERE {
  dbr:Poland dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
226,When was the last episode of the TV series Friends aired?,"SELECT ?date WHERE {
  dbr:Friends dbo:finalEpisode ?episode .
  ?episode dbo:releaseDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
227,Is the wife of president Obama called Michelle?,"SELECT ?answer WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Michelle Obama"") .
  BIND(""Yes"" AS ?answer)
} UNION {
  dbr:Barack_Obama dbo:spouse ?spouse .
  FILTER (str(?spouse) != ""Michelle Obama"") .
  BIND(""No"" AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
229,Who is 8th president of US?,"SELECT ?president WHERE {
  ?president dbo:orderInOffice 8 .
  ?president rdf:type dbo:President .
  ?president dbo:country dbr:United_States .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
230,how much is the total population of  european union?,"SELECT ?population WHERE {
  dbr:European_Union dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
231,Give me all launch pads operated by NASA.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?launch_pad WHERE {
  ?launch_pad dbo:operator dbr:NASA .
  ?launch_pad rdf:type dbo:Place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
232,Who developed the video game World of Warcraft?,"SELECT ?developer WHERE {
  dbr:World_of_Warcraft dbo:developer ?developer
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
233,What is the birth name of Adele?,"SELECT ?birthName WHERE {
  dbr:Adele dbo:birthName ?birthName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
234,What is the population of Cairo?,"SELECT ?population WHERE {
  dbr:Cairo dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
235,Is Frank Herbert still alive?,"SELECT ?deathDate WHERE {
  dbr:Frank_Herbert dbo:deathDate ?deathDate .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
236,What is the last work of Dan Brown?,"SELECT ?work ?date WHERE {
  ?person foaf:name ""Dan Brown""@EN.
  ?work dbo:author ?person.
  ?work dbo:publicationDate ?date.
} ORDER BY DESC(?date) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
237,Where is Sungkyunkwan University?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  res:Sungkyunkwan_University dbo:location ?location .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
238,Who is the author of the interpretation of dreams?,"SELECT ?author WHERE {
  dbr:The_Interpretation_of_Dreams dbo:author ?author
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
239,When was the death  of  Shakespeare?,"SELECT ?deathDate WHERE {
  dbr:William_Shakespeare dbo:deathDate ?deathDate .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
241,Who developed Slack?,"SELECT ?developer WHERE {
  dbr:Slack_(software) dbo:developer ?developer
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
242,Where is the origin of Carolina reaper?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?origin WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
243,In which year was Rachel Stevens born?,"SELECT ?birthYear WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
244,How often did Jane Fonda marry?,"SELECT (COUNT(?s) AS ?count) WHERE {
  ?s dbo:spouse dbr:Jane_Fonda.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
245,Was the wife of president Lincoln called Mary?,"SELECT ?answer WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Mary Todd Lincoln"")
  BIND(EXISTS{dbr:Abraham_Lincoln dbo:spouse dbr:Mary_Todd_Lincoln} AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
246,Which cities does the Weser flow through?,"SELECT ?city WHERE {
  ?city dbo:river dbr:Weser .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
247,In which programming language is GIMP written?,"SELECT ?language WHERE {
  dbr:GIMP dbo:programmingLanguage ?language .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
248,Which university did Angela Merkel attend?,"SELECT ?university WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
249,List all the musicals with music by Elton John.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
250,How many Aldi stores are there?,"SELECT (COUNT(?store) AS ?count) WHERE {
  ?store dbo:owner dbr:Aldi.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
251,What is the longest river in the world?,"SELECT ?river ?length WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
252,When was John Adams born?,"SELECT ?birthDate WHERE {
  dbr:John_Adams dbo:birthDate ?birthDate .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
253,Which companies produce hovercrafts?,"SELECT ?company WHERE {
  ?company dbo:product ?product .
  ?product rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER (contains(lcase(str(?label)), ""hovercraft"")) .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
254,Who was the wife of U.S. president Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
255,Which species does an elephant belong?,"SELECT ?species WHERE {
  dbr:Elephant dbo:species ?species .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
256,How many people live in the capital of Australia?,"SELECT ?population WHERE {
  dbr:Canberra dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
257,In which ancient empire could you pay with cocoa beans?,"SELECT ?empire WHERE {
  ?empire dbo:currency dbr:Cocoa_bean.
  ?empire dbo:era dbr:Ancient_history.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
258,How many theories did Albert Einstein come up with?,"SELECT (COUNT(?theory) AS ?count) WHERE {
  ?theory dbo:discoverer dbr:Albert_Einstein.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
259,Who composed the soundtrack for Cameron's Titanic?,"SELECT ?composer WHERE {
  dbr:Titanic_(1997_film) dbo:musicComposer ?composer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
260,Give me the runtime of Toy Story.,"SELECT ?runtime WHERE {
  dbr:Toy_Story dbo:runtime ?runtime .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
262,With how many countries Iran has borders?,"SELECT COUNT(?country) WHERE {
  dbr:Iran dbo:landArea ?landArea .
  ?country dbo:landArea ?landArea2 .
  ?country dbo:border dbr:Iran .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
263,Which electronics companies were founded in Beijing?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Electronics.
  ?company dbo:foundingLocation dbr:Beijing.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
264,Who was the successor of John F. Kennedy?,"SELECT ?successor WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
265,Who is the mayor of Paris?,"SELECT ?mayor WHERE {
  dbr:Paris dbo:mayor ?mayor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
266,Did Arnold Schwarzenegger attend a university?,"SELECT ?university WHERE {
  dbr:Arnold_Schwarzenegger dbo:almaMater ?university .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
267,Is James Bond married?,"SELECT ?answer WHERE {
  dbr:James_Bond dbo:spouse ?answer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
268,Does the Isar flow into a lake?,"SELECT ?answer WHERE {
  dbr:Isar dbo:mouth ?mouth.
  ?mouth rdf:type dbo:Lake.
  BIND(""Yes"" AS ?answer)
} UNION {
  FILTER NOT EXISTS { dbr:Isar dbo:mouth ?mouth. ?mouth rdf:type dbo:Lake. }
  BIND(""No"" AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
269,Which Indian company has the most employees?,"SELECT ?company WHERE {
  ?company dbo:locationCountry dbr:India .
  ?company dbo:numberOfEmployees ?employees .
} ORDER BY DESC(?employees) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
270,Who was John F. Kennedy's vice president?,"SELECT ?vicePresident WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
271,Which country does the creator of Miffy come from?,"SELECT ?country WHERE {
  ?person dbo:knownFor ?work .
  ?work foaf:name ""Miffy""@en .
  ?person dbo:birthPlace ?place .
  ?place dbo:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
273,In what city is the Heineken brewery?,"SELECT ?city WHERE {
  dbr:Heineken_Brewery dbo:location ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
274,Is Barack Obama a democrat?,"SELECT ?party WHERE {
  dbr:Barack_Obama dbo:party ?party .
  FILTER (?party = dbr:Democratic_Party_(United_States))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
275,List the children of Margaret Thatcher.,"SELECT ?child WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
276,From which region is the Melon de Bourgogne?,"SELECT ?region WHERE {
  dbr:Melon_de_Bourgogne dbo:region ?region .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
278,how big is the total area of North Rhine- Westphalia?,"SELECT ?area WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?area .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
279,Which city has the most inhabitants?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City.
  ?city dbo:populationTotal ?population.
} ORDER BY DESC(?population) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
280,What is Donald Trump's main business?,"SELECT ?business WHERE {
  dbr:Donald_Trump dbo:occupation ?business .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
281,When will start the final match of the football world cup 2018?,"SELECT ?date WHERE {
  dbr:2018_FIFA_World_Cup_Final dbo:startTime ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
282,Which films did Stanley Kubrick direct?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Stanley_Kubrick.
  ?film rdf:type dbo:Film.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
283,how much is the population  Iraq?,"SELECT ?population WHERE {
  dbr:Iraq dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Canada ;
        dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
285,Who is the mayor of the capital of French Polynesia?,"SELECT ?mayor WHERE {
  dbr:Papeete dbo:mayor ?mayor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
286,Give me all actors starring in movies directed by William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?actorLabel WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
287,How tall is Claudia Schiffer?,"SELECT ?height WHERE {
  dbr:Claudia_Schiffer dbo:height ?height.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
288,how much is the population densty rank of germany?,"SELECT ?populationDensityRank WHERE {
  dbr:Germany dbo:populationDensityRank ?populationDensityRank .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
289,What is the highest mountain in Italy?,"SELECT ?mountain ?elevation WHERE {
  ?mountain dbo:country dbr:Italy ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
290,List all games by GMT.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?game WHERE {
  ?game dbo:publisher dbr:GMT_Games .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
291,What is the official language of Suriname?,"SELECT ?officialLanguage WHERE {
  dbr:Suriname dbo:officialLanguage ?officialLanguage .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
292,In which city did Nikos Kazantzakis die?,"SELECT ?city WHERE {
  dbr:Nikos_Kazantzakis dbo:deathPlace ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
293,What is in a chocolate chip cookie?,"SELECT ?ingredient WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
294,In which country is the Limerick Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?country 
WHERE {
  res:Limerick_Lake dbo:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
295,Give me all video games published by Mean Hamster Software.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?videogame WHERE {
  ?videogame dbo:publisher dbr:Mean_Hamster_Software.
  ?videogame rdf:type dbo:VideoGame.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
296,Give me all members of Prodigy.,"SELECT ?member WHERE {
  dbr:Prodigy_(band) dbo:bandMember ?member .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
297,In which time zone is Rome?,"SELECT ?timezone WHERE {
  dbr:Rome dbo:timeZone ?timezone .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
298,How high is the lighthouse in Colombo?,"SELECT ?height WHERE {
  dbr:Colombo_Lighthouse dbo:height ?height .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
299,Who are the writers of the Wall album of Pink Floyd?,"SELECT ?writer WHERE {
  dbr:The_Wall dbo:writer ?writer
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
300,Who is the mayor of Rotterdam?,"SELECT ?mayor WHERE {
  dbr:Rotterdam dbp:leader ?mayor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
301,What is the largest city in Australia?,"SELECT ?city WHERE {
  ?city dbo:country dbr:Australia .
  ?city dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
302,Who was married to president Chirac?,"SELECT ?spouse WHERE {
  dbr:Jacques_Chirac dbo:spouse ?spouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
303,What form of government is found in South Africa?,"SELECT ?government WHERE {
  dbr:South_Africa dbo:governmentType ?government
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
304,How high is the Yokohama Marine Tower?,"SELECT ?height WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
305,Which holidays are celebrated around the world? test2,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
306,Who is the tallest basketball player?,"SELECT ?player ?height WHERE {
  ?player dbo:height ?height .
  ?player rdf:type dbo:BasketballPlayer .
} ORDER BY DESC(?height) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
307,How many languages are spoken in Turkmenistan?,"SELECT (COUNT(?language) AS ?count) WHERE {
  dbr:Turkmenistan dbo:language ?language .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
308,Did Che Guevara have children?,"SELECT ?child WHERE {
  dbr:Che_Guevara dbo:child ?child .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Aki_Kaurismäki .
  ?film dbo:award dbr:Grand_Prix_(Cannes_Film_Festival) .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
310,To which party does the mayor of Paris belong?,"SELECT ?party WHERE {
  ?mayor dbp:office ""Mayor of Paris"" .
  ?mayor dbp:party ?party .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver WHERE {
  ?driver dbo:wikiPageRedirects dbr:List_of_Formula_One_Grand_Prix_starts_by_drivers.
  ?driver rdf:type dbo:FormulaOneRacer.
} ORDER BY DESC(?races) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
312,What country is Sitecore from?,"SELECT ?country WHERE {
  dbr:Sitecore dbo:locationCountry ?country.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
314,Is Christian Bale starring in Velvet Goldmine?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Velvet_Goldmine"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_Bono, dbr:Cher.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
316,How many ethnic groups live in Slovenia?,"SELECT ?ethnicGroup WHERE {
  dbr:Slovenia dbo:ethnicGroup ?ethnicGroup
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
317,What is the capital of Cameroon?,"SELECT ?capital WHERE {
  dbr:Cameroon dbo:capital ?capital .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
318,Was Natalie Portman born in the United States?,"SELECT ?answer WHERE {
  dbr:Natalie_Portman dbo:birthPlace ?place .
  ?place rdfs:label ?answer .
  FILTER (lang(?answer) = 'en')
  FILTER CONTAINS(?answer, ""United States"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
319,How many pages does War and Peace have?,"SELECT ?pages WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?pages .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
320,Who is the oldest child of Meryl Streep?,"SELECT ?child WHERE {
  dbr:Meryl_Streep dbo:child ?child .
  ?child dbo:birthDate ?birthdate .
} ORDER BY ASC(?birthdate) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
321,Which television shows were created by Walt Disney?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
322,What does IYCM stand for?,"SELECT ?description WHERE {
  ?s rdfs:label ""IYCM""@en .
  ?s rdfs:comment ?description .
  FILTER (lang(?description) = ""en"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
323,Which types of grapes grow in Oregon?,"SELECT ?grape WHERE {
  ?vineyard dbo:location dbr:Oregon .
  ?vineyard dbo:grapeVarieties ?grape .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
324,Was U.S. president Jackson involved in a war?,"SELECT ?war WHERE {
  dbr:Andrew_Jackson dbo:militaryConflict ?war
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
325,When was the Titanic completed?,"SELECT ?date WHERE {
  dbr:RMS_Titanic dbo:completionDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
326,Did Tesla win a nobel prize in physics?,"SELECT ?award WHERE {
  dbr:Nikola_Tesla dbo:award ?award .
  FILTER (str(?award) = ""Nobel Prize in Physics"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
327,How many states are in Mexico?,"SELECT (COUNT(?state) AS ?count) WHERE {
  ?state dbo:country dbr:Mexico .
  ?state rdf:type dbo:AdministrativeRegion .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project, dbr:Nobel_Peace_Prize.
  ?scientist rdf:type dbo:Scientist.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
329,How much did the Lego Movie cost?,"SELECT ?cost WHERE {
  dbr:The_Lego_Movie dbo:budget ?cost .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
330,Who composed the music for Harold and Maude?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composer_name WHERE {
  dbr:Harold_and_Maude dbo:musicComposer ?composer.
  ?composer rdfs:label ?composer_name.
  FILTER (lang(?composer_name) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
331,List all episodes of the first season of the HBO television series The Sopranos.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?episode ?episodeLabel WHERE {
  ?episode dbo:series dbr:The_Sopranos .
  ?episode dbo:seasonNumber 1 .
  ?episode rdfs:label ?episodeLabel .
  FILTER (lang(?episodeLabel) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
332,Which city has the least inhabitants?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City.
  ?city dbo:populationTotal ?population.
} ORDER BY ?population LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
333,Where is Syngman Rhee buried?,"SELECT ?place WHERE {
  dbr:Syngman_Rhee dbo:deathPlace ?place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
334,Does Neymar play for Real Madrid?,"SELECT ?team WHERE {
  dbr:Neymar dbo:team ?team .
  FILTER (?team = dbr:Real_Madrid_C.F.)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
335,Who wrote the book The Pillars of the Earth?,"SELECT ?author WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
336,Do Prince Harry and Prince William have the same parents?,"SELECT ?parent WHERE {
  { dbr:Prince_Harry dbo:parent ?parent . }
  UNION
  { dbr:Prince_William,_Duke_of_Cambridge dbo:parent ?parent . }
} GROUP BY ?parent HAVING (COUNT(?parent) = 2)",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?supervisor WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
338,Does Breaking Bad have more episodes than Game of Thrones?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes WHERE {
  {
    SELECT (COUNT(?episode) AS ?breakingBadEpisodes) WHERE {
      ?series rdfs:label ""Breaking Bad""@en.
      ?episode dbo:series ?series.
    }
  }
  {
    SELECT (COUNT(?episode) AS ?gameOfThronesEpisodes) WHERE {
      ?series rdfs:label ""Game of Thrones""@en.
      ?episode dbo:series ?series.
    }
  }
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
339,Who was Vincent van Gogh inspired by?,"SELECT ?person WHERE {
  dbr:Vincent_van_Gogh dbo:influencedBy ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building ?floors WHERE {
  ?building dbo:floorCount ?floors.
  FILTER(?floors < (SELECT ?burj_floors WHERE {
    dbr:Burj_Khalifa dbo:floorCount ?burj_floors
  }))
} ORDER BY DESC(?floors) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
341,What was the final result of the War of the Roses?,"SELECT ?result WHERE {
  dbr:Wars_of_the_Roses dbo:result ?result .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
342,How much did Pulp Fiction cost?,"SELECT ?cost WHERE {
  dbr:Pulp_Fiction dbo:budget ?cost .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
343,Is proinsulin a protein?,"SELECT ?answer WHERE { 
  dbr:Proinsulin rdf:type ?type .
  ?type rdfs:subClassOf* dbo:Protein .
  BIND(""Yes"" AS ?answer)
} UNION {
  FILTER NOT EXISTS { dbr:Proinsulin rdf:type ?type . ?type rdfs:subClassOf* dbo:Protein }
  BIND(""No"" AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
344,Do Urdu and Persian have a common root?,"SELECT ?language ?root WHERE {
  { dbpedia:Urdu dbo:languageFamily ?root . }
  UNION
  { dbpedia:Persian_language dbo:languageFamily ?root . }
  ?language dbo:languageFamily ?root .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
345,Who is starring in Spanish movies produced by Benicio del Toro?,"SELECT ?person WHERE {
  ?film dbo:producer dbr:Benicio_del_Toro .
  ?film dbo:country dbr:Spain .
  ?film dbo:starring ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://dbpedia.org/resource/>

SELECT ?lake ?area WHERE {
  { 
    ?lake dbo:area ?area .
    FILTER (?lake = rdfs:Lake_Baikal || ?lake = rdfs:Great_Bear_Lake)
  }
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
347,Show me all books in Asimov's Foundation series.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  ?book dbo:series dbr:Foundation_series .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = ""en"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
348,Where was Bach born?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
349,Which city has the oldest running metro?,"SELECT ?city WHERE {
  ?metro dbo:location ?city .
  ?metro dbo:openingDate ?date .
} ORDER BY ?date LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
350,Who designed the Brooklyn Bridge?,"SELECT ?designer WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?designer
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
351,How many people live in Eurasia?,"SELECT ?population WHERE {
  dbr:Eurasia dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host WHERE {
  dbr:BBC_Wildlife_Specials dbo:presenter ?host.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
353,"What is the total population of Melbourne, Florida?","SELECT ?population WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
354,What country is Mount Everest in?,"SELECT ?country WHERE {
  dbr:Mount_Everest dbo:location ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
355,To which artistic movement did the painter of The Three Dancers belong?,"SELECT ?movement WHERE {
  dbr:The_Three_Dancers dbo:artist ?artist .
  ?artist dbo:movement ?movement .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
356,When did Operation Overlord commence?,"SELECT ?date WHERE {
  dbr:Operation_Overlord dbo:startDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
357,What is the bridge with the longest span?,"SELECT ?bridge ?span WHERE {
  ?bridge dbo:wikiPageRedirects dbr:List_of_longest_suspension_bridge_spans .
  ?bridge dbo:maximumSpan ?span .
} ORDER BY DESC(?span) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
358,Is there a video game called Battle Chess?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?game 
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
359,Who was buried in the Great Pyramid of Giza?,"SELECT ?person WHERE {
  dbr:Great_Pyramid_of_Giza dbo:architecturalStyle ?person.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?plant WHERE {
  ?plant dbo:owner dbr:Ford_Motor_Company ;
         dbo:locationCountry dbr:Malaysia .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
361,Did Socrates influence Aristotle?,"SELECT ?influence WHERE {
  dbr:Aristotle dbo:influencedBy dbr:Socrates .
  BIND(""Yes"" AS ?influence)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
362,How many children did Benjamin Franklin have?,"SELECT ?children WHERE {
  dbr:Benjamin_Franklin dbo:children ?children
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
363,How tall is Michael Jordan?,"SELECT ?height WHERE {
  dbr:Michael_Jordan dbo:height ?height.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
364,In which UK city are the headquarters of the MI6?,"SELECT ?city WHERE {
  dbr:Secret_Intelligence_Service dbo:headquarter ?headquarters.
  ?headquarters dbo:isPartOf ?city.
  ?city dbo:country dbr:United_Kingdom.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
365,Who created Family Guy?,"SELECT ?creator WHERE {
  dbr:Family_Guy dbo:creator ?creator .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
366,In which city does the Chile Route 68 end?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?city WHERE {
  res:Chile_Route_68 dbo:terminus ?cityResource.
  ?cityResource rdfs:label ?city.
  FILTER (lang(?city) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
368,When did the Ming dynasty dissolve?,"SELECT ?date WHERE {
  dbr:Ming_dynasty dbo:dissolutionYear ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
369,In which military conflicts did Lawrence of Arabia participate?,"SELECT ?conflict WHERE {
  dbr:Lawrence_of_Arabia_(film) dbo:militaryConflict ?conflict .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
370,What is the timezone in San Pedro de Atacama?,"SELECT ?timezone WHERE {
  dbr:San_Pedro_de_Atacama dbo:timeZone ?timezone .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
371,Give me all books by William Goldman with more than 300 pages.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?book WHERE {
  ?book dbo:author dbr:William_Goldman .
  ?book dbo:numberOfPages ?pages .
  FILTER(?pages > 300)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
372,What did Bruce Carver die from?,"SELECT ?causeOfDeath WHERE {
  dbr:Bruce_Carver dbo:deathCause ?causeOfDeath .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"SELECT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:Lufthansa .
  ?subsidiary dbo:hubAirport dbr:Dortmund_Airport, dbr:Berlin_Tegel_Airport .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
374,Does Abraham Lincoln's death place have a website?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?website
WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace .
  ?deathPlace foaf:homepage ?website .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
375,Did Elvis Presley have children?,"SELECT ?child WHERE {
  dbr:Elvis_Presley dbo:child ?child .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
376,Is Michelle Obama the wife of Barack Obama?,"SELECT ?answer WHERE {
  dbr:Michelle_Obama dbo:spouse dbr:Barack_Obama .
  BIND(""Yes"" AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
377,In which city does Sylvester Stallone live?,"SELECT ?city WHERE {
  dbr:Sylvester_Stallone dbo:residence ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
378,Which books by Kerouac were published by Viking Press?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?book WHERE {
  ?book dbo:author dbr:Jack_Kerouac ;
        dbp:publisher ""Viking Press"" .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
379,Who wrote the song Hotel California?,"SELECT ?author WHERE {
  dbr:Hotel_California dbo:writer ?author
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
380,What is the capital of Canada?,"SELECT ?capital WHERE {
  dbr:Canada dbo:capital ?capital .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
381,Who is the mayor of Tel Aviv?,"SELECT ?mayor WHERE {
  dbr:Tel_Aviv dbo:mayor ?mayor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
382,What form of government does Russia have?,"SELECT ?government WHERE {
  dbr:Russia dbo:governmentType ?government .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Muhammad_Ali .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
384,Who was the first to climb Mount Everest?,"SELECT ?person WHERE {
  ?person dbo:firstAscentPerson dbr:Mount_Everest.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
385,How many languages are spoken in Colombia?,"SELECT ?language WHERE {
  dbr:Colombia dbo:officialLanguage ?language
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
386,What is the currency of the Czech Republic?,"SELECT ?currency WHERE {
  dbr:Czech_Republic dbo:currency ?currency .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
387,Where in France is sparkling wine produced?,"SELECT ?place WHERE {
  ?place dbo:country dbr:France .
  ?place dbo:product dbr:Sparkling_wine .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
388,When did Boris Becker end his active career?,"SELECT ?endCareer WHERE {
  dbr:Boris_Becker dbo:endCareer ?endCareer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke .
  ?movie dbo:director dbr:Guy_Ritchie .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
391,Show me Hemingway's autobiography.,"SELECT ?book ?bookLabel WHERE {
  ?book dbo:author dbr:Ernest_Hemingway.
  ?book rdf:type dbo:Book.
  ?book dbo:literaryGenre dbr:Autobiography.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
392,How tall is Amazon Eve?,"SELECT ?height WHERE {
  dbr:Amazon_Eve dbo:height ?height.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
393,What are the five boroughs of New York?,"SELECT ?borough WHERE {
  dbr:New_York_City dbo:borough ?borough .
} LIMIT 5",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
394,Give me all Canadian Grunge record labels.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?label WHERE {
  ?label dbo:country dbr:Canada .
  ?label dct:subject dbc:Grunge_record_labels .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
395,In which country does the Ganges start?,"SELECT ?country WHERE {
  dbr:Ganges dbo:sourceCountry ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
396,Who is the founder of Penguin Books?,"SELECT ?founder WHERE {
  dbr:Penguin_Books dbo:founder ?founder .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
397,Who wrote the Game of Thrones theme?,"SELECT ?composer WHERE {
  dbr:Game_of_Thrones_Theme dbo:composer ?composer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
398,Who is the president of Eritrea?,"SELECT ?president WHERE {
  dbr:Eritrea dbp:leader ?president .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
399,In which city did John F. Kennedy die?,"SELECT ?city WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
400,What is the highest mountain in Australia?,"SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:location dbr:Australia ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
401,Who writes the Farmers' Almanac?,"SELECT ?author WHERE {
  dbr:Farmers'_Almanac dbo:author ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
402,Give me the currency of China.,"SELECT ?currency WHERE {
  dbr:China dbo:currency ?currency .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
403,Give me all Swedish oceanographers.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Oceanographer .
  ?person dbo:birthPlace dbr:Sweden .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
404,In which city are the headquarters of the United Nations?,"SELECT ?city WHERE {
  dbr:United_Nations dbo:location ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
405,Is Rita Wilson the wife of Tom Hanks?,"SELECT ?answer WHERE {
  dbr:Tom_Hanks dbo:spouse dbr:Rita_Wilson .
  BIND(""Yes"" AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
406,In which countries do people speak Japanese?,"SELECT ?country WHERE {
  ?country dbo:officialLanguage dbr:Japanese_language.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget WHERE {
  ?film dbo:director dbr:Tim_Burton .
  ?film dbo:budget ?budget .
} ORDER BY DESC(?budget) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
408,Which museum in New York has the most visitors?,"SELECT ?museum WHERE {
  ?museum dbo:location dbr:New_York_City .
  ?museum rdf:type dbo:Museum .
  ?museum dbo:numberOfVisitors ?visitors
} ORDER BY DESC(?visitors) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
409,What was the first Queen album?,"SELECT ?album WHERE {
  ?album dbo:artist dbr:Queen_(band) .
  ?album dbo:releaseDate ?date
} ORDER BY ?date LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?firstName WHERE {
  dbr:Queens_of_the_Stone_Age dbo:formerName ?firstName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
411,What was the last movie with Alec Guinness?,"SELECT ?movie ?date WHERE {
  ?movie dbo:starring dbr:Alec_Guinness .
  ?movie dbo:releaseDate ?date .
} ORDER BY DESC(?date) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
412,Give me all actors starring in Last Action Hero.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?actorLabel WHERE {
  dbr:Last_Action_Hero dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
413,Who discovered Pluto?,"SELECT ?person WHERE {
  dbr:Pluto dbo:discoverer ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
1,List all boardgames by GMT.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?boardgame WHERE {
  ?boardgame dbo:publisher dbr:GMT_Games.
  ?boardgame rdf:type dbo:BoardGame.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
2,Who developed Skype?,"SELECT ?developer WHERE {
  dbr:Skype dbo:developer ?developer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
3,Which people were born in Heraklion?,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person rdf:type dbo:Person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
4,In which U.S. state is Area 51 located?,"SELECT ?state WHERE {
  dbr:Area_51 dbo:location ?state .
  ?state dct:subject dbc:States_of_the_United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
5,Who is the mayor of New York City?,"SELECT ?mayor WHERE {
  <http://dbpedia.org/resource/New_York_City> <http://dbpedia.org/property/leaderName> ?mayor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
6,Which countries have places with more than two caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country WHERE {
  ?place dbo:country ?country ;
         rdf:type dbo:Cave .
} GROUP BY ?country HAVING (COUNT(?place) > 2)","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
7,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
8,Which airports does Air China serve?,"SELECT ?airport WHERE {
  ?airport dbo:operator dbr:Air_China .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
9,Give me all actors starring in movies directed by and starring William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?film dbo:director dbr:William_Shatner .
  ?film dbo:starring dbr:William_Shatner .
  ?film dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
10,What are the official languages of the Philippines?,"SELECT ?language WHERE {
  dbr:Philippines dbo:officialLanguage ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
11,Give me all Danish films.,"SELECT ?film WHERE {
  ?film dbo:country dbr:Denmark .
  ?film rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Brad_Pitt .
  ?movie dbo:director dbr:Guy_Ritchie .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
13,Give me the grandchildren of Bruce Lee.,"SELECT ?grandchild WHERE {
  ?person dbo:birthName ""Bruce Lee""@en.
  ?child dbo:parent ?person.
  ?grandchild dbo:parent ?child.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
14,Which other weapons did the designer of the Uzi develop?,"SELECT ?weapon WHERE {
  ?weapon dbo:designer dbr:Uziel_Gal.
  FILTER(?weapon != dbr:Uzi)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
15,Who is the owner of Universal Studios?,"SELECT ?owner WHERE {
  dbr:Universal_Pictures dbo:owner ?owner .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
16,Which state of the USA has the highest population density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:populationDensity ?populationDensity.
} ORDER BY DESC(?populationDensity) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
17,Which monarchs were married to a German?,"SELECT ?monarch WHERE {
  ?monarch dbo:spouse ?spouse .
  ?spouse dbo:nationality dbr:Germany .
  ?monarch dbo:occupation dbr:Monarch .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
18,Which organizations were founded in 1950?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear 1950 .
  ?organization rdf:type dbo:Organisation .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
19,Who created the comic Captain America?,"SELECT ?creator WHERE {
  dbr:Captain_America dbo:creator ?creator .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
20,Give me the Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
21,Who wrote the book The pillars of the Earth?,"SELECT ?author WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
22,Which state of the United States of America has the highest density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:populationDensity ?density.
} ORDER BY DESC(?density) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
23,Which spaceflights were launched from Baikonur?,"SELECT ?spaceflight WHERE {
  ?spaceflight dbo:launchSite dbr:Baikonur_Cosmodrome.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
24,Give me a list of all trumpet players that were bandleaders.,"SELECT ?person WHERE {
  ?person dbo:instrument dbr:Trumpet .
  ?person dbo:occupation dbr:Bandleader .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
25,Which U.S. states are in the same timezone as Utah?,"SELECT ?state WHERE {
  ?state dbo:country dbr:United_States .
  ?state dbo:timeZone ?timezone .
  dbr:Utah dbo:timeZone ?utahTimezone .
  FILTER(?timezone = ?utahTimezone)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
26,Which U.S. states possess gold minerals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT DISTINCT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States .
  ?state dbo:wikiPageWikiLink dbr:Gold .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
27,Who is the daughter of Ingrid Bergman married to?,"SELECT ?person WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse dbo:parent dbr:Ingrid_Bergman .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
28,How deep is Lake Placid?,"SELECT ?depth WHERE {
  dbr:Lake_Placid_(New_York) dbo:depth ?depth .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
29,Show me all museums in London.,"SELECT ?museum WHERE {
  ?museum dbo:location dbr:London .
  ?museum rdf:type dbo:Museum .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
30,Which caves have more than 3 entrances?,"SELECT ?cave WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbo:numberOfEntrances ?entrances .
  FILTER(?entrances > 3)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
31,Who is the tallest player of the Atlanta Falcons?,"SELECT ?player WHERE {
  ?player dbo:team :Atlanta_Falcons .
  ?player dbo:height ?height .
} ORDER BY DESC(?height) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
32,What are the top-10 action role-playing video games according to IGN?,"SELECT ?game WHERE {
  ?game rdf:type dbo:VideoGame ;
        dbo:genre dbr:Action_role-playing_game ;
        dbo:rating ?rating .
  ?rating schema:provider dbr:IGN .
} ORDER BY DESC(?rating) LIMIT 10","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
33,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer WHERE {
  ?writer dbo:occupation dbr:Writer .
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
34,Show me all basketball players that are higher than 2 meters.,"SELECT ?player WHERE {
  ?player dbo:height ?height .
  ?player rdf:type dbo:BasketballPlayer .
  FILTER (?height > 2)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
35,When was the Statue of Liberty built?,"SELECT ?date WHERE {
  dbr:Statue_of_Liberty dbo:completionDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
36,Which states border Illinois?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  dbr:Illinois dbo:border ?stateResource.
  ?stateResource rdfs:label ?state.
  FILTER (lang(?state) = 'en')
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
37,Who developed Minecraft?,"SELECT ?developer WHERE {
  dbr:Minecraft dbo:developer ?developer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
38,Where did Hillel Slovak die?,"SELECT ?place WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
39,What movies does Jesse Eisenberg play in?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg.
  ?movie rdf:type dbo:Film.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
40,Give all swimmers that were born in Moscow.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?swimmer WHERE {
  ?swimmer dbo:birthPlace dbr:Moscow .
  ?swimmer dbo:occupation dbr:Swimming .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
41,Give me all cosmonauts.,"SELECT ?cosmonaut WHERE {
  ?cosmonaut dbo:occupation dbr:Cosmonaut .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
42,Give me all Swiss non-profit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?organization
WHERE {
  ?organization rdf:type dbo:Non-ProfitOrganisation .
  ?organization dbo:locationCountry dbr:Switzerland .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
43,Which presidents were born in 1945?,"SELECT ?president WHERE {
  ?president dbo:birthYear 1945 .
  ?president rdf:type dbo:President .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
44,What kind of music did Lou Reed play?,"SELECT ?genre WHERE {
  dbr:Lou_Reed dbo:genre ?genre .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
45,Where do the Red Sox play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?stadium
WHERE {
  res:Boston_Red_Sox dbo:ground ?stadium .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
46,Show a list of soccer clubs that play in the Bundesliga.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:league dbr:Bundesliga .
  ?club rdf:type dbo:SoccerClub .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
47,Which volcanos in Japan erupted since 2000?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?volcano WHERE {
  ?volcano dbo:location dbr:Japan .
  ?volcano dbo:eruption ?eruption .
  FILTER (?eruption >= ""2000-01-01T00:00:00Z""^^xsd:dateTime)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
48,Which bridges cross the Seine?,"SELECT ?bridge WHERE {
  ?bridge dbo:crosses dbr:Seine.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
49,What is the official color of the University of Oxford?,"SELECT ?color WHERE {
  dbr:University_of_Oxford dbo:colour ?color .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
50,How many films did Hal Roach produce?,"SELECT COUNT(?film) WHERE {
  ?film dbo:producer dbr:Hal_Roach .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
51,Give me all Danish movies.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?movie WHERE {
  ?movie dbo:country dbr:Denmark .
  ?movie rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
52,What is the most frequent cause of death?,"SELECT ?cause WHERE {
  ?person dbo:deathCause ?cause .
} 
GROUP BY ?cause
ORDER BY DESC(COUNT(?person))
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
53,Who are the four youngest MVP basketball players?,"SELECT ?player ?age WHERE {
  ?player dbo:award dbr:NBA_Most_Valuable_Player_Award .
  ?player dbo:birthDate ?birthDate .
  BIND(year(now()) - year(?birthDate) AS ?age)
} ORDER BY ?age LIMIT 4","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
54,Give me all companies in Munich.,"SELECT ?company WHERE {
  ?company dbo:location dbr:Munich .
  ?company rdf:type dbo:Company .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
55,Give me the capitals of all countries that the Himalayas run through.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?capital ?country WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country dbo:capital ?capital .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
56,How many movies did Park Chan-wook direct?,"SELECT COUNT(?movie) WHERE {
  ?movie dbo:director dbr:Park_Chan-wook .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
57,Which rivers flow into a German lake?,"SELECT ?river WHERE {
  ?river dbo:mouth ?lake .
  ?lake dbo:country dbr:Germany .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:type dbr:Airline .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
59,Give me all islands that belong to Japan.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island WHERE {
  ?island dbo:country dbr:Japan .
  ?island rdf:type dbo:Island .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
60,How many inhabitants does Maribor have?,"SELECT ?population WHERE {
  dbr:Maribor dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
61,Give me all Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
62,Which companies have more than 1 million employees?,"SELECT ?company WHERE {
  ?company dbo:numberOfEmployees ?employees .
  FILTER(?employees > 1000000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?film WHERE {
  ?film dbo:director dbr:Garry_Marshall .
  ?film dbo:starring dbr:Julia_Roberts .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
64,Give me all soccer clubs in the Premier League.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:league dbr:Premier_League .
  ?club rdf:type dbo:SoccerClub .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
65,What is the highest place of the Urals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?place ?elevation
WHERE {
  ?place dbo:mountainRange dbr:Ural_Mountains.
  ?place dbo:elevation ?elevation.
}
ORDER BY DESC(?elevation)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
66,Who is the governor of Wyoming?,"SELECT ?person WHERE {
  ?person dbo:office ""Governor of Wyoming""@en .
  ?person dbo:termEnd ?termEnd .
  FILTER (?termEnd > ""2016-10-01""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
67,Where did the architect of the Eiffel Tower study?,"SELECT ?university WHERE {
  ?person dbo:knownFor dbr:Eiffel_Tower .
  ?person dbo:almaMater ?university .
  ?person rdf:type dbo:Architect .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
68,Give me all world heritage sites designated within the past two years.,"SELECT ?site WHERE {
  ?site rdf:type yago:WorldHeritageSitesInCountry108223802.
  ?site dbp:whsYear ?year.
  FILTER (?year >= 2014)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
69,Give me all actors who were born in Paris after 1950.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Paris .
  ?actor dbo:birthDate ?date .
  ?actor rdf:type dbo:Actor .
  FILTER (?date > ""1950-01-01""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
70,Which movies star both Liz Taylor and Richard Burton?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor .
  ?movie dbo:starring dbr:Richard_Burton .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
71,Give me all Australian nonprofit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization
WHERE {
  ?organization dbo:locationCountry dbr:Australia .
  ?organization dbo:type dbr:Nonprofit_organization .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
72,Which pope succeeded John Paul II?,"SELECT ?successor WHERE {
  dbpedia:John_Paul_II dbpedia-owl:successor ?successor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
73,Give me all ESA astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dbo:occupation dbr:European_Space_Agency_astronaut
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
74,Who was president of Pakistan in 1978?,"SELECT ?person WHERE {
  ?person dbo:officePosition dbr:President_of_Pakistan .
  ?person dbo:termPeriod ?term .
  ?term dbo:startDate ?start .
  ?term dbo:endDate ?end .
  FILTER (YEAR(?start) <= 1978 && YEAR(?end) >= 1978)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
75,Who is the owner of Rolls-Royce?,"SELECT ?owner WHERE {
  dbr:Rolls-Royce dbo:owner ?owner .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
76,How many museums does Paris have?,"SELECT (count(?museum) as ?count) WHERE {
  ?museum dbo:location dbr:Paris .
  ?museum rdf:type dbo:Museum .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
77,Where was JFK assassinated?,"SELECT ?place WHERE {
  dbr:Assassination_of_John_F._Kennedy dbo:location ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
78,Give me all federal chancellors of Germany.,"SELECT ?chancellor WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
79,Show me everyone who was born on Halloween.,"SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (datatype(?date) = xsd:date && MONTH(?date) = 10 && DAY(?date) = 31)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
80,Which beer originated in Ireland?,"SELECT ?beer WHERE {
  ?beer dbo:country dbr:Ireland .
  ?beer rdf:type dbo:Beer
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
81,To which countries does the Himalayan mountain system extend?,"SELECT ?country WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country rdf:type dbo:Country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
82,Which actors were born in Germany?,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Germany .
  ?actor rdf:type dbo:Actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
83,How much carbs does peanut butter have?,"SELECT ?carbs WHERE {
  dbr:Peanut_butter dbo:carbohydrate ?carbs .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?filmCount) WHERE {
  ?film dbo:producer ?producer .
} 
GROUP BY ?producer 
ORDER BY DESC(?filmCount) 
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
85,How many employees does Google have?,"SELECT ?employees WHERE {
  dbr:Google dbo:numberOfEmployees ?employees .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
86,Give me all actors who were born in Berlin.,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Berlin .
  ?actor rdf:type dbo:Actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
87,Who created Goofy?,"SELECT ?creator WHERE {
  dbr:Goofy dbo:creator ?creator .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
88,Which music albums contain the song Last Christmas?,"SELECT ?album WHERE {
  ?song rdfs:label ""Last Christmas""@en.
  ?song dbo:album ?album.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
89,When was Alberta admitted as province?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Alberta dbo:timeZone ?timeZone .
  ?timeZone dbo:timeZoneOffset ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
90,How many missions does the Soyuz programme have?,"SELECT COUNT(?mission) WHERE {
  ?mission dbo:programme dbr:Soyuz_programme .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
91,Give me all the TV shows with Neil Patrick Harris.,"SELECT ?show WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris.
  ?show rdf:type dbo:TelevisionShow.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
92,When were the Hells Angels founded?,"SELECT ?date WHERE {
  dbr:Hells_Angels dbo:foundingDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
93,What is the net income of Apple?,"SELECT ?netIncome WHERE {
  dbr:Apple_Inc. dbo:netIncome ?netIncome .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
94,Give me all Swedish holidays.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?holiday WHERE {
  ?holiday dbo:country dbr:Sweden .
  ?holiday rdf:type dbo:Holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
95,In which city was the former Dutch queen Juliana buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?city WHERE {
  res:Juliana_of_the_Netherlands dbo:deathPlace ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
96,List all the musicals with music by Leonard Bernstein.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
97,Give me all companies in the advertising industry.,"SELECT ?company WHERE {
  ?company dct:subject dbc:Advertising_agencies.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
98,What is the largest metropolitan area in Washington state?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?city ?area
WHERE {
  ?city rdf:type dbo:City ;
        dbo:isPartOf <http://dbpedia.org/resource/Washington_(state)> ;
        dbo:populationMetro ?population ;
        dbo:areaMetro ?area .
}
ORDER BY DESC(?area)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
99,Who killed John Lennon?,"SELECT ?killer WHERE {
  dbr:John_Lennon dbo:deathCause ?cause .
  ?killer dbo:perpetratorOf ?cause .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
100,Which writers studied in Istanbul?,"SELECT ?person WHERE {
  ?person dbo:education ?education .
  ?education dbo:location dbr:Istanbul .
  ?person rdf:type dbo:Writer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
101,Give me all Australian metalcore bands.,"SELECT ?band 
WHERE {
  ?band dbo:genre dbr:Metalcore ;
        dbo:origin dbr:Australia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
102,Which countries adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
103,Give me all types of eating disorders.,"SELECT ?type WHERE {
  ?type dct:subject dbc:Eating_disorders .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
104,Was Marc Chagall a jew?,"SELECT ?answer WHERE {
  dbr:Marc_Chagall dbo:ethnicity ?ethnicity .
  FILTER (str(?ethnicity) = ""Jewish"")
  BIND(""Yes"" AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT ?rank WHERE {
  dbr:Brazil_national_football_team dbo:lowestFifaRanking ?rank .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
106,How many films did Leonardo DiCaprio star in?,"SELECT COUNT(?movie) WHERE {
  ?movie dbo:starring dbr:Leonardo_DiCaprio .
  ?movie rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
107,Was Margaret Thatcher a chemist?,"SELECT ?answer WHERE {
  dbr:Margaret_Thatcher dbo:occupation ?occupation .
  FILTER (str(?occupation) = ""Chemist"") .
  BIND (EXISTS { dbr:Margaret_Thatcher dbo:occupation ?occupation . FILTER (str(?occupation) = ""Chemist"") } AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
108,Which U.S. states are in the same time zone as Utah?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?state WHERE {
  res:Utah dbo:timeZone ?timeZone .
  ?state dbo:timeZone ?timeZone .
  ?state dbo:country res:United_States .
  FILTER (?state != res:Utah)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
109,Give me all books written by Danielle Steel.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
110,Which country has the most official languages?,"SELECT ?country WHERE {
  ?country a dbo:Country.
  {
    SELECT ?country (COUNT(?language) AS ?languageCount) WHERE {
      ?country dbo:officialLanguage ?language.
    } GROUP BY ?country
  } ORDER BY DESC(?languageCount) LIMIT 1
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
111,What is the total amount of men and women serving in the FDNY?,"SELECT ?totalMen ?totalWomen WHERE {
  dbr:New_York_City_Fire_Department dbo:numberOfMaleEmployees ?totalMen .
  dbr:New_York_City_Fire_Department dbo:numberOfFemaleEmployees ?totalWomen .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
112,Which actor played Chewbacca?,"SELECT ?actor WHERE {
  ?actor dbo:knownFor dbr:Chewbacca .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
113,Give me all libraries established earlier than 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library WHERE {
  ?library dbo:established ?date .
  ?library rdf:type dbo:Library .
  FILTER (?date < ""1400-01-01""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
114,Which programming languages were influenced by Perl?,"SELECT ?programmingLanguage WHERE {
  ?programmingLanguage dbo:influencedBy dbr:Perl .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
115,In which U.S. state is Mount McKinley located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?state WHERE {
  res:Denali dbo:location ?state .
  ?state dbo:country res:United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
116,What airlines are part of the SkyTeam alliance?,"SELECT ?airline WHERE {
  ?airline dbo:alliance dbr:SkyTeam .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
117,Which ships were called after Benjamin Franklin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?ship WHERE {
  ?ship dbo:shipNamesake <http://dbpedia.org/resource/Benjamin_Franklin> .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
118,Give me all Methodist politicians.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Politician .
  ?person dbo:religion dbr:Methodism .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
119,What other books have been written by the author of The Fault in Our Stars?,"SELECT ?book WHERE {
  ?author dbo:author dbr:The_Fault_in_Our_Stars .
  ?book dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
120,What is the highest mountain?,"SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
121,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount) WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
} 
ORDER BY DESC(?bookCount) 
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
122,Which programming languages influenced Javascript?,"SELECT ?programmingLanguage WHERE {
  dbpedia:JavaScript dbo:influencedBy ?programmingLanguage .
  ?programmingLanguage rdf:type dbo:ProgrammingLanguage .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
123,Which musician wrote the most books?,"SELECT ?musician (COUNT(?book) AS ?bookCount) WHERE {
  ?musician rdf:type dbo:MusicalArtist.
  ?book dbo:author ?musician.
} ORDER BY DESC(?bookCount) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
124,Which films starring Clint Eastwood did he direct himself?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Clint_Eastwood .
  ?film dbo:director dbr:Clint_Eastwood .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
125,Which software has been developed by organizations founded in California?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT DISTINCT ?software WHERE {
  ?org dbo:location dbr:California .
  ?org dbo:foundingYear ?year FILTER (?year <= 2016) .
  ?software dct:subject dbc:Software .
  ?software dbo:developer ?org .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
126,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
127,How many airlines are members of the Star Alliance?,"SELECT COUNT(?airline) WHERE {
  ?airline dbo:alliance dbr:Star_Alliance .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
128,Give me all actors called Baldwin.,"SELECT ?actor WHERE {
  ?actor dbo:occupation dbr:Actor .
  ?actor foaf:name ?name .
  FILTER(CONTAINS(?name, ""Baldwin""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
129,Who wrote The Hunger Games?,"SELECT ?author WHERE {
  dbr:The_Hunger_Games dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
130,For which label did Elvis record his first album?,"SELECT ?label WHERE {
  dbr:Elvis_Presley dbo:recordLabel ?label .
  ?album dbo:artist dbr:Elvis_Presley ;
         dbo:releaseDate ?date .
} ORDER BY ?date LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
131,Is Christian Bale starring in Batman Begins?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Batman_Begins"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
132,Where is the residence of the prime minister of Spain?,"SELECT ?residence WHERE {
  ?person dbo:office dbr:Prime_Minister_of_Spain .
  ?person dbo:residence ?residence .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?movie) AS ?movieCount) WHERE {
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor
} 
ORDER BY DESC(?movieCount)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
134,Which countries have more than two official languages?,"SELECT ?country WHERE {
  ?country rdf:type dbo:Country.
  ?country dbo:officialLanguage ?language.
} GROUP BY ?country HAVING (COUNT(?language) > 2)","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
135,Which countries have more than ten caves?,"SELECT ?country WHERE {
  ?cave dbo:location ?country .
  ?cave rdf:type dbo:Cave .
} GROUP BY ?country HAVING (COUNT(?cave) > 10)","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"SELECT ?song WHERE {
  ?song dbo:artist dbr:Bruce_Springsteen .
  ?song dbo:releaseDate ?date .
  FILTER ( ?date >= ""1980-01-01T00:00:00Z""^^xsd:dateTime && ?date <= ""1990-12-31T23:59:59Z""^^xsd:dateTime )
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
137,Which television shows were created by John Cleese?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:John_Cleese.
  ?show rdf:type dbo:TelevisionShow.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
138,When did Latvia join the EU?,"SELECT ?date WHERE {
  dbr:Latvia dbp:accessionEU ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
139,Which soccer players were born on Malta?,"SELECT ?player WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player rdf:type dbo:SoccerPlayer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
140,How many politicians graduated from Columbia University?,"SELECT COUNT(?person) WHERE {
  ?person dbo:almaMater dbr:Columbia_University .
  ?person rdf:type dbo:Politician .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
141,Give me the birthdays of all actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?birthday WHERE {
  dbr:Charmed dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
142,Which telecommunications organizations are located in Belgium?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?organization WHERE {
  ?organization rdf:type dbo:Company .
  ?organization dbo:industry dbr:Telecommunication .
  ?organization dbo:locationCountry dbr:Belgium .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
143,Give me a list of all lakes in Denmark.,"SELECT ?lake WHERE {
  ?lake dbo:country dbr:Denmark .
  ?lake rdf:type dbo:Lake .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
144,How many children does Eddie Murphy have?,"SELECT ?children WHERE {
  dbr:Eddie_Murphy dbo:children ?children .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
145,Show me all English Gothic buildings in Kent.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?building WHERE {
  ?building dbo:architecturalStyle dbr:English_Gothic_architecture ;
            dbo:location dbr:Kent .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
146,Who is the manager of Real Madrid?,"SELECT ?manager WHERE {
  dbr:Real_Madrid_C.F. dbo:manager ?manager .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
147,In which countries can you pay using the West African CFA franc?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:West_African_CFA_franc dbo:officialCurrency ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
148,Which holidays are celebrated around the world?,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
149,What is the longest river?,"SELECT ?river ?length WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
150,Which organizations were founded in 1930?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear 1930 .
  ?organization rdf:type dbo:Organisation .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
151,What is the birth name of Angela Merkel?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
152,Who has Tom Cruise been married to?,"SELECT ?person WHERE {
  dbr:Tom_Cruise dbo:spouse ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
153,Which weapons did Heckler & Koch develop?,"SELECT ?weapon WHERE {
  ?weapon dbo:manufacturer dbr:Heckler_&_Koch .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
154,What is the smallest city by area in Germany?,"SELECT ?city WHERE {
  ?city dbo:country dbr:Germany.
  ?city dbo:areaTotal ?area.
} ORDER BY ASC(?area) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
155,What is the ruling party in Lisbon?,"SELECT ?party WHERE {
  dbr:Lisbon dbo:governingBody ?body .
  ?body dbo:politicalParty ?party .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
156,How heavy is Jupiter's lightest moon?,"SELECT ?mass WHERE {
  ?moon dbo:parent dbr:Jupiter .
  ?moon dbo:mass ?mass .
} ORDER BY ASC(?mass) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
157,How many employees does IBM have?,"SELECT ?employees WHERE {
  dbr:IBM dbo:numberOfEmployees ?employees .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
158,List all episodes of the first season of the HBO television series The Sopranos!,"SELECT ?episode WHERE {
  ?episode dbo:series dbr:The_Sopranos .
  ?episode dbo:seasonNumber 1 .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
159,What does ICRO stand for?,"SELECT ?description WHERE {
  dbr:ICRO rdfs:comment ?description .
  FILTER(langMatches(lang(?description),""EN""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?oldSeriesEpisodeCount ?newSeriesEpisodeCount WHERE {
  ?oldSeries dbo:numberOfEpisodes ?oldSeriesEpisodeCount ;
             rdfs:label ""Battlestar Galactica (1978 TV series)""@en .
  ?newSeries dbo:numberOfEpisodes ?newSeriesEpisodeCount ;
             rdfs:label ""Battlestar Galactica (2004 TV series)""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
161,Give me all films produced by Hal Roach.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film dbo:producer res:Hal_Roach .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
162,Who played Agent Smith in Matrix?,"SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""The Matrix""@en .
  ?actor rdfs:label ?actorName .
  FILTER (lang(?actorName) = ""en"") .
  ?actor dbo:character ?character .
  ?character rdfs:label ""Agent Smith""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
163,Which Greek parties are pro-European?,"SELECT ?party WHERE {
  ?party dbo:country dbr:Greece .
  ?party dbo:ideology dbr:Pro-Europeanism .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
164,Give me a list of all bandleaders that play trumpet.,"SELECT ?bandleader WHERE {
  ?bandleader dbo:instrument dbr:Trumpet .
  ?bandleader rdf:type dbo:BandLeader .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
165,What is the second highest mountain on Earth?,"SELECT ?mountain WHERE {
  ?mountain dbo:rank 2 ;
            rdf:type dbo:Mountain .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
166,Is Egypts largest city also its capital?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?city WHERE {
  dbr:Egypt dbo:capital ?city .
  {
    SELECT ?city WHERE {
      dbr:Egypt dbo:largestCity ?city .
    }
  }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
167,Which rockets were launched from Baikonur?,"SELECT ?rocket WHERE {
  ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
168,How many programming languages are there?,"SELECT (count(?programmingLanguage) as ?count) WHERE {
  ?programmingLanguage dct:subject dbc:Programming_languages.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
169,Which Chess players died in the same place they were born in?,"SELECT ?player WHERE {
  ?player dbo:deathPlace ?place .
  ?player dbo:birthPlace ?place .
  ?player rdf:type dbo:ChessPlayer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
170,Who is the owner of Facebook?,"SELECT ?owner WHERE {
  dbr:Facebook dbo:owner ?owner .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
171,Give me all movies with Tom Cruise.,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdf:type dbo:Film.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
172,In which U.S. state is Fort Knox located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?state WHERE {
  res:Fort_Knox dbo:location ?state .
  ?state dbo:country res:United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?city WHERE {
  ?city dbo:isPartOf <http://dbpedia.org/resource/New_Jersey> .
  ?city dbo:populationTotal ?population .
  ?city rdf:type dbo:City .
  FILTER(?population > 100000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
174,Which mountains are higher than the Nanga Parbat?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?height
WHERE {
  ?mountain dbo:elevation ?height .
  ?mountain rdf:type dbo:Mountain .
  FILTER(?height > (SELECT ?nangaHeight WHERE { res:Nanga_Parbat dbo:elevation ?nangaHeight }) )
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
175,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?b_side WHERE {
  ?album dbo:artist dbr:Ramones .
  ?album dbo:bSide ?b_side .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
176,What are the specialities of the UNC Health Care?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?speciality WHERE {
  dbr:UNC_Health_Care dbo:speciality ?speciality.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
177,When was Olof Palme shot?,"SELECT ?date WHERE {
  dbr:Olof_Palme dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
178,List the seven kings of Rome.,"SELECT ?king WHERE {
  ?king dbo:monarchOf dbr:Kingdom_of_Rome .
} LIMIT 7","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
179,Give me all people that were born in Vienna and died in Berlin.,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Vienna .
  ?person dbo:deathPlace dbr:Berlin .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
180,Is Darth Vader Luke’s father?,"SELECT ?answer WHERE {
  dbpedia:Darth_Vader dbpedia-owl:child dbpedia:Luke_Skywalker.
  BIND(""Yes"" AS ?answer)
} UNION {
  FILTER NOT EXISTS { dbpedia:Darth_Vader dbpedia-owl:child dbpedia:Luke_Skywalker. }
  BIND(""No"" AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
181,Show me all the breweries in Australia.,"SELECT ?brewery WHERE {
  ?brewery dbo:location dbr:Australia .
  ?brewery rdf:type dbo:Brewery .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film WHERE {
  ?film dbo:director dbr:Steven_Spielberg .
  ?film dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
183,Give me all soccer clubs in Spain.,"SELECT ?club WHERE {
  ?club dbo:location dbr:Spain .
  ?club rdf:type dbo:SoccerClub .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
184,Who produced films starring Natalie Portman?,"SELECT DISTINCT ?producer WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
185,Give me all breeds of the German Shepherd dog.,"SELECT ?breed WHERE {
  ?breed dbo:species dbr:German_Shepherd.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight WHERE {
  ?team dbo:teamName ""Chicago Bulls""@en.
  ?player dbo:team ?team.
  ?player dbo:weight ?weight.
} ORDER BY DESC(?weight) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
187,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
188,What is the largest country in the world?,"SELECT ?country WHERE {
  ?country rdf:type dbo:Country .
  OPTIONAL { ?country dbo:areaTotal ?area }
} ORDER BY DESC(?area) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
189,What is the largest city in america?,"SELECT ?city WHERE {
  ?city dbo:country dbr:United_States .
  ?city dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
190,Who was the pope that founded the Vatican Television?,"SELECT ?pope WHERE {
  ?pope dbo:occupation dbr:Pope .
  ?pope dbo:founded dbr:Vatican_Television_Center .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
191,Who discovered Ceres?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?person WHERE {
  res:Ceres_dwarf_planet dbo:discoverer ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
192,Who is the king of the Netherlands?,"SELECT ?person WHERE {
  ?person dbo:positionHeld dbr:Monarchy_of_the_Netherlands .
  ?person rdf:type dbo:Person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
193,Is Cola a beverage?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?object WHERE {
  ?subject rdfs:label ""Cola""@en .
  ?subject dbo:type ?object .
  ?object rdfs:label ?label .
  FILTER (lang(?label) = 'en' && ?label = ""Beverage"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"SELECT ?almaMater WHERE {
  ?person dbo:almaMater ?almaMater .
  ?person dbo:office ?office .
  ?person foaf:name ""Angela Merkel""@en .
  ?office rdfs:label ""Chancellor of Germany""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
195,Who wrote the book Les Piliers de la terre?,"SELECT ?author WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
196,Which airports does Yeti Airlines serve?,"SELECT ?airport WHERE {
  ?airport dbo:operator dbr:Yeti_Airlines .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
197,Where is the birthplace of Goethe?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthPlace .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"SELECT ?event1 ?date1 ?event2 ?date2 WHERE {
  ?event1 rdfs:label ""Cuban Missile Crisis""@en.
  ?event1 dbo:date ?date1.
  ?event2 rdfs:label ""Bay of Pigs Invasion""@en.
  ?event2 dbo:date ?date2.
  FILTER(?date1 < ?date2)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
199,Which ingredients do I need for carrot cake?,"SELECT ?ingredient WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
200,Who created Wikipedia?,"SELECT ?creator WHERE { 
  dbr:Wikipedia dbo:creator ?creator 
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
201,What is the highest mountain in Saxony Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:location <http://dbpedia.org/resource/Saxony> ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
202,Who is the current federal minister of finance in Germany?,"SELECT ?person WHERE {
  ?person dbp:office dbr:Minister_of_Finance_(Germany) .
  ?person dbp:termEnd ""2016-10-31""^^xsd:date .
} LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
203,In which country is Mecca located?,"SELECT ?country WHERE {
  dbr:Mecca dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor WHERE {
  ?show rdfs:label ""Breaking Bad""@en.
  ?show dbo:starring ?actor.
  ?actor rdfs:label ?actorLabel.
  ?character dbo:series ?show.
  ?character rdfs:label ""Gus Fring""@en.
  ?character dbo:portrayer ?actor.
  FILTER (lang(?actorLabel) = ""en"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
205,In which country does the Nile start?,"SELECT ?country WHERE {
  dbr:Nile dbo:sourceCountry ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
206,In which state Penn State University is located?,"SELECT ?state WHERE {
  dbr:Pennsylvania_State_University dbo:location ?state .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
207,What is the biggest stadium in Spain?,"SELECT ?stadium ?capacity
WHERE {
  ?stadium dbo:location dbr:Spain ;
           dbo:buildingType dbr:Stadium ;
           dbo:seatingCapacity ?capacity .
}
ORDER BY DESC(?capacity)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach WHERE {
  ?team dbo:location dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
209,How large is the area of UK?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?area
WHERE {
  res:United_Kingdom dbo:areaTotal ?area .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
210,Who created Batman?,"SELECT ?creator WHERE {
  dbr:Batman dbo:creator ?creator .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
211,Was Sigmund Freud married?,"SELECT ?answer WHERE {
  dbr:Sigmund_Freud dbo:spouse ?answer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
212,Who are the developers of DBpedia?,"SELECT ?developer WHERE {
  dbpedia:DBpedia dbo:developer ?developer
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
213,Give me all movies directed by Francis Ford Coppola.,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
214,Are tree frogs a type of amphibian?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?answer
WHERE {
  ?subject rdfs:label ""Tree frog""@en .
  ?subject rdf:type ?type .
  ?type rdfs:label ?answer .
  FILTER (lang(?answer) = 'en' && ?answer = ""Amphibian"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
215,What is the location of the Houses of Parliament?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?location WHERE { res:Palace_of_Westminster dbo:location ?location . }","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
216,how much is the elevation of Düsseldorf Airport ?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?elevation
WHERE {
  res:Düsseldorf_Airport dbo:elevation ?elevation .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
217,How much is the population of mexico city ?,"SELECT ?population WHERE {
  dbr:Mexico_City dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
218,when was the founding date of french fifth republic?,"SELECT ?date WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
219,Who was the first King of England?,"SELECT ?person WHERE {
  ?person dbo:positionHeld dbr:Monarch_of_England .
  ?person dbo:reignStart ?reignStart .
} ORDER BY ?reignStart LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
220,Who is the editor of Forbes?,"SELECT ?editor WHERE {
  dbr:Forbes dbo:editor ?editor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
221,Which awards did Douglas Hofstadter win?,"SELECT ?award WHERE {
  dbr:Douglas_Hofstadter dbo:award ?award .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
222,Who is the youngest Darts player?,"SELECT ?player WHERE {
  ?player dbo:occupation dbr:Darts_player.
  ?player dbo:birthDate ?birthDate.
} ORDER BY DESC(?birthDate) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
223,Is horse racing a sport?,"SELECT ?object WHERE { 
  dbr:Horse_racing rdf:type ?object . 
  ?object rdfs:subClassOf dbo:Sport 
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
  ?river rdf:type dbo:River .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
225,How many people live in Poland?,"SELECT ?population 
WHERE { 
  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/populationTotal> ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
226,When was the last episode of the TV series Friends aired?,"SELECT ?date WHERE {
  dbr:Friends dbo:finalEpisode ?episode .
  ?episode dbo:releaseDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
227,Is the wife of president Obama called Michelle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name WHERE {
  res:Barack_Obama dbo:spouse ?spouse.
  ?spouse foaf:name ?name.
  FILTER (str(?name) = ""Michelle Obama"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
229,Who is 8th president of US?,"SELECT ?president WHERE {
  ?president dbo:orderInOffice 8 .
  ?president rdf:type dbo:President .
  ?president dbo:country dbr:United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
230,how much is the total population of  european union?,"SELECT ?population WHERE {
  dbr:European_Union dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
231,Give me all launch pads operated by NASA.,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?launch_pad
WHERE {
  ?launch_pad dbp:operator dbr:NASA .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
232,Who developed the video game World of Warcraft?,"SELECT ?developer WHERE {
  dbr:World_of_Warcraft dbo:developer ?developer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
233,What is the birth name of Adele?,"SELECT ?birthName WHERE {
  dbr:Adele dbo:birthName ?birthName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
234,What is the population of Cairo?,"SELECT ?population WHERE {
  dbr:Cairo dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
235,Is Frank Herbert still alive?,"SELECT ?answer WHERE {
  dbr:Frank_Herbert dbo:deathDate ?answer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
236,What is the last work of Dan Brown?,"SELECT ?work ?date WHERE {
  ?work dbo:author dbr:Dan_Brown.
  ?work dbo:publicationDate ?date.
} ORDER BY DESC(?date) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
237,Where is Sungkyunkwan University?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  res:Sungkyunkwan_University dbo:location ?location .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
238,Who is the author of the interpretation of dreams?,"SELECT ?author WHERE {
  dbr:The_Interpretation_of_Dreams dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
239,When was the death  of  Shakespeare?,"SELECT ?deathDate WHERE {
  dbr:William_Shakespeare dbo:deathDate ?deathDate .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
241,Who developed Slack?,"SELECT ?developer WHERE {
  dbr:Slack_(software) dbo:developer ?developer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
242,Where is the origin of Carolina reaper?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?origin WHERE {
  res:Carolina_Reaper dbo:origin ?origin .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
243,In which year was Rachel Stevens born?,"SELECT ?birthYear WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
244,How often did Jane Fonda marry?,"SELECT COUNT(?spouse) WHERE {
  dbr:Jane_Fonda dbo:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
245,Was the wife of president Lincoln called Mary?,"SELECT ?answer WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Mary Todd Lincoln"")
  BIND(""Yes"" AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
246,Which cities does the Weser flow through?,"SELECT ?city WHERE {
  ?city dbo:river dbr:Weser .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
247,In which programming language is GIMP written?,"SELECT ?language WHERE {
  dbr:GIMP dbo:programmingLanguage ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
248,Which university did Angela Merkel attend?,"SELECT ?university WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
249,List all the musicals with music by Elton John.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
250,How many Aldi stores are there?,"SELECT ?count WHERE {
  ?store rdf:type dbo:Supermarket ;
         rdfs:label ?label .
  FILTER(CONTAINS(lcase(str(?label)), ""aldi""))
  BIND(COUNT(?store) AS ?count)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
251,What is the longest river in the world?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
252,When was John Adams born?,"SELECT ?birthDate WHERE {
  dbr:John_Adams dbo:birthDate ?birthDate .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
253,Which companies produce hovercrafts?,"SELECT ?company WHERE {
  ?company dbo:product ?product .
  ?product rdf:type dbo:Hovercraft .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
254,Who was the wife of U.S. president Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
255,Which species does an elephant belong?,"SELECT ?species WHERE {
  dbr:Elephant dbo:species ?species .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
256,How many people live in the capital of Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?population
WHERE {
  dbr:Australia dbo:capital ?capital .
  ?capital dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
257,In which ancient empire could you pay with cocoa beans?,"SELECT ?empire WHERE {
  ?empire dbo:currency ?currency .
  ?currency rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER (regex(?label, ""cocoa bean"", ""i"")) .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
258,How many theories did Albert Einstein come up with?,"SELECT COUNT(?theory) WHERE {
  ?theory dbo:discoverer dbr:Albert_Einstein .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
259,Who composed the soundtrack for Cameron's Titanic?,"SELECT ?composer WHERE {
  dbr:Titanic_(1997_film) dbo:musicComposer ?composer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
260,Give me the runtime of Toy Story.,"SELECT ?runtime WHERE {
  dbr:Toy_Story dbo:runtime ?runtime .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
262,With how many countries Iran has borders?,"SELECT COUNT(?country) WHERE {
  dbr:Iran dbo:border ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
263,Which electronics companies were founded in Beijing?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Electronics.
  ?company dbo:foundingLocation dbr:Beijing.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
264,Who was the successor of John F. Kennedy?,"SELECT ?successor WHERE {
  dbpedia:John_F._Kennedy dbpedia-owl:successor ?successor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
265,Who is the mayor of Paris?,"SELECT ?person WHERE {
  ?city rdfs:label ""Paris""@en.
  ?city dbo:leader ?person.
  ?person rdf:type dbo:Person.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
266,Did Arnold Schwarzenegger attend a university?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  res:Arnold_Schwarzenegger dbo:almaMater ?university .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
267,Is James Bond married?,"SELECT ?answer WHERE {
  dbr:James_Bond dbo:spouse ?answer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
268,Does the Isar flow into a lake?,"SELECT ?lake WHERE {
  dbr:Isar dbo:mouth ?lake .
  ?lake rdf:type dbo:Lake .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
269,Which Indian company has the most employees?,"SELECT ?company WHERE {
  ?company dbo:country dbr:India .
  ?company dbo:numberOfEmployees ?employees .
} ORDER BY DESC(?employees) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
270,Who was John F. Kennedy's vice president?,"SELECT ?vicePresident WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
271,Which country does the creator of Miffy come from?,"SELECT ?country WHERE {
  ?person dbo:birthPlace ?country .
  ?person dbo:occupation ?occupation .
  ?occupation rdfs:label ""cartoonist""@en .
  ?person dbo:notableWork dbr:Miffy .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
273,In what city is the Heineken brewery?,"SELECT ?city WHERE {
  dbr:Heineken dbo:location ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
274,Is Barack Obama a democrat?,"SELECT ?answer WHERE {
  dbpedia:Barack_Obama dbo:party ?party .
  BIND(REPLACE(str(?party), ""http://dbpedia.org/resource/"", """") AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
275,List the children of Margaret Thatcher.,"SELECT ?child WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
276,From which region is the Melon de Bourgogne?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  dbr:Melon_de_Bourgogne dbo:region ?region .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
278,how big is the total area of North Rhine- Westphalia?,"SELECT ?area WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?area .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
279,Which city has the most inhabitants?,"SELECT ?city WHERE {
  ?city dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
280,What is Donald Trump's main business?,"SELECT ?business WHERE {
  dbr:Donald_Trump dbo:occupation ?business .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
281,When will start the final match of the football world cup 2018?,"SELECT ?date WHERE {
  dbr:2018_FIFA_World_Cup_Final dbo:startTime ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
282,Which films did Stanley Kubrick direct?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
283,how much is the population  Iraq?,"SELECT ?population WHERE {
  dbr:Iraq dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Canada ;
        dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
285,Who is the mayor of the capital of French Polynesia?,"SELECT ?person WHERE {
  dbr:Papeete dbo:mayor ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
286,Give me all actors starring in movies directed by William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
287,How tall is Claudia Schiffer?,"SELECT ?height WHERE {
  dbr:Claudia_Schiffer dbo:height ?height .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
288,how much is the population densty rank of germany?,"SELECT ?populationDensityRank WHERE {
  dbr:Germany dbo:populationDensityRank ?populationDensityRank .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
289,What is the highest mountain in Italy?,"SELECT ?mountain WHERE {
  ?mountain dbo:country dbr:Italy .
  ?mountain rdf:type dbo:Mountain .
} ORDER BY DESC(?elevation) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
290,List all games by GMT.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?game WHERE {
  ?game dbo:publisher dbr:GMT_Games.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
291,What is the official language of Suriname?,"SELECT ?officialLanguage WHERE {
  dbr:Suriname dbo:officialLanguage ?officialLanguage .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
292,In which city did Nikos Kazantzakis die?,"SELECT ?city WHERE {
  dbr:Nikos_Kazantzakis dbo:deathPlace ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
293,What is in a chocolate chip cookie?,"SELECT ?ingredient WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
294,In which country is the Limerick Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?country WHERE {
  res:Limerick_Lake dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
295,Give me all video games published by Mean Hamster Software.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?videogame WHERE {
  ?videogame dbo:publisher dbr:Mean_Hamster_Software.
  ?videogame rdf:type dbo:VideoGame.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
296,Give me all members of Prodigy.,"SELECT ?member WHERE {
  dbr:The_Prodigy dbo:bandMember ?member .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
297,In which time zone is Rome?,"SELECT ?timezone WHERE {
  dbr:Rome dbo:timeZone ?timezone .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
298,How high is the lighthouse in Colombo?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?height
WHERE {
  res:Colombo_Lighthouse dbo:height ?height .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
299,Who are the writers of the Wall album of Pink Floyd?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:The_Wall dbo:musicBy ?writer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
300,Who is the mayor of Rotterdam?,"SELECT ?mayor WHERE {
  dbr:Rotterdam dbp:leader ?mayor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
301,What is the largest city in Australia?,"SELECT ?city WHERE {
  ?city dbo:country dbr:Australia .
  ?city dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
302,Who was married to president Chirac?,"SELECT ?person WHERE {
  dbr:Jacques_Chirac dbo:spouse ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
303,What form of government is found in South Africa?,"SELECT ?formOfGovernment WHERE {
  dbr:South_Africa dbo:governmentType ?formOfGovernment .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
304,How high is the Yokohama Marine Tower?,"SELECT ?height WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
305,Which holidays are celebrated around the world? test2,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
306,Who is the tallest basketball player?,"SELECT ?player ?height
WHERE {
  ?player dbo:height ?height .
  ?player rdf:type dbo:BasketballPlayer .
}
ORDER BY DESC(?height)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
307,How many languages are spoken in Turkmenistan?,"SELECT ?language WHERE {
  dbr:Turkmenistan dbo:officialLanguage ?language
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
308,Did Che Guevara have children?,"SELECT ?children WHERE {
  dbr:Che_Guevara dbo:children ?children .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?film ?year WHERE {
  ?film dbo:director dbr:Aki_Kaurismäki .
  ?film dbp:award ""Grand Prix (Cannes Film Festival)""^^xsd:string .
  ?film dbo:releaseDate ?date .
  BIND(year(?date) AS ?year)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
310,To which party does the mayor of Paris belong?,"SELECT ?party WHERE {
  ?person dbo:office dbr:Mayor_of_Paris .
  ?person dbo:party ?party .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver WHERE {
  ?driver dbo:wikiPageRedirects dbr:List_of_Formula_One_Grand_Prix_starts_records.
  ?driver rdf:type dbo:FormulaOneRacer.
} ORDER BY DESC(?races) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
312,What country is Sitecore from?,"SELECT ?country WHERE {
  dbr:Sitecore dbo:locationCountry ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
314,Is Christian Bale starring in Velvet Goldmine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?film WHERE {
  res:Christian_Bale dbo:starring ?film .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Velvet_Goldmine"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_Bono, dbr:Cher.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
316,How many ethnic groups live in Slovenia?,"SELECT ?ethnicGroup WHERE {
  dbr:Slovenia dbo:ethnicGroup ?ethnicGroup
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
317,What is the capital of Cameroon?,"SELECT ?capital WHERE {
  dbr:Cameroon dbo:capital ?capital .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
318,Was Natalie Portman born in the United States?,"SELECT ?answer WHERE {
  dbr:Natalie_Portman dbo:birthPlace ?place .
  ?place rdfs:label ?placeLabel .
  FILTER (lang(?placeLabel) = 'en') .
  BIND (contains(str(?placeLabel), ""United States"") AS ?answer) .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
319,How many pages does War and Peace have?,"SELECT ?pages WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?pages .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
320,Who is the oldest child of Meryl Streep?,"SELECT ?child WHERE {
  dbr:Meryl_Streep dbo:child ?child .
  ?child dbo:birthDate ?birthdate .
} ORDER BY ASC(?birthdate) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
321,Which television shows were created by Walt Disney?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
322,What does IYCM stand for?,"SELECT ?description WHERE {
  ?subject rdfs:label ""IYCM""@en .
  ?subject rdfs:comment ?description .
  FILTER (lang(?description) = ""en"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
323,Which types of grapes grow in Oregon?,"SELECT ?grape WHERE {
  ?oregon dcterms:subject category-en:Wine_regions_of_Oregon .
  ?oregon dbo:grapeVarieties ?grape .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
324,Was U.S. president Jackson involved in a war?,"SELECT ?war WHERE {
  dbr:Andrew_Jackson dbo:militaryCommand dbr:War_of_1812.
  ?war dbo:commander dbr:Andrew_Jackson.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
325,When was the Titanic completed?,"SELECT ?date WHERE {
  dbr:Titanic dbo:completionDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
326,Did Tesla win a nobel prize in physics?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?award
WHERE {
  res:Nikola_Tesla dbo:award ?award .
  FILTER (str(?award) = ""Nobel Prize in Physics"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
327,How many states are in Mexico?,"SELECT COUNT(?state) WHERE {
  ?state dbo:country dbr:Mexico .
  ?state rdf:type dbo:AdministrativeRegion .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project .
  ?scientist dbo:award dbr:Nobel_Peace_Prize .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
329,How much did the Lego Movie cost?,"SELECT ?cost WHERE {
  dbr:The_Lego_Movie dbo:budget ?cost .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
330,Who composed the music for Harold and Maude?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?composer WHERE {
  dbr:Harold_and_Maude dbp:musicComposer ?composer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
331,List all episodes of the first season of the HBO television series The Sopranos.,"SELECT ?episode WHERE {
  ?episode dbo:series dbr:The_Sopranos .
  ?episode dbo:seasonNumber 1 .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
332,Which city has the least inhabitants?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City.
  ?city dbo:populationTotal ?population.
} 
ORDER BY ?population 
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
333,Where is Syngman Rhee buried?,"SELECT ?place WHERE {
  dbr:Syngman_Rhee dbo:deathPlace ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
334,Does Neymar play for Real Madrid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?team WHERE {
  res:Neymar dbo:team ?team .
  FILTER (?team = res:Real_Madrid_C.F.)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
335,Who wrote the book The Pillars of the Earth?,"SELECT ?author WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
336,Do Prince Harry and Prince William have the same parents?,"SELECT ?answer WHERE {
  dbr:Prince_Harry dbo:parent ?parent .
  dbr:Prince_William,_Duke_of_Cambridge dbo:parent ?parent .
  BIND(IF(COUNT(?parent) = 2, ""Yes"", ""No"") AS ?answer)
}
GROUP BY ?answer","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?supervisor WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
338,Does Breaking Bad have more episodes than Game of Thrones?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?series ?numberOfEpisodes WHERE {
  {
    SELECT (COUNT(?episode) AS ?numberOfEpisodes) WHERE {
      ?series rdfs:label ""Breaking Bad""@en.
      ?episode dbo:series ?series.
    }
  }
  UNION
  {
    SELECT (COUNT(?episode) AS ?numberOfEpisodes) WHERE {
      ?series rdfs:label ""Game of Thrones""@en.
      ?episode dbo:series ?series.
    }
  }
} ORDER BY ?series","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
339,Who was Vincent van Gogh inspired by?,"SELECT ?person WHERE {
  dbpedia:Vincent_van_Gogh dbo:influencedBy ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building WHERE {
  ?building dbo:floorCount ?floorCount .
  FILTER(?floorCount < (SELECT ?burjFloorCount WHERE {
    dbr:Burj_Khalifa dbo:floorCount ?burjFloorCount
  }))
} ORDER BY DESC(?floorCount) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
341,What was the final result of the War of the Roses?,"SELECT ?result WHERE {
  dbr:Wars_of_the_Roses dbo:result ?result .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
342,How much did Pulp Fiction cost?,"SELECT ?cost WHERE {
  dbr:Pulp_Fiction dbo:budget ?cost .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
343,Is proinsulin a protein?,"SELECT ?answer WHERE {
  dbr:Proinsulin rdf:type ?type .
  ?type rdfs:label ?label .
  FILTER (lang(?label) = 'en')
  BIND (CONTAINS(str(?label), ""protein"") AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
344,Do Urdu and Persian have a common root?,"SELECT ?answer WHERE {
  dbpedia:Urdu dbo:languageFamily ?urduFamily .
  dbpedia:Persian_language dbo:languageFamily ?persianFamily .
  BIND(IF(?urduFamily = ?persianFamily, ""Yes"", ""No"") AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"SELECT ?person WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:country dbr:Spain .
  ?movie dbo:producer dbr:Benicio_del_Toro .
  ?movie dbo:starring ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?lake ?area WHERE {
  { ?lake dbo:area ?area . FILTER (?lake = res:Lake_Baikal) }
  UNION
  { ?lake dbo:area ?area . FILTER (?lake = res:Great_Bear_Lake) }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
347,Show me all books in Asimov's Foundation series.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Isaac_Asimov .
  ?book dbo:series dbr:Foundation_series .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
348,Where was Bach born?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
349,Which city has the oldest running metro?,"SELECT ?city WHERE {
  ?city dbo:wikiPageID ?id .
  ?city dbo:metroSystem ?metro .
  ?metro dbo:openingDate ?date .
} ORDER BY ASC(?date) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
350,Who designed the Brooklyn Bridge?,"SELECT ?designer WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?designer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
351,How many people live in Eurasia?,"SELECT ?population WHERE {
  dbr:Eurasia dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host WHERE {
  dbr:BBC_Wildlife_Specials dbo:presenter ?host .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
353,"What is the total population of Melbourne, Florida?","SELECT ?population WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
354,What country is Mount Everest in?,"SELECT ?country WHERE {
  dbr:Mount_Everest dbo:location ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
355,To which artistic movement did the painter of The Three Dancers belong?,"SELECT ?movement WHERE {
  dbr:The_Three_Dancers dbo:artist ?artist .
  ?artist dbo:movement ?movement .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
356,When did Operation Overlord commence?,"SELECT ?date WHERE {
  dbr:Operation_Overlord dbo:startDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
357,What is the bridge with the longest span?,"SELECT ?bridge WHERE {
  ?bridge dbo:crosses ?body_of_water .
  ?bridge dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
358,Is there a video game called Battle Chess?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?game 
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
359,Who was buried in the Great Pyramid of Giza?,"SELECT ?person WHERE {
  dbr:Great_Pyramid_of_Giza dbo:architecturalStyle ?person .
  ?person rdf:type dbo:Person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?plant
WHERE {
  ?plant dbo:locationCountry dbr:Malaysia .
  ?plant dbo:owner dbr:Ford_Motor_Company .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
361,Did Socrates influence Aristotle?,"SELECT ?answer WHERE {
  dbpedia:Socrates dbpedia-owl:influenced ?answer .
  FILTER (?answer = dbpedia:Aristotle)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
362,How many children did Benjamin Franklin have?,"SELECT COUNT(?child) WHERE {
  dbr:Benjamin_Franklin dbo:child ?child
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
363,How tall is Michael Jordan?,"SELECT ?height WHERE {
  dbr:Michael_Jordan dbo:height ?height .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
364,In which UK city are the headquarters of the MI6?,"SELECT ?city WHERE {
  dbr:Secret_Intelligence_Service dbo:headquarter ?headquarters.
  ?headquarters dbo:location ?city.
  ?city dbo:country dbr:United_Kingdom.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
365,Who created Family Guy?,"SELECT ?creator WHERE {
  dbr:Family_Guy dbo:creator ?creator .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
366,In which city does the Chile Route 68 end?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  res:Chile_Route_68 dbo:terminus ?cityResource.
  ?cityResource rdfs:label ?city.
  FILTER (lang(?city) = 'en')
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild WHERE {
  ?elvis dbo:wikiPageID ?id .
  ?elvis foaf:name ""Elvis Presley""@en .
  ?elvis dbo:child ?child .
  ?child dbo:child ?grandchild .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
368,When did the Ming dynasty dissolve?,"SELECT ?date WHERE {
  dbr:Ming_dynasty dbo:dissolutionYear ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
369,In which military conflicts did Lawrence of Arabia participate?,"SELECT ?conflict WHERE {
  dbr:Lawrence_of_Arabia dbo:militaryConflict ?conflict .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
370,What is the timezone in San Pedro de Atacama?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?timezone WHERE {
  dbr:San_Pedro_de_Atacama dbp:timezone ?timezone .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
371,Give me all books by William Goldman with more than 300 pages.,"SELECT ?book WHERE {
  ?book dbo:author dbr:William_Goldman .
  ?book dbo:numberOfPages ?pages .
  FILTER(?pages > 300)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
372,What did Bruce Carver die from?,"SELECT ?cause_of_death WHERE {
  dbr:Bruce_Carver dbo:deathCause ?cause_of_death.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:Lufthansa .
  ?subsidiary dbp:hubs dbr:Dortmund_Airport, dbr:Berlin_Tegel_Airport .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
374,Does Abraham Lincoln's death place have a website?,"SELECT ?website WHERE {
  ?person dbo:deathPlace ?place .
  ?place foaf:homepage ?website .
  FILTER (str(?person) = ""http://dbpedia.org/resource/Abraham_Lincoln"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
375,Did Elvis Presley have children?,"SELECT ?children WHERE {
  dbr:Elvis_Presley dbo:children ?children .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
376,Is Michelle Obama the wife of Barack Obama?,"SELECT ?answer WHERE {
  dbr:Barack_Obama dbo:spouse dbr:Michelle_Obama .
  BIND(""Yes"" AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
377,In which city does Sylvester Stallone live?,"SELECT ?city WHERE {
  dbr:Sylvester_Stallone dbo:residence ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
378,Which books by Kerouac were published by Viking Press?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?book WHERE {
  ?book dbo:author dbr:Jack_Kerouac .
  ?book dbp:publisher dbr:Viking_Press .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
379,Who wrote the song Hotel California?,"SELECT ?author WHERE {
  dbr:Hotel_California dbo:writer ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
380,What is the capital of Canada?,"SELECT ?capital WHERE {
  dbr:Canada dbo:capital ?capital .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
381,Who is the mayor of Tel Aviv?,"SELECT ?mayor WHERE {
  dbr:Tel_Aviv dbo:leader ?mayor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
382,What form of government does Russia have?,"SELECT ?formOfGovernment WHERE {
  dbr:Russia dbo:governmentType ?formOfGovernment .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Muhammad_Ali .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
384,Who was the first to climb Mount Everest?,"SELECT ?person WHERE {
  ?person dbo:firstAscentPerson dbr:Mount_Everest .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
385,How many languages are spoken in Colombia?,"SELECT COUNT(?language) WHERE {
  dbr:Colombia dbo:language ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
386,What is the currency of the Czech Republic?,"SELECT ?currency WHERE {
  dbr:Czech_Republic dbo:currency ?currency .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
387,Where in France is sparkling wine produced?,"SELECT ?region WHERE {
  ?region dbo:country dbr:France .
  ?region dbo:product dbr:Sparkling_wine .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
388,When did Boris Becker end his active career?,"SELECT ?endCareer WHERE {
  dbr:Boris_Becker dbo:careerEnd ?endCareer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke .
  ?movie dbo:director dbr:Guy_Ritchie .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Julia_Roberts .
  ?film dbo:starring dbr:Richard_Gere .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
391,Show me Hemingway's autobiography.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Ernest_Hemingway .
  ?book rdf:type dbo:Book .
  ?book dbo:literaryGenre dbr:Autobiography .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
392,How tall is Amazon Eve?,"SELECT ?height WHERE {
  dbr:Amazon_Eve dbo:height ?height .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
393,What are the five boroughs of New York?,"SELECT ?borough WHERE {
  dbr:New_York_City dbo:subdivision ?borough .
} LIMIT 5","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
394,Give me all Canadian Grunge record labels.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT DISTINCT ?label WHERE {
  ?label dbo:country dbr:Canada .
  ?label dct:subject dbc:Record_labels_by_genre .
  ?label dbo:genre dbr:Grunge .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
395,In which country does the Ganges start?,"SELECT ?country WHERE {
  dbr:Ganges dbo:sourceCountry ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
396,Who is the founder of Penguin Books?,"SELECT ?founder WHERE {
  dbr:Penguin_Books dbo:founder ?founder .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
397,Who wrote the Game of Thrones theme?,"SELECT ?composer WHERE {
  dbr:Game_of_Thrones_Theme dbo:composer ?composer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
398,Who is the president of Eritrea?,"SELECT ?person WHERE {
  ?person dbp:office ""President of Eritrea""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
399,In which city did John F. Kennedy die?,"SELECT ?city WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
400,What is the highest mountain in Australia?,"SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:country dbr:Australia ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
401,Who writes the Farmers' Almanac?,"SELECT ?author WHERE {
  dbr:Farmers'_Almanac dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
402,Give me the currency of China.,"SELECT ?currency WHERE {
  dbr:China dbo:currency ?currency .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
403,Give me all Swedish oceanographers.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Oceanographer .
  ?person dbo:nationality dbr:Sweden .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
404,In which city are the headquarters of the United Nations?,"SELECT ?city WHERE {
  dbr:United_Nations dbo:headquarter ?headquarters.
  ?headquarters dbo:city ?city.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
405,Is Rita Wilson the wife of Tom Hanks?,"SELECT ?answer WHERE {
  dbr:Tom_Hanks dbo:spouse dbr:Rita_Wilson .
  BIND(""Yes"" AS ?answer)
} UNION {
  FILTER NOT EXISTS { dbr:Tom_Hanks dbo:spouse dbr:Rita_Wilson } .
  BIND(""No"" AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
406,In which countries do people speak Japanese?,"SELECT ?country WHERE {
  ?country dbo:officialLanguage dbp:Japanese .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget WHERE {
  ?film dbo:director dbr:Tim_Burton .
  ?film dbo:budget ?budget .
} ORDER BY DESC(?budget) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
408,Which museum in New York has the most visitors?,"SELECT ?museum WHERE {
  ?museum dbo:location dbr:New_York_City .
  ?museum rdf:type dbo:Museum .
  ?museum dbo:numberOfVisitors ?visitors
} ORDER BY DESC(?visitors) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
409,What was the first Queen album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?releaseDate
WHERE {
  ?album dbo:musicalBand dbr:Queen_(band) .
  ?album dbo:releaseDate ?releaseDate .
}
ORDER BY ?releaseDate
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?first_name WHERE {
  dbr:Queens_of_the_Stone_Age dbo:formerName ?first_name .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
411,What was the last movie with Alec Guinness?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Alec_Guinness .
  ?movie dbo:releaseDate ?date .
} ORDER BY DESC(?date) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
412,Give me all actors starring in Last Action Hero.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  dbr:Last_Action_Hero dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
413,Who discovered Pluto?,"SELECT ?person WHERE {
  dbr:Pluto dbo:discoverer ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
1,List all boardgames by GMT.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?boardgame WHERE {
  ?boardgame dbo:publisher dbr:GMT_Games.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
2,Who developed Skype?,"SELECT ?developer
WHERE {
  dbr:Skype dbo:developer ?developer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
3,Which people were born in Heraklion?,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person rdf:type dbo:Person .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
4,In which U.S. state is Area 51 located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  res:Area_51 dbo:location ?state .
  ?state dbo:country res:United_States .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
5,Who is the mayor of New York City?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  dbr:New_York_City dbo:leader ?mayor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
6,Which countries have places with more than two caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country (COUNT(?place) AS ?caveCount) WHERE {
  ?place dbo:country ?country .
  ?place dbo:type dbr:Cave .
} GROUP BY ?country HAVING (COUNT(?place) > 2)","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
7,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
8,Which airports does Air China serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport WHERE {
  ?airport dbo:operator dbr:Air_China .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
9,Give me all actors starring in movies directed by and starring William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorName WHERE {
  ?movie dbo:director dbr:William_Shatner ;
         dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (LANG(?actorName) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
10,What are the official languages of the Philippines?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officialLanguage WHERE {
  dbr:Philippines dbo:officialLanguage ?officialLanguage .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
11,Give me all Danish films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?film WHERE {
  ?film dbo:country dbr:Denmark .
  ?film rdf:type dbo:Film .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie WHERE {
  ?movie dbo:starring dbr:Brad_Pitt ;
         dbo:director dbr:Guy_Ritchie .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
13,Give me the grandchildren of Bruce Lee.,"SELECT ?grandchild WHERE {
  ?person dbo:birthName ""Bruce Lee""@en.
  ?child dbo:parent ?person.
  ?grandchild dbo:parent ?child.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
14,Which other weapons did the designer of the Uzi develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?weapon ?weaponLabel WHERE {
  dbr:Uzi dbo:designer ?designer .
  ?weapon dbo:designer ?designer .
  ?weapon rdfs:label ?weaponLabel .
  FILTER (LANG(?weaponLabel) = ""en"")
  FILTER (?weapon != dbr:Uzi)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
15,Who is the owner of Universal Studios?,"SELECT ?owner 
WHERE { 
  dbr:Universal_Studios dbo:owner ?owner .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
16,Which state of the USA has the highest population density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:populationDensity ?populationDensity.
} ORDER BY DESC(?populationDensity) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
17,Which monarchs were married to a German?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?monarch ?spouse
WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch dbo:occupation dbr:Monarch .
  ?spouse dbo:birthPlace dbr:Germany .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
18,Which organizations were founded in 1950?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1950""^^xsd:gYear.
  ?organization rdf:type dbo:Organisation.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
19,Who created the comic Captain America?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?creator
WHERE {
  ?comic dbo:wikiPageID ?id .
  ?comic dbp:name ""Captain America"" .
  ?comic dbo:author ?creator .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
20,Give me the Apollo 14 astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?astronaut WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
21,Who wrote the book The pillars of the Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author
WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
22,Which state of the United States of America has the highest density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:State .
  ?state dbo:country dbr:United_States .
  ?state dbo:populationDensity ?density .
} ORDER BY DESC(?density) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
23,Which spaceflights were launched from Baikonur?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spaceflight WHERE {
  ?spaceflight dbo:launchSite dbr:Baikonur_Cosmodrome.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
24,Give me a list of all trumpet players that were bandleaders.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?player ?playerLabel WHERE {
  ?player rdf:type dbo:MusicalArtist ;
          dbo:instrument dbr:Trumpet ;
          dbo:occupation dbr:Bandleader .
  ?player rdfs:label ?playerLabel .
  FILTER (lang(?playerLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
25,Which U.S. states are in the same timezone as Utah?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  ?utah dbo:timeZone ?utahTimeZone .
  ?state dbo:timeZone ?utahTimeZone .
  ?utah rdfs:label ""Utah""@en .
  ?state dbo:country <http://dbpedia.org/resource/United_States> .
  FILTER (?state != ?utah)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
26,Which U.S. states possess gold minerals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT DISTINCT ?state WHERE {
  ?state dbo:country dbr:United_States .
  ?state dbo:goldmine ?goldmine .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
27,Who is the daughter of Ingrid Bergman married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName WHERE {
  ?person dbo:parent <http://dbpedia.org/resource/Ingrid_Bergman> .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
28,How deep is Lake Placid?,"SELECT ?depth WHERE {
  dbr:Lake_Placid_(New_York) dbo:depth ?depth .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
29,Show me all museums in London.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?museum ?museumLabel WHERE {
  ?museum dbo:location dbr:London ;
          a dbo:Museum .
  ?museum rdfs:label ?museumLabel .
  FILTER (lang(?museumLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
30,Which caves have more than 3 entrances?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?cave ?entrances
WHERE {
  ?cave dbo:numberOfEntrances ?entrances.
  FILTER(?entrances > 3)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
31,Who is the tallest player of the Atlanta Falcons?,"SELECT ?player ?height
WHERE {
  ?player dbo:team :Atlanta_Falcons .
  ?player dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
32,What are the top-10 action role-playing video games according to IGN?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?game ?IGN_rating
WHERE {
  ?game dbo:genre ?genre .
  ?game dbp:ign ?IGN_rating .
  ?genre rdfs:label ?genre_label .
  FILTER (LANG(?genre_label) = ""en"") .
  FILTER CONTAINS(?genre_label, ""Action role-playing"") .
} 
ORDER BY DESC(?IGN_rating)
LIMIT 10","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
33,Give me all writers that won the Nobel Prize in literature.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writer WHERE {
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
34,Show me all basketball players that are higher than 2 meters.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?height
WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
  FILTER (?height > 2)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
35,When was the Statue of Liberty built?,"SELECT ?date WHERE {
  dbr:Statue_of_Liberty dbo:completionDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
36,Which states border Illinois?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  dbr:Illinois dbo:border ?state .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
37,Who developed Minecraft?,"SELECT ?developer
WHERE {
  dbr:Minecraft dbo:developer ?developer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
38,Where did Hillel Slovak die?,"SELECT ?place WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?place .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
39,What movies does Jesse Eisenberg play in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?movieLabel WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg.
  ?movie rdfs:label ?movieLabel.
  FILTER (lang(?movieLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
40,Give all swimmers that were born in Moscow.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?swimmer WHERE {
  ?swimmer dbo:birthPlace dbr:Moscow .
  ?swimmer dbo:occupation dbr:Swimming .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
41,Give me all cosmonauts.,"SELECT ?cosmonaut WHERE {
  ?cosmonaut dbo:occupation dbr:Cosmonaut.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
42,Give me all Swiss non-profit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?organization dbo:country dbr:Switzerland .
  ?organization rdf:type dbo:Non-ProfitOrganisation .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
43,Which presidents were born in 1945?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?president WHERE {
  ?president dbo:birthDate ""1945-01-01""^^xsd:date .
  ?president rdf:type dbo:President .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
44,What kind of music did Lou Reed play?,"SELECT ?genre WHERE {
  dbr:Lou_Reed dbo:genre ?genre .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
45,Where do the Red Sox play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?stadium
WHERE {
  res:Boston_Red_Sox dbo:ground ?stadium .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
46,Show a list of soccer clubs that play in the Bundesliga.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:league dbr:Bundesliga .
  ?club rdf:type dbo:SoccerClub .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
47,Which volcanos in Japan erupted since 2000?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?volcano ?eruptionDate
WHERE {
  ?volcano dbo:country dbr:Japan .
  ?volcano dbo:eruption ?eruption .
  ?eruption dbo:startDate ?eruptionDate .
  FILTER (?eruptionDate >= ""2000-01-01""^^xsd:date)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
48,Which bridges cross the Seine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bridge WHERE {
  ?bridge dbo:crosses dbr:Seine.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
49,What is the official color of the University of Oxford?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officialColor WHERE {
  <http://dbpedia.org/resource/University_of_Oxford> dbp:colours ?officialColor.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
50,How many films did Hal Roach produce?,"SELECT COUNT(?film) WHERE {
  ?film dbo:producer dbr:Hal_Roach.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
51,Give me all Danish movies.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?movie WHERE {
  ?movie dbo:country dbr:Denmark .
  ?movie rdf:type dbo:Film .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count) WHERE {
  ?person dbo:deathCause ?causeOfDeath .
} 
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
53,Who are the four youngest MVP basketball players?,"SELECT ?player ?age ?date WHERE {
  ?player dbo:award dbr:NBA_Most_Valuable_Player_Award .
  ?player dbo:birthDate ?birth .
  BIND(year(now()) - year(?birth) AS ?age) .
  ?player dbp:date ?date .
} ORDER BY ?age LIMIT 4","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
54,Give me all companies in Munich.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?name WHERE {
  ?company dbo:location dbr:Munich .
  ?company rdf:type dbo:Company .
  ?company rdfs:label ?name .
  FILTER (lang(?name) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
55,Give me the capitals of all countries that the Himalayas run through.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.rdfs.org/ns/void#>

SELECT DISTINCT ?country ?capital
WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country dbo:capital ?capital .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
56,How many movies did Park Chan-wook direct?,"SELECT COUNT(?movie) WHERE {
  ?movie dbo:director dbr:Park_Chan-wook.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
57,Which rivers flow into a German lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?river WHERE {
  ?lake dbo:country dbr:Germany .
  ?river dbo:mouth ?lake .
  ?river a dbo:River .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
58,How many airlines are there?,"SELECT (COUNT(DISTINCT ?airline) AS ?count) WHERE {
  ?airline rdf:type dbo:Airline .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
59,Give me all islands that belong to Japan.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island WHERE {
  ?island dbo:country dbr:Japan .
  ?island rdf:type dbo:Island .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
60,How many inhabitants does Maribor have?,"SELECT ?population WHERE {
  dbr:Maribor dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
61,Give me all Apollo 14 astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?astronaut WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
62,Which companies have more than 1 million employees?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?numEmployees
WHERE {
  ?company dbo:numberOfEmployees ?numEmployees .
  FILTER(?numEmployees > 1000000)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?film WHERE {
  ?film dbo:director dbr:Garry_Marshall .
  ?film dbo:starring dbr:Julia_Roberts .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
64,Give me all soccer clubs in the Premier League.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:league dbr:Premier_League .
  ?club rdf:type dbo:SoccerClub .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
65,What is the highest place of the Urals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?place ?elevation
WHERE {
  ?place dbo:mountainRange dbr:Ural_Mountains .
  ?place dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
66,Who is the governor of Wyoming?,"SELECT ?governor WHERE {
  dbr:Wyoming dbo:leader ?governor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
67,Where did the architect of the Eiffel Tower study?,"SELECT ?university WHERE {
  ?person dbo:knownFor dbr:Eiffel_Tower .
  ?person dbo:almaMater ?university .
  ?person rdf:type dbo:Architect .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
68,Give me all world heritage sites designated within the past two years.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?site ?date WHERE {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dbo:yearOfInscription ?date .
  FILTER (?date >= ""2014""^^xsd:integer)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
69,Give me all actors who were born in Paris after 1950.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Paris .
  ?actor dbo:birthDate ?date .
  ?actor rdf:type dbo:Actor .
  FILTER (?date > ""1950-01-01""^^xsd:date)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
70,Which movies star both Liz Taylor and Richard Burton?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor .
  ?movie dbo:starring dbr:Richard_Burton .
  ?movie rdf:type dbo:Film .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
71,Give me all Australian nonprofit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?organization dbo:locationCountry dbr:Australia .
  ?organization dbo:type dbr:Nonprofit_organization .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
72,Which pope succeeded John Paul II?,"SELECT ?pope WHERE {
  ?pope dbo:predecessor dbr:Pope_John_Paul_II .
  ?pope rdf:type dbo:Pope .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
73,Give me all ESA astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?astronaut WHERE {
  ?astronaut dbo:occupation dbr:European_Space_Agency_astronaut.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
74,Who was president of Pakistan in 1978?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:office dbr:President_of_Pakistan .
  ?person dbp:termStart ?start .
  ?person dbp:termEnd ?end .
  FILTER (?start <= ""1978-01-01""^^xsd:date && ?end >= ""1978-12-31""^^xsd:date)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
75,Who is the owner of Rolls-Royce?,"SELECT ?owner 
WHERE { 
  dbr:Rolls-Royce dbo:owner ?owner .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
76,How many museums does Paris have?,"SELECT (COUNT(?museum) AS ?count) WHERE {
  ?museum dbo:location dbr:Paris .
  ?museum rdf:type dbo:Museum .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
77,Where was JFK assassinated?,"SELECT ?place WHERE {
  dbr:Assassination_of_John_F._Kennedy dbo:location ?place .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
78,Give me all federal chancellors of Germany.,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?chancellor WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
79,Show me everyone who was born on Halloween.,"SELECT ?person ?name WHERE {
  ?person dbo:birthDate ""10-31""^^xsd:date.
  ?person foaf:name ?name.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
80,Which beer originated in Ireland?,"SELECT ?beer WHERE {
  ?beer dbo:country dbr:Ireland .
  ?beer rdf:type dbo:Beer
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
81,To which countries does the Himalayan mountain system extend?,"SELECT ?country 
WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country rdf:type dbo:Country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
82,Which actors were born in Germany?,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Germany .
  ?actor rdf:type dbo:Actor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
83,How much carbs does peanut butter have?,"SELECT ?carbs WHERE {
  dbr:Peanut_butter dbo:carbohydrate ?carbs.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
84,Who produced the most films?,"SELECT ?producer (COUNT(?movie) AS ?movieCount)
WHERE {
  ?movie dbo:producer ?producer .
}
ORDER BY DESC(?movieCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
85,How many employees does Google have?,"SELECT ?employees
WHERE {
  dbr:Google dbo:numberOfEmployees ?employees.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
86,Give me all actors who were born in Berlin.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Berlin .
  ?actor dbo:occupation dbr:Actor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
87,Who created Goofy?,"SELECT ?creator
WHERE {
  dbr:Goofy dbo:creator ?creator .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
88,Which music albums contain the song Last Christmas?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?albumLabel WHERE {
  ?album dbo:track dbr:Last_Christmas.
  ?album rdfs:label ?albumLabel.
  FILTER (lang(?albumLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
89,When was Alberta admitted as province?,"SELECT ?date WHERE {
  dbr:Alberta dbo:formationDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
90,How many missions does the Soyuz programme have?,"SELECT (COUNT(?mission) AS ?count) WHERE {
  ?mission dbo:programme dbr:Soyuz_programme.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
91,Give me all the TV shows with Neil Patrick Harris.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?tvShow WHERE {
  ?tvShow dbo:starring dbr:Neil_Patrick_Harris.
  ?tvShow rdf:type dbo:TelevisionShow.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
92,When were the Hells Angels founded?,"SELECT ?foundingYear WHERE {
  dbr:Hells_Angels dbo:foundingYear ?foundingYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
93,What is the net income of Apple?,"SELECT ?netIncome WHERE {
  dbr:Apple_Inc. dbo:netIncome ?netIncome .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
94,Give me all Swedish holidays.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?holiday WHERE {
  ?holiday dbo:country dbr:Sweden .
  ?holiday rdf:type dbo:Holiday .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
95,In which city was the former Dutch queen Juliana buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?city WHERE {
  dbr:Juliana_of_the_Netherlands dbo:deathPlace ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
96,List all the musicals with music by Leonard Bernstein.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
97,Give me all companies in the advertising industry.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?company WHERE {
  ?company dbo:industry dbr:Advertising .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
98,What is the largest metropolitan area in Washington state?,"SELECT ?city ?population WHERE {
  ?city dbo:isPartOf dbr:Washington_(state) .
  ?city dbo:populationTotal ?population .
  ?city dbo:type dbr:Metropolitan_area .
} ORDER BY DESC(?population) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
99,Who killed John Lennon?,"SELECT ?killer WHERE {
  dbr:John_Lennon dbo:deathCause ?cause .
  ?killer dbo:causeOfDeath ?cause .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
100,Which writers studied in Istanbul?,"SELECT ?writer WHERE {
  ?writer dbo:occupation dbr:Writer .
  ?writer dbo:education ?education .
  ?education dbo:location dbr:Istanbul .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
101,Give me all Australian metalcore bands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?band
WHERE {
  ?band rdf:type dbo:Band .
  ?band dbo:genre dbr:Metalcore .
  ?band dbo:origin dbr:Australia .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
102,Which countries adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
103,Give me all types of eating disorders.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?eatingDisorder WHERE {
  ?eatingDisorder dbo:wikiPageRedirects <http://dbpedia.org/resource/Category:Eating_disorders> .
  ?eatingDisorder rdfs:label ?label .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
104,Was Marc Chagall a jew?,"SELECT ?person ?religion WHERE {
  ?person dbo:abstract ?abstract.
  ?person dbo:religion ?religion.
  FILTER (regex(?abstract, ""Marc Chagall"") && regex(?religion, ""Judaism""))
} LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT MIN(?rank) WHERE {
  ?brazil dbo:wikiPageID ?id .
  ?brazil rdfs:label ""Brazil national football team""@en .
  ?brazil dbp:fifaRank ?rank .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
106,How many films did Leonardo DiCaprio star in?,"SELECT COUNT(?movie) WHERE {
  ?movie dbo:starring dbr:Leonardo_DiCaprio.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
107,Was Margaret Thatcher a chemist?,"SELECT ?answer WHERE {
  dbr:Margaret_Thatcher dbo:occupation ?occupation .
  BIND(EXISTS { ?occupation rdfs:label ?label . FILTER(LANG(?label) = ""en"" && LCASE(STR(?label)) = ""chemist"") } AS ?answer)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
108,Which U.S. states are in the same time zone as Utah?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  ?utah dbo:timeZone ?timeZone .
  ?state dbo:timeZone ?timeZone .
  ?utah rdfs:label ""Utah""@en .
  ?state dbo:country <http://dbpedia.org/resource/United_States> .
  FILTER (?state != <http://dbpedia.org/resource/Utah>)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
109,Give me all books written by Danielle Steel.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  ?book dbo:author dbr:Danielle_Steel .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
110,Which country has the most official languages?,"SELECT ?country (COUNT(?language) AS ?languageCount)
WHERE {
  ?country a dbo:Country.
  ?country dbo:officialLanguage ?language.
}
GROUP BY ?country
ORDER BY DESC(?languageCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
111,What is the total amount of men and women serving in the FDNY?,"SELECT ?gender (COUNT(?person) AS ?total) WHERE {
  ?person dbo:occupation dbr:Fire_Department_of_the_City_of_New_York .
  ?person foaf:gender ?gender .
} GROUP BY ?gender","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
112,Which actor played Chewbacca?,"SELECT ?actor WHERE {
  dbr:Chewbacca dbo:portrayedBy ?actor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
113,Give me all libraries established earlier than 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library WHERE {
  ?library dbo:established ?establishedDate .
  ?library rdf:type dbo:Library .
  FILTER (?establishedDate < ""1400-01-01""^^xsd:date) .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
114,Which programming languages were influenced by Perl?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language ?languageLabel WHERE {
  ?language dbo:influencedBy <http://dbpedia.org/resource/Perl> .
  ?language rdfs:label ?languageLabel .
  FILTER (lang(?languageLabel) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
115,In which U.S. state is Mount McKinley located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  dbr:Denali dbo:location ?state .
  ?state dbo:country dbr:United_States .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
116,What airlines are part of the SkyTeam alliance?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airline WHERE {
  ?airline dbp:alliance dbr:SkyTeam.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
117,Which ships were called after Benjamin Franklin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?ship ?shipLabel WHERE {
  ?ship dbo:shipNamesake dbr:Benjamin_Franklin .
  ?ship rdfs:label ?shipLabel .
  FILTER (lang(?shipLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
118,Give me all Methodist politicians.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?politician WHERE {
  ?politician dct:subject dbc:Methodist_politicians.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
119,What other books have been written by the author of The Fault in Our Stars?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  dbr:The_Fault_in_Our_Stars dbo:author ?author .
  ?book dbo:author ?author .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
120,What is the highest mountain?,"SELECT ?mountain ?elevation 
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
} 
ORDER BY DESC(?elevation)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
121,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
ORDER BY DESC(?bookCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
122,Which programming languages influenced Javascript?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language ?languageLabel WHERE {
  ?language dbo:influencedBy <http://dbpedia.org/resource/JavaScript> .
  ?language rdfs:label ?languageLabel .
  FILTER (lang(?languageLabel) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
123,Which musician wrote the most books?,"SELECT ?musician (COUNT(?book) AS ?bookCount)
WHERE {
  ?musician rdf:type dbo:MusicalArtist.
  ?book dbo:author ?musician.
}
ORDER BY DESC(?bookCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
124,Which films starring Clint Eastwood did he direct himself?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Clint_Eastwood .
  ?film dbo:director dbr:Clint_Eastwood .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
125,Which software has been developed by organizations founded in California?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?software WHERE {
  ?org dbo:foundingLocation dbr:California .
  ?software dbo:developer ?org .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
126,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
127,How many airlines are members of the Star Alliance?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:alliance dbr:Star_Alliance.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
128,Give me all actors called Baldwin.,"PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?name .
  FILTER(CONTAINS(?name, ""Baldwin""))
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
129,Who wrote The Hunger Games?,"SELECT ?author WHERE {
  dbr:The_Hunger_Games dbo:author ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
130,For which label did Elvis record his first album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label WHERE {
  ?album dbo:artist <http://dbpedia.org/resource/Elvis_Presley> ;
         dbo:recordLabel ?labelObject .
  ?labelObject rdfs:label ?label .
} 
ORDER BY ?album
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
131,Is Christian Bale starring in Batman Begins?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Christian_Bale .
  FILTER (str(?movie) = ""http://dbpedia.org/resource/Batman_Begins"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
132,Where is the residence of the prime minister of Spain?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?residence
WHERE {
  ?person dbo:office ""Prime Minister of Spain""@en.
  ?person dbp:residence ?residence.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?movie) AS ?movieCount)
WHERE {
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}
ORDER BY DESC(?movieCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
134,Which countries have more than two official languages?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?country a dbo:Country .
  {
    SELECT ?country (COUNT(?language) AS ?languageCount) WHERE {
      ?country dbo:officialLanguage ?language .
    } GROUP BY ?country
  }
  FILTER(?languageCount > 2)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
135,Which countries have more than ten caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:country ?country .
  ?cave a dbo:Cave .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 10)","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?song ?releaseDate WHERE {
  ?song dbo:musicalArtist <http://dbpedia.org/resource/Bruce_Springsteen> .
  ?song dbo:releaseDate ?releaseDate .
  FILTER (xsd:dateTime(?releaseDate) >= ""1980-01-01T00:00:00Z""^^xsd:dateTime && xsd:dateTime(?releaseDate) <= ""1990-12-31T23:59:59Z""^^xsd:dateTime)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
137,Which television shows were created by John Cleese?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show ?showLabel WHERE {
  ?show dbo:creator dbr:John_Cleese.
  ?show rdfs:label ?showLabel.
  FILTER (lang(?showLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
138,When did Latvia join the EU?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Latvia dbp:euAccession ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
139,Which soccer players were born on Malta?,"SELECT ?player WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player rdf:type dbo:SoccerPlayer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
140,How many politicians graduated from Columbia University?,"SELECT COUNT(?person) WHERE {
  ?person dbo:almaMater dbr:Columbia_University .
  ?person rdf:type dbo:Politician .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
141,Give me the birthdays of all actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?birthday WHERE {
  ?show dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
  FILTER (?show = dbr:Charmed)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
142,Which telecommunications organizations are located in Belgium?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?organization dbo:industry dbr:Telecommunications.
  ?organization dbo:locationCountry dbr:Belgium.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
143,Give me a list of all lakes in Denmark.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lake WHERE {
  ?lake dbo:country dbr:Denmark .
  ?lake rdf:type dbo:Lake .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
144,How many children does Eddie Murphy have?,"SELECT COUNT(?child) WHERE {
  dbr:Eddie_Murphy dbo:child ?child .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
145,Show me all English Gothic buildings in Kent.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?building ?name WHERE {
  ?building dbo:architecturalStyle dbr:English_Gothic_architecture ;
            dbo:location dbr:Kent ;
            rdfs:label ?name .
  FILTER (lang(?name) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
146,Who is the manager of Real Madrid?,"SELECT ?manager WHERE {
  dbr:Real_Madrid_C.F. dbo:manager ?manager .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
147,In which countries can you pay using the West African CFA franc?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
148,Which holidays are celebrated around the world?,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
149,What is the longest river?,"SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
150,Which organizations were founded in 1930?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1930""^^xsd:gYear.
  ?organization rdf:type dbo:Organisation.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
151,What is the birth name of Angela Merkel?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
152,Who has Tom Cruise been married to?,"SELECT ?spouse
WHERE {
  dbr:Tom_Cruise dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
153,Which weapons did Heckler & Koch develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?weapon WHERE {
  ?weapon dbo:manufacturer dbr:Heckler_&_Koch .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
154,What is the smallest city by area in Germany?,"SELECT ?city ?area
WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Germany ;
        dbo:areaTotal ?area .
}
ORDER BY ASC(?area)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
155,What is the ruling party in Lisbon?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?party WHERE {
  <http://dbpedia.org/resource/Lisbon> dbp:rulingParty ?party .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
156,How heavy is Jupiter's lightest moon?,"SELECT ?mass WHERE {
  ?moon dbo:parent dbr:Jupiter .
  ?moon dbo:mass ?mass .
} 
ORDER BY ASC(?mass)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
157,How many employees does IBM have?,"SELECT ?employees
WHERE {
  dbr:IBM dbo:numberOfEmployees ?employees.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
158,List all episodes of the first season of the HBO television series The Sopranos!,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?episode ?episodeLabel WHERE {
  ?episode dbo:series dbr:The_Sopranos .
  ?episode dbo:seasonNumber 1 .
  ?episode rdfs:label ?episodeLabel .
  FILTER (lang(?episodeLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
159,What does ICRO stand for?,"SELECT ?description WHERE {
  ?s rdfs:label ""ICRO""@en.
  ?s rdfs:comment ?description.
  FILTER(lang(?description) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"# Query for the new Battlestar Galactica series
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?series ?numberOfEpisodes WHERE {
  ?series dbo:numberOfEpisodes ?numberOfEpisodes .
  ?series rdfs:label ""Battlestar Galactica (2004 TV series)""@en .
}

# Query for the old Battlestar Galactica series
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?series ?numberOfEpisodes WHERE {
  ?series dbo:numberOfEpisodes ?numberOfEpisodes .
  ?series rdfs:label ""Battlestar Galactica (1978 TV series)""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
161,Give me all films produced by Hal Roach.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film dbo:producer dbr:Hal_Roach.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
162,Who played Agent Smith in Matrix?,"SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""The Matrix""@en .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = ""en"") .
  ?actor dbo:abstract ?abstract .
  FILTER (contains(?abstract, ""Agent Smith"")) .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
163,Which Greek parties are pro-European?,"SELECT ?party ?partyLabel WHERE {
  ?party dct:subject dbc:Pro-European_political_parties_in_Greece.
  ?party rdfs:label ?partyLabel.
  FILTER (lang(?partyLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
164,Give me a list of all bandleaders that play trumpet.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandleader WHERE {
  ?bandleader rdf:type dbo:MusicalArtist ;
              dbo:instrument dbr:Trumpet ;
              dbo:occupation dbr:Bandleader .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
165,What is the second highest mountain on Earth?,"SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:parentMountainPeak dbr:Mount_Everest ;
            rdfs:label ?mountainLabel ;
            dbo:elevation ?elevation .
  FILTER (lang(?mountainLabel) = ""en"")
}
ORDER BY DESC(?elevation)
LIMIT 2","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
166,Is Egypts largest city also its capital?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?capital
WHERE {
  ?country dbo:largestCity ?city ;
           dbo:capital ?capital .
  FILTER (str(?country) = ""http://dbpedia.org/resource/Egypt"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
167,Which rockets were launched from Baikonur?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rocket WHERE {
  ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
168,How many programming languages are there?,"SELECT (COUNT(?programmingLanguage) AS ?count) WHERE {
  ?programmingLanguage rdf:type dbo:ProgrammingLanguage.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
169,Which Chess players died in the same place they were born in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?player ?birthPlace WHERE {
  ?player dbo:deathPlace ?deathPlace .
  ?player dbo:birthPlace ?birthPlace .
  ?player rdf:type dbo:ChessPlayer .
  FILTER (?birthPlace = ?deathPlace)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
170,Who is the owner of Facebook?,"SELECT ?owner 
WHERE { 
  dbr:Facebook dbo:owner ?owner .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
171,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?movieLabel WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdfs:label ?movieLabel.
  FILTER (lang(?movieLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
172,In which U.S. state is Fort Knox located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  res:Fort_Knox dbo:location ?state .
  ?state dbo:country res:United_States .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?population
WHERE {
  ?city dbo:isPartOf <http://dbpedia.org/resource/New_Jersey> .
  ?city dbo:populationTotal ?population .
  ?city rdf:type dbo:City .
  FILTER (?population > 100000)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
174,Which mountains are higher than the Nanga Parbat?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?height
WHERE {
  ?mountain dbo:elevation ?height .
  ?mountain rdf:type dbo:Mountain .
  ?nangaParbat dbo:elevation ?nangaHeight .
  ?nangaParbat rdfs:label ""Nanga Parbat""@en .
  FILTER (?height > ?nangaHeight)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
175,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bSide WHERE {
  ?album dbo:artist dbr:Ramones ;
         dbo:bSide ?bSide .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
176,What are the specialities of the UNC Health Care?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?specialities WHERE {
  ?org dbo:wikiPageID ?id .
  ?org rdfs:label ""UNC Health Care""@en .
  ?org dbo:speciality ?specialities .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
177,When was Olof Palme shot?,"SELECT ?date WHERE {
  dbr:Olof_Palme dbo:deathDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
178,List the seven kings of Rome.,"SELECT ?king WHERE {
  ?king dbo:monarchOf dbr:Kingdom_of_Rome .
} LIMIT 7","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
179,Give me all people that were born in Vienna and died in Berlin.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Vienna .
  ?person dbo:deathPlace dbr:Berlin .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
180,Is Darth Vader Luke’s father?,"SELECT ?father WHERE {
  dbpedia:Luke_Skywalker dbpedia-owl:parent ?father.
  FILTER (?father = dbpedia:Darth_Vader)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
181,Show me all the breweries in Australia.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?brewery WHERE {
  ?brewery dbo:location dbr:Australia .
  ?brewery rdf:type dbo:Brewery .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?film WHERE {
  ?film dbo:director dbr:Steven_Spielberg .
  ?film dbo:budget ?budget .
  FILTER (?budget >= 80000000^^xsd:decimal)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
183,Give me all soccer clubs in Spain.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:country dbr:Spain .
  ?club rdf:type dbo:SoccerClub .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
184,Who produced films starring Natalie Portman?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producerName WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
  ?producer rdfs:label ?producerName .
  FILTER (lang(?producerName) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
185,Give me all breeds of the German Shepherd dog.,"SELECT ?breed WHERE {
  ?breed dbo:species dbr:German_Shepherd.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight
WHERE {
  ?player dbo:team :Chicago_Bulls.
  ?player dbo:weight ?weight.
}
ORDER BY DESC(?weight)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
187,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
188,What is the largest country in the world?,"SELECT ?country WHERE {
  ?country rdf:type dbo:Country .
  OPTIONAL { ?country dbo:areaTotal ?area . }
} ORDER BY DESC(?area) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
189,What is the largest city in america?,"SELECT ?city ?population
WHERE {
  ?city dct:subject dbc:Cities_in_the_United_States.
  ?city dbo:populationTotal ?population.
}
ORDER BY DESC(?population)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
190,Who was the pope that founded the Vatican Television?,"SELECT ?pope WHERE {
  ?pope dbo:positionHeld dbr:Pope .
  ?pope dbo:founded dbr:Vatican_Television_Center .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
191,Who discovered Ceres?,"SELECT ?person WHERE {
  dbr:Ceres_(dwarf_planet) dbo:discoverer ?person.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
192,Who is the king of the Netherlands?,"SELECT ?king WHERE {
  ?king dbo:positionHeld dbr:Monarchy_of_the_Netherlands .
  ?king rdf:type dbo:Person .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
193,Is Cola a beverage?,"SELECT ?subject WHERE {
  ?subject rdfs:label ""Cola""@en.
  ?subject rdf:type dbo:Beverage.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  res:Angela_Merkel dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
195,Who wrote the book Les Piliers de la terre?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""Les Piliers de la terre""@fr.
  ?book dbo:author ?author.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
196,Which airports does Yeti Airlines serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport WHERE {
  dbr:Yeti_Airlines dbo:destination ?airport.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
197,Where is the birthplace of Goethe?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthPlace .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"SELECT ?event ?date WHERE {
  { 
    SELECT ?date WHERE {
      dbpedia:Cuban_Missile_Crisis dbo:date ?date .
    } 
    ORDER BY DESC(?date)
    LIMIT 1
  } UNION {
    SELECT ?date WHERE {
      dbpedia:Bay_of_Pigs_Invasion dbo:date ?date .
    } 
    ORDER BY DESC(?date)
    LIMIT 1
  }
} ORDER BY DESC(?date)","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
199,Which ingredients do I need for carrot cake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?ingredient WHERE {
  ?dish dbo:ingredient ?ingredient .
  ?dish rdfs:label ""Carrot cake""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
200,Who created Wikipedia?,"SELECT ?creator 
WHERE { 
  dbr:Wikipedia dbo:creator ?creator 
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
201,What is the highest mountain in Saxony Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:location <http://dbpedia.org/resource/Saxony> ;
            dbo:elevation ?elevation .
  FILTER EXISTS { ?mountain a dbo:Mountain }
}
ORDER BY DESC(?elevation)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
202,Who is the current federal minister of finance in Germany?,"SELECT ?person WHERE {
  ?person dbp:office ""Federal Minister of Finance (Germany)""@en.
  ?person dbp:termEnd ""Incumbent""@en.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
203,In which country is Mecca located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?country 
WHERE {
  res:Mecca dbo:country ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor WHERE {
  ?actor dbo:series dbr:Breaking_Bad .
  ?actor dbo:character dbr:Gus_Fring .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
205,In which country does the Nile start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  res:Nile dbo:sourceCountry ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
206,In which state Penn State University is located?,"SELECT ?state WHERE {
  dbr:Pennsylvania_State_University dbo:location ?location .
  ?location dbo:isPartOf ?state .
  ?state rdf:type dbo:State .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
207,What is the biggest stadium in Spain?,"SELECT ?stadium ?capacity
WHERE {
  ?stadium dbo:location dbr:Spain ;
           dbo:capacity ?capacity .
}
ORDER BY DESC(?capacity)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach 
WHERE {
  ?team dbo:location dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
209,How large is the area of UK?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?area
WHERE {
  res:United_Kingdom dbo:areaTotal ?area .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
210,Who created Batman?,"SELECT ?creator 
WHERE {
  dbr:Batman dbo:creator ?creator .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
211,Was Sigmund Freud married?,"SELECT ?spouse WHERE {
  dbr:Sigmund_Freud dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
212,Who are the developers of DBpedia?,"SELECT ?developer
WHERE {
  dbr:DBpedia dbo:developer ?developer
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
213,Give me all movies directed by Francis Ford Coppola.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?movieLabel WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola.
  ?movie rdfs:label ?movieLabel.
  FILTER (lang(?movieLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
214,Are tree frogs a type of amphibian?,"SELECT ?answer WHERE {
  dbr:Tree_frog dbo:type ?type.
  BIND(EXISTS { ?type rdfs:subClassOf* dbr:Amphibian } AS ?answer)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
215,What is the location of the Houses of Parliament?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?location WHERE {
  res:Palace_of_Westminster dbo:location ?location .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
216,how much is the elevation of Düsseldorf Airport ?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?elevation
WHERE {
  res:Düsseldorf_Airport dbo:elevation ?elevation.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
217,How much is the population of mexico city ?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population
WHERE {
  res:Mexico_City dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
218,when was the founding date of french fifth republic?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  res:French_Fifth_Republic dbo:foundingDate ?foundingDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
219,Who was the first King of England?,"SELECT ?person WHERE {
  ?person dbo:succession dbp:List_of_English_monarchs.
  ?person dbo:reignStart ?reignStart.
} ORDER BY ?reignStart
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
220,Who is the editor of Forbes?,"SELECT ?editor WHERE {
  dbr:Forbes dbo:editor ?editor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
221,Which awards did Douglas Hofstadter win?,"SELECT ?award WHERE {
  dbr:Douglas_Hofstadter dbo:award ?award .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
222,Who is the youngest Darts player?,"SELECT ?player ?birthDate WHERE {
  ?player dbo:occupation dbr:Darts ;
          dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
223,Is horse racing a sport?,"SELECT ?type WHERE {
  dbr:Horse_racing rdf:type ?type .
  FILTER(?type = dbo:Sport)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
225,How many people live in Poland?,"SELECT ?population WHERE {
  dbr:Poland dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
226,When was the last episode of the TV series Friends aired?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?endDate
WHERE {
  ?show a dbo:TelevisionShow ;
        rdfs:label ""Friends""@en ;
        dbo:endingYear ?endDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
227,Is the wife of president Obama called Michelle?,"SELECT ?name WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse.
  ?spouse foaf:name ?name.
  FILTER (str(?name) = ""Michelle Obama"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
229,Who is 8th president of US?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?president ?name WHERE {
  ?president dbo:orderInOffice 8 ;
             dbo:office res:President_of_the_United_States ;
             rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
230,how much is the total population of  european union?,"SELECT ?population WHERE {
  dbr:European_Union dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
231,Give me all launch pads operated by NASA.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?launch_pad WHERE {
  ?launch_pad dbo:operator dbr:NASA .
  ?launch_pad rdf:type dbo:LaunchPad .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
232,Who developed the video game World of Warcraft?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?developer
WHERE {
  dbr:World_of_Warcraft dbo:developer ?developer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
233,What is the birth name of Adele?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Adele_(singer) dbo:birthName ?birthName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
234,What is the population of Cairo?,"SELECT ?population WHERE {
  dbr:Cairo dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
235,Is Frank Herbert still alive?,"SELECT ?deathDate WHERE {
  dbr:Frank_Herbert dbo:deathDate ?deathDate.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
236,What is the last work of Dan Brown?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?date
WHERE {
  dbr:Dan_Brown dbo:author ?work .
  ?work dbo:releaseDate ?date .
}
ORDER BY DESC(?date)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
237,Where is Sungkyunkwan University?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?location
WHERE {
  res:Sungkyunkwan_University dbo:location ?location .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
238,Who is the author of the interpretation of dreams?,"SELECT ?author WHERE {
  ?book rdfs:label ""The Interpretation of Dreams""@en.
  ?book dbo:author ?author.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
239,When was the death  of  Shakespeare?,"SELECT ?deathDate WHERE {
  dbr:William_Shakespeare dbo:deathDate ?deathDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
241,Who developed Slack?,"SELECT ?developer
WHERE {
  dbr:Slack_(software) dbo:developer ?developer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
242,Where is the origin of Carolina reaper?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?origin
WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
243,In which year was Rachel Stevens born?,"SELECT ?birthYear WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
244,How often did Jane Fonda marry?,"SELECT COUNT(?spouse) WHERE {
  dbr:Jane_Fonda dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
245,Was the wife of president Lincoln called Mary?,"SELECT ?answer 
WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?spouse .
  BIND(strafter(str(?spouse), ""http://dbpedia.org/resource/"") AS ?name)
  BIND(IF(?name = ""Mary_Todd_Lincoln"", ""Yes"", ""No"") AS ?answer)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
246,Which cities does the Weser flow through?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  ?city dbo:river dbr:Weser .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
247,In which programming language is GIMP written?,"SELECT ?language 
WHERE { 
  dbr:GIMP dbo:programmingLanguage ?language .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
248,Which university did Angela Merkel attend?,"SELECT ?university WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
249,List all the musicals with music by Elton John.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
250,How many Aldi stores are there?,"SELECT (COUNT(?store) AS ?count) WHERE {
  ?store dbo:owner dbr:Aldi.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
251,What is the longest river in the world?,"SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
252,When was John Adams born?,"SELECT ?birthDate WHERE {
  dbr:John_Adams dbo:birthDate ?birthDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
253,Which companies produce hovercrafts?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?company WHERE {
  ?company dbo:product dbr:Hovercraft .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
254,Who was the wife of U.S. president Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
255,Which species does an elephant belong?,"SELECT ?species WHERE {
  dbr:Elephant dbo:species ?species .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
256,How many people live in the capital of Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?population
WHERE {
  dbr:Canberra dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
257,In which ancient empire could you pay with cocoa beans?,"SELECT ?empire WHERE {
  ?empire dbo:currency ?currency .
  ?currency rdfs:label ?currencyLabel .
  FILTER (lang(?currencyLabel) = 'en')
  FILTER (contains(lcase(?currencyLabel), ""cocoa bean""))
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
258,How many theories did Albert Einstein come up with?,"SELECT COUNT(?theory) WHERE {
  ?theory dbo:discoverer dbr:Albert_Einstein.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
259,Who composed the soundtrack for Cameron's Titanic?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composer
WHERE {
  dbr:Titanic_(1997_film) dbo:musicComposer ?composer.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
260,Give me the runtime of Toy Story.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?runtime
WHERE {
  res:Toy_Story dbo:runtime ?runtime .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
262,With how many countries Iran has borders?,"SELECT COUNT(?country) WHERE {
  dbr:Iran dbo:border ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
263,Which electronics companies were founded in Beijing?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?company WHERE {
  ?company dbo:industry dbr:Electronics.
  ?company dbo:foundingLocation dbr:Beijing.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
264,Who was the successor of John F. Kennedy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  res:John_F._Kennedy dbo:successor ?successor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
265,Who is the mayor of Paris?,"SELECT ?mayor WHERE {
  dbr:Paris dbo:mayor ?mayor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
266,Did Arnold Schwarzenegger attend a university?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  res:Arnold_Schwarzenegger dbo:almaMater ?university .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
267,Is James Bond married?,"SELECT ?spouse
WHERE {
  dbr:James_Bond ?p ?spouse .
  FILTER (?p = dbo:spouse)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
268,Does the Isar flow into a lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?lake WHERE {
  res:Isar dbo:mouth ?lake .
  ?lake a dbo:Lake .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
269,Which Indian company has the most employees?,"SELECT ?company ?employees
WHERE {
  ?company dbo:locationCountry dbr:India .
  ?company dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?employees)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
270,Who was John F. Kennedy's vice president?,"SELECT ?vicePresident WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
271,Which country does the creator of Miffy come from?,"SELECT ?country WHERE {
  ?person dbo:knownFor ?work .
  ?work foaf:name ""Miffy""@en .
  ?person dbo:birthPlace ?place .
  ?place dbo:country ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
273,In what city is the Heineken brewery?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  dbr:Heineken dbo:location ?cityResource.
  ?cityResource rdfs:label ?city.
  FILTER (lang(?city) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
274,Is Barack Obama a democrat?,"SELECT ?party WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  FILTER regex(str(?party), ""Democratic_Party_(United_States)"", ""i"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
275,List the children of Margaret Thatcher.,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbp:children ?child .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
276,From which region is the Melon de Bourgogne?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?wine dbo:variety <http://dbpedia.org/resource/Melon_de_Bourgogne> .
  ?wine dbo:region ?region .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
278,how big is the total area of North Rhine- Westphalia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?area
WHERE {
  res:North_Rhine-Westphalia dbo:areaTotal ?area.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
279,Which city has the most inhabitants?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City.
  ?city dbo:populationTotal ?population.
}
ORDER BY DESC(?population)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
280,What is Donald Trump's main business?,"SELECT ?business WHERE {
  dbr:Donald_Trump dbo:occupation ?business .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
281,When will start the final match of the football world cup 2018?,"SELECT ?date WHERE {
  dbr:2018_FIFA_World_Cup_Final dbo:startDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
282,Which films did Stanley Kubrick direct?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Stanley_Kubrick.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
283,how much is the population  Iraq?,"SELECT ?population WHERE {
  dbr:Iraq dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Canada ;
        dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
285,Who is the mayor of the capital of French Polynesia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.rdfs.org/ns/void#>

SELECT ?mayor WHERE {
  dbr:French_Polynesia dbo:capital ?capital .
  ?capital dbo:mayor ?mayor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
286,Give me all actors starring in movies directed by William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorName WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (lang(?actorName) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
287,How tall is Claudia Schiffer?,"SELECT ?height
WHERE {
  dbr:Claudia_Schiffer dbo:height ?height.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
288,how much is the population densty rank of germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?populationDensityRank WHERE {
  res:Germany dbo:populationDensityRank ?populationDensityRank .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
289,What is the highest mountain in Italy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:country dbr:Italy ;
            dbo:elevation ?elevation .
  FILTER EXISTS { ?mountain rdf:type dbo:Mountain }
}
ORDER BY DESC(?elevation)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
290,List all games by GMT.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?game WHERE {
  ?game dbo:publisher dbr:GMT_Games.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
291,What is the official language of Suriname?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officialLanguage WHERE {
  dbr:Suriname dbo:officialLanguage ?officialLanguage .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
292,In which city did Nikos Kazantzakis die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?city WHERE {
  res:Nikos_Kazantzakis dbo:deathPlace ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
293,What is in a chocolate chip cookie?,"SELECT ?ingredient WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
294,In which country is the Limerick Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country 
WHERE {
  ?lake dbo:country ?country .
  ?lake rdfs:label ""Limerick Lake""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
295,Give me all video games published by Mean Hamster Software.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?video_game WHERE {
  ?video_game dbo:publisher dbr:Mean_Hamster_Software.
  ?video_game rdf:type dbo:VideoGame.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
296,Give me all members of Prodigy.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member
WHERE {
  dbr:The_Prodigy dbo:bandMember ?member.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
297,In which time zone is Rome?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?timezone WHERE {
  res:Rome dbo:timeZone ?timezone .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
298,How high is the lighthouse in Colombo?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?height
WHERE {
  res:Colombo_Lighthouse dbo:height ?height .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
299,Who are the writers of the Wall album of Pink Floyd?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer
WHERE {
  dbr:The_Wall dbo:writer ?writer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
300,Who is the mayor of Rotterdam?,"SELECT ?mayor WHERE {
  dbr:Rotterdam dbp:leader ?mayor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
301,What is the largest city in Australia?,"SELECT ?city WHERE {
  ?city dbo:country dbr:Australia .
  ?city dbo:populationTotal ?population .
} ORDER BY DESC(?population) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
302,Who was married to president Chirac?,"SELECT ?spouse
WHERE {
  dbr:Jacques_Chirac dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
303,What form of government is found in South Africa?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governmentForm WHERE {
  dbr:South_Africa dbp:governmentType ?governmentForm .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
304,How high is the Yokohama Marine Tower?,"SELECT ?height WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
305,Which holidays are celebrated around the world? test2,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
306,Who is the tallest basketball player?,"SELECT ?player ?height
WHERE {
  ?player dbo:height ?height .
  ?player rdf:type dbo:BasketballPlayer .
}
ORDER BY DESC(?height)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
307,How many languages are spoken in Turkmenistan?,"SELECT COUNT(?language) WHERE {
  dbr:Turkmenistan dbo:language ?language .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
308,Did Che Guevara have children?,"SELECT ?children WHERE {
  dbr:Che_Guevara dbo:child ?children .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?year WHERE {
  ?person dbo:wikiPageID ?id .
  ?person foaf:name ""Aki Kaurismäki""@en .
  ?film dbp:director ?person .
  ?film dbp:honor dbr:Grand_Prix_(Cannes_Film_Festival) .
  ?film dbp:year ?year
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
310,To which party does the mayor of Paris belong?,"SELECT ?party WHERE {
  ?person dbo:office dbr:Mayor_of_Paris .
  ?person dbo:party ?party .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver ?name ?races WHERE {
  ?driver dbo:wikiPageRedirects ?redirect .
  ?redirect rdf:type dbo:FormulaOneRacer .
  ?redirect dbo:numberOfRaces ?races .
  ?redirect foaf:name ?name
} ORDER BY DESC(?races) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
312,What country is Sitecore from?,"SELECT ?country 
WHERE { 
  dbr:Sitecore dbo:locationCountry ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
313,Give me the birth place of Frank Sinatra.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  res:Frank_Sinatra dbo:birthPlace ?birthPlace .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
314,Is Christian Bale starring in Velvet Goldmine?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Christian_Bale .
  FILTER (str(?movie) = ""http://dbpedia.org/resource/Velvet_Goldmine"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_Bono, dbr:Cher.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
316,How many ethnic groups live in Slovenia?,"SELECT (COUNT(?ethnicGroup) AS ?count) WHERE {
  dbr:Slovenia dbo:ethnicGroup ?ethnicGroup .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
317,What is the capital of Cameroon?,"SELECT ?capital WHERE {
  dbr:Cameroon dbo:capital ?capital .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
318,Was Natalie Portman born in the United States?,"SELECT ?birthPlace WHERE {
  dbr:Natalie_Portman dbo:birthPlace ?birthPlace .
  FILTER(CONTAINS(str(?birthPlace), ""United_States""))
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
319,How many pages does War and Peace have?,"SELECT ?pages WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?pages .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
320,Who is the oldest child of Meryl Streep?,"SELECT ?child WHERE {
  ?person dbo:birthDate ?birthdate .
  ?person dbo:parent dbr:Meryl_Streep .
} ORDER BY ASC(?birthdate) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
321,Which television shows were created by Walt Disney?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:Walt_Disney.
  ?show rdf:type dbo:TelevisionShow.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
322,What does IYCM stand for?,"SELECT ?description WHERE {
  ?s rdfs:label ""IYCM""@en.
  ?s rdfs:comment ?description.
  FILTER(lang(?description) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
323,Which types of grapes grow in Oregon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grape WHERE {
  ?oregonWine dbo:region dbr:Oregon .
  ?oregonWine dbo:grapeVariety ?grape .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
324,Was U.S. president Jackson involved in a war?,"SELECT ?war WHERE {
  ?person dbo:birthName ""Andrew Jackson"" .
  ?person dbo:militaryCommand ?war .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
325,When was the Titanic completed?,"SELECT ?date WHERE {
  dbr:Titanic dbo:completionDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
326,Did Tesla win a nobel prize in physics?,"SELECT ?award
WHERE {
  dbr:Nikola_Tesla dbo:award ?award .
  FILTER (str(?award) = ""Nobel Prize in Physics"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
327,How many states are in Mexico?,"SELECT (COUNT(?state) AS ?count) WHERE {
  ?state dbo:country dbr:Mexico .
  ?state rdf:type dbo:AdministrativeRegion .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project, dbr:Nobel_Peace_Prize.
  ?scientist rdf:type dbo:Scientist.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
329,How much did the Lego Movie cost?,"SELECT ?cost WHERE {
  dbr:The_Lego_Movie dbo:budget ?cost .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
330,Who composed the music for Harold and Maude?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composerName WHERE {
  dbr:Harold_and_Maude dbo:musicComposer ?composer.
  ?composer rdfs:label ?composerName.
  FILTER (lang(?composerName) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
331,List all episodes of the first season of the HBO television series The Sopranos.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?episode ?episodeLabel WHERE {
  ?episode dbo:series dbr:The_Sopranos .
  ?episode dbo:seasonNumber 1 .
  ?episode rdfs:label ?episodeLabel .
  FILTER (lang(?episodeLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
332,Which city has the least inhabitants?,"SELECT ?city ?population WHERE {
  ?city rdf:type dbo:City.
  ?city dbo:populationTotal ?population.
} 
ORDER BY ?population 
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
333,Where is Syngman Rhee buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?place
WHERE {
  res:Syngman_Rhee dbo:deathPlace ?place .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
334,Does Neymar play for Real Madrid?,"SELECT ?team WHERE {
  dbpedia:Neymar dbo:team ?team .
  FILTER (str(?team) = ""http://dbpedia.org/resource/Real_Madrid_C.F."")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
335,Who wrote the book The Pillars of the Earth?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
336,Do Prince Harry and Prince William have the same parents?,"SELECT ?parent WHERE {
  { dbpedia:Prince_William,_Duke_of_Cambridge dbo:parent ?parent . }
  UNION
  { dbpedia:Prince_Harry,_Duke_of_Sussex dbo:parent ?parent . }
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?supervisor WHERE {
  dbpedia:Albert_Einstein dbo:doctoralAdvisor ?supervisor.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
338,Does Breaking Bad have more episodes than Game of Thrones?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?series ?numberOfEpisodes
WHERE {
  {
    SELECT (COUNT(?episode) AS ?numberOfEpisodes)
    WHERE {
      ?series rdfs:label ""Breaking Bad""@en.
      ?episode dbo:series ?series.
    }
  }
  UNION
  {
    SELECT (COUNT(?episode) AS ?numberOfEpisodes)
    WHERE {
      ?series rdfs:label ""Game of Thrones""@en.
      ?episode dbo:series ?series.
    }
  }
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
339,Who was Vincent van Gogh inspired by?,"SELECT ?person WHERE {
  dbr:Vincent_van_Gogh dbo:influencedBy ?person .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building ?floors WHERE {
  ?building dbo:building ?type.
  ?building dbo:floorsAboveGround ?floors.
  FILTER (?floors < (SELECT ?burj_floors WHERE {
    dbr:Burj_Khalifa dbo:floorsAboveGround ?burj_floors
  }))
} ORDER BY DESC(?floors) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
341,What was the final result of the War of the Roses?,"SELECT ?result WHERE {
  dbr:Wars_of_the_Roses dbo:result ?result .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
342,How much did Pulp Fiction cost?,"SELECT ?cost WHERE {
  dbr:Pulp_Fiction dbo:budget ?cost.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
343,Is proinsulin a protein?,"SELECT ?type WHERE {
  dbr:Proinsulin rdf:type ?type .
  FILTER (?type = dbo:Protein)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
344,Do Urdu and Persian have a common root?,"SELECT ?language ?root WHERE {
  { dbr:Urdu dbo:languageFamily ?root . }
  UNION
  { dbr:Persian dbo:languageFamily ?root . }
  ?language dbo:languageFamily ?root .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?actorLabel WHERE {
  ?film dbo:producer dbr:Benicio_del_Toro ;
        dbo:country dbr:Spain ;
        dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?lake ?area
WHERE {
  {
    SELECT (dbo:Lake_Baikal as ?lake) ?area
    WHERE {
      dbo:Lake_Baikal dbo:area ?area .
    }
  }
  UNION
  {
    SELECT (dbo:Great_Bear_Lake as ?lake) ?area
    WHERE {
      dbo:Great_Bear_Lake dbo:area ?area .
    }
  }
}
ORDER BY DESC(?area)","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
347,Show me all books in Asimov's Foundation series.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book WHERE {
  ?book dbo:series dbr:Foundation_series.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
348,Where was Bach born?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
349,Which city has the oldest running metro?,"SELECT ?city WHERE {
  ?metro dbo:location ?city .
  ?metro dbo:openingDate ?date .
} ORDER BY ?date LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
350,Who designed the Brooklyn Bridge?,"SELECT ?designer WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?designer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
351,How many people live in Eurasia?,"SELECT (SUM(?population) as ?totalPopulation) WHERE {
  ?city dct:subject dbc:Cities_in_Eurasia.
  ?city dbo:populationTotal ?population.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host 
WHERE {
  dbr:BBC_Wildlife_Specials dbo:presenter ?host .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
353,"What is the total population of Melbourne, Florida?","SELECT ?population WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
354,What country is Mount Everest in?,"SELECT ?country WHERE {
  dbr:Mount_Everest dbo:location ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
355,To which artistic movement did the painter of The Three Dancers belong?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movement WHERE {
  dbr:The_Three_Dancers dbo:author ?author .
  ?author dbo:movement ?movement .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
356,When did Operation Overlord commence?,"SELECT ?date WHERE {
  dbr:Operation_Overlord dbo:startDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
357,What is the bridge with the longest span?,"SELECT ?bridge ?span WHERE {
  ?bridge rdf:type dbo:Bridge .
  ?bridge dbo:maximumSpan ?span
} 
ORDER BY DESC(?span)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
358,Is there a video game called Battle Chess?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
359,Who was buried in the Great Pyramid of Giza?,"SELECT ?person WHERE {
  dbr:Great_Pyramid_of_Giza dbo:architect ?person.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?plant
WHERE {
  ?plant dbo:locationCountry dbr:Malaysia .
  ?plant dbo:owner dbr:Ford_Motor_Company .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
361,Did Socrates influence Aristotle?,"SELECT ?influence WHERE {
  dbr:Aristotle dbo:influencedBy ?influence .
  FILTER (?influence = dbr:Socrates)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
362,How many children did Benjamin Franklin have?,"SELECT COUNT(?child) WHERE {
  dbr:Benjamin_Franklin dbo:child ?child .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
363,How tall is Michael Jordan?,"SELECT ?height 
WHERE {
  dbr:Michael_Jordan dbo:height ?height.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
364,In which UK city are the headquarters of the MI6?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  dbr:Secret_Intelligence_Service dbo:headquarter ?headquarter.
  ?headquarter dbo:city ?city.
  ?city dbo:country dbr:United_Kingdom.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
365,Who created Family Guy?,"SELECT ?creator
WHERE {
  dbr:Family_Guy dbo:creator ?creator .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
366,In which city does the Chile Route 68 end?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  ?route dbo:routeEnd ?city .
  ?route rdfs:label ""Chile Route 68""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild WHERE {
  ?elvis dbo:wikiPageID ?id .
  ?elvis foaf:name ""Elvis Presley""@en .
  ?elvis dbo:child ?child .
  ?child dbo:child ?grandchild .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
368,When did the Ming dynasty dissolve?,"SELECT ?endDate WHERE {
  dbr:Ming_dynasty dbo:endDate ?endDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
369,In which military conflicts did Lawrence of Arabia participate?,"SELECT ?conflict WHERE {
  dbr:Lawrence_of_Arabia_(film) dbo:militaryConflict ?conflict .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
370,What is the timezone in San Pedro de Atacama?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?timezone WHERE {
  res:San_Pedro_de_Atacama dbo:timeZone ?timezone .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
371,Give me all books by William Goldman with more than 300 pages.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?book ?pages
WHERE {
  ?book dbo:author dbr:William_Goldman ;
        dbo:numberOfPages ?pages .
  FILTER(?pages > 300)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
372,What did Bruce Carver die from?,"SELECT ?causeOfDeath WHERE {
  dbr:Bruce_Carver dbo:deathCause ?causeOfDeath.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:Lufthansa .
  ?subsidiary dbo:hub dbr:Dortmund .
  ?subsidiary dbo:hub dbr:Berlin_Tegel_Airport .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
374,Does Abraham Lincoln's death place have a website?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?website
WHERE {
  ?person dbo:deathPlace ?place .
  ?place dbo:website ?website .
  FILTER (regex(?person, ""Abraham_Lincoln""))
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
375,Did Elvis Presley have children?,"SELECT ?child WHERE {
  dbr:Elvis_Presley dbo:child ?child .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
376,Is Michelle Obama the wife of Barack Obama?,"SELECT ?answer 
WHERE { 
  dbr:Michelle_Obama dbo:spouse ?spouse .
  BIND(IF(?spouse = dbr:Barack_Obama, ""Yes"", ""No"") AS ?answer)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
377,In which city does Sylvester Stallone live?,"SELECT ?city WHERE {
  dbr:Sylvester_Stallone dbo:residence ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
378,Which books by Kerouac were published by Viking Press?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?book WHERE {
  ?book dbo:author dbr:Jack_Kerouac .
  ?book dbp:publisher ""Viking Press"" .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
379,Who wrote the song Hotel California?,"SELECT ?author WHERE {
  dbr:Hotel_California dbo:writer ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
380,What is the capital of Canada?,"SELECT ?capital WHERE {
  dbr:Canada dbo:capital ?capital .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
381,Who is the mayor of Tel Aviv?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?mayor
WHERE {
  <http://dbpedia.org/resource/Tel_Aviv> dbp:mayor ?mayor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
382,What form of government does Russia have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?government
WHERE {
  res:Russia dbo:governmentType ?government .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Muhammad_Ali .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
384,Who was the first to climb Mount Everest?,"SELECT ?person WHERE {
  ?person dbo:firstAscentPerson dbr:Mount_Everest.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
385,How many languages are spoken in Colombia?,"SELECT (COUNT(?language) AS ?languageCount) WHERE {
  dbr:Colombia dbo:language ?language .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
386,What is the currency of the Czech Republic?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?currency WHERE {
  res:Czech_Republic dbo:currency ?currencyLink.
  ?currencyLink rdfs:label ?currency.
  FILTER (lang(?currency) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
387,Where in France is sparkling wine produced?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?wine dbo:region ?region .
  ?wine dbo:country dbr:France .
  ?wine dbo:type dbr:Sparkling_wine .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
388,When did Boris Becker end his active career?,"SELECT ?endDate WHERE {
  dbr:Boris_Becker dbo:endDate ?endDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke .
  ?movie dbo:director dbr:Guy_Ritchie .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Julia_Roberts .
  ?film dbo:starring dbr:Richard_Gere .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
391,Show me Hemingway's autobiography.,"SELECT ?book ?description WHERE {
  ?book dbo:author dbr:Ernest_Hemingway .
  ?book dbo:literaryGenre dbr:Autobiography .
  ?book rdfs:comment ?description .
  FILTER(lang(?description) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
392,How tall is Amazon Eve?,"SELECT ?height WHERE {
  dbr:Amazon_Eve dbo:height ?height.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
393,What are the five boroughs of New York?,"SELECT ?borough WHERE {
  dbr:New_York_City dbo:borough ?borough.
} LIMIT 5","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
394,Give me all Canadian Grunge record labels.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?label WHERE {
  ?label dbo:country dbr:Canada .
  ?label dbo:genre dbr:Grunge .
  ?label rdf:type dbo:RecordLabel .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
395,In which country does the Ganges start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  res:Ganges dbo:sourceCountry ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
396,Who is the founder of Penguin Books?,"SELECT ?founder WHERE {
  dbr:Penguin_Books dbo:founder ?founder .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
397,Who wrote the Game of Thrones theme?,"SELECT ?composer WHERE {
  dbr:Game_of_Thrones_Theme dbo:composer ?composer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
398,Who is the president of Eritrea?,"SELECT ?president WHERE {
  dbr:Eritrea dbp:leader ?president .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
399,In which city did John F. Kennedy die?,"SELECT ?city WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
400,What is the highest mountain in Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:country dbr:Australia ;
            dbo:elevation ?elevation .
  FILTER EXISTS { ?mountain a dbo:Mountain }
}
ORDER BY DESC(?elevation)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
401,Who writes the Farmers' Almanac?,"SELECT ?author
WHERE {
  dbr:Farmers'_Almanac dbo:author ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
402,Give me the currency of China.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?currency WHERE {
  res:China dbo:currency ?currency .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
403,Give me all Swedish oceanographers.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?oceanographer WHERE {
  ?oceanographer dbo:birthPlace dbr:Sweden .
  ?oceanographer rdf:type dbo:Oceanographer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
404,In which city are the headquarters of the United Nations?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  res:United_Nations dbo:location ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
405,Is Rita Wilson the wife of Tom Hanks?,"SELECT ?answer WHERE {
  dbr:Tom_Hanks dbo:spouse dbr:Rita_Wilson .
  BIND(""Yes"" AS ?answer)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
406,In which countries do people speak Japanese?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country 
WHERE {
  ?country dbo:officialLanguage ?language .
  ?language rdfs:label ?languageLabel .
  FILTER (LANG(?languageLabel) = 'en' && ?languageLabel = 'Japanese')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget
WHERE {
  ?film dbo:director dbr:Tim_Burton.
  ?film dbo:budget ?budget.
}
ORDER BY DESC(?budget)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
408,Which museum in New York has the most visitors?,"SELECT ?museum ?visitors
WHERE {
  ?museum dbo:location dbr:New_York_City ;
          dbo:numberOfVisitors ?visitors .
}
ORDER BY DESC(?visitors)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
409,What was the first Queen album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?releaseDate WHERE {
  ?album dbo:musicalBand <http://dbpedia.org/resource/Queen_(band)> .
  ?album dbo:releaseDate ?releaseDate .
} ORDER BY ?releaseDate
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?firstName WHERE {
  dbr:Queens_of_the_Stone_Age dbo:formerName ?firstName .
} LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
411,What was the last movie with Alec Guinness?,"SELECT ?movie ?date WHERE {
  ?movie dbo:starring dbr:Alec_Guinness .
  ?movie dbo:releaseDate ?date .
} ORDER BY DESC(?date) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
412,Give me all actors starring in Last Action Hero.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?actorLabel WHERE {
  dbr:Last_Action_Hero dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
413,Who discovered Pluto?,"SELECT ?person WHERE {
  dbr:Pluto dbo:discoverer ?person .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
1,List all boardgames by GMT.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?boardgame WHERE {
  ?boardgame dbo:publisher dbr:GMT_Games.
  ?boardgame rdf:type dbo:BoardGame.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
2,Who developed Skype?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?developer
WHERE {
  dbr:Skype dbo:developer ?developer.
  ?developer rdfs:label ?label.
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
3,Which people were born in Heraklion?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person foaf:name ?name .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
4,In which U.S. state is Area 51 located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  dbr:Area_51 dbo:location ?location .
  ?location dbo:isPartOf ?state .
  ?state dbo:country dbr:United_States .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
5,Who is the mayor of New York City?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?mayor WHERE {
  res:New_York_City dbo:leader ?mayor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
6,Which countries have places with more than two caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?country WHERE {
  ?place dbo:country ?country ;
         rdf:type dbo:Place .
  {
    SELECT ?place WHERE {
      ?cave1 dbo:location ?place ;
             rdf:type dbo:Cave .
      ?cave2 dbo:location ?place ;
             rdf:type dbo:Cave .
      FILTER (?cave1 != ?cave2)
    } GROUP BY ?place HAVING (COUNT(?place) > 2)
  }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
7,Where did Abraham Lincoln die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?place ?placeLabel WHERE {
  res:Abraham_Lincoln dbo:deathPlace ?place .
  ?place rdfs:label ?placeLabel .
  FILTER (lang(?placeLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
8,Which airports does Air China serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport WHERE {
  dbr:Air_China dbo:hub ?airport .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
9,Give me all actors starring in movies directed by and starring William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorName WHERE {
  ?movie dbo:director dbr:William_Shatner ;
         dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (LANG(?actorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
10,What are the official languages of the Philippines?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language WHERE {
  dbr:Philippines dbo:officialLanguage ?languageResource.
  ?languageResource rdfs:label ?language.
  FILTER (lang(?language) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
11,Give me all Danish films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?film WHERE {
  ?film dbo:country dbr:Denmark .
  ?film rdf:type dbo:Film .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie WHERE {
  ?movie dbo:director dbr:Guy_Ritchie ;
         dbo:starring dbr:Brad_Pitt .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
13,Give me the grandchildren of Bruce Lee.,"SELECT ?grandchild WHERE {
  ?person dbo:birthName ""Bruce Lee""@en.
  ?child dbo:parent ?person.
  ?grandchild dbo:parent ?child.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
14,Which other weapons did the designer of the Uzi develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?weapon ?weaponLabel WHERE {
  ?weapon dbo:designer dbr:Uziel_Gal .
  ?weapon rdfs:label ?weaponLabel .
  FILTER (lang(?weaponLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
15,Who is the owner of Universal Studios?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?owner
WHERE {
  dbr:Universal_Pictures dbo:owner ?ownerEntity.
  ?ownerEntity foaf:name ?owner.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
16,Which state of the USA has the highest population density?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbo:populationDensity ?populationDensity .
} ORDER BY DESC(?populationDensity) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
17,Which monarchs were married to a German?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?monarch ?spouse
WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch dbo:occupation dbr:Monarch .
  ?spouse dbo:birthPlace dbr:Germany .
  ?monarch foaf:name ?monarch_name .
  ?spouse foaf:name ?spouse_name .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
18,Which organizations were founded in 1950?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1950""^^xsd:gYear.
  ?organization rdf:type dbo:Organisation.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
19,Who created the comic Captain America?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name WHERE {
  dbr:Captain_America dbo:creator ?creator.
  ?creator foaf:name ?name.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
20,Give me the Apollo 14 astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?astronaut ?name WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
  ?astronaut rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
21,Who wrote the book The pillars of the Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorName WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (lang(?authorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
22,Which state of the United States of America has the highest density?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  ?state dbo:country dbr:United_States ;
         dbo:populationDensity ?density .
} ORDER BY DESC(?density) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
23,Which spaceflights were launched from Baikonur?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spaceflight ?launchDate WHERE {
  ?spaceflight dbo:launchSite dbr:Baikonur_Cosmodrome.
  ?spaceflight dbo:launchDate ?launchDate.
} ORDER BY DESC(?launchDate)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
24,Give me a list of all trumpet players that were bandleaders.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?player ?playerLabel WHERE {
  ?player dbo:instrument dbr:Trumpet ;
          dbo:occupation dbr:Bandleader .
  ?player rdfs:label ?playerLabel .
  FILTER (lang(?playerLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
25,Which U.S. states are in the same timezone as Utah?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?state WHERE {
  dbr:Utah dbo:timeZone ?utahTimeZone .
  ?state rdf:type dbo:Place .
  ?state dbo:timeZone ?utahTimeZone .
  ?state dbo:country dbr:United_States .
  FILTER (?state != dbr:Utah)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
26,Which U.S. states possess gold minerals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?state WHERE {
  ?state dbo:country dbr:United_States .
  ?state dbo:goldmine ?goldmine .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
27,Who is the daughter of Ingrid Bergman married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseName WHERE {
  dbr:Ingrid_Bergman dbo:child ?child .
  ?child dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  FILTER (lang(?spouseName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
28,How deep is Lake Placid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?depth WHERE {
  res:Lake_Placid_(New_York) dbo:depth ?depth .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
29,Show me all museums in London.,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?museum ?museumLabel WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:London ;
          rdfs:label ?museumLabel .
  FILTER (lang(?museumLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
30,Which caves have more than 3 entrances?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?cave ?numEntrances WHERE {
  ?cave dbo:numberOfEntrances ?numEntrances.
  ?cave rdf:type dbo:Cave.
  FILTER(?numEntrances > 3)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
31,Who is the tallest player of the Atlanta Falcons?,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?height
WHERE {
  ?player dbo:team dbr:Atlanta_Falcons ;
          dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
32,What are the top-10 action role-playing video games according to IGN?,"SPARQL is a query language used to retrieve data stored in Resource Description Framework (RDF) format. However, it's important to note that DBpedia does not store rankings from specific sources like IGN. Therefore, it's not possible to create a SPARQL query to retrieve the top-10 action role-playing video games according to IGN. 

DBpedia can provide information about video games, their genres, and other related data, but it does not have the capability to rank them based on reviews or ratings from specific sources. For that, you would need to access IGN's API or database directly, if they provide such access.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
33,Give me all writers that won the Nobel Prize in literature.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writer ?writerLabel WHERE {
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
  ?writer rdfs:label ?writerLabel .
  FILTER (lang(?writerLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
34,Show me all basketball players that are higher than 2 meters.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?height
WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
  FILTER (?height > 2)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
35,When was the Statue of Liberty built?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Statue_of_Liberty dbo:completionDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
36,Which states border Illinois?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  dbr:Illinois dbo:border ?state .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
37,Who developed Minecraft?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?developer
WHERE {
  dbr:Minecraft dbo:developer ?developer.
  ?developer rdfs:label ?label.
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
38,Where did Hillel Slovak die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?deathPlace WHERE {
  res:Hillel_Slovak dbo:deathPlace ?deathPlace .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
39,What movies does Jesse Eisenberg play in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?movieLabel WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg.
  ?movie rdfs:label ?movieLabel.
  FILTER (lang(?movieLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
40,Give all swimmers that were born in Moscow.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?swimmer WHERE {
  ?swimmer dbo:birthPlace dbr:Moscow .
  ?swimmer dbo:occupation dbr:Swimming .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
41,Give me all cosmonauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?cosmonaut WHERE {
  ?cosmonaut dbo:occupation dbr:Cosmonaut.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
42,Give me all Swiss non-profit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?organization dbo:locationCountry dbr:Switzerland .
  ?organization dbo:type dbr:Nonprofit_organization .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
43,Which presidents were born in 1945?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?president WHERE {
  ?president dbo:birthDate ?birthDate .
  ?president dbo:office ?office .
  FILTER (regex(str(?office), ""President"", ""i"") && year(?birthDate) = 1945)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
44,What kind of music did Lou Reed play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?genre ?genreLabel WHERE {
  dbr:Lou_Reed dbo:genre ?genre .
  ?genre rdfs:label ?genreLabel .
  FILTER (lang(?genreLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
45,Where do the Red Sox play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?stadium WHERE {
  res:Boston_Red_Sox dbo:ground ?stadium.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
46,Show a list of soccer clubs that play in the Bundesliga.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:league dbr:Bundesliga.
  ?club rdf:type dbo:SoccerClub.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
47,Which volcanos in Japan erupted since 2000?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?volcano ?eruptionDate WHERE {
  ?volcano dbo:country dbr:Japan .
  ?volcano dbo:eruption ?eruption .
  ?eruption dbo:startDate ?eruptionDate .
  FILTER (?eruptionDate >= ""2000-01-01""^^xsd:date)
} ORDER BY ?eruptionDate","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
48,Which bridges cross the Seine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bridge ?bridgeLabel WHERE {
  ?bridge dbo:crosses dbr:Seine.
  ?bridge rdfs:label ?bridgeLabel.
  FILTER (lang(?bridgeLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
49,What is the official color of the University of Oxford?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officialColor WHERE {
  dbr:University_of_Oxford dbp:colours ?officialColor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
50,How many films did Hal Roach produce?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT (COUNT(?film) AS ?count) WHERE {
  ?film rdf:type dbo:Film .
  ?film dbo:producer res:Hal_Roach .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
51,Give me all Danish movies.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?movie ?movieLabel WHERE {
  ?movie dct:subject dbc:Danish_films.
  ?movie rdfs:label ?movieLabel.
  FILTER (lang(?movieLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count) WHERE {
  ?person dbo:deathCause ?causeOfDeath .
} 
ORDER BY DESC(?count)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
53,Who are the four youngest MVP basketball players?,"SELECT ?player ?age ?date WHERE {
  ?player dbo:award dbr:NBA_Most_Valuable_Player_Award .
  ?player dbo:birthDate ?birth .
  ?player dbp:date ?date .
  BIND(year(?date) - year(?birth) as ?age)
} 
ORDER BY ?age
LIMIT 4","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
54,Give me all companies in Munich.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?name WHERE {
  ?company dbo:location dbr:Munich ;
           a dbo:Company ;
           rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
55,Give me the capitals of all countries that the Himalayas run through.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country ?capital
WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country dbo:capital ?capital .
  ?capital rdfs:label ?capitalLabel .
  FILTER (lang(?capitalLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
56,How many movies did Park Chan-wook direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT (COUNT(?movie) AS ?count) WHERE {
  ?movie dbo:director res:Park_Chan-wook.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
57,Which rivers flow into a German lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?river ?lake WHERE {
  ?lake dbo:country dbr:Germany .
  ?lake dbo:inflow ?river .
  ?river rdfs:label ?riverLabel .
  FILTER (lang(?riverLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:type dbr:Airline .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
59,Give me all islands that belong to Japan.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island WHERE {
  ?island dbo:country dbr:Japan .
  ?island rdf:type dbo:Island .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
60,How many inhabitants does Maribor have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population
WHERE {
  res:Maribor dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
61,Give me all Apollo 14 astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?astronaut ?name WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
  ?astronaut rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
62,Which companies have more than 1 million employees?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?numEmployees
WHERE {
  ?company dbo:numberOfEmployees ?numEmployees.
  FILTER (?numEmployees > 1000000)
  ?company a dbo:Company.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?film ?filmLabel WHERE {
  ?film dbo:director dbr:Garry_Marshall ;
        dbo:starring dbr:Julia_Roberts .
  ?film rdfs:label ?filmLabel .
  FILTER (lang(?filmLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
64,Give me all soccer clubs in the Premier League.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:league dbr:Premier_League .
  ?club rdf:type dbo:SoccerClub .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
65,What is the highest place of the Urals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?place ?elevation
WHERE {
  ?place dbo:mountainRange dbr:Ural_Mountains.
  ?place dbo:elevation ?elevation.
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
66,Who is the governor of Wyoming?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Wyoming dbo:leader ?leader .
  ?leader rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
67,Where did the architect of the Eiffel Tower study?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?university ?universityLabel WHERE {
  dbr:Eiffel_Tower dbo:architect ?architect .
  ?architect dbo:almaMater ?university .
  ?university rdfs:label ?universityLabel .
  FILTER (lang(?universityLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
68,Give me all world heritage sites designated within the past two years.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?site ?date WHERE {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dbo:yearOfInscription ?date .
  FILTER (?date >= ""2018""^^xsd:gYear)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
69,Give me all actors who were born in Paris after 1950.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?actor ?birthDate WHERE {
  ?actor dbo:birthPlace dbr:Paris .
  ?actor dbo:birthDate ?birthDate .
  ?actor rdf:type dbo:Actor .
  FILTER (?birthDate > ""1950-01-01""^^xsd:date) .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
70,Which movies star both Liz Taylor and Richard Burton?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor .
  ?movie dbo:starring dbr:Richard_Burton .
  ?movie rdf:type dbo:Film .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
71,Give me all Australian nonprofit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?organization dbo:locationCountry dbr:Australia .
  ?organization dbo:type dbr:Nonprofit_organization .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
72,Which pope succeeded John Paul II?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  res:Pope_John_Paul_II dbo:successor ?successorNode.
  ?successorNode rdfs:label ?successor.
  FILTER (lang(?successor) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
73,Give me all ESA astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?astronaut WHERE {
  ?astronaut dbo:occupation dbr:European_Space_Agency_astronaut.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
74,Who was president of Pakistan in 1978?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?name WHERE {
  ?person dbo:office <http://dbpedia.org/resource/President_of_Pakistan>.
  ?person dbp:termStart ?start.
  ?person dbp:termEnd ?end.
  FILTER (?start <= ""1978-01-01""^^xsd:date && ?end >= ""1978-12-31""^^xsd:date)
  ?person rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
75,Who is the owner of Rolls-Royce?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?owner ?ownerLabel WHERE {
  dbr:Rolls-Royce dbo:owner ?owner .
  ?owner rdfs:label ?ownerLabel .
  FILTER (lang(?ownerLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
76,How many museums does Paris have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT (COUNT(?museum) AS ?count) WHERE {
  ?museum rdf:type dbo:Museum ;
          dbo:location dbr:Paris .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
77,Where was JFK assassinated?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?place WHERE {
  res:Assassination_of_John_F._Kennedy dbo:location ?place .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
78,Give me all federal chancellors of Germany.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?chancellor ?name WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
  ?chancellor rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
79,Show me everyone who was born on Halloween.,"SELECT ?person ?birthDate WHERE {
  ?person dbo:birthDate ?birthDate .
  FILTER (datatype(?birthDate) = xsd:date && MONTH(?birthDate) = 10 && DAY(?birthDate) = 31)
} LIMIT 100","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
80,Which beer originated in Ireland?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?beer ?label WHERE {
  ?beer dbo:country dbr:Republic_of_Ireland .
  ?beer rdf:type dbo:Beer .
  ?beer rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
81,To which countries does the Himalayan mountain system extend?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?countryLabel WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
82,Which actors were born in Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?name WHERE {
  ?actor dbo:birthPlace dbr:Germany .
  ?actor rdf:type dbo:Actor .
  ?actor foaf:name ?name .
} LIMIT 100","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
83,How much carbs does peanut butter have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?carbs
WHERE {
  ?food rdfs:label ""Peanut butter""@en.
  ?food dbo:carbohydrate ?carbs.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
84,Who produced the most films?,"This is a complex question that requires multiple steps to answer and cannot be directly answered with a single SPARQL query. DBpedia does not store aggregated data like ""who produced the most films"". However, you can write a SPARQL query to get a list of all film producers and the films they produced. Then, you would need to process the results to count the number of films each producer made and determine who made the most.

Here is an example of how you might get a list of film producers and their films:

```
SELECT ?producer ?film WHERE {
  ?film dbo:producer ?producer .
}
```

This query will return a list of films and their producers. You would then need to process this list to count the number of films each producer made.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
85,How many employees does Google have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?employees
WHERE {
  res:Google dbo:numberOfEmployees ?employees .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
86,Give me all actors who were born in Berlin.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?name WHERE {
  ?actor dbo:birthPlace dbr:Berlin .
  ?actor rdf:type dbo:Actor .
  ?actor foaf:name ?name .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
87,Who created Goofy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?creator
WHERE {
  dbr:Goofy dbo:creator ?creator.
  ?creator rdfs:label ?label.
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
88,Which music albums contain the song Last Christmas?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?albumLabel WHERE {
  ?song dbo:musicalBand dbr:Wham! .
  ?song rdfs:label ""Last Christmas""@en .
  ?album dbo:track ?song .
  ?album rdfs:label ?albumLabel .
  FILTER (lang(?albumLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
89,When was Alberta admitted as province?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Alberta dbo:timeZone ?timeZone .
  ?timeZone dbo:timeZoneOffset ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
90,How many missions does the Soyuz programme have?,"SELECT (COUNT(?mission) AS ?count) WHERE {
  ?mission dbo:programme dbr:Soyuz_programme.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
91,Give me all the TV shows with Neil Patrick Harris.,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?tvShow ?tvShowLabel WHERE {
  ?tvShow rdf:type dbo:TelevisionShow .
  ?tvShow dbo:starring dbr:Neil_Patrick_Harris .
  ?tvShow rdfs:label ?tvShowLabel .
  FILTER (lang(?tvShowLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
92,When were the Hells Angels founded?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?foundingYear WHERE {
  res:Hells_Angels dbo:foundingYear ?foundingYear .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
93,What is the net income of Apple?,"SELECT ?netIncome WHERE {
  dbr:Apple_Inc. dbo:netIncome ?netIncome .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
94,Give me all Swedish holidays.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?holiday ?label
WHERE {
  ?holiday dbo:country dbr:Sweden .
  ?holiday rdf:type dbo:Holiday .
  ?holiday rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
95,In which city was the former Dutch queen Juliana buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?cityName WHERE {
  dbr:Juliana_of_the_Netherlands dbo:deathPlace ?city .
  ?city rdfs:label ?cityName .
  FILTER (lang(?cityName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
96,List all the musicals with music by Leonard Bernstein.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
97,Give me all companies in the advertising industry.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?companyLabel WHERE {
  ?company dbo:industry dbr:Advertising .
  ?company rdfs:label ?companyLabel .
  FILTER (lang(?companyLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
98,What is the largest metropolitan area in Washington state?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?population
WHERE {
  ?city dbo:isPartOf dbr:Washington_(state) .
  ?city dbo:populationTotal ?population .
  ?city dbo:isPartOf ?metro .
  ?metro a dbo:MetropolitanArea .
}
ORDER BY DESC(?population)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
99,Who killed John Lennon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?killer ?killerLabel WHERE {
  dbr:John_Lennon dbo:deathCause ?killer .
  ?killer rdfs:label ?killerLabel .
  FILTER (lang(?killerLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
100,Which writers studied in Istanbul?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writer ?writerLabel WHERE {
  ?writer dbo:almaMater dbr:University_of_Istanbul .
  ?writer dbo:occupation dbr:Writer .
  ?writer rdfs:label ?writerLabel .
  FILTER (lang(?writerLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
101,Give me all Australian metalcore bands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?band WHERE {
  ?band dbo:genre dbr:Metalcore ;
        dct:subject dbc:Australian_heavy_metal_musical_groups .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
102,Which countries adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?countryLabel WHERE {
  ?country dbo:currency dbr:Euro .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
103,Give me all types of eating disorders.,"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?eating_disorder ?label WHERE {
  ?eating_disorder rdf:type dbo:Disease .
  ?eating_disorder dbo:field dbr:Eating_disorders .
  ?eating_disorder rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
104,Was Marc Chagall a jew?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?religion WHERE {
  dbr:Marc_Chagall dbo:religion ?religion .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT MIN(?rank) WHERE {
  ?team dbo:lowestRank ?rank ;
        rdfs:label ""Brazil national football team""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
106,How many films did Leonardo DiCaprio star in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT (COUNT(?film) AS ?count) WHERE {
  ?film rdf:type dbo:Film .
  ?film dbo:starring dbr:Leonardo_DiCaprio .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
107,Was Margaret Thatcher a chemist?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

ASK WHERE {
  res:Margaret_Thatcher dbo:occupation res:Chemist .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
108,Which U.S. states are in the same time zone as Utah?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?state WHERE {
  dbr:Utah dbo:timeZone ?utahTimeZone .
  ?state rdf:type dbo:Place .
  ?state dbo:timeZone ?utahTimeZone .
  ?state dbo:country dbr:United_States .
  FILTER (?state != dbr:Utah)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
109,Give me all books written by Danielle Steel.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  ?book dbo:author dbr:Danielle_Steel .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
110,Which country has the most official languages?,"SELECT ?country ?count WHERE {
  ?country a dbo:Country.
  ?country dbo:officialLanguage ?language.
  {
    SELECT ?country (COUNT(?language) AS ?count) WHERE {
      ?country a dbo:Country.
      ?country dbo:officialLanguage ?language.
    }
    GROUP BY ?country
  }
}
ORDER BY DESC(?count)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
111,What is the total amount of men and women serving in the FDNY?,"SELECT ?totalMen ?totalWomen WHERE {
  dbr:New_York_City_Fire_Department dbo:numberOfMaleMembers ?totalMen.
  dbr:New_York_City_Fire_Department dbo:numberOfFemaleMembers ?totalWomen.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
112,Which actor played Chewbacca?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorName WHERE {
  dbr:Chewbacca dbo:portrayer ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (lang(?actorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
113,Give me all libraries established earlier than 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library ?established
WHERE {
  ?library rdf:type dbo:Library .
  ?library dbo:foundingYear ?established .
  FILTER (?established < ""1400""^^xsd:gYear)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
114,Which programming languages were influenced by Perl?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?lang ?langLabel WHERE {
  ?lang dbo:influencedBy dbr:Perl.
  ?lang rdfs:label ?langLabel.
  FILTER (lang(?langLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
115,In which U.S. state is Mount McKinley located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  dbr:Denali dbo:location ?state .
  ?state dbo:country dbr:United_States .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
116,What airlines are part of the SkyTeam alliance?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?airline ?airlineLabel WHERE {
  ?airline dbo:alliance dbr:SkyTeam.
  ?airline rdfs:label ?airlineLabel.
  FILTER (lang(?airlineLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
117,Which ships were called after Benjamin Franklin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?ship ?shipLabel WHERE {
  ?ship dbo:shipNamesake dbr:Benjamin_Franklin .
  ?ship rdfs:label ?shipLabel .
  FILTER (lang(?shipLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
118,Give me all Methodist politicians.,"PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?politician ?name WHERE {
  ?politician dct:subject dbc:Methodist_politicians.
  ?politician rdf:type foaf:Person.
  ?politician rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
119,What other books have been written by the author of The Fault in Our Stars?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  dbr:The_Fault_in_Our_Stars dbo:author ?author .
  ?book dbo:author ?author .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
120,What is the highest mountain?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:elevation ?elevation .
  ?mountain rdf:type dbo:Mountain .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
121,Which poet wrote the most books?,"This query is complex and DBpedia might not have complete information to determine which poet wrote the most books. However, you can use the following SPARQL query to get a list of poets and the number of books they wrote:

```sparql
SELECT ?poet (COUNT(?book) AS ?bookCount) WHERE {
  ?poet dbo:occupation dbr:Poet .
  ?book dbo:author ?poet .
} GROUP BY ?poet ORDER BY DESC(?bookCount) LIMIT 10
```

This query will return the top 10 poets who wrote the most books according to the data in DBpedia. Please note that the data might not be complete or entirely accurate.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
122,Which programming languages influenced Javascript?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language ?name WHERE {
  ?language dbo:influencedBy <http://dbpedia.org/resource/JavaScript> .
  ?language rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
123,Which musician wrote the most books?,"This is a complex question that requires multiple steps to answer and may not be fully answerable with a single SPARQL query due to the nature of the data in DBpedia. However, you can start by finding musicians who have also written books. Here is a basic query to find musicians who have written books:

```
SELECT ?musician ?book
WHERE {
  ?musician rdf:type dbo:MusicalArtist.
  ?book dbo:author ?musician.
}
```

This will return a list of musicians and the books they have written. However, to find the musician who has written the most books, you would need to process the results of this query to count the number of books per musician. This is not straightforward to do in SPARQL alone.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
124,Which films starring Clint Eastwood did he direct himself?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?film WHERE {
  ?film dbo:director dbr:Clint_Eastwood ;
        dbo:starring dbr:Clint_Eastwood .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
125,Which software has been developed by organizations founded in California?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?software ?organization
WHERE {
  ?software dbo:developer ?organization .
  ?organization dbo:foundingLocation dbr:California .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
126,Which instruments does Cat Stevens play?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
127,How many airlines are members of the Star Alliance?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:alliance dbr:Star_Alliance.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
128,Give me all actors called Baldwin.,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor ?name WHERE {
  ?actor a dbo:Actor ;
         foaf:name ?name .
  FILTER regex(?name, ""Baldwin"", ""i"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
129,Who wrote The Hunger Games?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorName WHERE {
  dbr:The_Hunger_Games dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (lang(?authorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
130,For which label did Elvis record his first album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label WHERE {
  ?album dbo:artist dbr:Elvis_Presley ;
         dbo:recordLabel ?recordLabel .
  ?recordLabel rdfs:label ?label .
} 
ORDER BY ?album
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
131,Is Christian Bale starring in Batman Begins?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie WHERE {
  dbr:Christian_Bale dbo:starring ?movie .
  FILTER (str(?movie) = ""http://dbpedia.org/resource/Batman_Begins"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
132,Where is the residence of the prime minister of Spain?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?residence
WHERE {
  dbr:Prime_Minister_of_Spain dbo:residence ?residence.
  ?residence rdfs:label ?residenceLabel.
  FILTER (lang(?residenceLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?movie) AS ?movieCount)
WHERE {
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}
ORDER BY DESC(?movieCount)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
134,Which countries have more than two official languages?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country ?countryLabel WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:officialLanguage ?language .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en') .
} 
GROUP BY ?country ?countryLabel
HAVING (COUNT(?language) > 2)
ORDER BY ?countryLabel","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
135,Which countries have more than ten caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbo:location ?country .
  ?country rdf:type dbo:Country .
} 
GROUP BY ?country
HAVING (COUNT(?cave) > 10)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?song ?releaseDate WHERE {
  ?song dbo:musicalArtist dbr:Bruce_Springsteen .
  ?song dbo:releaseDate ?releaseDate .
  FILTER (xsd:dateTime(?releaseDate) >= ""1980-01-01T00:00:00Z""^^xsd:dateTime && xsd:dateTime(?releaseDate) <= ""1990-12-31T23:59:59Z""^^xsd:dateTime)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
137,Which television shows were created by John Cleese?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show ?showLabel WHERE {
  ?show dbo:creator dbr:John_Cleese.
  ?show rdfs:label ?showLabel.
  FILTER (lang(?showLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
138,When did Latvia join the EU?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  dbr:Latvia dbp:euAccession ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
139,Which soccer players were born on Malta?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player ?name WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player dbo:birthDate ?date .
  ?player rdf:type dbo:SoccerPlayer .
  ?player foaf:name ?name .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
140,How many politicians graduated from Columbia University?,"SELECT (COUNT(?person) AS ?count) WHERE {
  ?person dbo:almaMater dbr:Columbia_University .
  ?person rdf:type dbo:Politician .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
141,Give me the birthdays of all actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?birthday WHERE {
  dbr:Charmed dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
142,Which telecommunications organizations are located in Belgium?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?companyLabel WHERE {
  ?company dbo:industry dbr:Telecommunications.
  ?company dbo:locationCountry dbr:Belgium.
  ?company rdfs:label ?companyLabel.
  FILTER (lang(?companyLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
143,Give me a list of all lakes in Denmark.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?lake ?lakeLabel WHERE {
  ?lake dbo:country dbr:Denmark .
  ?lake rdf:type dbo:Lake .
  ?lake rdfs:label ?lakeLabel .
  FILTER (lang(?lakeLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
144,How many children does Eddie Murphy have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?childrenCount WHERE {
  res:Eddie_Murphy dbo:numberOfChildren ?childrenCount .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
145,Show me all English Gothic buildings in Kent.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?building ?name WHERE {
  ?building dbo:architecturalStyle dbr:English_Gothic_architecture ;
            dbo:location dbr:Kent ;
            rdfs:label ?name .
  FILTER (lang(?name) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
146,Who is the manager of Real Madrid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager ?managerLabel WHERE {
  dbr:Real_Madrid_C.F. dbo:manager ?manager .
  ?manager rdfs:label ?managerLabel .
  FILTER (lang(?managerLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
147,In which countries can you pay using the West African CFA franc?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?countryLabel WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc.
  ?country rdfs:label ?countryLabel.
  FILTER (lang(?countryLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
148,Which holidays are celebrated around the world?,"SELECT ?holiday ?country WHERE {
  ?holiday rdf:type dbo:Holiday .
  ?holiday dbo:country ?country
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
149,What is the longest river?,"SELECT ?river ?length WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
150,Which organizations were founded in 1930?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1930""^^xsd:gYear.
  ?organization rdf:type dbo:Organisation.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
151,What is the birth name of Angela Merkel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person dbo:birthName ?birthName .
  ?person rdfs:label ""Angela Merkel""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
152,Who has Tom Cruise been married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseName WHERE {
  res:Tom_Cruise dbo:spouse ?spouse.
  ?spouse rdfs:label ?spouseName.
  FILTER (lang(?spouseName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
153,Which weapons did Heckler & Koch develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?weapon ?name WHERE {
  ?weapon dbo:manufacturer dbr:Heckler_&_Koch .
  ?weapon rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
154,What is the smallest city by area in Germany?,"SELECT ?city ?area WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:country dbr:Germany .
  ?city dbo:areaTotal ?area .
} 
ORDER BY ASC(?area)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
155,What is the ruling party in Lisbon?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Lisbon dbo:governingBody ?governingBody .
  ?governingBody dbp:leaderParty ?party .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
156,How heavy is Jupiter's lightest moon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?moon ?mass
WHERE {
  ?moon dbo:mass ?mass ;
        dbo:parentAstronomicalBody dbr:Jupiter .
}
ORDER BY ASC(?mass)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
157,How many employees does IBM have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?employees
WHERE {
  res:IBM dbo:numberOfEmployees ?employees .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
158,List all episodes of the first season of the HBO television series The Sopranos!,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?episode ?episodeName WHERE {
  ?episode dbo:series dbr:The_Sopranos .
  ?episode dbo:seasonNumber 1 .
  ?episode rdfs:label ?episodeName .
  FILTER (lang(?episodeName) = ""en"")
} ORDER BY ?episode","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
159,What does ICRO stand for?,"SELECT ?abstract
WHERE {
  ?s rdfs:label ""ICRO""@en.
  ?s dbo:abstract ?abstract.
  FILTER (lang(?abstract) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?oldSeries ?newSeries WHERE {
  ?oldSeries dbo:wikiPageID ?oldID .
  ?oldSeries dbo:numberOfEpisodes ?oldEpisodes .
  ?oldSeries rdfs:label ""Battlestar Galactica (1978 TV series)""@en .
  
  ?newSeries dbo:wikiPageID ?newID .
  ?newSeries dbo:numberOfEpisodes ?newEpisodes .
  ?newSeries rdfs:label ""Battlestar Galactica (2004 TV series)""@en .
  
  FILTER(?newEpisodes > ?oldEpisodes)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
161,Give me all films produced by Hal Roach.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?filmLabel WHERE {
  ?film dbo:producer dbr:Hal_Roach.
  ?film rdfs:label ?filmLabel.
  FILTER (lang(?filmLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
162,Who played Agent Smith in Matrix?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorName WHERE {
  dbr:The_Matrix dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (LANG(?actorName) = ""en"") .
  ?actor dbo:abstract ?abstract .
  FILTER (LANG(?abstract) = ""en"") .
  FILTER CONTAINS(?abstract, ""Agent Smith"") .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
163,Which Greek parties are pro-European?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party ?partyLabel WHERE {
  ?party dbo:country dbr:Greece .
  ?party dbo:ideology dbr:Pro-Europeanism .
  ?party rdfs:label ?partyLabel .
  FILTER (lang(?partyLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
164,Give me a list of all bandleaders that play trumpet.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandleader WHERE {
  ?bandleader rdf:type dbo:MusicalArtist .
  ?bandleader dbo:instrument dbr:Trumpet .
  ?bandleader dbo:occupation dbr:Bandleader .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
165,What is the second highest mountain on Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:elevation ?elevation.
  ?mountain dbo:isPartOf dbo:Himalayas.
  ?mountain dbo:rank 2.
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
166,Is Egypts largest city also its capital?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?capital ?largestCity
WHERE {
  dbr:Egypt dbo:capital ?capital .
  dbr:Egypt dbo:largestCity ?largestCity .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
167,Which rockets were launched from Baikonur?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?rocket WHERE {
  ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome.
  ?rocket rdf:type dbo:Rocket.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
168,How many programming languages are there?,"SELECT (COUNT(?programmingLanguage) AS ?count) WHERE {
  ?programmingLanguage dbo:wikiPageID ?id .
  ?programmingLanguage rdf:type dbo:ProgrammingLanguage .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
169,Which Chess players died in the same place they were born in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?player ?birthPlace WHERE {
  ?player dbo:deathPlace ?deathPlace .
  ?player dbo:birthPlace ?birthPlace .
  ?player rdf:type dbo:ChessPlayer .
  FILTER (?birthPlace = ?deathPlace)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
170,Who is the owner of Facebook?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner
WHERE {
  dbr:Facebook dbo:owner ?owner.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
171,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?movie ?movieLabel WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdfs:label ?movieLabel.
  FILTER (lang(?movieLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
172,In which U.S. state is Fort Knox located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  dbr:Fort_Knox dbo:location ?location .
  ?location dbo:isPartOf ?state .
  ?state dbo:country dbr:United_States .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?population
WHERE {
  ?city dbo:isPartOf <http://dbpedia.org/resource/New_Jersey> .
  ?city dbo:populationTotal ?population .
  ?city rdf:type dbo:City .
  FILTER (?population > 100000)
} ORDER BY DESC(?population)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
174,Which mountains are higher than the Nanga Parbat?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:elevation ?elevation.
  ?mountain rdf:type dbo:Mountain.
  ?nangaParbat dbo:elevation ?nangaElevation.
  ?nangaParbat rdfs:label ""Nanga Parbat""@en.
  FILTER (?elevation > ?nangaElevation)
} 
ORDER BY DESC(?elevation)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
175,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?b_side WHERE {
  ?song dbo:musicalBand dbr:Ramones .
  ?song dbo:B-side ?b_side .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
176,What are the specialities of the UNC Health Care?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?specialities WHERE {
  ?org dbo:wikiPageID 2172103 .
  ?org dbo:abstract ?specialities .
  FILTER (lang(?specialities) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
177,When was Olof Palme shot?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Olof_Palme dbo:deathDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
178,List the seven kings of Rome.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?king ?kingLabel WHERE {
  ?king dbo:monarchOf dbr:Kingdom_of_Rome .
  ?king rdfs:label ?kingLabel .
  FILTER (lang(?kingLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
179,Give me all people that were born in Vienna and died in Berlin.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Vienna .
  ?person dbo:deathPlace dbr:Berlin .
  ?person foaf:name ?name .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
180,Is Darth Vader Luke’s father?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father
WHERE {
  dbr:Luke_Skywalker dbo:relative ?father.
  ?father rdfs:label ?fatherLabel.
  FILTER (lang(?fatherLabel) = ""en"").
  FILTER (str(?fatherLabel) = ""Darth Vader"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
181,Show me all the breweries in Australia.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?brewery ?breweryLabel WHERE {
  ?brewery dbo:location dbr:Australia .
  ?brewery rdf:type dbo:Brewery .
  ?brewery rdfs:label ?breweryLabel .
  FILTER (lang(?breweryLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?budget WHERE {
  ?film dbo:director dbr:Steven_Spielberg .
  ?film dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
183,Give me all soccer clubs in Spain.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:country dbr:Spain .
  ?club rdf:type dbo:SoccerClub .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
184,Who produced films starring Natalie Portman?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producerNode .
  ?producerNode rdfs:label ?producer .
  FILTER (lang(?producer) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
185,Give me all breeds of the German Shepherd dog.,"SELECT ?breed WHERE {
  ?breed dbo:species dbr:German_Shepherd.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Chicago_Bulls> .
  ?player dbo:weight ?weight .
} ORDER BY DESC(?weight) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
187,Which languages are spoken in Estonia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?languageLink.
  ?languageLink rdfs:label ?language.
  FILTER (lang(?language) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
188,What is the largest country in the world?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?area
WHERE {
  ?country dbo:areaTotal ?area .
  ?country a dbo:Country .
}
ORDER BY DESC(?area)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
189,What is the largest city in america?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?population
WHERE {
  ?city dbo:country dbr:United_States ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
190,Who was the pope that founded the Vatican Television?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?pope ?popeLabel WHERE {
  ?pope dbo:wikiPageWikiLink dbr:Vatican_Television_Center .
  ?pope rdf:type dbo:Pope .
  ?pope rdfs:label ?popeLabel .
  FILTER (lang(?popeLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
191,Who discovered Ceres?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?discovererLabel WHERE {
  dbr:Ceres_(dwarf_planet) dbo:discoverer ?discoverer.
  ?discoverer rdfs:label ?discovererLabel.
  FILTER (lang(?discovererLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
192,Who is the king of the Netherlands?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?king ?name WHERE {
  res:Netherlands dbo:monarch ?king .
  ?king rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
193,Is Cola a beverage?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

ASK WHERE {
  ?cola a dbo:Beverage .
  ?cola rdfs:label ""Cola""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  res:Angela_Merkel dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
195,Who wrote the book Les Piliers de la terre?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorName WHERE {
  ?book rdfs:label ""Les Piliers de la terre""@fr.
  ?book dbo:author ?author.
  ?author rdfs:label ?authorName.
  FILTER (lang(?authorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
196,Which airports does Yeti Airlines serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?airport ?airportLabel WHERE {
  dbr:Yeti_Airlines dbo:destination ?airport .
  ?airport rdfs:label ?airportLabel .
  FILTER (lang(?airportLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
197,Where is the birthplace of Goethe?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthplace WHERE {
  res:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"SELECT ?cubanMissileCrisisDate ?bayOfPigsInvasionDate WHERE {
  dbr:Cuban_Missile_Crisis dbo:startDate ?cubanMissileCrisisDate .
  dbr:Bay_of_Pigs_Invasion dbo:startDate ?bayOfPigsInvasionDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
199,Which ingredients do I need for carrot cake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?ingredient WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredientResource.
  ?ingredientResource rdfs:label ?ingredient.
  FILTER (lang(?ingredient) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
200,Who created Wikipedia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?creator
WHERE {
  dbr:Wikipedia dbo:wikiPageWikiLink ?creator .
  ?creator a dbo:Person .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
201,What is the highest mountain in Saxony Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:location <http://dbpedia.org/resource/Saxony> ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
202,Who is the current federal minister of finance in Germany?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name WHERE {
  dbr:Ministry_of_Finance_(Germany) dbo:leader ?minister .
  ?minister foaf:name ?name .
  FILTER NOT EXISTS { ?minister dbp:termEnd ?end }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
203,In which country is Mecca located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?country WHERE {
  res:Mecca dbo:country ?country .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
204,Who played Gus Fring in Breaking Bad?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorName WHERE {
  dbr:Gus_Fring dbo:portrayer ?actor.
  ?actor rdfs:label ?actorName.
  FILTER (lang(?actorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
205,In which country does the Nile start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  dbr:Nile dbo:sourceCountry ?countryResource.
  ?countryResource rdfs:label ?country.
  FILTER (lang(?country) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
206,In which state Penn State University is located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  res:Pennsylvania_State_University dbo:location ?state .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
207,What is the biggest stadium in Spain?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?stadium ?capacity
WHERE {
  ?stadium dbo:location dbr:Spain ;
           dbo:capacity ?capacity .
  FILTER (?capacity > 0)
}
ORDER BY DESC(?capacity)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
208,Who is the coach of Ankara's ice hockey team?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?coachName WHERE {
  ?team dbo:location dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
  ?coach rdfs:label ?coachName .
  FILTER (lang(?coachName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
209,How large is the area of UK?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?area
WHERE {
  res:United_Kingdom dbo:areaTotal ?area .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
210,Who created Batman?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?creatorName WHERE {
  dbr:Batman dbo:creator ?creator.
  ?creator rdfs:label ?creatorName.
  FILTER (lang(?creatorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
211,Was Sigmund Freud married?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?answer WHERE {
  res:Sigmund_Freud dbo:spouse ?spouse.
  BIND(""Yes"" AS ?answer)
} LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
212,Who are the developers of DBpedia?,"SELECT ?developer WHERE {
  dbr:DBpedia dbo:developer ?developer
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
213,Give me all movies directed by Francis Ford Coppola.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?movieLabel WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola.
  ?movie rdfs:label ?movieLabel.
  FILTER (lang(?movieLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
214,Are tree frogs a type of amphibian?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?answer WHERE {
  dbr:Tree_frog rdf:type ?type .
  ?type rdfs:label ?label .
  FILTER (lang(?label) = 'en')
  BIND (CONTAINS(str(?label), ""Amphibian"") AS ?answer)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
215,What is the location of the Houses of Parliament?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?location WHERE {
  ?s rdfs:label ""Palace of Westminster""@en.
  ?s dbo:location ?location.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
216,how much is the elevation of Düsseldorf Airport ?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?elevation
WHERE {
  <http://dbpedia.org/resource/Düsseldorf_Airport> dbo:elevation ?elevation.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
217,How much is the population of mexico city ?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population
WHERE {
  res:Mexico_City dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
218,when was the founding date of french fifth republic?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  res:French_Fifth_Republic dbo:foundingDate ?foundingDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
219,Who was the first King of England?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?king ?reignStart WHERE {
  ?king dbo:monarchOf dbr:England .
  ?king dbo:reignStart ?reignStart .
} ORDER BY ?reignStart
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
220,Who is the editor of Forbes?,"SELECT ?editor WHERE {
  dbr:Forbes dbo:editor ?editor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
221,Which awards did Douglas Hofstadter win?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?year WHERE {
  dbr:Douglas_Hofstadter dbo:award ?awardLink.
  ?awardLink rdfs:label ?award.
  OPTIONAL {?awardLink dbo:year ?year.}
  FILTER (lang(?award) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
222,Who is the youngest Darts player?,"SELECT ?player ?birthDate WHERE {
  ?player dbo:occupation dbr:Darts ;
          dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
223,Is horse racing a sport?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

ASK WHERE {
  ?sport a dbo:Sport .
  ?sport rdfs:label ""Horse racing""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
224,Which river does the Brooklyn Bridge cross?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?river ?riverLabel WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
  ?river rdfs:label ?riverLabel .
  FILTER (lang(?riverLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
225,How many people live in Poland?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population
WHERE {
  res:Poland dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
226,When was the last episode of the TV series Friends aired?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?endDate
WHERE {
  ?show a dbo:TelevisionShow ;
        rdfs:label ""Friends""@en ;
        dbo:completionDate ?endDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
227,Is the wife of president Obama called Michelle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Barack_Obama dbo:spouse ?spouse .
  ?spouse rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
229,Who is 8th president of US?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  ?person dbo:president res:United_States ;
          dbo:number 8 ;
          rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
230,how much is the total population of  european union?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population WHERE {
  res:European_Union dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
231,Give me all launch pads operated by NASA.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?launch_pad ?label WHERE {
  ?launch_pad dbo:operator dbr:NASA .
  ?launch_pad rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
232,Who developed the video game World of Warcraft?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?developer
WHERE {
  dbr:World_of_Warcraft dbo:developer ?developer .
  ?developer rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
233,What is the birth name of Adele?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person dbo:birthName ?birthName .
  ?person rdfs:label ""Adele""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
234,What is the population of Cairo?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population WHERE {
  res:Cairo dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
235,Is Frank Herbert still alive?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?deathDate WHERE {
  res:Frank_Herbert dbo:deathDate ?deathDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
236,What is the last work of Dan Brown?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?date
WHERE {
  ?work dbo:author dbr:Dan_Brown.
  ?work dbo:releaseDate ?date.
}
ORDER BY DESC(?date)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
237,Where is Sungkyunkwan University?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  res:Sungkyunkwan_University dbo:location ?location .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
238,Who is the author of the interpretation of dreams?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author WHERE {
  ?book rdfs:label ""The Interpretation of Dreams""@en.
  ?book dbo:author ?authorLink.
  ?authorLink rdfs:label ?author.
  FILTER (lang(?author) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
239,When was the death  of  Shakespeare?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?deathDate WHERE {
  res:William_Shakespeare dbo:deathDate ?deathDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
241,Who developed Slack?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?developer
WHERE {
  dbr:Slack_(software) dbo:developer ?developer.
  ?developer rdfs:label ?label.
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
242,Where is the origin of Carolina reaper?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?origin WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
243,In which year was Rachel Stevens born?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?birthYear WHERE {
  res:Rachel_Stevens dbo:birthYear ?birthYear .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
244,How often did Jane Fonda marry?,"SELECT (COUNT(?spouse) AS ?count)
WHERE {
  dbr:Jane_Fonda dbo:spouse ?spouse.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
245,Was the wife of president Lincoln called Mary?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Abraham_Lincoln dbo:spouse ?spouse.
  ?spouse rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
246,Which cities does the Weser flow through?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?cityLabel WHERE {
  ?city dbo:river dbr:Weser .
  ?city rdfs:label ?cityLabel .
  FILTER (lang(?cityLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
247,In which programming language is GIMP written?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language
WHERE {
  ?gimp dbo:programmingLanguage ?language .
  ?gimp rdfs:label ""GIMP""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
248,Which university did Angela Merkel attend?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?university ?universityLabel WHERE {
  res:Angela_Merkel dbo:almaMater ?university .
  ?university rdfs:label ?universityLabel .
  FILTER (lang(?universityLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
249,List all the musicals with music by Elton John.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Elton_John.
  ?musical rdf:type dbo:Musical.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
250,How many Aldi stores are there?,"SPARQL cannot provide real-time data or count the current number of Aldi stores as it queries data from DBpedia which is not updated in real-time. However, you can get the information about Aldi from DBpedia using the following SPARQL query:

```sparql
SELECT ?abstract
WHERE {
  dbr:Aldi dbo:abstract ?abstract .
  FILTER (lang(?abstract) = 'en')
}
```

This query will return the abstract (summary) of Aldi in English from DBpedia, which may contain information about the number of stores if it was included in the summary.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
251,What is the longest river in the world?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?river ?length
WHERE {
  ?river dbo:length ?length .
  ?river rdf:type dbo:River .
}
ORDER BY DESC(?length)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
252,When was John Adams born?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  res:John_Adams dbo:birthDate ?birthDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
253,Which companies produce hovercrafts?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?company ?companyLabel WHERE {
  ?company dbo:product dbr:Hovercraft.
  ?company rdfs:label ?companyLabel.
  FILTER (lang(?companyLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
254,Who was the wife of U.S. president Lincoln?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name WHERE {
  res:Abraham_Lincoln dbo:spouse ?spouse.
  ?spouse foaf:name ?name.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
255,Which species does an elephant belong?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?species WHERE {
  dbr:Elephant dbo:species ?species .
  ?species rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
256,How many people live in the capital of Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?population
WHERE {
  dbr:Australia dbo:capital ?capital .
  ?capital dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
257,In which ancient empire could you pay with cocoa beans?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?empire WHERE {
  ?empire dbo:currency dbr:Cocoa_bean.
  ?empire dbo:era ?era.
  FILTER (regex(str(?era), ""Ancient"", ""i""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
258,How many theories did Albert Einstein come up with?,"SELECT ?theory WHERE {
  ?person dbo:wikiPageID ?id .
  ?person rdfs:label ""Albert Einstein""@en .
  ?theory dbo:wikiPageDisambiguates ?person .
  ?theory rdf:type dbo:Theory .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
259,Who composed the soundtrack for Cameron's Titanic?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composerName WHERE {
  dbr:Titanic_(1997_film) dbo:musicComposer ?composer.
  ?composer rdfs:label ?composerName.
  FILTER (lang(?composerName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
260,Give me the runtime of Toy Story.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?runtime
WHERE {
  res:Toy_Story dbo:runtime ?runtime .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
262,With how many countries Iran has borders?,"SELECT COUNT(?country) WHERE {
  dbr:Iran dbo:sharesBorderWith ?country .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
263,Which electronics companies were founded in Beijing?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?foundingYear WHERE {
  ?company dbo:industry dbr:Electronics;
           dbo:foundingPlace dbr:Beijing;
           dbo:foundingYear ?foundingYear.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
264,Who was the successor of John F. Kennedy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  res:John_F._Kennedy dbo:successor ?successor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
265,Who is the mayor of Paris?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  dbr:Paris dbo:leader ?mayor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
266,Did Arnold Schwarzenegger attend a university?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.rdfs.org/ns/void#>

SELECT ?university WHERE {
  res:Arnold_Schwarzenegger dbo:almaMater ?university.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
267,Is James Bond married?,"SELECT ?spouse WHERE {
  dbr:James_Bond dbo:spouse ?spouse
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
268,Does the Isar flow into a lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lake WHERE {
  dbr:Isar dbo:mouth ?lake .
  ?lake a dbo:Lake .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
269,Which Indian company has the most employees?,"SELECT ?company ?employees WHERE {
  ?company dbo:locationCountry dbr:India .
  ?company dbo:numberOfEmployees ?employees .
} ORDER BY DESC(?employees) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
270,Who was John F. Kennedy's vice president?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?vicePresidentName WHERE {
  res:John_F._Kennedy dbo:vicePresident ?vicePresident .
  ?vicePresident rdfs:label ?vicePresidentName .
  FILTER (lang(?vicePresidentName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
271,Which country does the creator of Miffy come from?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?countryName WHERE {
  dbr:Miffy dbo:author ?author.
  ?author dbo:birthPlace ?birthPlace.
  ?birthPlace dbo:country ?country.
  ?country rdfs:label ?countryName.
  FILTER (lang(?countryName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
273,In what city is the Heineken brewery?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  dbr:Heineken dbo:location ?cityResource.
  ?cityResource rdfs:label ?city.
  FILTER (lang(?city) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
274,Is Barack Obama a democrat?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?party WHERE {
  res:Barack_Obama dbo:party ?party .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
275,List the children of Margaret Thatcher.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childName WHERE {
  dbr:Margaret_Thatcher dbo:child ?child.
  ?child rdfs:label ?childName.
  FILTER (lang(?childName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
276,From which region is the Melon de Bourgogne?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?wine dbo:variety <http://dbpedia.org/resource/Melon_de_Bourgogne> .
  ?wine dbo:region ?region .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
278,how big is the total area of North Rhine- Westphalia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?area
WHERE {
  res:North_Rhine-Westphalia dbo:areaTotal ?area.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
279,Which city has the most inhabitants?,"SELECT ?city ?population WHERE {
  ?city dbo:populationTotal ?population .
} 
ORDER BY DESC(?population)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
280,What is Donald Trump's main business?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?business WHERE {
  res:Donald_Trump dbo:occupation ?business .
  ?business rdfs:label ?businessLabel .
  FILTER (lang(?businessLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
281,When will start the final match of the football world cup 2018?,"SELECT ?date WHERE {
  dbr:2018_FIFA_World_Cup_Final dbo:startTime ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
282,Which films did Stanley Kubrick direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?filmLabel WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
  ?film rdfs:label ?filmLabel .
  FILTER (lang(?filmLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
283,how much is the population  Iraq?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population
WHERE {
  res:Iraq dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
284,How many inhabitants does the largest city in Canada have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?population
WHERE {
  ?city dbo:country dbr:Canada ;
        dbo:populationTotal ?population .
  {
    SELECT (MAX(?pop) AS ?maxPop)
    WHERE {
      ?c dbo:country dbr:Canada ;
         dbo:populationTotal ?pop .
    }
  }
  FILTER (?population = ?maxPop)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
285,Who is the mayor of the capital of French Polynesia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  dbr:French_Polynesia dbo:capital ?capital .
  ?capital dbo:leaderName ?mayor .
  ?mayor rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
286,Give me all actors starring in movies directed by William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorName WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (lang(?actorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
287,How tall is Claudia Schiffer?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?height
WHERE {
  res:Claudia_Schiffer dbo:height ?height.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
288,how much is the population densty rank of germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?populationDensityRank WHERE {
  res:Germany dbo:populationDensityRank ?populationDensityRank .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
289,What is the highest mountain in Italy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:country dbr:Italy ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
290,List all games by GMT.,"Assuming GMT refers to a game developer or publisher, the SPARQL query would look like this:

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?game ?gameLabel WHERE {
  ?game dbo:publisher dbr:GMT_Games.
  ?game rdfs:label ?gameLabel.
  FILTER (lang(?gameLabel) = ""en"")
}
```

Please replace `GMT_Games` with the correct DBpedia resource if GMT refers to something else.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
291,What is the official language of Suriname?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?officialLanguage WHERE {
  dbr:Suriname dbo:officialLanguage ?language .
  ?language rdfs:label ?officialLanguage .
  FILTER (lang(?officialLanguage) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
292,In which city did Nikos Kazantzakis die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  res:Nikos_Kazantzakis dbo:deathPlace ?city .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
293,What is in a chocolate chip cookie?,"SELECT ?ingredient WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
294,In which country is the Limerick Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country 
WHERE {
  dbr:Limerick_Lake dbo:country ?country .
  ?country rdfs:label ?countryLabel .
} 
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
295,Give me all video games published by Mean Hamster Software.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?videogame ?videogameLabel WHERE {
  ?videogame dbo:publisher dbr:Mean_Hamster_Software.
  ?videogame rdfs:label ?videogameLabel.
  FILTER (lang(?videogameLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
296,Give me all members of Prodigy.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?member ?name WHERE {
  dbr:The_Prodigy dbo:bandMember ?member.
  ?member foaf:name ?name.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
297,In which time zone is Rome?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?timezone WHERE {
  res:Rome dbo:timeZone ?timezone .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
298,How high is the lighthouse in Colombo?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?height
WHERE {
  res:Colombo_Lighthouse dbo:height ?height .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
299,Who are the writers of the Wall album of Pink Floyd?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writerName WHERE {
  dbr:The_Wall dbo:writer ?writer .
  ?writer rdfs:label ?writerName .
  FILTER (lang(?writerName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
300,Who is the mayor of Rotterdam?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Rotterdam dbo:leader ?leader .
  ?leader rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
301,What is the largest city in Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?population
WHERE {
  ?city dbo:country dbr:Australia ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
302,Who was married to president Chirac?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Jacques_Chirac dbo:spouse ?spouse.
  ?spouse rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
303,What form of government is found in South Africa?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?governmentForm WHERE {
  dbr:South_Africa dbo:governmentType ?governmentForm.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
304,How high is the Yokohama Marine Tower?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?height WHERE {
  res:Yokohama_Marine_Tower dbo:height ?height .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
305,Which holidays are celebrated around the world? test2,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?holiday ?label WHERE {
  ?holiday dbo:wikiPageRedirects ?redirect .
  ?redirect rdf:type dbo:Holiday .
  ?holiday rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
306,Who is the tallest basketball player?,"SELECT ?player ?height WHERE {
  ?player dbo:height ?height .
  ?player rdf:type dbo:BasketballPlayer .
} ORDER BY DESC(?height) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
307,How many languages are spoken in Turkmenistan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?language) AS ?count)
WHERE {
  dbr:Turkmenistan dbo:officialLanguage ?language .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
308,Did Che Guevara have children?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?children WHERE {
  res:Che_Guevara dbo:child ?children .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?year WHERE {
  dbr:Aki_Kaurismäki dbo:award ?award .
  ?award dbo:award ?grandPrix .
  ?award dbp:year ?year .
  FILTER (?grandPrix = dbr:Grand_Prix_(Cannes_Film_Festival))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
310,To which party does the mayor of Paris belong?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  dbr:Paris dbo:mayor ?mayor.
  ?mayor dbp:party ?party.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver ?races WHERE {
  ?driver dbo:wikiPageID ?id .
  ?driver rdf:type dbo:FormulaOneRacer .
  ?driver dbo:race ?races .
} ORDER BY DESC(?races) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
312,What country is Sitecore from?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?countryName WHERE {
  dbr:Sitecore dbo:locationCountry ?country .
  ?country rdfs:label ?countryName .
  FILTER (lang(?countryName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
313,Give me the birth place of Frank Sinatra.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  res:Frank_Sinatra dbo:birthPlace ?birthPlace .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
314,Is Christian Bale starring in Velvet Goldmine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?film WHERE {
  dbr:Christian_Bale dbo:starring ?film .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Velvet_Goldmine"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
315,Who is the son of Sonny and Cher?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?son WHERE {
  res:Sonny_&_Cher dbo:child ?son .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
316,How many ethnic groups live in Slovenia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  dbr:Slovenia dbo:ethnicGroup ?ethnicGroup.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
317,What is the capital of Cameroon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  res:Cameroon dbo:capital ?capital .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
318,Was Natalie Portman born in the United States?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

ASK WHERE {
  res:Natalie_Portman dbo:birthPlace res:United_States .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
319,How many pages does War and Peace have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?pages
WHERE {
  res:War_and_Peace dbo:numberOfPages ?pages .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
320,Who is the oldest child of Meryl Streep?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?birthDate WHERE {
  ?meryl dbo:wikiPageID ?id .
  ?meryl rdfs:label ""Meryl Streep""@en .
  ?meryl dbo:child ?child .
  ?child dbo:birthDate ?birthDate .
} ORDER BY ?birthDate LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
321,Which television shows were created by Walt Disney?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?show ?showLabel WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdfs:label ?showLabel .
  FILTER (lang(?showLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
322,What does IYCM stand for?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?label ?comment
WHERE {
  ?resource rdfs:label ?label .
  ?resource rdfs:comment ?comment .
  FILTER (lang(?label) = 'en' && lang(?comment) = 'en' && regex(?label, ""IYCM"", ""i""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
323,Which types of grapes grow in Oregon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grape WHERE {
  ?oregonWine dbo:region dbr:Oregon .
  ?oregonWine dbo:grapeVariety ?grape .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
324,Was U.S. president Jackson involved in a war?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?warLabel WHERE {
  dbr:Andrew_Jackson dbo:militaryCommand ?war .
  ?war rdfs:label ?warLabel .
  FILTER (lang(?warLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
325,When was the Titanic completed?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:RMS_Titanic dbo:completionDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
326,Did Tesla win a nobel prize in physics?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award
WHERE {
  dbr:Nikola_Tesla dbo:award ?award .
  FILTER (str(?award) = ""Nobel Prize in Physics"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
327,How many states are in Mexico?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?state) AS ?count)
WHERE {
  ?state dbo:country dbr:Mexico .
  ?state a dbo:AdministrativeRegion .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?scientist ?scientistLabel WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project, dbr:Nobel_Peace_Prize .
  ?scientist rdfs:label ?scientistLabel .
  FILTER (lang(?scientistLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
329,How much did the Lego Movie cost?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?budget WHERE {
  res:The_Lego_Movie dbo:budget ?budget .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
330,Who composed the music for Harold and Maude?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composerName WHERE {
  dbr:Harold_and_Maude dbo:musicComposer ?composer.
  ?composer rdfs:label ?composerName.
  FILTER (lang(?composerName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
331,List all episodes of the first season of the HBO television series The Sopranos.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?episode ?episodeName WHERE {
  ?episode dbo:series dbr:The_Sopranos .
  ?episode dbo:seasonNumber 1 .
  ?episode rdfs:label ?episodeName .
  FILTER (lang(?episodeName) = ""en"")
} ORDER BY ?episode","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
332,Which city has the least inhabitants?,"SELECT ?city ?population WHERE {
  ?city rdf:type dbo:City.
  ?city dbo:populationTotal ?population
} 
ORDER BY ASC(?population)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
333,Where is Syngman Rhee buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?place WHERE {
  res:Syngman_Rhee dbo:deathPlace ?place .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
334,Does Neymar play for Real Madrid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

ASK WHERE {
  res:Neymar dbo:team res:Real_Madrid_C.F.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
335,Who wrote the book The Pillars of the Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorName WHERE {
  dbr:The_Pillars_of_the_Earth dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (lang(?authorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
336,Do Prince Harry and Prince William have the same parents?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  {res:Prince_William,_Duke_of_Cambridge dbo:parent ?parent .}
  UNION
  {res:Prince_Harry,_Duke_of_Sussex dbo:parent ?parent .}
} GROUP BY ?parent HAVING (COUNT(?parent) = 2)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?supervisor WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
338,Does Breaking Bad have more episodes than Game of Thrones?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes WHERE {
  ?bb dbo:numberOfEpisodes ?breakingBadEpisodes .
  ?bb rdfs:label ""Breaking Bad""@en .
  ?got dbo:numberOfEpisodes ?gameOfThronesEpisodes .
  ?got rdfs:label ""Game of Thrones""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
339,Who was Vincent van Gogh inspired by?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?personLabel WHERE {
  dbr:Vincent_van_Gogh dbo:influencedBy ?person .
  ?person rdfs:label ?personLabel .
  FILTER (lang(?personLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building ?floors WHERE {
  ?building dbo:floorCount ?floors.
  FILTER(?floors < 163)
} ORDER BY DESC(?floors) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
341,What was the final result of the War of the Roses?,"SELECT ?result WHERE {
  dbr:Wars_of_the_Roses dbo:result ?result .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
342,How much did Pulp Fiction cost?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?budget WHERE {
  res:Pulp_Fiction dbo:budget ?budget .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
343,Is proinsulin a protein?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label WHERE {
  ?protein dbo:wikiPageID ?id .
  ?protein rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER regex(?label, ""Proinsulin"", ""i"") .
  ?protein rdf:type dbo:Protein .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
344,Do Urdu and Persian have a common root?,"SELECT ?language ?root WHERE {
  {
    dbr:Urdu dbo:languageFamily ?root .
    dbr:Persian dbo:languageFamily ?root .
  }
  UNION
  {
    dbr:Urdu dbo:languageFamily ?urduRoot .
    dbr:Persian dbo:languageFamily ?persianRoot .
    ?urduRoot dbo:parentLanguage ?root .
    ?persianRoot dbo:parentLanguage ?root .
  }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?actorLabel WHERE {
  ?film dbo:producer dbr:Benicio_del_Toro ;
        dbo:starring ?actor ;
        dbo:country dbr:Spain .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?lake ?area WHERE {
  {
    SELECT (SUM(?area1) as ?area) WHERE {
      VALUES ?lake {<http://dbpedia.org/resource/Lake_Baikal>}
      ?lake dbo:area ?area1 .
    }
  }
  UNION
  {
    SELECT (SUM(?area2) as ?area) WHERE {
      VALUES ?lake {<http://dbpedia.org/resource/Great_Bear_Lake>}
      ?lake dbo:area ?area2 .
    }
  }
} ORDER BY ?lake","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
347,Show me all books in Asimov's Foundation series.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  ?book dbo:series dbr:Foundation_series .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
348,Where was Bach born?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?birthPlace WHERE {
  res:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
349,Which city has the oldest running metro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?name ?opening WHERE {
  ?metro dbo:location ?city ;
         rdfs:label ?name ;
         dbo:openingDate ?opening .
  FILTER (lang(?name) = 'en')
} ORDER BY ?opening LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
350,Who designed the Brooklyn Bridge?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?designer
WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?designerLink.
  ?designerLink rdfs:label ?designer.
  FILTER (lang(?designer) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
351,How many people live in Eurasia?,"SELECT ?population WHERE {
  dbr:Eurasia dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host WHERE {
  dbr:BBC_Wildlife_Specials dbo:presenter ?host.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
353,"What is the total population of Melbourne, Florida?","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population WHERE {
  res:Melbourne,_Florida dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
354,What country is Mount Everest in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?countryName WHERE {
  dbr:Mount_Everest dbo:location ?country .
  ?country rdfs:label ?countryName .
  FILTER (lang(?countryName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
355,To which artistic movement did the painter of The Three Dancers belong?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movement WHERE {
  dbr:The_Three_Dancers dbo:author ?author .
  ?author dbo:movement ?movement .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
356,When did Operation Overlord commence?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Operation_Overlord dbo:startDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
357,What is the bridge with the longest span?,"SELECT ?bridge ?span WHERE {
  ?bridge dbo:crosses ?body_of_water.
  ?bridge dbo:length ?span.
} ORDER BY DESC(?span) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
358,Is there a video game called Battle Chess?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?game WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
359,Who was buried in the Great Pyramid of Giza?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  dbr:Great_Pyramid_of_Giza dbo:architecturalStyle ?person .
  ?person rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?plant ?country WHERE {
  ?plant dbo:owner dbr:Ford_Motor_Company .
  ?plant dbo:locationCountry ?country .
  FILTER (str(?country) = ""Malaysia"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
361,Did Socrates influence Aristotle?,"SELECT ?influence WHERE {
  dbr:Aristotle dbo:influencedBy dbr:Socrates .
  BIND(""Yes, Socrates influenced Aristotle."" AS ?influence)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
362,How many children did Benjamin Franklin have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT COUNT(?child) WHERE {
  res:Benjamin_Franklin dbo:child ?child .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
363,How tall is Michael Jordan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?height
WHERE {
  res:Michael_Jordan dbo:height ?height.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
364,In which UK city are the headquarters of the MI6?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  dbr:Secret_Intelligence_Service dbo:location ?location .
  ?location rdfs:label ?city .
  FILTER (lang(?city) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
365,Who created Family Guy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?creator
WHERE {
  ?show rdfs:label ""Family Guy""@en .
  ?show dbo:creator ?creatorLink .
  ?creatorLink rdfs:label ?creator .
  FILTER (lang(?creator) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
366,In which city does the Chile Route 68 end?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?cityName WHERE {
  dbr:Chile_Route_68 dbo:terminus ?city .
  ?city rdfs:label ?cityName .
  FILTER (lang(?cityName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
367,Give me the grandchildren of Elvis Presley.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
368,When did the Ming dynasty dissolve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?end WHERE {
  res:Ming_dynasty dbo:dissolutionYear ?end .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
369,In which military conflicts did Lawrence of Arabia participate?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?conflict ?conflictLabel WHERE {
  dbr:Lawrence_of_Arabia_(film) dbo:militaryConflict ?conflict .
  ?conflict rdfs:label ?conflictLabel .
  FILTER (lang(?conflictLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
370,What is the timezone in San Pedro de Atacama?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?timezone WHERE {
  res:San_Pedro_de_Atacama dbo:timeZone ?timezone .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
371,Give me all books by William Goldman with more than 300 pages.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?pages
WHERE {
  ?book dbo:author dbr:William_Goldman .
  ?book dbo:numberOfPages ?pages .
  FILTER(?pages > 300)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
372,What did Bruce Carver die from?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?causeOfDeath WHERE {
  res:Bruce_Carver dbo:deathCause ?causeOfDeath.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?subsidiary
WHERE {
  dbr:Lufthansa dbo:subsidiary ?subsidiary .
  ?subsidiary dbo:hubAirport dbr:Dortmund_Airport, dbr:Berlin_Tegel_Airport .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
374,Does Abraham Lincoln's death place have a website?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?website
WHERE {
  ?person dbo:deathPlace ?place .
  ?place dbo:website ?website .
  ?person rdfs:label ""Abraham Lincoln""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
375,Did Elvis Presley have children?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?children WHERE {
  res:Elvis_Presley dbo:child ?children .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
376,Is Michelle Obama the wife of Barack Obama?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
ASK WHERE {
  res:Barack_Obama dbo:spouse res:Michelle_Obama .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
377,In which city does Sylvester Stallone live?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  res:Sylvester_Stallone dbo:residence ?cityResource.
  ?cityResource rdfs:label ?city.
  FILTER (lang(?city) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
378,Which books by Kerouac were published by Viking Press?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?book WHERE {
  ?book dbo:author dbr:Jack_Kerouac .
  ?book dbp:publisher dbr:Viking_Press .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
379,Who wrote the song Hotel California?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writerName WHERE {
  dbr:Hotel_California_(Eagles_song) dbo:writer ?writer .
  ?writer rdfs:label ?writerName .
  FILTER (lang(?writerName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
380,What is the capital of Canada?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  res:Canada dbo:capital ?capital .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
381,Who is the mayor of Tel Aviv?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mayor WHERE {
  res:Tel_Aviv dbo:mayor ?mayorResource.
  ?mayorResource rdfs:label ?mayor.
  FILTER (lang(?mayor) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
382,What form of government does Russia have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?government
WHERE {
  res:Russia dbo:governmentType ?government .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book WHERE {
  dbr:Muhammad_Ali dbo:author ?book .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
384,Who was the first to climb Mount Everest?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?person .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
385,How many languages are spoken in Colombia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?language) AS ?count)
WHERE {
  dbr:Colombia dbo:officialLanguage ?language .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
386,What is the currency of the Czech Republic?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?currency WHERE {
  dbr:Czech_Republic dbo:currency ?currencyLink.
  ?currencyLink rdfs:label ?currency.
  FILTER (lang(?currency) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
387,Where in France is sparkling wine produced?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region ?regionLabel WHERE {
  ?region dbo:country dbr:France .
  ?region dbo:product dbr:Sparkling_wine .
  ?region rdfs:label ?regionLabel .
  FILTER (lang(?regionLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
388,When did Boris Becker end his active career?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?endCareer WHERE {
  res:Boris_Becker dbo:endCareer ?endCareer.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie WHERE {
  ?movie dbo:director dbr:Guy_Ritchie ;
         dbo:starring dbr:Mickey_Rourke .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
390,In which films did Julia Roberts as well as Richard Gere play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?film WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere.
  ?film rdf:type dbo:Film.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
391,Show me Hemingway's autobiography.,"SELECT ?book ?description WHERE {
  ?book dbo:author dbr:Ernest_Hemingway .
  ?book rdf:type dbo:Book .
  ?book dbo:literaryGenre dbr:Autobiography .
  ?book rdfs:comment ?description
  FILTER (lang(?description) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
392,How tall is Amazon Eve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?height WHERE {
  res:Amazon_Eve dbo:height ?height.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
393,What are the five boroughs of New York?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?borough ?boroughLabel WHERE {
  ?borough dbo:isPartOf dbr:New_York_City .
  ?borough rdfs:label ?boroughLabel .
  FILTER (lang(?boroughLabel) = 'en')
} LIMIT 5","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
394,Give me all Canadian Grunge record labels.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?label WHERE {
  ?label dbo:country dbr:Canada .
  ?label dct:subject dbc:Grunge_record_labels .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
395,In which country does the Ganges start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  dbr:Ganges dbo:sourceCountry ?country .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
396,Who is the founder of Penguin Books?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?founder
WHERE {
  dbr:Penguin_Books dbo:foundingPerson ?founderResource.
  ?founderResource foaf:name ?founder.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
397,Who wrote the Game of Thrones theme?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composerName WHERE {
  dbr:Game_of_Thrones_Theme dbo:composer ?composer.
  ?composer rdfs:label ?composerName.
  FILTER (lang(?composerName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
398,Who is the president of Eritrea?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?president WHERE {
  res:Eritrea dbo:leader ?president .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
399,In which city did John F. Kennedy die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  res:John_F._Kennedy dbo:deathPlace ?city .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
400,What is the highest mountain in Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:country dbr:Australia ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
401,Who writes the Farmers' Almanac?,"SELECT ?author WHERE {
  dbr:Farmers'_Almanac dbo:author ?author .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
402,Give me the currency of China.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?currency WHERE {
  dbr:China dbo:currency ?currencyLink.
  ?currencyLink rdfs:label ?currency.
  FILTER (lang(?currency) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
403,Give me all Swedish oceanographers.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Sweden .
  ?person dbo:occupation dbr:Oceanographer .
  ?person foaf:name ?name .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
404,In which city are the headquarters of the United Nations?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  res:United_Nations dbo:location ?city .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
405,Is Rita Wilson the wife of Tom Hanks?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?answer WHERE {
  res:Tom_Hanks dbo:spouse res:Rita_Wilson .
  BIND(""Yes"" AS ?answer)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
406,In which countries do people speak Japanese?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country ?countryLabel WHERE {
  ?country dbo:officialLanguage dbr:Japanese .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
407,Which of Tim Burton's films had the highest budget?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?budget
WHERE {
  ?film dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
408,Which museum in New York has the most visitors?,"SELECT ?museum ?visitors
WHERE {
  ?museum dbo:location dbr:New_York_City ;
          dbo:numberOfVisitors ?visitors .
}
ORDER BY DESC(?visitors)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
409,What was the first Queen album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?releaseDate WHERE {
  ?album dbo:musicalBand dbr:Queen_(band) .
  ?album dbo:releaseDate ?releaseDate .
} ORDER BY ?releaseDate
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?name WHERE {
  dbr:Queens_of_the_Stone_Age dbo:formerName ?name
} LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
411,What was the last movie with Alec Guinness?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?date WHERE {
  ?movie dbo:starring dbr:Alec_Guinness .
  ?movie dbo:releaseDate ?date .
} ORDER BY DESC(?date) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
412,Give me all actors starring in Last Action Hero.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?actorLabel WHERE {
  dbr:Last_Action_Hero dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
413,Who discovered Pluto?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?discovererLabel WHERE {
  dbr:Pluto dbo:discoverer ?discoverer.
  ?discoverer rdfs:label ?discovererLabel.
  FILTER (lang(?discovererLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
