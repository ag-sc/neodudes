id,question,sparql,prompt
1,List all boardgames by GMT.,"SELECT ?boardgame WHERE {
  ?boardgame dbo:publisher dbr:GMT_Games .
  ?boardgame rdf:type dbo:BoardGame .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
2,Who developed Skype?,"SELECT ?developer WHERE {
  dbr:Skype dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
3,Which people were born in Heraklion?,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person rdf:type dbo:Person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
4,In which U.S. state is Area 51 located?,"SELECT ?state WHERE {
  dbr:Area_51 dbo:location ?state .
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
5,Who is the mayor of New York City?,"SELECT ?person WHERE {
  dbr:New_York_City dbo:leaderName ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
6,Which countries have places with more than two caves?,"SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:location ?place .
  ?place dbo:country ?country .
  ?cave a dbo:Cave .
}
GROUP BY ?country
HAVING (?caveCount > 2)",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
7,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
8,Which airports does Air China serve?,"SELECT ?airport WHERE {
  dbr:Air_China dbo:targetAirport ?airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
9,Give me all actors starring in movies directed by and starring William Shatner.,"SELECT DISTINCT ?actor WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  FILTER (?actor != dbr:William_Shatner)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
10,What are the official languages of the Philippines?,"SELECT ?language 
WHERE { 
  dbr:Philippines dbo:officialLanguage ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
11,Give me all Danish films.,"SELECT ?film WHERE {
  ?film dbo:country dbr:Denmark .
  ?film rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Brad_Pitt .
  ?movie dbo:director dbr:Guy_Ritchie .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
13,Give me the grandchildren of Bruce Lee.,"SELECT ?grandchild WHERE {
  ?person dbo:birthName ""Bruce Lee""@en.
  ?person dbo:child ?child.
  ?child dbo:child ?grandchild.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
14,Which other weapons did the designer of the Uzi develop?,"SELECT ?weapon WHERE {
  dbr:Uzi dbp:designer ?designer.
  ?weapon dbp:designer ?designer.
  FILTER(?weapon != dbr:Uzi)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
15,Who is the owner of Universal Studios?,"SELECT ?owner WHERE {
  dbr:Universal_Studios dbo:owner ?owner .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
16,Which state of the USA has the highest population density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States .
  ?state dbo:populationDensity ?density .
} ORDER BY DESC(?density) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
17,Which monarchs were married to a German?,"SELECT ?monarch WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch rdf:type dbo:Monarch .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
18,Which organizations were founded in 1950?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1950""^^xsd:gYear .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
19,Who created the comic Captain America?,"SELECT ?creator WHERE {
  dbr:Captain_America dbo:author ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
20,Give me the Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
21,Who wrote the book The pillars of the Earth?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
22,Which state of the United States of America has the highest density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbp:density ?density .
} ORDER BY DESC(?density) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
23,Which spaceflights were launched from Baikonur?,"SELECT ?spaceflight WHERE {
  ?spaceflight dbo:launchPad dbr:Baikonur_Cosmodrome.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
24,Give me a list of all trumpet players that were bandleaders.,"SELECT ?player WHERE {
  ?player dbo:instrument dbr:Trumpet .
  ?player rdf:type dbo:BandLeader .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
25,Which U.S. states are in the same timezone as Utah?,"SELECT ?state WHERE {
  dbr:Utah dbo:timeZone ?timeZone .
  ?state rdf:type dbo:Place ;
         dbo:country dbr:United_States ;
         dbo:timeZone ?timeZone .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
26,Which U.S. states possess gold minerals?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbp:mineral dbr:Gold .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
27,Who is the daughter of Ingrid Bergman married to?,"SELECT ?spouse WHERE {
  dbr:Ingrid_Bergman dbo:child ?child .
  ?child dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
28,How deep is Lake Placid?,"SELECT ?depth WHERE {
  dbr:Lake_Placid_(New_York) dbo:maximumDepth ?depth .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
29,Show me all museums in London.,"SELECT ?museum WHERE {
  ?museum dbo:type dbr:Museum .
  ?museum dbo:location dbr:London .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
30,Which caves have more than 3 entrances?,"SELECT ?cave WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbp:entranceCount ?entranceCount .
  FILTER(?entranceCount > 3)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
31,Who is the tallest player of the Atlanta Falcons?,"SELECT ?player ?height WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Atlanta_Falcons> .
  ?player dbo:height ?height .
} ORDER BY DESC(?height) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
32,What are the top-10 action role-playing video games according to IGN?,"SELECT ?game WHERE {
  ?game dbo:type dbr:Action_role-playing_video_game .
  ?game dbo:rating ?rating .
  ?rating schema:provider dbr:IGN
} ORDER BY DESC(?rating) LIMIT 10",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
33,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer WHERE {
  ?writer dbo:occupation dbr:Writer .
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
34,Show me all basketball players that are higher than 2 meters.,"SELECT ?player WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
  FILTER (?height > 2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
35,When was the Statue of Liberty built?,"SELECT ?date WHERE {
  dbr:Statue_of_Liberty dbo:completionDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
36,Which states border Illinois?,"SELECT ?state WHERE {
  dbr:Illinois dbp:borderingstates ?state .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
37,Who developed Minecraft?,"SELECT ?developer WHERE {
  dbr:Minecraft dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
38,Where did Hillel Slovak die?,"SELECT ?place WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
39,What movies does Jesse Eisenberg play in?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
40,Give all swimmers that were born in Moscow.,"SELECT ?swimmer WHERE {
  ?swimmer dbo:birthPlace dbr:Moscow .
  ?swimmer rdf:type dbo:Swimmer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
41,Give me all cosmonauts.,"SELECT ?cosmonaut WHERE {
  ?cosmonaut dbo:occupation dbr:Cosmonaut .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
42,Give me all Swiss non-profit organizations.,"SELECT ?organization WHERE {
  ?organization dbo:location dbr:Switzerland .
  ?organization rdf:type dbo:Non-ProfitOrganisation .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
43,Which presidents were born in 1945?,"SELECT ?president WHERE {
  ?president dbo:birthYear 1945 .
  ?president rdf:type dbo:President .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
44,What kind of music did Lou Reed play?,"SELECT ?genre WHERE {
  dbr:Lou_Reed dbo:genre ?genre .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
45,Where do the Red Sox play?,"SELECT ?stadium WHERE {
  dbr:Boston_Red_Sox dbp:ballpark ?stadium .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
46,Show a list of soccer clubs that play in the Bundesliga.,"SELECT ?club WHERE {
  ?club dbo:league dbr:Bundesliga .
  ?club rdf:type dbo:SoccerClub .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
47,Which volcanos in Japan erupted since 2000?,"SELECT ?volcano WHERE {
  ?volcano dbo:locatedInArea dbr:Japan .
  ?volcano dbo:eruptionYear ?year .
  FILTER (?year >= 2000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
48,Which bridges cross the Seine?,"SELECT ?bridge WHERE {
  ?bridge dbo:crosses dbr:Seine_River.
  ?bridge rdf:type dbo:Bridge.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
49,What is the official color of the University of Oxford?,"SELECT ?officialColor WHERE {
  dbr:University_of_Oxford dbo:officialSchoolColour ?officialColor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
50,How many films did Hal Roach produce?,"SELECT (COUNT(?film) AS ?count) 
WHERE {
  ?film dbo:producer dbr:Hal_Roach.
  ?film rdf:type dbo:Film.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
51,Give me all Danish movies.,"SELECT ?movie WHERE {
  ?movie dbo:country dbr:Denmark .
  ?movie rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count) WHERE {
  ?person dbo:deathCause ?causeOfDeath .
} 
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
53,Who are the four youngest MVP basketball players?,"SELECT ?player ?birthDate
WHERE {
  ?player dbo:award dbr:NBA_Most_Valuable_Player_Award ;
          dbo:birthDate ?birthDate .
}
ORDER BY DESC(?birthDate)
LIMIT 4",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
54,Give me all companies in Munich.,"SELECT ?company WHERE {
  ?company dbo:location dbr:Munich .
  ?company rdf:type dbo:Company .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
55,Give me the capitals of all countries that the Himalayas run through.,"SELECT ?country ?capital WHERE {
  ?mountain dbo:wikiPageID ""Himalayas""@en.
  ?mountain dbo:country ?country.
  ?country dbo:capital ?capital.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
56,How many movies did Park Chan-wook direct?,"SELECT (COUNT(?movie) AS ?count) WHERE {
  ?movie dbo:director dbr:Park_Chan-wook .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
57,Which rivers flow into a German lake?,"SELECT ?river WHERE {
  ?lake dbo:country dbr:Germany .
  ?river dbo:inflow ?lake .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:type dbr:Airline .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
59,Give me all islands that belong to Japan.,"SELECT ?island WHERE {
  ?island dbo:country dbr:Japan .
  ?island rdf:type dbo:Island .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
60,How many inhabitants does Maribor have?,"SELECT ?population WHERE {
  dbr:Maribor dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
61,Give me all Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dbo:mission dbr:Apollo_14 .
  ?astronaut rdf:type dbo:Astronaut .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
62,Which companies have more than 1 million employees?,"SELECT ?company WHERE {
  ?company dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
63,In which films directed by Garry Marshall was Julia Roberts starring?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Garry_Marshall .
  ?film dbo:starring dbr:Julia_Roberts .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
64,Give me all soccer clubs in the Premier League.,"SELECT ?club WHERE {
  ?club dbo:league dbr:Premier_League .
  ?club rdf:type dbo:SoccerClub .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
65,What is the highest place of the Urals?,"SELECT ?place ?elevation 
WHERE {
  ?place dbo:mountainRange dbr:Ural_Mountains.
  ?place dbo:elevation ?elevation.
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
66,Who is the governor of Wyoming?,"SELECT ?person WHERE {
  dbr:Wyoming dbp:governor ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
67,Where did the architect of the Eiffel Tower study?,"SELECT ?university WHERE {
  dbr:Eiffel_Tower dbo:architect ?architect .
  ?architect dbo:almaMater ?university .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
68,Give me all world heritage sites designated within the past two years.,"SELECT ?site WHERE {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dbo:yearOfInscription ?year .
  FILTER (?year >= 2014)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
69,Give me all actors who were born in Paris after 1950.,"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor dbo:birthPlace dbr:Paris .
  ?actor dbo:birthDate ?date .
  FILTER (?date > ""1950-01-01""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
70,Which movies star both Liz Taylor and Richard Burton?,"SELECT ?movie WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Elizabeth_Taylor> .
  ?movie dbo:starring <http://dbpedia.org/resource/Richard_Burton> .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
71,Give me all Australian nonprofit organizations.,"SELECT ?organization WHERE {
  ?organization dbo:country dbr:Australia .
  ?organization rdf:type dbo:Non-ProfitOrganisation .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
72,Which pope succeeded John Paul II?,"SELECT ?successor WHERE {
  dbpedia:John_Paul_II dbpedia-owl:successor ?successor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
73,Give me all ESA astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dbo:occupation dbr:Astronaut ;
             dct:subject dbc:European_Space_Agency_astronauts .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
74,Who was president of Pakistan in 1978?,"SELECT ?person WHERE {
  ?person dbo:office dbr:President_of_Pakistan .
  ?person dbo:termStart ?start .
  ?person dbo:termEnd ?end .
  FILTER (YEAR(?start) <= 1978 && YEAR(?end) >= 1978)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
75,Who is the owner of Rolls-Royce?,"SELECT ?owner WHERE {
  dbr:Rolls-Royce_Motor_Cars dbo:owner ?owner .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
76,How many museums does Paris have?,"SELECT (COUNT(?museum) AS ?count) 
WHERE {
  ?museum dbo:location dbr:Paris .
  ?museum rdf:type dbo:Museum .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
77,Where was JFK assassinated?,"SELECT ?place WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
78,Give me all federal chancellors of Germany.,"SELECT ?person WHERE {
  ?person dbo:office dbr:Chancellor_of_Germany .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
79,Show me everyone who was born on Halloween.,"SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (datatype(?date) = xsd:date && MONTH(?date) = 10 && DAY(?date) = 31)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
80,Which beer originated in Ireland?,"SELECT ?beer WHERE {
  ?beer dbo:type dbr:Beer ;
        dbo:origin dbr:Ireland .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
81,To which countries does the Himalayan mountain system extend?,"SELECT ?country WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country a dbo:Country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
82,Which actors were born in Germany?,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Germany .
  ?actor rdf:type dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
83,How much carbs does peanut butter have?,"SELECT ?carbs WHERE {
  dbr:Peanut_butter dbp:carbs ?carbs .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?filmCount)
WHERE {
  ?film dbo:producer ?producer .
}
ORDER BY DESC(?filmCount)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
85,How many employees does Google have?,"SELECT ?numberOfEmployees WHERE {
  dbr:Google dbo:numberOfEmployees ?numberOfEmployees .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
86,Give me all actors who were born in Berlin.,"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor dbo:birthPlace dbr:Berlin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
87,Who created Goofy?,"SELECT ?creator WHERE {
  dbr:Goofy dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
88,Which music albums contain the song Last Christmas?,"SELECT ?album WHERE {
  ?song dbo:title ""Last Christmas""@en.
  ?song dbo:album ?album.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
89,When was Alberta admitted as province?,"SELECT ?date WHERE {
  dbr:Alberta dbp:admittancedate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
90,How many missions does the Soyuz programme have?,"SELECT (COUNT(?mission) AS ?missionCount) WHERE {
  ?mission dbo:programme dbr:Soyuz_programme.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
91,Give me all the TV shows with Neil Patrick Harris.,"SELECT ?show WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris .
  ?show rdf:type dbo:TelevisionShow .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
92,When were the Hells Angels founded?,"SELECT ?date WHERE {
  dbr:Hells_Angels dbo:foundingDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
93,What is the net income of Apple?,"SELECT ?netIncome WHERE {
  dbr:Apple_Inc_ dbo:netIncome ?netIncome .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
94,Give me all Swedish holidays.,"SELECT ?holiday WHERE {
  ?holiday dbo:country dbr:Sweden .
  ?holiday rdf:type dbo:Holiday .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
95,In which city was the former Dutch queen Juliana buried?,"SELECT ?city WHERE {
  dbr:Juliana_of_the_Netherlands dbp:burialPlace ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
96,List all the musicals with music by Leonard Bernstein.,"SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
97,Give me all companies in the advertising industry.,"SELECT ?company WHERE {
  ?company rdf:type dbo:Company .
  ?company dbo:industry dbr:Advertising .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
98,What is the largest metropolitan area in Washington state?,"SELECT ?city ?largest_metro WHERE {
  ?city dbo:isPartOf dbr:Washington_(state) .
  ?city dbp:largestMetro ?largest_metro .
} ORDER BY DESC(?largest_metro) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
99,Who killed John Lennon?,"SELECT ?killer WHERE {
  dbr:John_Lennon dbo:deathCause ?killer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
100,Which writers studied in Istanbul?,"SELECT ?writer WHERE {
  ?writer rdf:type dbo:Writer .
  ?writer dbo:education ?institution .
  ?institution dbo:city dbr:Istanbul .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
101,Give me all Australian metalcore bands.,"SELECT ?band WHERE {
  ?band dbo:genre dbr:Metalcore .
  ?band dbo:origin dbr:Australia .
  ?band rdf:type dbo:Band .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
102,Which countries adopted the Euro?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
103,Give me all types of eating disorders.,"SELECT ?eatingDisorder WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
104,Was Marc Chagall a jew?,"SELECT ?answer 
WHERE {
  dbr:Marc_Chagall dbo:ethnicity ?answer .
  FILTER (str(?answer) = ""Jewish"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT ?rank WHERE {
  dbr:Brazil dbp:fifaMin ?rank .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
106,How many films did Leonardo DiCaprio star in?,"SELECT (COUNT(?film) AS ?count) 
WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
107,Was Margaret Thatcher a chemist?,"SELECT ?answer 
WHERE {
  dbr:Margaret_Thatcher dbo:occupation ?occupation .
  ?occupation rdfs:label ?answer .
  FILTER (lang(?answer) = 'en' && regex(?answer, ""chemist"", ""i""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
108,Which U.S. states are in the same time zone as Utah?,"SELECT ?state WHERE {
  dbr:Utah dbp:timeZone ?utahTimeZone .
  ?state rdf:type dbo:Place ;
         dbo:country dbr:United_States ;
         dbp:timeZone ?utahTimeZone .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
109,Give me all books written by Danielle Steel.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
110,Which country has the most official languages?,"SELECT ?country (COUNT(?language) AS ?languageCount)
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
}
GROUP BY ?country
ORDER BY DESC(?languageCount)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
111,What is the total amount of men and women serving in the FDNY?,"SELECT ?total WHERE {
  dbr:New_York_City_Fire_Department dbp:employees ?total .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
112,Which actor played Chewbacca?,"SELECT ?actor WHERE {
  dbr:Chewbacca dbo:portrayer ?actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
113,Give me all libraries established earlier than 1400.,"SELECT ?library WHERE {
  ?library rdf:type dbo:Library .
  ?library dbo:foundingYear ?year .
  FILTER (?year < 1400)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
114,Which programming languages were influenced by Perl?,"SELECT ?programmingLanguage WHERE {
  ?programmingLanguage dbo:influencedBy dbr:Perl .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
115,In which U.S. state is Mount McKinley located?,"SELECT ?state WHERE {
  dbr:Denali dbo:location ?state .
  ?state rdf:type dbo:Place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
116,What airlines are part of the SkyTeam alliance?,"SELECT ?airline WHERE {
  ?airline dbo:alliance dbr:SkyTeam .
  ?airline rdf:type dbo:Airline .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
117,Which ships were called after Benjamin Franklin?,"SELECT ?ship WHERE {
  ?ship dbo:shipNamesake dbr:Benjamin_Franklin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
118,Give me all Methodist politicians.,"SELECT ?politician WHERE {
  ?politician dbo:religion dbr:Methodism .
  ?politician rdf:type dbo:Politician .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
119,What other books have been written by the author of The Fault in Our Stars?,"SELECT ?book WHERE {
  ?book dbo:author ?author .
  dbr:The_Fault_in_Our_Stars dbo:author ?author .
  FILTER(?book != dbr:The_Fault_in_Our_Stars)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
120,What is the highest mountain?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
121,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
GROUP BY ?poet
ORDER BY DESC(?bookCount)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
122,Which programming languages influenced Javascript?,"SELECT ?programmingLanguage WHERE {
  dbr:JavaScript dbo:influencedBy ?programmingLanguage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
123,Which musician wrote the most books?,"SELECT ?musician (COUNT(?book) AS ?bookCount)
WHERE {
  ?musician rdf:type dbo:MusicalArtist.
  ?book dbo:author ?musician.
}
GROUP BY ?musician
ORDER BY DESC(?bookCount)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
124,Which films starring Clint Eastwood did he direct himself?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Clint_Eastwood .
  ?film dbo:director dbr:Clint_Eastwood .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
125,Which software has been developed by organizations founded in California?,"SELECT ?software WHERE {
  ?company dbo:foundationPlace dbr:California .
  ?company dbo:product ?software .
  ?software rdf:type dbo:Software .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
126,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
127,How many airlines are members of the Star Alliance?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:alliance dbr:Star_Alliance .
  ?airline rdf:type dbo:Airline .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
128,Give me all actors called Baldwin.,"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor foaf:name ?name .
  FILTER(CONTAINS(?name, ""Baldwin""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
129,Who wrote The Hunger Games?,"SELECT ?author WHERE {
  dbr:The_Hunger_Games dbo:author ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
130,For which label did Elvis record his first album?,"SELECT ?label WHERE {
  ?album dbo:artist dbr:Elvis_Presley ;
         dbo:recordLabel ?label .
  FILTER NOT EXISTS {
    ?otherAlbum dbo:artist dbr:Elvis_Presley ;
                dbo:recordLabel ?otherLabel ;
                dbo:releaseDate ?otherDate .
    FILTER (?otherDate < ?date)
  }
} ORDER BY ?date LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
131,Is Christian Bale starring in Batman Begins?,"SELECT DISTINCT ?film WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Batman_Begins"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
132,Where is the residence of the prime minister of Spain?,"SELECT ?residence WHERE {
  ?person dbo:office dbr:Prime_Minister_of_Spain .
  ?person dbo:residence ?residence .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?movie) AS ?movieCount)
WHERE {
  ?movie dbo:starring ?actor .
}
GROUP BY ?actor
ORDER BY DESC(?movieCount)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
134,Which countries have more than two official languages?,"SELECT ?country WHERE {
  ?country a dbo:Country .
  {
    SELECT ?country (COUNT(?language) AS ?languageCount) WHERE {
      ?country dbo:officialLanguage ?language .
    } GROUP BY ?country
  }
  FILTER(?languageCount > 2)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
135,Which countries have more than ten caves?,"SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:location ?country .
  ?cave rdf:type dbo:Cave .
  ?country rdf:type dbo:Country .
}
GROUP BY ?country
HAVING (?caveCount > 10)",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"SELECT ?song WHERE {
  ?song dbo:artist dbr:Bruce_Springsteen .
  ?song rdf:type dbo:Song .
  ?song dbo:releaseDate ?date .
  FILTER ( ?date >= ""1980-01-01""^^xsd:date && ?date <= ""1990-12-31""^^xsd:date )
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
137,Which television shows were created by John Cleese?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:John_Cleese.
  ?show rdf:type dbo:TelevisionShow.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
138,When did Latvia join the EU?,"SELECT ?date WHERE {
  dbr:Latvia dbp:accessioneudate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
139,Which soccer players were born on Malta?,"SELECT ?player WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player rdf:type dbo:SoccerPlayer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
140,How many politicians graduated from Columbia University?,"SELECT (COUNT(?person) AS ?count)
WHERE {
  ?person dbo:almaMater dbr:Columbia_University .
  ?person rdf:type dbo:Politician .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
141,Give me the birthdays of all actors of the television show Charmed.,"SELECT ?actor ?birthday WHERE {
  ?show dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
  ?show rdfs:label ""Charmed""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
142,Which telecommunications organizations are located in Belgium?,"SELECT ?organization WHERE {
  ?organization dbo:industry dbr:Telecommunication ;
                dbo:location dbr:Belgium .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
143,Give me a list of all lakes in Denmark.,"SELECT ?lake WHERE {
  ?lake dbo:country dbr:Denmark .
  ?lake rdf:type dbo:Lake .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
144,How many children does Eddie Murphy have?,"SELECT ?childrenCount WHERE {
  dbr:Eddie_Murphy dbo:children ?childrenCount .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
145,Show me all English Gothic buildings in Kent.,"SELECT ?building WHERE {
  ?building dbo:architecturalStyle dbr:English_Gothic_architecture .
  ?building dbo:location dbr:Kent .
  ?building rdf:type dbo:Building .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
146,Who is the manager of Real Madrid?,"SELECT ?manager WHERE {
  dbr:Real_Madrid_C.F. dbo:manager ?manager .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
147,In which countries can you pay using the West African CFA franc?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
148,Which holidays are celebrated around the world?,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
149,What is the longest river?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
150,Which organizations were founded in 1930?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1930""^^xsd:gYear .
  ?organization rdf:type dbo:Organisation .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
151,What is the birth name of Angela Merkel?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
152,Who has Tom Cruise been married to?,"SELECT ?person WHERE {
  dbr:Tom_Cruise dbo:spouse ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
153,Which weapons did Heckler & Koch develop?,"SELECT ?weapon WHERE {
  ?weapon dbo:manufacturer dbr:Heckler_&_Koch .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
154,What is the smallest city by area in Germany?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Germany ;
        dbo:areaTotal ?area .
}
ORDER BY ASC(?area)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
155,What is the ruling party in Lisbon?,"SELECT ?party WHERE {
  dbr:Lisbon dbp:leaderParty ?party .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
156,How heavy is Jupiter's lightest moon?,"SELECT ?moon ?mass WHERE {
  ?moon dbo:satelliteOf dbr:Jupiter .
  ?moon dbo:mass ?mass .
} ORDER BY ASC(?mass) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
157,How many employees does IBM have?,"SELECT ?numberOfEmployees WHERE {
  dbr:IBM dbo:numberOfEmployees ?numberOfEmployees .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
158,List all episodes of the first season of the HBO television series The Sopranos!,"SELECT ?episode WHERE {
  ?episode dbo:series dbr:The_Sopranos .
  ?episode dbo:seasonNumber 1 .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
159,What does ICRO stand for?,"SELECT ?abbreviation WHERE {
  ?s dbo:abbreviation ""ICRO"" .
  ?s rdfs:label ?abbreviation .
  FILTER (lang(?abbreviation) = 'en')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
160,Does the new Battlestar Galactica series have more episodes than the old one?,"SELECT ?newSeriesEpisodes ?oldSeriesEpisodes WHERE {
  ?newSeries dbo:series 'Battlestar Galactica (2004 TV series)'@en.
  ?newSeries dbo:numberOfEpisodes ?newSeriesEpisodes.
  ?oldSeries dbo:series 'Battlestar Galactica (1978 TV series)'@en.
  ?oldSeries dbo:numberOfEpisodes ?oldSeriesEpisodes.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
161,Give me all films produced by Hal Roach.,"SELECT ?film WHERE {
  ?film dbo:producer dbr:Hal_Roach .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
162,Who played Agent Smith in Matrix?,"SELECT ?actor WHERE {
  dbr:The_Matrix dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (LANG(?actorLabel) = ""en"") .
  FILTER (CONTAINS(?actorLabel, ""Hugo Weaving"")) .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
163,Which Greek parties are pro-European?,"SELECT ?party WHERE {
  ?party dbo:location dbr:Greece .
  ?party dbo:ideology ?ideology .
  FILTER(CONTAINS(LCASE(STR(?ideology)), ""european""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
164,Give me a list of all bandleaders that play trumpet.,"SELECT ?bandleader WHERE {
  ?bandleader dbo:instrument dbr:Trumpet .
  ?bandleader rdf:type dbo:MusicalArtist .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
165,What is the second highest mountain on Earth?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain.
  ?mountain dbo:elevation ?elevation.
} ORDER BY DESC(?elevation) LIMIT 2 OFFSET 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
166,Is Egypts largest city also its capital?,"SELECT ?answer 
WHERE { 
  dbr:Egypt dbo:capital ?capital .
  dbr:Egypt dbo:largestCity ?largestCity .
  BIND (IF(str(?capital) = str(?largestCity), ""Yes"", ""No"") AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
167,Which rockets were launched from Baikonur?,"SELECT ?rocket WHERE {
  ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
168,How many programming languages are there?,"SELECT (COUNT(?programmingLanguage) AS ?count) WHERE {
  ?programmingLanguage rdf:type dbo:ProgrammingLanguage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
169,Which Chess players died in the same place they were born in?,"SELECT ?player WHERE {
  ?player rdf:type dbo:ChessPlayer .
  ?player dbo:birthPlace ?place .
  ?player dbo:deathPlace ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
170,Who is the owner of Facebook?,"SELECT ?owner WHERE {
  dbr:Facebook dbo:foundedBy ?owner .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
171,Give me all movies with Tom Cruise.,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdf:type dbo:Film.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
172,In which U.S. state is Fort Knox located?,"SELECT ?state WHERE {
  dbr:Fort_Knox dbo:location ?state .
  ?state rdf:type dbo:Place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"SELECT ?city WHERE {
  ?city dbo:isPartOf dbr:New_Jersey .
  ?city dbo:populationTotal ?population .
  FILTER(?population > 100000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
174,Which mountains are higher than the Nanga Parbat?,"SELECT ?mountain WHERE {
  ?mountain dbo:elevation ?elevation .
  dbr:Nanga_Parbat dbo:elevation ?nangaParbatElevation .
  FILTER(?elevation > ?nangaParbatElevation)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
175,Give me all B-sides of the Ramones.,"SELECT ?bSide WHERE {
  ?song dbo:artist dbr:Ramones .
  ?song dbo:bSide ?bSide .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
176,What are the specialities of the UNC Health Care?,"SELECT ?speciality WHERE {
  dbr:UNC_Health_Care dbp:speciality ?speciality .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
177,When was Olof Palme shot?,"SELECT ?date WHERE {
  dbr:Olof_Palme dbo:deathDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
178,List the seven kings of Rome.,"SELECT ?king WHERE {
  ?king dbo:monarch dbr:King_of_Rome .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
179,Give me all people that were born in Vienna and died in Berlin.,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Vienna .
  ?person dbo:deathPlace dbr:Berlin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
180,Is Darth Vader Luke’s father?,"SELECT ?answer 
WHERE { 
  dbr:Darth_Vader dbo:child ?answer . 
  FILTER (?answer = dbr:Luke_Skywalker) 
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
181,Show me all the breweries in Australia.,"SELECT ?brewery WHERE {
  ?brewery dbo:industry dbr:Brewery ;
           dbo:location dbr:Australia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"SELECT ?film WHERE {
  ?film dbo:director dbr:Steven_Spielberg .
  ?film dbo:budget ?budget .
  FILTER (?budget >= 80000000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
183,Give me all soccer clubs in Spain.,"SELECT ?club WHERE {
  ?club dbo:ground/dbo:country dbr:Spain .
  ?club rdf:type dbo:SoccerClub .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
184,Who produced films starring Natalie Portman?,"SELECT ?producer WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Natalie_Portman> .
  ?film dbo:producer ?producer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
185,Give me all breeds of the German Shepherd dog.,"SELECT ?breed WHERE {
  dbr:German_Shepherd dbo:breed ?breed .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Chicago_Bulls> .
  ?player dbo:weight ?weight .
} ORDER BY DESC(?weight) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
187,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
188,What is the largest country in the world?,"SELECT ?country WHERE {
  ?country a dbo:Country .
} ORDER BY DESC(?areaTotal) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
189,What is the largest city in america?,"SELECT ?city WHERE {
  dbr:United_States dbo:largestCity ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
190,Who was the pope that founded the Vatican Television?,"SELECT ?pope WHERE {
  ?tv dbo:foundingYear ?year .
  ?tv rdfs:label ""Vatican Television""@en .
  ?pope dbo:period ?period .
  ?period dbo:startDate ?start .
  ?period dbo:endDate ?end .
  FILTER (?year >= ?start && ?year <= ?end)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
191,Who discovered Ceres?,"SELECT ?person WHERE {
  dbr:Ceres_(dwarf_planet) dbo:discoverer ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
192,Who is the king of the Netherlands?,"SELECT ?person WHERE {
  dbr:Netherlands dbo:leader ?person .
  ?person rdf:type dbo:Monarch .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
193,Is Cola a beverage?,"SELECT ?object WHERE { 
  dbr:Cola rdf:type ?object .
  FILTER (?object = dbo:Beverage) 
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"SELECT ?almaMater WHERE {
  ?person dbo:almaMater ?almaMater .
  ?person rdfs:label ""Angela Merkel""@en .
  ?person dbo:office dbr:Chancellor_of_Germany
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
195,Who wrote the book Les Piliers de la terre?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Les Piliers de la terre""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
196,Which airports does Yeti Airlines serve?,"SELECT ?airport WHERE {
  dbr:Yeti_Airlines dbo:targetAirport ?airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
197,Where is the birthplace of Goethe?,"SELECT ?birthplace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"SELECT ?cubanMissileCrisis ?bayOfPigsInvasion WHERE {
  dbr:Cuban_Missile_Crisis dbo:startDate ?cubanMissileCrisis .
  dbr:Bay_of_Pigs_Invasion dbo:startDate ?bayOfPigsInvasion .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
199,Which ingredients do I need for carrot cake?,"SELECT ?ingredient WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
200,Who created Wikipedia?,"SELECT ?creator WHERE {
  dbr:Wikipedia dbo:author ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
201,What is the highest mountain in Saxony Germany?,"SELECT ?mountain WHERE {
  ?mountain dbo:location dbr:Saxony .
  ?mountain rdf:type dbo:Mountain .
} ORDER BY DESC(?elevation) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
202,Who is the current federal minister of finance in Germany?,"SELECT ?person WHERE {
  ?organisation dbo:leader ?person .
  ?organisation dbo:country dbr:Germany .
  ?organisation rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER (regex(?label, ""Ministry of Finance"", ""i"")) .
} LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
203,In which country is Mecca located?,"SELECT ?country WHERE {
  dbr:Mecca dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor WHERE {
  ?show rdfs:label ""Breaking Bad""@en.
  ?show dbo:starring ?actor.
  ?actor rdfs:label ?actorLabel.
  FILTER (lang(?actorLabel) = ""en"").
  ?actor dbo:character ?character.
  ?character rdfs:label ""Gus Fring""@en.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
205,In which country does the Nile start?,"SELECT ?country WHERE {
  dbr:Nile dbo:sourceCountry ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
206,In which state Penn State University is located?,"SELECT ?state WHERE {
  dbr:Pennsylvania_State_University dbo:state ?state .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
207,What is the biggest stadium in Spain?,"SELECT ?stadium WHERE {
  ?stadium dbo:country dbr:Spain .
  ?stadium dbo:seatingCapacity ?capacity .
} ORDER BY DESC(?capacity) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach WHERE {
  ?team dbo:location dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
209,How large is the area of UK?,"SELECT ?area WHERE {
  dbr:United_Kingdom dbo:areaTotal ?area .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
210,Who created Batman?,"SELECT ?creator WHERE {
  dbr:Batman dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
211,Was Sigmund Freud married?,"SELECT ?answer 
WHERE {
  dbr:Sigmund_Freud dbo:spouse ?answer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
212,Who are the developers of DBpedia?,"SELECT ?developer WHERE {
  dbr:DBpedia dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
213,Give me all movies directed by Francis Ford Coppola.,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
214,Are tree frogs a type of amphibian?,"SELECT ?answer 
WHERE {
  dbr:Tree_frog rdf:type ?answer .
  ?answer rdfs:subClassOf* dbo:Amphibian .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
215,What is the location of the Houses of Parliament?,"SELECT ?location WHERE {
  dbr:Houses_of_Parliament dbo:location ?location .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
216,how much is the elevation of Düsseldorf Airport ?,"SELECT ?elevation WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
217,How much is the population of mexico city ?,"SELECT ?population WHERE {
  dbr:Mexico_City dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
218,when was the founding date of french fifth republic?,"SELECT ?foundingDate WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?foundingDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
219,Who was the first King of England?,"SELECT ?person WHERE {
  ?person dbo:positionHeld dbr:Monarchy_of_the_United_Kingdom .
  ?person dbo:reignStart ?reignStart .
} ORDER BY ?reignStart LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
220,Who is the editor of Forbes?,"SELECT ?editor WHERE {
  dbr:Forbes dbo:editor ?editor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
221,Which awards did Douglas Hofstadter win?,"SELECT ?award WHERE {
  dbr:Douglas_Hofstadter dbo:award ?award .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
222,Who is the youngest Darts player?,"SELECT ?player WHERE {
  ?player rdf:type dbo:DartsPlayer .
  ?player dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
223,Is horse racing a sport?,"SELECT ?subject WHERE {
  ?subject rdfs:label ""Horse racing""@en.
  ?subject dct:subject ?o.
  ?o rdfs:label ?label.
  FILTER (lang(?label) = 'en').
  FILTER (regex(?label, ""Sport"", ""i"")).
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
225,How many people live in Poland?,"SELECT ?population WHERE {
  dbr:Poland dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
226,When was the last episode of the TV series Friends aired?,"SELECT ?date WHERE {
  dbr:Friends dbo:finalEpisode ?episode .
  ?episode dbo:releaseDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
227,Is the wife of president Obama called Michelle?,"SELECT ?answer 
WHERE { 
  dbr:Barack_Obama dbo:spouse ?spouse .
  ?spouse rdfs:label ?answer .
  FILTER (lang(?answer) = 'en')
  FILTER (str(?answer) = ""Michelle Obama"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
229,Who is 8th president of US?,"SELECT ?president WHERE {
  ?president dbo:orderInOffice 8 ;
             rdf:type dbo:President ;
             dbo:country dbr:United_States .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
230,how much is the total population of  european union?,"SELECT ?population WHERE {
  dbr:European_Union dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
231,Give me all launch pads operated by NASA.,"SELECT ?launchPad WHERE {
  ?launchPad dbo:operator dbr:NASA .
  ?launchPad rdf:type dbo:LaunchPad .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
232,Who developed the video game World of Warcraft?,"SELECT ?developer WHERE {
  dbr:World_of_Warcraft dbo:developer ?developer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
233,What is the birth name of Adele?,"SELECT ?birthName WHERE {
  dbr:Adele dbp:birthName ?birthName .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
234,What is the population of Cairo?,"SELECT ?population WHERE {
  dbr:Cairo dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
235,Is Frank Herbert still alive?,"SELECT ?deathDate WHERE {
  dbr:Frank_Herbert dbo:deathDate ?deathDate.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
236,What is the last work of Dan Brown?,"SELECT ?work ?date WHERE {
  ?person foaf:name ""Dan Brown""@EN.
  ?work dbo:author ?person.
  ?work dbo:publicationDate ?date.
} ORDER BY DESC(?date) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
237,Where is Sungkyunkwan University?,"SELECT ?location WHERE {
  dbr:Sungkyunkwan_University dbo:location ?location .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
238,Who is the author of the interpretation of dreams?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Interpretation of Dreams""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
239,When was the death  of  Shakespeare?,"SELECT ?deathDate WHERE {
  dbr:William_Shakespeare dbo:deathDate ?deathDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
241,Who developed Slack?,"SELECT ?company WHERE {
  ?software rdfs:label ""Slack""@en .
  ?company dbo:product ?software .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
242,Where is the origin of Carolina reaper?,"SELECT ?origin WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
243,In which year was Rachel Stevens born?,"SELECT ?birthYear WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
244,How often did Jane Fonda marry?,"SELECT (COUNT(?spouse) as ?count) WHERE {
  dbr:Jane_Fonda dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
245,Was the wife of president Lincoln called Mary?,"SELECT ?answer 
WHERE { 
  dbr:Abraham_Lincoln dbo:spouse ?spouse .
  ?spouse rdfs:label ?answer .
  FILTER (lang(?answer) = 'en')
  FILTER (str(?answer) = 'Mary Todd Lincoln')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
246,Which cities does the Weser flow through?,"SELECT ?city WHERE {
  dbr:Weser dbo:city ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
247,In which programming language is GIMP written?,"SELECT ?programmingLanguage WHERE {
  dbr:GIMP dbo:programmingLanguage ?programmingLanguage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
248,Which university did Angela Merkel attend?,"SELECT ?university WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
249,List all the musicals with music by Elton John.,"SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
250,How many Aldi stores are there?,"SELECT ?numberOfLocations WHERE {
  dbr:Aldi dbo:numberOfLocations ?numberOfLocations .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
251,What is the longest river in the world?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
252,When was John Adams born?,"SELECT ?birthDate WHERE {
  dbr:John_Adams dbo:birthDate ?birthDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
253,Which companies produce hovercrafts?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Hovercraft.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
254,Who was the wife of U.S. president Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
255,Which species does an elephant belong?,"SELECT ?species WHERE {
  dbr:Elephant dbo:species ?species .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
256,How many people live in the capital of Australia?,"SELECT ?population WHERE {
  dbr:Australia dbo:capital ?capital .
  ?capital dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
257,In which ancient empire could you pay with cocoa beans?,"SELECT ?empire WHERE {
  ?empire dbo:currency ?currency .
  ?currency rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER (CONTAINS(lcase(str(?label)), ""cocoa beans"")) .
  ?empire dbo:historicalPeriod ?period .
  ?period rdfs:label ?periodLabel .
  FILTER (lang(?periodLabel) = 'en') .
  FILTER (CONTAINS(lcase(str(?periodLabel)), ""ancient"")) .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
258,How many theories did Albert Einstein come up with?,"SELECT COUNT(?theory) WHERE {
  dbr:Albert_Einstein dbo:knownFor ?theory .
  ?theory rdf:type dbo:Theory .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
259,Who composed the soundtrack for Cameron's Titanic?,"SELECT ?composer WHERE {
  ?film dbo:director ?director .
  ?director foaf:name ""James Cameron""@en .
  ?film dbo:musicComposer ?composer .
  ?film rdfs:label ""Titanic""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
260,Give me the runtime of Toy Story.,"SELECT ?runtime WHERE {
  dbr:Toy_Story dbo:runtime ?runtime .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
262,With how many countries Iran has borders?,"SELECT COUNT(?country) WHERE {
  dbr:Iran dbo:border ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
263,Which electronics companies were founded in Beijing?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Electronics .
  ?company dbo:foundationPlace dbr:Beijing .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
264,Who was the successor of John F. Kennedy?,"SELECT ?successor WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
265,Who is the mayor of Paris?,"SELECT ?person WHERE {
  dbr:Paris dbo:mayor ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
266,Did Arnold Schwarzenegger attend a university?,"SELECT ?university WHERE {
  dbr:Arnold_Schwarzenegger dbo:almaMater ?university .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
267,Is James Bond married?,"SELECT ?spouse
WHERE {
  dbr:James_Bond dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
268,Does the Isar flow into a lake?,"SELECT ?lake WHERE {
  dbr:Isar dbo:inflow ?lake .
  ?lake rdf:type dbo:Lake .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
269,Which Indian company has the most employees?,"SELECT ?company WHERE {
  ?company dbo:locationCountry dbr:India ;
           dbo:numberOfEmployees ?employees .
} ORDER BY DESC(?employees) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
270,Who was John F. Kennedy's vice president?,"SELECT ?vicePresident WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
271,Which country does the creator of Miffy come from?,"SELECT ?country WHERE {
  ?miffy dbo:creator ?creator .
  ?creator dbo:nationality ?country .
  ?miffy foaf:name ""Miffy""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
273,In what city is the Heineken brewery?,"SELECT ?city WHERE {
  dbr:Heineken dbo:locationCity ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
274,Is Barack Obama a democrat?,"SELECT ?party WHERE {
  dbr:Barack_Obama dbo:party ?party .
  FILTER(?party = dbr:Democratic_Party_(United_States))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
275,List the children of Margaret Thatcher.,"SELECT ?child WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
276,From which region is the Melon de Bourgogne?,"SELECT ?region WHERE {
  dbr:Melon_de_Bourgogne dbo:wineRegion ?region .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
278,how big is the total area of North Rhine- Westphalia?,"SELECT ?area WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?area .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
279,Which city has the most inhabitants?,"SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
280,What is Donald Trump's main business?,"SELECT ?mainBusiness WHERE {
  dbr:Donald_Trump dbo:owner ?mainBusiness .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
281,When will start the final match of the football world cup 2018?,"SELECT ?date WHERE {
  dbr:2018_FIFA_World_Cup_Final dbo:startTime ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
282,Which films did Stanley Kubrick direct?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
283,how much is the population  Iraq?,"SELECT ?population WHERE {
  dbr:Iraq dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population WHERE {
  dbr:Canada dbo:largestCity ?city .
  ?city dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
285,Who is the mayor of the capital of French Polynesia?,"SELECT ?person WHERE {
  ?country dbo:officialName ""French Polynesia""@en .
  ?country dbo:capital ?city .
  ?city dbo:mayor ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
286,Give me all actors starring in movies directed by William Shatner.,"SELECT ?actor WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
287,How tall is Claudia Schiffer?,"SELECT ?height WHERE {
  dbr:Claudia_Schiffer dbo:height ?height .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
288,how much is the population densty rank of germany?,"SELECT ?populationDensityRank WHERE {
  dbr:Germany dbp:populationDensityRank ?populationDensityRank .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
289,What is the highest mountain in Italy?,"SELECT ?mountain WHERE {
  ?mountain dbo:location dbr:Italy ;
            rdf:type dbo:Mountain .
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
290,List all games by GMT.,"SELECT ?game WHERE {
  ?game dbo:publisher ?publisher .
  ?publisher foaf:name ""GMT""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
291,What is the official language of Suriname?,"SELECT ?officialLanguage WHERE {
  dbr:Suriname dbo:officialLanguage ?officialLanguage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
292,In which city did Nikos Kazantzakis die?,"SELECT ?city WHERE {
  dbr:Nikos_Kazantzakis dbo:deathPlace ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
293,What is in a chocolate chip cookie?,"SELECT ?ingredient WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
294,In which country is the Limerick Lake?,"SELECT ?country WHERE {
  dbr:Limerick_Lake dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
295,Give me all video games published by Mean Hamster Software.,"SELECT ?game WHERE {
  ?game dbo:publisher <http://dbpedia.org/resource/Mean_Hamster_Software> .
  ?game rdf:type dbo:VideoGame .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
296,Give me all members of Prodigy.,"SELECT ?member WHERE {
  dbr:The_Prodigy dbo:bandMember ?member .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
297,In which time zone is Rome?,"SELECT ?timeZone WHERE {
  dbr:Rome dbo:timeZone ?timeZone .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
298,How high is the lighthouse in Colombo?,"SELECT ?height WHERE {
  ?lighthouse dbo:location dbr:Colombo .
  ?lighthouse dbo:height ?height .
  ?lighthouse rdf:type dbo:Lighthouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
299,Who are the writers of the Wall album of Pink Floyd?,"SELECT ?writer WHERE {
  dbr:The_Wall dbp:writer ?writer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
300,Who is the mayor of Rotterdam?,"SELECT ?person WHERE {
  dbr:Rotterdam dbo:leaderName ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
301,What is the largest city in Australia?,"SELECT ?city WHERE {
  dbr:Australia dbo:largestCity ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
302,Who was married to president Chirac?,"SELECT ?person WHERE {
  dbr:Jacques_Chirac dbo:spouse ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
303,What form of government is found in South Africa?,"SELECT ?governmentType WHERE {
  dbr:South_Africa dbo:governmentType ?governmentType .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
304,How high is the Yokohama Marine Tower?,"SELECT ?height WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
305,Which holidays are celebrated around the world? test2,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
306,Who is the tallest basketball player?,"SELECT ?player ?height
WHERE {
  ?player dbo:height ?height .
  ?player rdf:type dbo:BasketballPlayer .
}
ORDER BY DESC(?height)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
307,How many languages are spoken in Turkmenistan?,"SELECT (COUNT(?language) AS ?languageCount) WHERE {
  dbr:Turkmenistan dbo:officialLanguage ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
308,Did Che Guevara have children?,"SELECT ?child WHERE {
  dbr:Che_Guevara dbo:child ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"SELECT ?award 
WHERE {
  ?person dbo:award ?award .
  ?person foaf:name ""Aki Kaurismäki""@en .
  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en') .
  FILTER (contains(?awardLabel, ""Grand Prix"")) .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
310,To which party does the mayor of Paris belong?,"SELECT ?party WHERE {
  dbr:Paris dbo:mayor ?mayor.
  ?mayor dbo:party ?party.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver WHERE {
  ?driver rdf:type dbo:FormulaOneRacer .
} 
ORDER BY DESC(?races)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
312,What country is Sitecore from?,"SELECT ?country WHERE {
  dbr:Sitecore dbo:locationCountry ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
314,Is Christian Bale starring in Velvet Goldmine?,"SELECT DISTINCT ?film WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Velvet_Goldmine"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_Bono, dbr:Cher.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
316,How many ethnic groups live in Slovenia?,"SELECT (COUNT(?ethnicGroup) AS ?count) WHERE {
  dbr:Slovenia dbo:ethnicGroup ?ethnicGroup .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
317,What is the capital of Cameroon?,"SELECT ?capital WHERE {
  dbr:Cameroon dbo:capital ?capital .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
318,Was Natalie Portman born in the United States?,"SELECT ?answer 
WHERE { 
  dbr:Natalie_Portman dbo:birthPlace ?place .
  ?place rdfs:label ?answer .
  FILTER (lang(?answer) = 'en') 
  FILTER CONTAINS(?answer, ""United States"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
319,How many pages does War and Peace have?,"SELECT ?numberOfPages WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?numberOfPages .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
320,Who is the oldest child of Meryl Streep?,"SELECT ?child WHERE {
  dbr:Meryl_Streep dbo:child ?child .
} ORDER BY ASC(?child) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
321,Which television shows were created by Walt Disney?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
322,What does IYCM stand for?,"SELECT ?meaning WHERE {
  ?s dbo:abbreviation ""IYCM"" .
  ?s rdfs:label ?meaning .
  FILTER (lang(?meaning) = 'en')
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
323,Which types of grapes grow in Oregon?,"SELECT ?grape WHERE {
  ?region dbo:growingGrape ?grape .
  ?region rdfs:label ""Oregon""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
324,Was U.S. president Jackson involved in a war?,"SELECT ?war WHERE {
  dbr:Andrew_Jackson dbo:battle ?war .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
325,When was the Titanic completed?,"SELECT ?completionDate WHERE {
  dbr:Titanic dbo:completionDate ?completionDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
326,Did Tesla win a nobel prize in physics?,"SELECT ?award
WHERE {
  dbr:Nikola_Tesla dbo:award ?award .
  ?award rdf:type dbo:NobelPrizeInPhysics .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
327,How many states are in Mexico?,"SELECT (COUNT(?state) AS ?count) WHERE {
  ?state dbo:isPartOf dbr:Mexico .
  ?state rdf:type dbo:AdministrativeRegion .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project .
  ?scientist dbo:award dbr:Nobel_Peace_Prize .
  ?scientist rdf:type dbo:Scientist .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
329,How much did the Lego Movie cost?,"SELECT ?cost WHERE {
  dbr:The_Lego_Movie dbo:budget ?cost .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
330,Who composed the music for Harold and Maude?,"SELECT ?composer WHERE {
  ?film dbo:musicComposer ?composer .
  ?film rdfs:label ""Harold and Maude""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
331,List all episodes of the first season of the HBO television series The Sopranos.,"SELECT ?episode WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber 1 .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
332,Which city has the least inhabitants?,"SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
333,Where is Syngman Rhee buried?,"SELECT ?place WHERE {
  dbr:Syngman_Rhee dbo:restingPlace ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
334,Does Neymar play for Real Madrid?,"SELECT ?answer 
WHERE {
  dbr:Neymar dbo:team ?answer .
  FILTER (?answer = dbr:Real_Madrid_C.F.)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
335,Who wrote the book The Pillars of the Earth?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
336,Do Prince Harry and Prince William have the same parents?,"SELECT ?parent WHERE {
  { dbr:Prince_William,_Duke_of_Cambridge dbo:parent ?parent . }
  UNION
  { dbr:Prince_Harry,_Duke_of_Sussex dbo:parent ?parent . }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?doctoralSupervisor WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?doctoralSupervisor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
338,Does Breaking Bad have more episodes than Game of Thrones?,"SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes WHERE {
  dbr:Breaking_Bad dbo:numberOfEpisodes ?breakingBadEpisodes .
  dbr:Game_of_Thrones dbo:numberOfEpisodes ?gameOfThronesEpisodes .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
339,Who was Vincent van Gogh inspired by?,"SELECT ?person WHERE {
  ?person dbo:influenced dbr:Vincent_van_Gogh.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building ?floors WHERE {
  ?building dbo:floorCount ?floors .
  FILTER(?floors < (SELECT ?burj_floors WHERE {
    dbr:Burj_Khalifa dbo:floorCount ?burj_floors
  }))
} ORDER BY DESC(?floors) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
341,What was the final result of the War of the Roses?,"SELECT ?result WHERE {
  dbr:Wars_of_the_Roses dbo:result ?result .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
342,How much did Pulp Fiction cost?,"SELECT ?budget WHERE {
  dbr:Pulp_Fiction dbo:budget ?budget .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
343,Is proinsulin a protein?,"SELECT ?answer 
WHERE {
  dbr:Proinsulin rdf:type ?answer .
  ?answer rdfs:subClassOf dbo:Protein .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
344,Do Urdu and Persian have a common root?,"SELECT ?commonRoot WHERE {
  dbr:Urdu dbo:languageFamily ?commonRoot .
  dbr:Persian dbo:languageFamily ?commonRoot .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
345,Who is starring in Spanish movies produced by Benicio del Toro?,"SELECT ?actor WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:producer dbr:Benicio_del_Toro .
  ?movie dbo:starring ?actor .
  ?movie dbo:country dbr:Spain .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
346,Is Lake Baikal bigger than the Great Bear Lake?,"SELECT ?lake ?area WHERE {
  { 
    SELECT ?area WHERE {
      dbr:Lake_Baikal dbo:areaTotal ?area .
    } 
    ORDER BY DESC(?area)
    LIMIT 1
  }
  UNION
  { 
    SELECT ?area WHERE {
      dbr:Great_Bear_Lake dbo:areaTotal ?area .
    } 
    ORDER BY DESC(?area)
    LIMIT 1
  }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
347,Show me all books in Asimov's Foundation series.,"SELECT ?book WHERE {
  ?book dbo:series dbr:Foundation_series .
  ?book rdf:type dbo:Book .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
348,Where was Bach born?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
349,Which city has the oldest running metro?,"SELECT ?city WHERE {
  ?city a dbo:City .
  ?metro dbo:city ?city ;
         dbo:openingYear ?year .
} ORDER BY ASC(?year) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
350,Who designed the Brooklyn Bridge?,"SELECT ?designer WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?designer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
351,How many people live in Eurasia?,"SELECT ?population WHERE {
  dbr:Eurasia dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host WHERE {
  dbr:BBC_Wildlife_Specials dbo:presenter ?host .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
353,"What is the total population of Melbourne, Florida?","SELECT ?population WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
354,What country is Mount Everest in?,"SELECT ?country WHERE {
  dbr:Mount_Everest dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
355,To which artistic movement did the painter of The Three Dancers belong?,"SELECT ?movement WHERE {
  ?work dbo:author ?author .
  ?author dbo:movement ?movement .
  ?work rdfs:label ""The Three Dancers""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
356,When did Operation Overlord commence?,"SELECT ?date WHERE {
  dbr:Operation_Overlord dbo:date ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
357,What is the bridge with the longest span?,"SELECT ?bridge WHERE {
  ?bridge a dbo:Bridge .
} ORDER BY DESC(?mainspan) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
358,Is there a video game called Battle Chess?,"SELECT ?game WHERE {
  ?game a dbo:VideoGame .
  ?game rdfs:label ""Battle Chess""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
359,Who was buried in the Great Pyramid of Giza?,"SELECT ?person WHERE {
  ?person dbo:restingPlace dbr:Great_Pyramid_of_Giza.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"SELECT ?plant WHERE {
  dbr:Ford_Motor_Company dbo:location ?plant .
  ?plant dbo:country dbr:Malaysia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
361,Did Socrates influence Aristotle?,"SELECT ?answer 
WHERE { 
  dbr:Aristotle dbo:influencedBy ?answer . 
  FILTER (?answer = dbr:Socrates) 
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
362,How many children did Benjamin Franklin have?,"SELECT (COUNT(?child) AS ?count) WHERE {
  dbr:Benjamin_Franklin dbo:child ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
363,How tall is Michael Jordan?,"SELECT ?height WHERE {
  dbr:Michael_Jordan dbo:height ?height .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
364,In which UK city are the headquarters of the MI6?,"SELECT ?city WHERE {
  dbr:Secret_Intelligence_Service dbo:headquarter ?city .
  ?city dbo:country dbr:United_Kingdom .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
365,Who created Family Guy?,"SELECT ?creator WHERE {
  dbr:Family_Guy dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
366,In which city does the Chile Route 68 end?,"SELECT ?city WHERE {
  ?route dbo:routeEnd ?city .
  ?route rdfs:label ""Chile Route 68""@en .
  ?city rdf:type dbo:City .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
368,When did the Ming dynasty dissolve?,"SELECT ?date WHERE {
  dbr:Ming_dynasty dbo:dissolutionDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
369,In which military conflicts did Lawrence of Arabia participate?,"SELECT ?militaryConflict WHERE {
  dbr:Lawrence_of_Arabia dbo:battle ?militaryConflict .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
370,What is the timezone in San Pedro de Atacama?,"SELECT ?timezone WHERE {
  dbr:San_Pedro_de_Atacama dbo:timeZone ?timezone .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
371,Give me all books by William Goldman with more than 300 pages.,"SELECT ?book WHERE {
  ?book dbo:author ?author .
  ?author foaf:name ""William Goldman""@en .
  ?book dbo:numberOfPages ?pages .
  FILTER(?pages > 300)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
372,What did Bruce Carver die from?,"SELECT ?cause_of_death WHERE {
  dbr:Bruce_Carver dbo:deathCause ?cause_of_death.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"SELECT ?airline WHERE {
  ?airline dbo:parentCompany dbr:Lufthansa .
  ?airline dbo:targetAirport dbr:Dortmund_Airport .
  ?airline dbo:targetAirport dbr:Berlin_Tegel_Airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
374,Does Abraham Lincoln's death place have a website?,"SELECT ?website WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace .
  ?deathPlace foaf:homepage ?website .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
375,Did Elvis Presley have children?,"SELECT ?child WHERE {
  dbr:Elvis_Presley dbo:child ?child .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
376,Is Michelle Obama the wife of Barack Obama?,"SELECT ?answer 
WHERE {
  dbr:Barack_Obama dbo:spouse ?answer .
  FILTER (?answer = dbr:Michelle_Obama)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
377,In which city does Sylvester Stallone live?,"SELECT ?city WHERE {
  dbr:Sylvester_Stallone dbo:residence ?city .
  ?city rdf:type dbo:City .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
378,Which books by Kerouac were published by Viking Press?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Jack_Kerouac .
  ?book dbo:publisher dbr:Viking_Press .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
379,Who wrote the song Hotel California?,"SELECT ?writer WHERE {
  ?song dbo:writer ?writer .
  ?song rdfs:label ""Hotel California""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
380,What is the capital of Canada?,"SELECT ?capital WHERE {
  dbr:Canada dbo:capital ?capital .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
381,Who is the mayor of Tel Aviv?,"SELECT ?person WHERE {
  dbr:Tel_Aviv dbo:leaderName ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
382,What form of government does Russia have?,"SELECT ?governmentType WHERE {
  dbr:Russia dbo:governmentType ?governmentType .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Muhammad_Ali .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
384,Who was the first to climb Mount Everest?,"SELECT ?person WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
385,How many languages are spoken in Colombia?,"SELECT (COUNT(?language) AS ?languageCount) WHERE {
  dbr:Colombia dbo:officialLanguage ?language .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
386,What is the currency of the Czech Republic?,"SELECT ?currency WHERE {
  dbr:Czech_Republic dbo:currency ?currency .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
387,Where in France is sparkling wine produced?,"SELECT ?location WHERE {
  ?company dbo:location ?location .
  ?company dbo:country dbr:France .
  ?company dbo:wineProduced ?wine .
  FILTER (CONTAINS(LCASE(STR(?wine)), ""sparkling wine""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
388,When did Boris Becker end his active career?,"SELECT ?date WHERE {
  dbr:Boris_Becker dbo:activeYearsEndDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke .
  ?movie dbo:director dbr:Guy_Ritchie .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Julia_Roberts .
  ?film dbo:starring dbr:Richard_Gere .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
391,Show me Hemingway's autobiography.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Ernest_Hemingway .
  ?book rdf:type dbo:Book .
  ?book dbo:literaryGenre dbr:Autobiography .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
392,How tall is Amazon Eve?,"SELECT ?height WHERE {
  dbr:Amazon_Eve dbo:height ?height .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
393,What are the five boroughs of New York?,"SELECT ?borough WHERE {
  dbr:New_York_City dbo:borough ?borough .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
394,Give me all Canadian Grunge record labels.,"SELECT ?label WHERE {
  ?label rdf:type dbo:RecordLabel .
  ?label dbo:location dbr:Canada .
  ?artist dbo:recordLabel ?label .
  ?artist dbo:genre dbr:Grunge_music .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
395,In which country does the Ganges start?,"SELECT ?country WHERE {
  dbr:Ganges dbo:sourceCountry ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
396,Who is the founder of Penguin Books?,"SELECT ?founder WHERE {
  dbr:Penguin_Books dbo:founder ?founder .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
397,Who wrote the Game of Thrones theme?,"SELECT ?person WHERE {
  dbr:Game_of_Thrones dbo:composer ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
398,Who is the president of Eritrea?,"SELECT ?person WHERE {
  dbr:Eritrea dbo:leader ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
399,In which city did John F. Kennedy die?,"SELECT ?city WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?city .
  ?city rdf:type dbo:City .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
400,What is the highest mountain in Australia?,"SELECT ?mountain WHERE {
  ?mountain dbo:country dbr:Australia .
  ?mountain dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
401,Who writes the Farmers' Almanac?,"SELECT ?person WHERE {
  dbr:Farmers'_Almanac dbp:editor ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
402,Give me the currency of China.,"SELECT ?currency WHERE {
  dbr:China dbo:currency ?currency .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
403,Give me all Swedish oceanographers.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Oceanographer .
  ?person dbo:nationality dbr:Sweden .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
404,In which city are the headquarters of the United Nations?,"SELECT ?city WHERE {
  dbr:United_Nations dbo:headquarter ?city .
  ?city rdf:type dbo:City .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
405,Is Rita Wilson the wife of Tom Hanks?,"SELECT ?answer 
WHERE {
  dbr:Tom_Hanks dbo:spouse ?answer .
  FILTER (?answer = dbr:Rita_Wilson)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
406,In which countries do people speak Japanese?,"SELECT ?country WHERE {
  ?country dbo:officialLanguage dbr:Japanese .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget WHERE {
  ?film dbo:director dbr:Tim_Burton .
  ?film dbo:budget ?budget .
} ORDER BY DESC(?budget) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
408,Which museum in New York has the most visitors?,"SELECT ?museum WHERE {
  ?museum dbo:location dbr:New_York_City .
  ?museum dbo:numberOfVisitors ?visitors
} ORDER BY DESC(?visitors) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
409,What was the first Queen album?,"SELECT ?album WHERE {
  ?album dbo:artist dbr:Queen_(band) .
  ?album dbo:releaseDate ?date
} ORDER BY ?date LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?firstName WHERE {
  dbr:Queens_of_the_Stone_Age dbo:alias ?firstName .
} LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
411,What was the last movie with Alec Guinness?,"SELECT ?movie ?date WHERE {
  ?movie dbo:starring dbr:Alec_Guinness .
  ?movie dbo:releaseDate ?date .
} ORDER BY DESC(?date) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
412,Give me all actors starring in Last Action Hero.,"SELECT ?actor WHERE {
  dbr:Last_Action_Hero dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
413,Who discovered Pluto?,"SELECT ?discoverer WHERE {
  dbr:Pluto dbo:discoverer ?discoverer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
1,List all boardgames by GMT.,"SELECT ?boardgame WHERE {
  ?boardgame dbo:publisher <http://dbpedia.org/resource/GMT_Games> .
  ?boardgame rdf:type dbo:BoardGame .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
2,Who developed Skype?,"SELECT ?developer WHERE {
  dbr:Skype dbo:developer ?developer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
3,Which people were born in Heraklion?,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person rdf:type dbo:Person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
4,In which U.S. state is Area 51 located?,"SELECT ?state WHERE {
  dbr:Area_51 dbo:location ?state .
  ?state rdf:type dbo:Place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
5,Who is the mayor of New York City?,"SELECT ?person WHERE {
  dbr:New_York_City dbo:leaderName ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
6,Which countries have places with more than two caves?,"SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:location ?place .
  ?place dbo:country ?country .
  ?cave a dbo:Cave .
}
GROUP BY ?country
HAVING (?caveCount > 2)",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
7,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
8,Which airports does Air China serve?,"SELECT ?airport WHERE {
  dbr:Air_China dbo:targetAirport ?airport .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
9,Give me all actors starring in movies directed by and starring William Shatner.,"SELECT DISTINCT ?actor WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
10,What are the official languages of the Philippines?,"SELECT ?language WHERE {
  dbr:Philippines dbo:officialLanguage ?language .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
11,Give me all Danish films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?film WHERE {
  ?film dct:subject <http://dbpedia.org/resource/Category:Danish_films> .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Brad_Pitt .
  ?movie dbo:director dbr:Guy_Ritchie .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
13,Give me the grandchildren of Bruce Lee.,"SELECT ?grandchild WHERE {
  ?person dbo:wikiPageID ?id .
  ?person rdfs:label ""Bruce Lee""@en .
  ?person dbo:child ?child .
  ?child dbo:child ?grandchild .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
14,Which other weapons did the designer of the Uzi develop?,"SELECT ?weapon WHERE {
  dbr:Uzi dbo:designer ?designer .
  ?weapon dbo:designer ?designer .
  FILTER(?weapon != dbr:Uzi)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
15,Who is the owner of Universal Studios?,"SELECT ?owner WHERE {
  dbr:Universal_Studios dbo:owner ?owner .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
16,Which state of the USA has the highest population density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:isPartOf dbr:United_States .
  ?state dbo:populationDensity ?density .
} ORDER BY DESC(?density) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
17,Which monarchs were married to a German?,"SELECT ?monarch WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch rdf:type dbo:Monarch .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
18,Which organizations were founded in 1950?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1950""^^xsd:gYear .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
19,Who created the comic Captain America?,"SELECT ?creator WHERE {
  dbr:Captain_America dbo:creator ?creator .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
20,Give me the Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dbo:mission dbr:Apollo_14 .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
21,Who wrote the book The pillars of the Earth?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
22,Which state of the United States of America has the highest density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place ;
         dbo:country dbr:United_States ;
         dbp:densityrank ?density .
}
ORDER BY ASC(?density)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
23,Which spaceflights were launched from Baikonur?,"SELECT ?spaceflight WHERE {
  ?spaceflight dbo:launchPad dbr:Baikonur_Cosmodrome.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
24,Give me a list of all trumpet players that were bandleaders.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?player WHERE {
  ?player rdf:type dbo:Person .
  ?player dbo:instrument dbr:Trumpet .
  ?player dbo:occupation dbr:Bandleader .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
25,Which U.S. states are in the same timezone as Utah?,"SELECT ?state WHERE {
  dbr:Utah dbo:timeZone ?timeZone .
  ?state rdf:type dbo:Place ;
         dbo:timeZone ?timeZone .
  FILTER (?state != dbr:Utah)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
26,Which U.S. states possess gold minerals?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbp:mineral dbr:Gold .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
27,Who is the daughter of Ingrid Bergman married to?,"SELECT ?name WHERE {
  ?person dbo:spouse ?name .
  ?person dbo:child ?daughter .
  ?daughter foaf:name ""Ingrid Bergman""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
28,How deep is Lake Placid?,"SELECT ?depth WHERE {
  dbr:Lake_Placid_(New_York) dbo:maximumDepth ?depth .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
29,Show me all museums in London.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?museum
WHERE {
  ?museum dbo:location dbr:London .
  ?museum rdf:type dbo:Museum .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
30,Which caves have more than 3 entrances?,"SELECT ?cave WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbp:entranceCount ?entranceCount .
  FILTER (?entranceCount > 3)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
31,Who is the tallest player of the Atlanta Falcons?,"SELECT ?player WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Atlanta_Falcons> .
  ?player dbo:height ?height .
} ORDER BY DESC(?height) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
32,What are the top-10 action role-playing video games according to IGN?,"SELECT ?game WHERE {
  ?game rdf:type dbo:VideoGame ;
        dbo:genre dbr:Action_role-playing_game ;
        dbo:reviewScore ?score ;
        dbo:review ?review .
  ?review dbo:reviewer dbr:IGN .
} ORDER BY DESC(?score) LIMIT 10",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
33,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer WHERE {
  ?writer dbo:occupation dbr:Writer .
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
34,Show me all basketball players that are higher than 2 meters.,"SELECT ?player WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
  FILTER (?height > 2.0)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
35,When was the Statue of Liberty built?,"SELECT ?date WHERE {
  dbr:Statue_of_Liberty dbo:completionDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
36,Which states border Illinois?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  dbr:Illinois dbp:borderingstates ?state .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
37,Who developed Minecraft?,"SELECT ?developer WHERE {
  dbr:Minecraft dbo:developer ?developer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
38,Where did Hillel Slovak die?,"SELECT ?place WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
39,What movies does Jesse Eisenberg play in?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
40,Give all swimmers that were born in Moscow.,"SELECT ?swimmer WHERE {
  ?swimmer dbo:birthPlace dbr:Moscow .
  ?swimmer rdf:type dbo:Swimmer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
41,Give me all cosmonauts.,"SELECT ?cosmonaut WHERE {
  ?cosmonaut dbo:occupation dbr:Cosmonaut .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
42,Give me all Swiss non-profit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?org WHERE {
  ?org dbo:location dbr:Switzerland .
  ?org dbo:type dbr:Non-profit_organization .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
43,Which presidents were born in 1945?,"SELECT ?president WHERE {
  ?president dbo:birthYear 1945 .
  ?president rdf:type dbo:President .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
44,What kind of music did Lou Reed play?,"SELECT ?genre WHERE {
  dbr:Lou_Reed dbo:genre ?genre .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
45,Where do the Red Sox play?,"SELECT ?stadium WHERE {
  dbr:Boston_Red_Sox dbp:ballpark ?stadium .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
46,Show a list of soccer clubs that play in the Bundesliga.,"SELECT ?club WHERE {
  ?club dbo:league dbr:Bundesliga .
  ?club rdf:type dbo:SoccerClub .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
47,Which volcanos in Japan erupted since 2000?,"SELECT ?volcano WHERE {
  ?volcano dbo:locatedInArea dbr:Japan .
  ?volcano dbo:eruptionYear ?year .
  FILTER (?year >= 2000)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
48,Which bridges cross the Seine?,"SELECT ?bridge WHERE {
  ?bridge dbo:crosses dbr:Seine ;
          rdf:type dbo:Bridge .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
49,What is the official color of the University of Oxford?,"SELECT ?officialColor WHERE {
  dbr:University_of_Oxford dbo:officialSchoolColour ?officialColor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
50,How many films did Hal Roach produce?,"SELECT (COUNT(?film) AS ?count) WHERE {
  ?film dbo:producer dbr:Hal_Roach.
  ?film rdf:type dbo:Film.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
51,Give me all Danish movies.,"SELECT ?movie WHERE {
  ?movie dbo:country dbr:Denmark .
  ?movie rdf:type dbo:Film .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count) WHERE {
  ?person dbo:deathCause ?causeOfDeath .
} 
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
53,Who are the four youngest MVP basketball players?,"SELECT ?player ?birthDate
WHERE {
  ?player dbo:award dbr:NBA_Most_Valuable_Player_Award ;
          dbo:birthDate ?birthDate .
}
ORDER BY DESC(?birthDate)
LIMIT 4",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
54,Give me all companies in Munich.,"SELECT ?company WHERE {
  ?company dbo:location dbr:Munich .
  ?company rdf:type dbo:Company .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
55,Give me the capitals of all countries that the Himalayas run through.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?capital
WHERE {
  ?mountain dbo:country ?country .
  ?country dbo:capital ?capital .
  FILTER (?mountain = dbr:Himalayas)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
56,How many movies did Park Chan-wook direct?,"SELECT (COUNT(?movie) AS ?count) WHERE {
  ?movie dbo:director dbr:Park_Chan-wook .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
57,Which rivers flow into a German lake?,"SELECT ?river WHERE {
  ?lake dbo:country dbr:Germany .
  ?river dbo:inflow ?lake .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline rdf:type dbo:Airline .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
59,Give me all islands that belong to Japan.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island WHERE {
  ?island dbo:country dbr:Japan .
  ?island a dbo:Island .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
60,How many inhabitants does Maribor have?,"SELECT ?population WHERE {
  dbr:Maribor dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
61,Give me all Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dbo:mission dbr:Apollo_14 .
  ?astronaut rdf:type dbo:Astronaut .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
62,Which companies have more than 1 million employees?,"SELECT ?company WHERE {
  ?company dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
63,In which films directed by Garry Marshall was Julia Roberts starring?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Garry_Marshall .
  ?film dbo:starring dbr:Julia_Roberts .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
64,Give me all soccer clubs in the Premier League.,"SELECT ?club WHERE {
  ?club dbo:league dbr:Premier_League .
  ?club rdf:type dbo:SoccerClub .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
65,What is the highest place of the Urals?,"SELECT ?place ?elevation 
WHERE {
  ?place dbo:location dbr:Ural_Mountains ;
         dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
66,Who is the governor of Wyoming?,"SELECT ?person WHERE {
  dbr:Wyoming dbp:governor ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
67,Where did the architect of the Eiffel Tower study?,"SELECT ?university WHERE {
  dbr:Eiffel_Tower dbo:architect ?architect .
  ?architect dbo:almaMater ?university .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
68,Give me all world heritage sites designated within the past two years.,"Apologies for the confusion, but it seems there was a misunderstanding. Here is the SPARQL query for your request:

```
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?site WHERE {
  ?site a dbo:WorldHeritageSite .
  ?site dbo:yearOfInscription ?year .
  FILTER (?year >= ""2014""^^xsd:gYear)
}
```

Please note that this query assumes that the current year is 2016, and it will return all World Heritage Sites that were designated in 2014 or later.",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
69,Give me all actors who were born in Paris after 1950.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Paris .
  ?actor dbo:birthDate ?date .
  ?actor rdf:type dbo:Actor .
  FILTER (?date > ""1950-01-01""^^xsd:date)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
70,Which movies star both Liz Taylor and Richard Burton?,"SELECT ?movie WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Elizabeth_Taylor> .
  ?movie dbo:starring <http://dbpedia.org/resource/Richard_Burton> .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
71,Give me all Australian nonprofit organizations.,"SELECT ?organization WHERE {
  ?organization dct:subject dbc:Non-profit_organisations_based_in_Australia.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
72,Which pope succeeded John Paul II?,"SELECT ?pope WHERE {
  ?pope dbo:predecessor dbr:Pope_John_Paul_II .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
73,Give me all ESA astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dbo:occupation dbr:European_Space_Agency .
  ?astronaut rdf:type dbo:Astronaut .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
74,Who was president of Pakistan in 1978?,"SELECT ?person WHERE {
  ?person dbo:office dbr:President_of_Pakistan .
  ?person dbo:termStart ?start .
  ?person dbo:termEnd ?end .
  FILTER (?start <= ""1978-01-01""^^xsd:date && ?end >= ""1978-12-31""^^xsd:date)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
75,Who is the owner of Rolls-Royce?,"SELECT ?owner WHERE {
  dbr:Rolls-Royce_Motor_Cars dbo:owner ?owner .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
76,How many museums does Paris have?,"SELECT (COUNT(?museum) AS ?count) WHERE {
  ?museum dbo:location dbr:Paris .
  ?museum rdf:type dbo:Museum .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
77,Where was JFK assassinated?,"SELECT ?place WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
78,Give me all federal chancellors of Germany.,"SELECT ?chancellor WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
79,Show me everyone who was born on Halloween.,"SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (datatype(?date) = xsd:date && MONTH(?date) = 10 && DAY(?date) = 31)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
80,Which beer originated in Ireland?,"SELECT ?beer WHERE {
  ?beer dbo:origin <http://dbpedia.org/resource/Ireland> .
  ?beer rdf:type dbo:Beer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
81,To which countries does the Himalayan mountain system extend?,"SELECT ?country WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country rdf:type dbo:Country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
82,Which actors were born in Germany?,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Germany .
  ?actor rdf:type dbo:Actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
83,How much carbs does peanut butter have?,"SELECT ?carbs WHERE {
  dbr:Peanut_butter dbp:carbs ?carbs .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?count) WHERE {
  ?film dbo:producer ?producer .
} 
GROUP BY ?producer 
ORDER BY DESC(?count) 
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
85,How many employees does Google have?,"SELECT ?numberOfEmployees WHERE {
  dbr:Google dbo:numberOfEmployees ?numberOfEmployees .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
86,Give me all actors who were born in Berlin.,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Berlin .
  ?actor rdf:type dbo:Actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
87,Who created Goofy?,"SELECT ?creator WHERE {
  dbr:Goofy dbo:creator ?creator .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
88,Which music albums contain the song Last Christmas?,"SELECT ?album WHERE {
  ?song dbo:title ""Last Christmas""@en.
  ?song dbo:album ?album.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
89,When was Alberta admitted as province?,"SELECT ?date WHERE {
  dbr:Alberta dbp:admittancedate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
90,How many missions does the Soyuz programme have?,"SELECT (COUNT(?mission) AS ?count) WHERE {
  ?mission dbo:programme dbr:Soyuz_programme.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
91,Give me all the TV shows with Neil Patrick Harris.,"SELECT ?show WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris .
  ?show rdf:type dbo:TelevisionShow .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
92,When were the Hells Angels founded?,"SELECT ?date WHERE {
  dbr:Hells_Angels dbo:foundingDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
93,What is the net income of Apple?,"SELECT ?netIncome WHERE {
  dbr:Apple_Inc dbo:netIncome ?netIncome .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
94,Give me all Swedish holidays.,"SELECT ?holiday WHERE {
  ?holiday dbo:country dbr:Sweden .
  ?holiday rdf:type dbo:Holiday .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
95,In which city was the former Dutch queen Juliana buried?,"SELECT ?city WHERE {
  dbr:Juliana_of_the_Netherlands dbp:burialPlace ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
96,List all the musicals with music by Leonard Bernstein.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
97,Give me all companies in the advertising industry.,"SELECT ?company WHERE {
  ?company rdf:type dbo:Company .
  ?company dbo:industry dbr:Advertising .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
98,What is the largest metropolitan area in Washington state?,"SELECT ?city WHERE {
  ?city dbo:isPartOf dbr:Washington_(state) .
  ?city dbp:largestMetro ?metro .
} ORDER BY DESC(?metro) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
99,Who killed John Lennon?,"SELECT ?killer WHERE {
  dbr:John_Lennon dbo:deathCause ?killer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
100,Which writers studied in Istanbul?,"SELECT ?writer WHERE {
  ?writer rdf:type dbo:Writer .
  ?writer dbo:education ?education .
  ?education dbo:city dbr:Istanbul .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
101,Give me all Australian metalcore bands.,"SELECT ?band WHERE {
  ?band dbo:genre dbr:Metalcore ;
        dbo:origin dbr:Australia .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
102,Which countries adopted the Euro?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
103,Give me all types of eating disorders.,"SELECT ?eatingDisorder WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
104,Was Marc Chagall a jew?,"SELECT ?answer 
WHERE {
  dbr:Marc_Chagall dbo:ethnicity ?answer .
  FILTER (?answer = dbr:Jews)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT ?rank WHERE {
  dbr:Brazil dbp:fifaMin ?rank .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
106,How many films did Leonardo DiCaprio star in?,"SELECT (COUNT(?film) AS ?count) WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
107,Was Margaret Thatcher a chemist?,"SELECT ?answer 
WHERE {
  dbr:Margaret_Thatcher dbo:occupation ?occupation .
  ?occupation rdfs:label ?answer .
  FILTER (lang(?answer) = 'en' && regex(?answer, ""chemist"", ""i""))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
108,Which U.S. states are in the same time zone as Utah?,"SELECT ?state WHERE {
  dbr:Utah dbp:timeZone ?timeZone .
  ?state rdf:type dbo:Place ;
         dbp:timeZone ?timeZone .
  FILTER (?state != dbr:Utah)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
109,Give me all books written by Danielle Steel.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
110,Which country has the most official languages?,"SELECT ?country (COUNT(?language) AS ?languageCount) WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
}
ORDER BY DESC(?languageCount)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
111,What is the total amount of men and women serving in the FDNY?,"SELECT ?total WHERE {
  dbr:New_York_City_Fire_Department dbp:employees ?total .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
112,Which actor played Chewbacca?,"SELECT ?actor WHERE {
  dbr:Chewbacca dbo:portrayer ?actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
113,Give me all libraries established earlier than 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library WHERE {
  ?library dbo:established ?year .
  ?library rdf:type dbo:Library .
  FILTER (?year < ""1400""^^xsd:gYear)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
114,Which programming languages were influenced by Perl?,"SELECT ?programmingLanguage WHERE {
  ?programmingLanguage dbo:influencedBy dbr:Perl .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
115,In which U.S. state is Mount McKinley located?,"SELECT ?state WHERE {
  dbr:Denali dbo:location ?state .
  ?state rdf:type dbo:Place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
116,What airlines are part of the SkyTeam alliance?,"SELECT ?airline WHERE {
  ?airline dbo:alliance dbr:SkyTeam .
  ?airline rdf:type dbo:Airline .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
117,Which ships were called after Benjamin Franklin?,"SELECT ?ship WHERE {
  ?ship dbo:shipNamesake dbr:Benjamin_Franklin .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
118,Give me all Methodist politicians.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Politician ;
          dbo:religion dbr:Methodism .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
119,What other books have been written by the author of The Fault in Our Stars?,"SELECT ?book WHERE {
  ?book dbo:author ?author .
  dbr:The_Fault_in_Our_Stars dbo:author ?author .
  FILTER(?book != dbr:The_Fault_in_Our_Stars)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
120,What is the highest mountain?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
121,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
GROUP BY ?poet
ORDER BY DESC(?bookCount)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
122,Which programming languages influenced Javascript?,"SELECT ?programmingLanguage WHERE {
  dbr:JavaScript dbo:influencedBy ?programmingLanguage .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
123,Which musician wrote the most books?,"SELECT ?musician (COUNT(?book) AS ?bookCount)
WHERE {
  ?musician rdf:type dbo:MusicalArtist .
  ?book dbo:author ?musician .
}
GROUP BY ?musician
ORDER BY DESC(?bookCount)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
124,Which films starring Clint Eastwood did he direct himself?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Clint_Eastwood .
  ?film dbo:director dbr:Clint_Eastwood .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
125,Which software has been developed by organizations founded in California?,"SELECT ?software WHERE {
  ?company dbo:foundingPlace dbr:California .
  ?company dbo:product ?software .
  ?software rdf:type dbo:Software
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
126,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
127,How many airlines are members of the Star Alliance?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:alliance dbr:Star_Alliance .
  ?airline rdf:type dbo:Airline .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
128,Give me all actors called Baldwin.,"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor foaf:name ?name .
  FILTER (CONTAINS(?name, ""Baldwin""))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
129,Who wrote The Hunger Games?,"SELECT ?author WHERE {
  dbr:The_Hunger_Games dbo:author ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
130,For which label did Elvis record his first album?,"SELECT ?label WHERE {
  {
    SELECT ?album WHERE {
      dbr:Elvis_Presley dbo:album ?album .
    } ORDER BY ASC(?album) LIMIT 1
  }
  ?album dbo:recordLabel ?label .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
131,Is Christian Bale starring in Batman Begins?,"SELECT DISTINCT ?film WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Christian_Bale> .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Batman_Begins"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
132,Where is the residence of the prime minister of Spain?,"SELECT ?residence WHERE {
  dbr:Prime_Minister_of_Spain dbo:residence ?residence .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?movie) AS ?movieCount)
WHERE {
  ?movie dbo:starring ?actor .
}
GROUP BY ?actor
ORDER BY DESC(?movieCount)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
134,Which countries have more than two official languages?,"SELECT ?country WHERE {
  ?country a dbo:Country .
  {
    SELECT ?country (COUNT(?language) AS ?languageCount) WHERE {
      ?country dbo:officialLanguage ?language .
    } GROUP BY ?country
  }
  FILTER(?languageCount > 2)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
135,Which countries have more than ten caves?,"SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:location ?country .
  ?cave rdf:type dbo:Cave .
  ?country rdf:type dbo:Country .
}
GROUP BY ?country
HAVING (?caveCount > 10)",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?song WHERE {
  ?song dbo:musicalArtist <http://dbpedia.org/resource/Bruce_Springsteen> .
  ?song dbo:releaseDate ?date .
  ?song rdf:type dbo:Song .
  FILTER (xsd:dateTime(?date) >= ""1980-01-01T00:00:00Z""^^xsd:dateTime && xsd:dateTime(?date) <= ""1990-12-31T23:59:59Z""^^xsd:dateTime)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
137,Which television shows were created by John Cleese?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:John_Cleese.
  ?show rdf:type dbo:TelevisionShow.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
138,When did Latvia join the EU?,"SELECT ?date WHERE {
  dbr:Latvia dbp:accessioneudate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
139,Which soccer players were born on Malta?,"SELECT ?player WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player rdf:type dbo:SoccerPlayer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
140,How many politicians graduated from Columbia University?,"SELECT (COUNT(?person) AS ?count)
WHERE {
  ?person dbo:almaMater dbr:Columbia_University .
  ?person rdf:type dbo:Politician .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
141,Give me the birthdays of all actors of the television show Charmed.,"SELECT ?actor ?birthday WHERE {
  ?show dbo:series ?series .
  ?series rdfs:label ""Charmed""@en .
  ?show dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
142,Which telecommunications organizations are located in Belgium?,"SELECT ?organization WHERE {
  ?organization dbo:industry dbr:Telecommunication ;
                dbo:location dbr:Belgium .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
143,Give me a list of all lakes in Denmark.,"SELECT ?lake WHERE {
  ?lake rdf:type dbo:Lake .
  ?lake dbo:country dbr:Denmark .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
144,How many children does Eddie Murphy have?,"SELECT ?child WHERE {
  dbr:Eddie_Murphy dbo:child ?child
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
145,Show me all English Gothic buildings in Kent.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?building WHERE {
  ?building dbo:architecturalStyle dbr:English_Gothic_architecture ;
            dbo:location dbr:Kent .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
146,Who is the manager of Real Madrid?,"SELECT ?manager WHERE {
  dbr:Real_Madrid_C.F. dbo:manager ?manager .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
147,In which countries can you pay using the West African CFA franc?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
148,Which holidays are celebrated around the world?,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
149,What is the longest river?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River .
} ORDER BY DESC(?length) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
150,Which organizations were founded in 1930?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1930""^^xsd:gYear .
  ?organization rdf:type dbo:Organisation .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
151,What is the birth name of Angela Merkel?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
152,Who has Tom Cruise been married to?,"SELECT ?name WHERE {
  dbr:Tom_Cruise dbo:spouse ?spouse.
  ?spouse rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
153,Which weapons did Heckler & Koch develop?,"SELECT ?weapon WHERE {
  ?weapon dbo:manufacturer dbr:Heckler_&_Koch .
  ?weapon rdf:type dbo:Weapon .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
154,What is the smallest city by area in Germany?,"SELECT ?city WHERE {
  ?city dbo:country dbr:Germany .
  ?city dbo:areaTotal ?area .
} ORDER BY ASC(?area) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
155,What is the ruling party in Lisbon?,"SELECT ?party WHERE {
  dbr:Lisbon dbp:leaderParty ?party .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
156,How heavy is Jupiter's lightest moon?,"SELECT ?moon ?mass WHERE {
  ?moon dbo:satelliteOf dbr:Jupiter .
  ?moon dbo:mass ?mass .
} ORDER BY ASC(?mass) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
157,How many employees does IBM have?,"SELECT ?numberOfEmployees WHERE {
  dbr:IBM dbo:numberOfEmployees ?numberOfEmployees .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
158,List all episodes of the first season of the HBO television series The Sopranos!,"SELECT ?episode WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber 1 .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
159,What does ICRO stand for?,"SELECT ?description WHERE {
  dbr:ICRO dbo:abstract ?description .
  FILTER (lang(?description) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
160,Does the new Battlestar Galactica series have more episodes than the old one?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?oldSeriesEpisodes ?newSeriesEpisodes WHERE {
  ?oldSeries dbo:numberOfEpisodes ?oldSeriesEpisodes ;
             rdfs:label ""Battlestar Galactica (1978 TV series)""@en .
  ?newSeries dbo:numberOfEpisodes ?newSeriesEpisodes ;
             rdfs:label ""Battlestar Galactica (2004 TV series)""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
161,Give me all films produced by Hal Roach.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film WHERE {
  ?film dbo:producer dbr:Hal_Roach .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
162,Who played Agent Smith in Matrix?,"SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""The Matrix""@en .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = ""en"") .
  ?actor dbo:abstract ?abstract .
  FILTER (contains(?abstract, ""Agent Smith"")) .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
163,Which Greek parties are pro-European?,"SELECT ?party WHERE {
  ?party dbo:alliance <http://dbpedia.org/resource/Pro-European> ;
         dbo:country <http://dbpedia.org/resource/Greece> .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
164,Give me a list of all bandleaders that play trumpet.,"SELECT ?bandleader WHERE {
  ?bandleader dbo:instrument dbr:Trumpet .
  ?bandleader rdf:type dbo:MusicalArtist .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
165,What is the second highest mountain on Earth?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 2 OFFSET 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
166,Is Egypts largest city also its capital?,"SELECT ?answer 
WHERE { 
  { 
    SELECT ?capital 
    WHERE { 
      dbr:Egypt dbo:capital ?capital . 
    } 
  } 
  { 
    SELECT ?largestCity 
    WHERE { 
      dbr:Egypt dbo:largestCity ?largestCity . 
    } 
  } 
  BIND(IF(?capital = ?largestCity, ""Yes"", ""No"") AS ?answer) 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
167,Which rockets were launched from Baikonur?,"SELECT ?rocket WHERE {
  ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
168,How many programming languages are there?,"SELECT (COUNT(?lang) AS ?count) WHERE {
  ?lang rdf:type dbo:ProgrammingLanguage .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
169,Which Chess players died in the same place they were born in?,"SELECT ?player WHERE {
  ?player dbo:birthPlace ?place .
  ?player dbo:deathPlace ?place .
  ?player rdf:type dbo:ChessPlayer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
170,Who is the owner of Facebook?,"SELECT ?owner WHERE {
  dbr:Facebook dbo:foundedBy ?owner .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
171,Give me all movies with Tom Cruise.,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdf:type dbo:Film.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
172,In which U.S. state is Fort Knox located?,"SELECT ?state WHERE {
  dbr:Fort_Knox dbo:location ?state .
  ?state rdf:type dbo:Place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"SELECT ?city WHERE {
  ?city rdf:type dbo:City ;
        dbo:isPartOf dbr:New_Jersey ;
        dbo:populationTotal ?population .
  FILTER (?population > 100000)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
174,Which mountains are higher than the Nanga Parbat?,"SELECT ?mountain WHERE {
  ?mountain dbo:elevation ?elevation .
  dbr:Nanga_Parbat dbo:elevation ?nangaParbatElevation .
  FILTER(?elevation > ?nangaParbatElevation)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
175,Give me all B-sides of the Ramones.,"SELECT ?bSide WHERE {
  ?song dbo:artist dbr:Ramones .
  ?song dbo:bSide ?bSide .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
176,What are the specialities of the UNC Health Care?,"SELECT ?speciality WHERE {
  dbr:UNC_Health_Care dbp:speciality ?speciality .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
177,When was Olof Palme shot?,"SELECT ?date WHERE {
  dbr:Olof_Palme dbo:deathDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
178,List the seven kings of Rome.,"SELECT ?king WHERE {
  ?king dbo:wikiPageRedirects dbr:King_of_Rome .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
179,Give me all people that were born in Vienna and died in Berlin.,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Vienna .
  ?person dbo:deathPlace dbr:Berlin .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
180,Is Darth Vader Luke’s father?,"SELECT ?answer 
WHERE { 
  dbr:Darth_Vader dbo:child ?answer . 
  FILTER (?answer = dbr:Luke_Skywalker) 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
181,Show me all the breweries in Australia.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?brewery
WHERE {
  ?brewery dbo:location dbr:Australia .
  ?brewery rdf:type dbo:Brewery .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?film WHERE {
  ?film dbo:director dbr:Steven_Spielberg .
  ?film dbo:budget ?budget .
  FILTER (?budget >= 80000000^^xsd:double)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
183,Give me all soccer clubs in Spain.,"SELECT ?club WHERE {
  ?club dbo:ground/dbo:country dbr:Spain .
  ?club rdf:type dbo:SoccerClub .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
184,Who produced films starring Natalie Portman?,"SELECT DISTINCT ?producer WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
185,Give me all breeds of the German Shepherd dog.,"SELECT ?breed WHERE {
  dbr:German_Shepherd dbo:breed ?breed .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight WHERE {
  ?team dbo:abstract ?abstract .
  FILTER (lang(?abstract) = 'en') .
  FILTER regex(?abstract, ""Chicago Bulls"") .
  ?player dbo:team ?team .
  ?player dbo:weight ?weight .
} ORDER BY DESC(?weight) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
187,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
188,What is the largest country in the world?,"SELECT ?country WHERE {
  ?country rdf:type dbo:Country .
} ORDER BY DESC(?areaTotal) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
189,What is the largest city in america?,"SELECT ?city WHERE {
  dbr:United_States dbo:largestCity ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
190,Who was the pope that founded the Vatican Television?,"SELECT ?pope WHERE {
  ?tv dbo:foundedBy ?pope .
  ?tv foaf:name ""Vatican Television""@en .
  ?pope rdf:type dbo:Pope .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
191,Who discovered Ceres?,"SELECT ?person WHERE {
  dbr:Ceres_(dwarf_planet) dbo:discoverer ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
192,Who is the king of the Netherlands?,"SELECT ?person WHERE {
  ?person dbo:leaderTitle dbr:Monarchy_of_the_Netherlands .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
193,Is Cola a beverage?,"SELECT ?object WHERE { 
  dbr:Cola rdf:type ?object .
  FILTER (?object = dbo:Beverage) 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"SELECT ?almaMater WHERE {
  ?person dbo:almaMater ?almaMater .
  ?person foaf:name ""Angela Merkel""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
195,Who wrote the book Les Piliers de la terre?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Les Piliers de la terre""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
196,Which airports does Yeti Airlines serve?,"SELECT ?airport WHERE {
  dbr:Yeti_Airlines dbo:targetAirport ?airport .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
197,Where is the birthplace of Goethe?,"SELECT ?birthplace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"SELECT ?cubanMissileCrisisDate ?bayOfPigsInvasionDate WHERE {
  dbr:Cuban_Missile_Crisis dbo:startDate ?cubanMissileCrisisDate .
  dbr:Bay_of_Pigs_Invasion dbo:startDate ?bayOfPigsInvasionDate .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
199,Which ingredients do I need for carrot cake?,"SELECT ?ingredient WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
200,Who created Wikipedia?,"SELECT ?creator WHERE {
  dbr:Wikipedia dbo:author ?creator .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
201,What is the highest mountain in Saxony Germany?,"SELECT ?mountain WHERE {
  ?mountain dbo:location dbr:Saxony .
  ?mountain rdf:type dbo:Mountain .
} ORDER BY DESC(?elevation) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
202,Who is the current federal minister of finance in Germany?,"SELECT ?person WHERE {
  ?org dbo:leader ?person .
  ?org rdfs:label ""Federal Ministry of Finance""@en .
  ?org dbo:country dbr:Germany .
  FILTER NOT EXISTS { ?org dbo:leaderEnd ?end . FILTER (?end > ""2016-10-01""^^xsd:date) }
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
203,In which country is Mecca located?,"SELECT ?country WHERE {
  dbr:Mecca dbo:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor WHERE {
  ?show dbo:starring ?actor .
  ?show rdfs:label ""Breaking Bad""@en .
  ?actor rdfs:label ?actorLabel .
  FILTER (LANG(?actorLabel) = ""en"") .
  ?actor dbo:abstract ?abstract .
  FILTER (LANG(?abstract) = ""en"") .
  FILTER CONTAINS(?abstract, ""Gus Fring"") .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
205,In which country does the Nile start?,"SELECT ?country WHERE {
  dbr:Nile dbo:sourceCountry ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
206,In which state Penn State University is located?,"SELECT ?state WHERE {
  dbr:Pennsylvania_State_University dbo:state ?state .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
207,What is the biggest stadium in Spain?,"SELECT ?stadium WHERE {
  ?stadium dbo:location dbr:Spain ;
           rdf:type dbo:Stadium ;
           dbo:seatingCapacity ?capacity .
} ORDER BY DESC(?capacity) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach
WHERE {
  ?team dbo:location dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
209,How large is the area of UK?,"SELECT ?area WHERE {
  dbr:United_Kingdom dbo:areaTotal ?area .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
210,Who created Batman?,"SELECT ?creator WHERE {
  dbr:Batman dbo:creator ?creator .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
211,Was Sigmund Freud married?,"SELECT ?spouse WHERE {
  dbr:Sigmund_Freud dbo:spouse ?spouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
212,Who are the developers of DBpedia?,"SELECT ?developer WHERE {
  dbr:DBpedia dbo:developer ?developer
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
213,Give me all movies directed by Francis Ford Coppola.,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
214,Are tree frogs a type of amphibian?,"SELECT ?answer 
WHERE {
  dbr:Tree_frog rdf:type ?answer .
  FILTER (?answer = dbo:Amphibian)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
215,What is the location of the Houses of Parliament?,"SELECT ?location WHERE {
  dbr:Palace_of_Westminster dbo:location ?location .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
216,how much is the elevation of Düsseldorf Airport ?,"SELECT ?elevation WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
217,How much is the population of mexico city ?,"SELECT ?population WHERE {
  dbr:Mexico_City dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
218,when was the founding date of french fifth republic?,"SELECT ?foundingDate WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?foundingDate .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
219,Who was the first King of England?,"SELECT ?person WHERE {
  ?person dbo:successor ?successor .
  ?person dbo:title ?title .
  FILTER NOT EXISTS { ?person dbo:predecessor ?predecessor } .
  ?title rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER regex(?label, ""King of England"") .
} LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
220,Who is the editor of Forbes?,"SELECT ?editor WHERE {
  dbr:Forbes dbo:editor ?editor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
221,Which awards did Douglas Hofstadter win?,"SELECT ?award WHERE {
  dbr:Douglas_Hofstadter dbo:award ?award .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
222,Who is the youngest Darts player?,"SELECT ?player WHERE {
  ?player rdf:type dbo:DartsPlayer .
  ?player dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
223,Is horse racing a sport?,"SELECT ?object WHERE { 
  dbr:Horse_racing rdf:type ?object .
  FILTER (?object = dbo:Sport) 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
225,How many people live in Poland?,"SELECT ?population WHERE {
  dbr:Poland dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
226,When was the last episode of the TV series Friends aired?,"SELECT ?date WHERE {
  dbr:Friends dbo:finalBroadcast ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
227,Is the wife of president Obama called Michelle?,"SELECT ?answer 
WHERE { 
  dbr:Barack_Obama dbo:spouse ?answer .
  FILTER (str(?answer) = ""Michelle Obama"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
229,Who is 8th president of US?,"SELECT ?president WHERE {
  ?president dbo:orderInOffice 8 .
  ?president rdf:type dbo:President .
  ?president dbo:country dbr:United_States .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
230,how much is the total population of  european union?,"SELECT ?population WHERE {
  dbr:European_Union dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
231,Give me all launch pads operated by NASA.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?launchPad
WHERE {
  ?launchPad dbo:operator <http://dbpedia.org/resource/NASA> .
  ?launchPad a dbo:LaunchPad .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
232,Who developed the video game World of Warcraft?,"SELECT ?developer WHERE {
  dbr:World_of_Warcraft dbo:developer ?developer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
233,What is the birth name of Adele?,"SELECT ?birthName WHERE {
  dbr:Adele dbo:birthName ?birthName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
234,What is the population of Cairo?,"SELECT ?population WHERE {
  dbr:Cairo dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
235,Is Frank Herbert still alive?,"SELECT ?deathDate WHERE {
  dbr:Frank_Herbert dbo:deathDate ?deathDate.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
236,What is the last work of Dan Brown?,"SELECT ?work ?date WHERE {
  ?person foaf:name ""Dan Brown""@en.
  ?work dbo:author ?person.
  ?work dbo:publicationDate ?date.
} ORDER BY DESC(?date) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
237,Where is Sungkyunkwan University?,"SELECT ?location WHERE {
  dbr:Sungkyunkwan_University dbo:location ?location .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
238,Who is the author of the interpretation of dreams?,"SELECT ?author WHERE {
  dbr:The_Interpretation_of_Dreams dbo:author ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
239,When was the death  of  Shakespeare?,"SELECT ?deathDate WHERE {
  dbr:William_Shakespeare dbo:deathDate ?deathDate .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
241,Who developed Slack?,"SELECT ?company WHERE {
  ?software dbo:wikiPageRedirects <http://dbpedia.org/resource/Slack_(software)> .
  ?company dbo:product ?software .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
242,Where is the origin of Carolina reaper?,"SELECT ?origin WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
243,In which year was Rachel Stevens born?,"SELECT ?birthYear WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
244,How often did Jane Fonda marry?,"SELECT (COUNT(?spouse) as ?count) WHERE {
  dbr:Jane_Fonda dbo:spouse ?spouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
245,Was the wife of president Lincoln called Mary?,"SELECT ?answer 
WHERE 
{
  dbr:Abraham_Lincoln dbo:spouse ?spouse .
  ?spouse rdfs:label ?answer .
  FILTER (lang(?answer) = 'en')
  FILTER regex(?answer, ""Mary"", ""i"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
246,Which cities does the Weser flow through?,"SELECT ?city WHERE {
  dbr:Weser dbo:city ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
247,In which programming language is GIMP written?,"SELECT ?programmingLanguage WHERE {
  dbr:GIMP dbo:programmingLanguage ?programmingLanguage .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
248,Which university did Angela Merkel attend?,"SELECT ?university WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
249,List all the musicals with music by Elton John.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
250,How many Aldi stores are there?,"SELECT ?numberOfLocations WHERE {
  dbr:Aldi dbo:numberOfLocations ?numberOfLocations .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
251,What is the longest river in the world?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
252,When was John Adams born?,"SELECT ?birthDate WHERE {
  dbr:John_Adams dbo:birthDate ?birthDate .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
253,Which companies produce hovercrafts?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Hovercraft
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
254,Who was the wife of U.S. president Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
255,Which species does an elephant belong?,"SELECT ?species WHERE {
  dbr:Elephant dbo:species ?species .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
256,How many people live in the capital of Australia?,"SELECT ?population WHERE {
  dbr:Australia dbo:capital ?capital .
  ?capital dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
257,In which ancient empire could you pay with cocoa beans?,"SELECT ?empire WHERE {
  ?empire dbo:currency dbr:Cocoa_bean .
  ?empire dbo:era dbr:Ancient_history .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
258,How many theories did Albert Einstein come up with?,"SELECT (COUNT(?theory) AS ?count) WHERE {
  dbr:Albert_Einstein dbo:knownFor ?theory .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
259,Who composed the soundtrack for Cameron's Titanic?,"SELECT ?composer WHERE {
  dbr:Titanic_(1997_film) dbo:musicComposer ?composer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
260,Give me the runtime of Toy Story.,"SELECT ?runtime WHERE {
  dbr:Toy_Story dbo:runtime ?runtime .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
262,With how many countries Iran has borders?,"SELECT (COUNT(?country) AS ?count) WHERE {
  dbr:Iran dbo:border ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
263,Which electronics companies were founded in Beijing?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Electronics .
  ?company dbo:foundationPlace dbr:Beijing .
  ?company rdf:type dbo:Company .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
264,Who was the successor of John F. Kennedy?,"SELECT ?successor WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
265,Who is the mayor of Paris?,"SELECT ?person WHERE {
  dbr:Paris dbo:mayor ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
266,Did Arnold Schwarzenegger attend a university?,"SELECT ?university WHERE {
  dbr:Arnold_Schwarzenegger dbo:almaMater ?university .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
267,Is James Bond married?,"SELECT ?spouse
WHERE {
  dbr:James_Bond dbo:spouse ?spouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
268,Does the Isar flow into a lake?,"SELECT ?lake WHERE {
  dbr:Isar dbo:inflow ?lake .
  ?lake rdf:type dbo:Lake .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
269,Which Indian company has the most employees?,"SELECT ?company WHERE {
  ?company dbo:locationCountry dbr:India ;
           dbo:numberOfEmployees ?employees .
} ORDER BY DESC(?employees) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
270,Who was John F. Kennedy's vice president?,"SELECT ?vicePresident WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
271,Which country does the creator of Miffy come from?,"SELECT ?country WHERE {
  ?miffy dbo:creator ?creator .
  ?miffy rdfs:label ""Miffy""@en .
  ?creator dbo:birthPlace ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
273,In what city is the Heineken brewery?,"SELECT ?city WHERE {
  dbr:Heineken dbo:locationCity ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
274,Is Barack Obama a democrat?,"SELECT ?party WHERE {
  dbr:Barack_Obama dbo:party ?party .
  FILTER (str(?party) = ""http://dbpedia.org/resource/Democratic_Party_(United_States)"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
275,List the children of Margaret Thatcher.,"SELECT ?child WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
276,From which region is the Melon de Bourgogne?,"SELECT ?region WHERE {
  dbr:Melon_de_Bourgogne dbo:wineRegion ?region .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
278,how big is the total area of North Rhine- Westphalia?,"SELECT ?area WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?area .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
279,Which city has the most inhabitants?,"SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
280,What is Donald Trump's main business?,"SELECT ?mainBusiness WHERE {
  dbr:Donald_Trump dbo:owner ?mainBusiness .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
281,When will start the final match of the football world cup 2018?,"SELECT ?date WHERE {
  dbr:2018_FIFA_World_Cup_Final dbo:startTime ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
282,Which films did Stanley Kubrick direct?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
283,how much is the population  Iraq?,"SELECT ?population WHERE {
  dbr:Iraq dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population WHERE {
  dbr:Canada dbo:largestCity ?city .
  ?city dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
285,Who is the mayor of the capital of French Polynesia?,"SELECT ?person WHERE {
  ?country dbo:officialName ""French Polynesia""@en .
  ?country dbo:capital ?city .
  ?city dbo:mayor ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
286,Give me all actors starring in movies directed by William Shatner.,"SELECT ?actor WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
287,How tall is Claudia Schiffer?,"SELECT ?height WHERE {
  dbr:Claudia_Schiffer dbo:height ?height .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
288,how much is the population densty rank of germany?,"SELECT ?populationDensityRank WHERE {
  dbr:Germany dbp:populationDensityRank ?populationDensityRank .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
289,What is the highest mountain in Italy?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:location dbr:Italy ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
290,List all games by GMT.,"SELECT ?game WHERE {
  ?game dbo:publisher <http://dbpedia.org/resource/GMT_Games> .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
291,What is the official language of Suriname?,"SELECT ?officialLanguage WHERE {
  dbr:Suriname dbo:officialLanguage ?officialLanguage .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
292,In which city did Nikos Kazantzakis die?,"SELECT ?city WHERE {
  dbr:Nikos_Kazantzakis dbo:deathPlace ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
293,What is in a chocolate chip cookie?,"SELECT ?ingredient WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
294,In which country is the Limerick Lake?,"SELECT ?country WHERE {
  dbr:Limerick_Lake dbo:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
295,Give me all video games published by Mean Hamster Software.,"SELECT ?game WHERE {
  ?game dbo:publisher <http://dbpedia.org/resource/Mean_Hamster_Software> .
  ?game rdf:type dbo:VideoGame .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
296,Give me all members of Prodigy.,"SELECT ?member WHERE {
  dbr:The_Prodigy dbo:bandMember ?member .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
297,In which time zone is Rome?,"SELECT ?timeZone WHERE {
  dbr:Rome dbo:timeZone ?timeZone .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
298,How high is the lighthouse in Colombo?,"SELECT ?height WHERE {
  ?lighthouse dbo:location dbr:Colombo .
  ?lighthouse dbo:height ?height .
  ?lighthouse rdf:type dbo:Lighthouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
299,Who are the writers of the Wall album of Pink Floyd?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  dbr:The_Wall dbp:writer ?writer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
300,Who is the mayor of Rotterdam?,"SELECT ?mayor WHERE {
  dbr:Rotterdam dbo:leaderName ?mayor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
301,What is the largest city in Australia?,"SELECT ?city WHERE {
  dbr:Australia dbo:largestCity ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
302,Who was married to president Chirac?,"SELECT ?spouse
WHERE {
  dbr:Jacques_Chirac dbo:spouse ?spouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
303,What form of government is found in South Africa?,"SELECT ?governmentType WHERE {
  dbr:South_Africa dbo:governmentType ?governmentType .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
304,How high is the Yokohama Marine Tower?,"SELECT ?height WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
305,Which holidays are celebrated around the world? test2,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
306,Who is the tallest basketball player?,"SELECT ?player ?height
WHERE {
  ?player dbo:height ?height;
          rdf:type dbo:BasketballPlayer.
}
ORDER BY DESC(?height)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
307,How many languages are spoken in Turkmenistan?,"SELECT (COUNT(?language) AS ?count) WHERE {
  dbr:Turkmenistan dbo:language ?language .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
308,Did Che Guevara have children?,"SELECT ?child WHERE {
  dbr:Che_Guevara dbo:child ?child .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"SELECT ?year WHERE {
  ?person dbo:wikiPageID ?id .
  ?person rdfs:label ""Aki Kaurismäki""@en .
  ?award dbo:wikiPageID ?awardID .
  ?award rdfs:label ""Grand Prix (Cannes Film Festival)""@en .
  ?event dbo:award ?award .
  ?event dbo:time ?year .
  ?event dbo:winner ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
310,To which party does the mayor of Paris belong?,"SELECT ?party WHERE {
  dbr:Paris dbo:mayor ?mayor.
  ?mayor dbo:party ?party.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver WHERE {
  ?driver dbo:wikiPageRedirects dbr:List_of_Formula_One_Grand_Prix_winners .
  ?driver dbo:races ?races .
} ORDER BY DESC(?races) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
312,What country is Sitecore from?,"SELECT ?country WHERE {
  dbr:Sitecore dbo:location ?location .
  ?location dbo:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
314,Is Christian Bale starring in Velvet Goldmine?,"SELECT DISTINCT ?film WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Christian_Bale> .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Velvet_Goldmine"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_Bono, dbr:Cher.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
316,How many ethnic groups live in Slovenia?,"SELECT (COUNT(?ethnicGroup) AS ?count) WHERE {
  dbr:Slovenia dbo:ethnicGroup ?ethnicGroup .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
317,What is the capital of Cameroon?,"SELECT ?capital WHERE {
  dbr:Cameroon dbo:capital ?capital .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
318,Was Natalie Portman born in the United States?,"SELECT ?answer 
WHERE {
  dbr:Natalie_Portman dbo:birthPlace ?place .
  ?place rdfs:label ?answer .
  FILTER (lang(?answer) = 'en')
  FILTER CONTAINS(?answer, ""United States"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
319,How many pages does War and Peace have?,"SELECT ?numberOfPages WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?numberOfPages .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
320,Who is the oldest child of Meryl Streep?,"SELECT ?child WHERE {
  dbr:Meryl_Streep dbo:child ?child .
} ORDER BY ASC(?child) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
321,Which television shows were created by Walt Disney?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
322,What does IYCM stand for?,"SELECT ?meaning 
WHERE { 
  ?s dbo:abbreviation ""IYCM"" . 
  ?s rdfs:label ?meaning 
} 
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
323,Which types of grapes grow in Oregon?,"SELECT ?grape WHERE {
  ?region dbo:isPartOf dbr:Oregon .
  ?region dbo:growingGrape ?grape .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
324,Was U.S. president Jackson involved in a war?,"SELECT ?war WHERE {
  dbr:Andrew_Jackson dbo:battle ?war .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
325,When was the Titanic completed?,"SELECT ?date WHERE {
  dbr:RMS_Titanic dbo:completionDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
326,Did Tesla win a nobel prize in physics?,"SELECT ?award
WHERE {
  dbr:Nikola_Tesla dbo:award ?award .
  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en')
  FILTER CONTAINS(?awardLabel, ""Nobel Prize in Physics"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
327,How many states are in Mexico?,"SELECT (count(?state) as ?count) WHERE {
  ?state dbo:country dbr:Mexico .
  ?state rdf:type dbo:AdministrativeRegion .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project .
  ?scientist dbo:award dbr:Nobel_Peace_Prize .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
329,How much did the Lego Movie cost?,"SELECT ?budget WHERE {
  dbr:The_Lego_Movie dbo:budget ?budget .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
330,Who composed the music for Harold and Maude?,"SELECT ?composer WHERE {
  dbr:Harold_and_Maude dbo:musicComposer ?composer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
331,List all episodes of the first season of the HBO television series The Sopranos.,"SELECT ?episode WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber 1 .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
332,Which city has the least inhabitants?,"SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
333,Where is Syngman Rhee buried?,"SELECT ?place WHERE {
  dbr:Syngman_Rhee dbo:restingPlace ?place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
334,Does Neymar play for Real Madrid?,"SELECT ?answer 
WHERE {
  dbr:Neymar dbo:team ?answer .
  FILTER (?answer = dbr:Real_Madrid_C.F.)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
335,Who wrote the book The Pillars of the Earth?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
336,Do Prince Harry and Prince William have the same parents?,"SELECT ?parent WHERE {
  { dbr:Prince_William,_Duke_of_Cambridge dbo:parent ?parent . }
  UNION
  { dbr:Prince_Harry,_Duke_of_Sussex dbo:parent ?parent . }
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?doctoralSupervisor WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?doctoralSupervisor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
338,Does Breaking Bad have more episodes than Game of Thrones?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes WHERE {
  ?bb dbo:wikiPageID ?bbID .
  ?bb rdfs:label ""Breaking Bad""@en .
  ?bb dbo:numberOfEpisodes ?breakingBadEpisodes .
  
  ?got dbo:wikiPageID ?gotID .
  ?got rdfs:label ""Game of Thrones""@en .
  ?got dbo:numberOfEpisodes ?gameOfThronesEpisodes .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
339,Who was Vincent van Gogh inspired by?,"SELECT ?person WHERE {
  ?person dbo:influenced dbr:Vincent_van_Gogh.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building ?floors WHERE {
  ?building dbo:floorCount ?floors .
  FILTER (?floors < (SELECT ?burj_floors WHERE {
    dbr:Burj_Khalifa dbo:floorCount ?burj_floors
  }))
} ORDER BY DESC(?floors) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
341,What was the final result of the War of the Roses?,"SELECT ?result WHERE {
  dbo:Wars_of_the_Roses dbo:result ?result .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
342,How much did Pulp Fiction cost?,"SELECT ?budget WHERE {
  dbr:Pulp_Fiction dbo:budget ?budget .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
343,Is proinsulin a protein?,"SELECT ?answer 
WHERE {
  dbr:Proinsulin rdf:type ?answer .
  FILTER (?answer IN (dbo:Protein))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
344,Do Urdu and Persian have a common root?,"SELECT ?commonRoot WHERE {
  { dbo:Urdu dbo:languageFamily ?commonRoot . }
  UNION
  { dbo:Persian dbo:languageFamily ?commonRoot . }
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
345,Who is starring in Spanish movies produced by Benicio del Toro?,"SELECT ?star WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:producer dbr:Benicio_del_Toro .
  ?movie dbo:starring ?star .
  ?movie dbo:country dbr:Spain .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?isBigger
WHERE {
  {
    SELECT (SUM(?baikalArea) AS ?totalBaikalArea)
    WHERE {
      ?baikal rdfs:label ""Lake Baikal""@en .
      ?baikal dbo:areaTotal ?baikalArea .
    }
  }
  {
    SELECT (SUM(?bearArea) AS ?totalBearArea)
    WHERE {
      ?bear rdfs:label ""Great Bear Lake""@en .
      ?bear dbo:areaTotal ?bearArea .
    }
  }
  BIND(IF(?totalBaikalArea > ?totalBearArea, ""Yes"", ""No"") AS ?isBigger)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
347,Show me all books in Asimov's Foundation series.,"SELECT ?book WHERE {
  ?book dbo:series dbr:Foundation_series .
  ?book rdf:type dbo:Book .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
348,Where was Bach born?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
349,Which city has the oldest running metro?,"SELECT ?city WHERE {
  ?metro dbo:location ?city .
  ?metro dbo:openingYear ?year .
} ORDER BY ASC(?year) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
350,Who designed the Brooklyn Bridge?,"SELECT ?architect WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?architect .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
351,How many people live in Eurasia?,"SELECT (SUM(?population) as ?totalPopulation) WHERE {
  { 
    ?country dbo:continent dbr:Eurasia ;
             dbo:populationTotal ?population .
  } UNION {
    ?city dbo:isPartOf dbr:Eurasia ;
          dbo:populationTotal ?population .
  }
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host WHERE {
  dbr:BBC_Wildlife_Specials dbo:presenter ?host .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
353,"What is the total population of Melbourne, Florida?","SELECT ?population WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
354,What country is Mount Everest in?,"SELECT ?country WHERE {
  dbr:Mount_Everest dbo:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
355,To which artistic movement did the painter of The Three Dancers belong?,"SELECT ?movement WHERE {
  ?work dbo:title ""The Three Dancers""@en .
  ?work dbo:author ?author .
  ?author dbo:movement ?movement .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
356,When did Operation Overlord commence?,"SELECT ?date WHERE {
  dbr:Operation_Overlord dbo:date ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
357,What is the bridge with the longest span?,"SELECT ?bridge WHERE {
  ?bridge rdf:type dbo:Bridge .
  ?bridge dbo:mainspan ?span .
} ORDER BY DESC(?span) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
358,Is there a video game called Battle Chess?,"SELECT ?game WHERE {
  ?game rdf:type dbo:VideoGame .
  ?game rdfs:label ""Battle Chess""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
359,Who was buried in the Great Pyramid of Giza?,"SELECT ?person WHERE {
  ?person dbo:restingPlace dbr:Great_Pyramid_of_Giza.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"SELECT ?plant WHERE {
  dbr:Ford_Motor_Company dbo:location ?plant .
  ?plant dbo:country dbr:Malaysia .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
361,Did Socrates influence Aristotle?,"SELECT ?answer 
WHERE { 
  dbr:Aristotle dbo:influencedBy ?answer . 
  FILTER (?answer = dbr:Socrates) 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
362,How many children did Benjamin Franklin have?,"SELECT (COUNT(?child) AS ?count) WHERE {
  dbr:Benjamin_Franklin dbo:child ?child .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
363,How tall is Michael Jordan?,"SELECT ?height WHERE {
  dbr:Michael_Jordan dbo:height ?height .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
364,In which UK city are the headquarters of the MI6?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  dbr:Secret_Intelligence_Service dbo:headquarter ?city .
  ?city dbo:country dbr:United_Kingdom .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
365,Who created Family Guy?,"SELECT ?creator WHERE {
  dbr:Family_Guy dbo:creator ?creator .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
366,In which city does the Chile Route 68 end?,"SELECT ?city WHERE {
  dbr:Chile_Route_68 dbo:routeEnd ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
368,When did the Ming dynasty dissolve?,"SELECT ?date WHERE {
  dbr:Ming_dynasty dbo:dissolutionDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
369,In which military conflicts did Lawrence of Arabia participate?,"SELECT ?conflict WHERE {
  dbr:Lawrence_of_Arabia dbo:battle ?conflict .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
370,What is the timezone in San Pedro de Atacama?,"SELECT ?timezone WHERE {
  dbr:San_Pedro_de_Atacama dbo:timeZone ?timezone .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
371,Give me all books by William Goldman with more than 300 pages.,"SELECT ?book WHERE {
  ?book dbo:author ?author .
  ?author foaf:name ""William Goldman""@en .
  ?book dbo:numberOfPages ?pages .
  FILTER(?pages > 300)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
372,What did Bruce Carver die from?,"SELECT ?causeOfDeath WHERE {
  dbr:Bruce_Carver dbo:deathCause ?causeOfDeath .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"SELECT ?airline WHERE {
  ?airline dbo:parentCompany dbr:Lufthansa .
  ?airline dbo:targetAirport dbr:Dortmund_Airport .
  ?airline dbo:targetAirport dbr:Berlin_Tegel_Airport .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
374,Does Abraham Lincoln's death place have a website?,"SELECT ?website WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace .
  ?deathPlace foaf:homepage ?website .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
375,Did Elvis Presley have children?,"SELECT ?child WHERE {
  dbr:Elvis_Presley dbo:child ?child .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
376,Is Michelle Obama the wife of Barack Obama?,"SELECT ?answer 
WHERE {
  dbr:Barack_Obama dbo:spouse ?answer .
  FILTER (?answer = dbr:Michelle_Obama)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
377,In which city does Sylvester Stallone live?,"SELECT ?city WHERE {
  dbr:Sylvester_Stallone dbo:residence ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
378,Which books by Kerouac were published by Viking Press?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Jack_Kerouac .
  ?book dbo:publisher dbr:Viking_Press .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
379,Who wrote the song Hotel California?,"SELECT ?writer WHERE {
  dbr:Hotel_California dbo:writer ?writer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
380,What is the capital of Canada?,"SELECT ?capital WHERE {
  dbr:Canada dbo:capital ?capital .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
381,Who is the mayor of Tel Aviv?,"SELECT ?mayor WHERE {
  dbr:Tel_Aviv dbo:leaderName ?mayor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
382,What form of government does Russia have?,"SELECT ?governmentType WHERE {
  dbr:Russia dbo:governmentType ?governmentType .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Muhammad_Ali .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
384,Who was the first to climb Mount Everest?,"SELECT ?person WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
385,How many languages are spoken in Colombia?,"SELECT (COUNT(?language) AS ?count) WHERE {
  dbr:Colombia dbo:officialLanguage ?language .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
386,What is the currency of the Czech Republic?,"SELECT ?currency WHERE {
  dbr:Czech_Republic dbo:currency ?currency .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
387,Where in France is sparkling wine produced?,"SELECT ?location WHERE {
  ?company dbo:location ?location .
  ?company dbo:country dbr:France .
  ?company dbo:wineProduced dbr:Sparkling_wine .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
388,When did Boris Becker end his active career?,"SELECT ?date WHERE {
  dbr:Boris_Becker dbo:activeYearsEndDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke .
  ?movie dbo:director dbr:Guy_Ritchie .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT ?film WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Julia_Roberts> .
  ?film dbo:starring <http://dbpedia.org/resource/Richard_Gere> .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
391,Show me Hemingway's autobiography.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Ernest_Hemingway .
  ?book rdf:type dbo:Book .
  ?book dbo:literaryGenre dbr:Autobiography .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
392,How tall is Amazon Eve?,"SELECT ?height WHERE {
  dbr:Amazon_Eve dbo:height ?height .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
393,What are the five boroughs of New York?,"SELECT ?borough WHERE {
  dbr:New_York_City dbo:borough ?borough .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
394,Give me all Canadian Grunge record labels.,"SELECT ?label WHERE {
  ?label rdf:type dbo:RecordLabel .
  ?label dbo:location dbr:Canada .
  ?artist dbo:recordLabel ?label .
  ?artist dbo:genre dbr:Grunge_music .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
395,In which country does the Ganges start?,"SELECT ?country WHERE {
  dbr:Ganges dbo:sourceCountry ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
396,Who is the founder of Penguin Books?,"SELECT ?founder WHERE {
  dbr:Penguin_Books dbo:founder ?founder .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
397,Who wrote the Game of Thrones theme?,"SELECT ?person WHERE {
  dbr:Game_of_Thrones dbo:composer ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
398,Who is the president of Eritrea?,"SELECT ?president WHERE {
  dbr:Eritrea dbo:leader ?president .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
399,In which city did John F. Kennedy die?,"SELECT ?city WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?city .
  ?city rdf:type dbo:City .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
400,What is the highest mountain in Australia?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:location dbr:Australia ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
401,Who writes the Farmers' Almanac?,"SELECT ?person WHERE {
  dbr:Farmers'_Almanac dbp:editor ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
402,Give me the currency of China.,"SELECT ?currency WHERE {
  dbr:China dbo:currency ?currency .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
403,Give me all Swedish oceanographers.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Oceanography .
  ?person dbo:birthPlace dbr:Sweden .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
404,In which city are the headquarters of the United Nations?,"SELECT ?city WHERE {
  dbr:United_Nations dbo:headquarter ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
405,Is Rita Wilson the wife of Tom Hanks?,"SELECT ?answer 
WHERE {
  dbr:Tom_Hanks dbo:spouse ?answer .
  FILTER (?answer = dbr:Rita_Wilson)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
406,In which countries do people speak Japanese?,"SELECT ?country WHERE {
  ?country dbo:officialLanguage dbr:Japanese .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget WHERE {
  ?film dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
} ORDER BY DESC(?budget) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
408,Which museum in New York has the most visitors?,"SELECT ?museum WHERE {
  ?museum dbo:location dbr:New_York_City .
  ?museum dbo:numberOfVisitors ?visitors .
} ORDER BY DESC(?visitors) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
409,What was the first Queen album?,"SELECT ?album WHERE {
  ?album dbo:artist dbr:Queen_(band) .
  ?album dbo:releaseDate ?date .
} ORDER BY ?date LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?firstName WHERE {
  dbr:Queens_of_the_Stone_Age dbo:alias ?firstName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
411,What was the last movie with Alec Guinness?,"SELECT ?movie ?date WHERE {
  ?movie dbo:starring dbr:Alec_Guinness .
  ?movie dbo:releaseDate ?date .
} ORDER BY DESC(?date) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
412,Give me all actors starring in Last Action Hero.,"SELECT ?actor WHERE {
  dbr:Last_Action_Hero dbo:starring ?actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
413,Who discovered Pluto?,"SELECT ?person WHERE {
  dbr:Pluto dbo:discoverer ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
1,List all boardgames by GMT.,"SELECT ?boardgame WHERE {
  ?boardgame dbo:publisher <http://dbpedia.org/resource/GMT_Games> .
  ?boardgame rdf:type dbo:BoardGame .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
2,Who developed Skype?,"SELECT ?developer WHERE {
  dbr:Skype dbo:developer ?developer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
3,Which people were born in Heraklion?,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person rdf:type dbo:Person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
4,In which U.S. state is Area 51 located?,"SELECT ?state WHERE {
  dbr:Area_51 dbo:location ?state .
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
5,Who is the mayor of New York City?,"SELECT ?person WHERE {
  dbr:New_York_City dbo:leaderName ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
6,Which countries have places with more than two caves?,"SELECT ?country WHERE {
  {
    SELECT ?country (COUNT(?cave) AS ?caveCount) WHERE {
      ?cave a dbo:Cave .
      ?cave dbo:location ?place .
      ?place dbo:country ?country .
    }
    GROUP BY ?country
  }
  FILTER(?caveCount > 2)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
7,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
8,Which airports does Air China serve?,"SELECT ?airport WHERE {
  dbr:Air_China dbo:targetAirport ?airport .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
9,Give me all actors starring in movies directed by and starring William Shatner.,"SELECT DISTINCT ?actor WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
  FILTER (?actor != dbr:William_Shatner)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
10,What are the official languages of the Philippines?,"SELECT ?language WHERE {
  dbr:Philippines dbo:officialLanguage ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
11,Give me all Danish films.,"SELECT ?film WHERE {
  ?film rdf:type dbo:Film .
  ?film dbo:country dbr:Denmark .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Brad_Pitt .
  ?movie dbo:director dbr:Guy_Ritchie .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
13,Give me the grandchildren of Bruce Lee.,"SELECT ?grandchild WHERE {
  ?person dbo:birthName ""Bruce Lee""@en.
  ?person dbo:child ?child.
  ?child dbo:child ?grandchild.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
14,Which other weapons did the designer of the Uzi develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?weapon
WHERE {
  dbr:Uzi dbp:designer ?designer.
  ?weapon dbo:designer ?designer.
  FILTER (?weapon != dbr:Uzi)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
15,Who is the owner of Universal Studios?,"SELECT ?owner WHERE {
  dbr:Universal_Studios dbo:owner ?owner .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
16,Which state of the USA has the highest population density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:isPartOf dbr:United_States .
  ?state dbp:populationDensity ?density .
} ORDER BY DESC(?density) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
17,Which monarchs were married to a German?,"SELECT ?monarch WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch rdf:type dbo:Monarch .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
18,Which organizations were founded in 1950?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1950""^^xsd:gYear .
  ?organization rdf:type dbo:Organisation .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
19,Who created the comic Captain America?,"SELECT ?creator WHERE {
  dbr:Captain_America dbo:creator ?creator .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
20,Give me the Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dbo:mission dbr:Apollo_14 .
  ?astronaut rdf:type dbo:Astronaut .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
21,Who wrote the book The pillars of the Earth?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
22,Which state of the United States of America has the highest density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:isPartOf dbr:United_States .
  ?state dbp:density ?density .
} ORDER BY DESC(?density) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
23,Which spaceflights were launched from Baikonur?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spaceflight
WHERE {
  ?spaceflight dbo:launchPad dbr:Baikonur_Cosmodrome.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
24,Give me a list of all trumpet players that were bandleaders.,"SELECT ?person WHERE {
  ?person dbo:instrument dbr:Trumpet .
  ?person rdf:type dbo:BandLeader .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
25,Which U.S. states are in the same timezone as Utah?,"SELECT ?state WHERE {
  dbpedia:Utah dbpedia-owl:timeZone ?timezone .
  ?state a dbpedia-owl:Place ;
         dbpedia-owl:timeZone ?timezone .
  FILTER (?state != dbpedia:Utah)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
26,Which U.S. states possess gold minerals?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbp:mineral dbr:Gold .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
27,Who is the daughter of Ingrid Bergman married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?husband WHERE {
  res:Ingrid_Bergman dbo:child ?daughter .
  ?daughter dbo:spouse ?husband .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
28,How deep is Lake Placid?,"SELECT ?depth WHERE {
  dbr:Lake_Placid dbo:maximumDepth ?depth .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
29,Show me all museums in London.,"SELECT ?museum WHERE {
  ?museum dbo:location dbr:London .
  ?museum rdf:type dbo:Museum .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
30,Which caves have more than 3 entrances?,"SELECT ?cave WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbp:entranceCount ?entranceCount .
  FILTER(?entranceCount > 3)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
31,Who is the tallest player of the Atlanta Falcons?,"SELECT ?player WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Atlanta_Falcons> .
  ?player dbo:height ?height .
} ORDER BY DESC(?height) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
32,What are the top-10 action role-playing video games according to IGN?,"SELECT ?game WHERE {
  ?game rdf:type dbo:VideoGame ;
        dbo:genre dbr:Action_role-playing_game ;
        dbo:reviewScore ?score .
  ?review dbo:reviewOf ?game ;
          dbo:reviewer dbr:IGN .
} ORDER BY DESC(?score) LIMIT 10","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
33,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer WHERE {
  ?writer rdf:type dbo:Writer .
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
34,Show me all basketball players that are higher than 2 meters.,"SELECT ?player
WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
  FILTER (?height > 2)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
35,When was the Statue of Liberty built?,"SELECT ?date WHERE {
  dbr:Statue_of_Liberty dbo:completionDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
36,Which states border Illinois?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  dbr:Illinois dbp:borderingstates ?state .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
37,Who developed Minecraft?,"SELECT ?developer WHERE {
  dbr:Minecraft dbo:developer ?developer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
38,Where did Hillel Slovak die?,"SELECT ?place WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
39,What movies does Jesse Eisenberg play in?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
40,Give all swimmers that were born in Moscow.,"SELECT ?swimmer WHERE {
  ?swimmer dbo:birthPlace dbr:Moscow .
  ?swimmer rdf:type dbo:Swimmer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
41,Give me all cosmonauts.,"SELECT ?cosmonaut WHERE {
  ?cosmonaut dbo:occupation dbr:Cosmonaut .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
42,Give me all Swiss non-profit organizations.,"SELECT ?org WHERE {
  ?org dbo:location dbr:Switzerland .
  ?org rdf:type dbo:Non-ProfitOrganisation .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
43,Which presidents were born in 1945?,"SELECT ?president WHERE {
  ?president dbo:birthYear 1945 .
  ?president rdf:type dbo:President .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
44,What kind of music did Lou Reed play?,"SELECT ?genre WHERE {
  dbr:Lou_Reed dbo:genre ?genre .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
45,Where do the Red Sox play?,"SELECT ?place WHERE {
  dbr:Boston_Red_Sox dbp:ballpark ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
46,Show a list of soccer clubs that play in the Bundesliga.,"SELECT ?club WHERE {
  ?club dbo:league dbr:Bundesliga .
  ?club rdf:type dbo:SoccerClub .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
47,Which volcanos in Japan erupted since 2000?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?volcano WHERE {
  ?volcano dbo:locatedInArea <http://dbpedia.org/resource/Japan> .
  ?volcano dbo:eruptionYear ?year .
  FILTER (?year >= ""2000""^^xsd:gYear)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
48,Which bridges cross the Seine?,"SELECT ?bridge WHERE {
  ?bridge dbo:crosses dbr:Seine_River .
  ?bridge rdf:type dbo:Bridge .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
49,What is the official color of the University of Oxford?,"SELECT ?officialColor WHERE {
  dbr:University_of_Oxford dbo:officialSchoolColour ?officialColor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
50,How many films did Hal Roach produce?,"SELECT (COUNT(?film) AS ?count) WHERE {
  ?film dbo:producer dbr:Hal_Roach.
  ?film rdf:type dbo:Film.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
51,Give me all Danish movies.,"SELECT ?movie WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:country dbr:Denmark .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count) WHERE {
  ?person dbo:deathCause ?causeOfDeath .
} 
GROUP BY ?causeOfDeath 
ORDER BY DESC(?count) 
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
53,Who are the four youngest MVP basketball players?,"SELECT ?player ?birthDate
WHERE {
  ?player dbo:award dbr:Most_Valuable_Player_Award_(NBA).
  ?player dbo:birthDate ?birthDate.
}
ORDER BY DESC(?birthDate)
LIMIT 4","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
54,Give me all companies in Munich.,"SELECT ?company WHERE {
  ?company dbo:type dbr:Company .
  ?company dbo:location dbr:Munich .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
55,Give me the capitals of all countries that the Himalayas run through.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?country ?capital WHERE {
  ?mountain dbo:country ?country .
  ?country dbo:capital ?capital .
  FILTER (?mountain = dbr:Himalayas)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
56,How many movies did Park Chan-wook direct?,"SELECT (COUNT(?movie) as ?count) WHERE {
  ?movie dbo:director dbr:Park_Chan-wook .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
57,Which rivers flow into a German lake?,"SELECT ?river WHERE {
  ?lake dbo:country dbr:Germany .
  ?river dbo:inflow ?lake .
  ?river rdf:type dbo:River .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline rdf:type dbo:Airline .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
59,Give me all islands that belong to Japan.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island
WHERE {
  ?island dbo:country dbr:Japan .
  ?island a dbo:Island .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
60,How many inhabitants does Maribor have?,"SELECT ?population WHERE {
  dbr:Maribor dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
61,Give me all Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dbo:mission dbr:Apollo_14 .
  ?astronaut rdf:type dbo:Astronaut .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
62,Which companies have more than 1 million employees?,"SELECT ?company WHERE {
  ?company dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Garry_Marshall .
  ?film dbo:starring dbr:Julia_Roberts .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
64,Give me all soccer clubs in the Premier League.,"SELECT ?club WHERE {
  ?club dbo:league dbr:Premier_League .
  ?club rdf:type dbo:SoccerClub .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
65,What is the highest place of the Urals?,"SELECT ?place ?elevation 
WHERE {
  ?place dbo:location dbr:Urals .
  ?place dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
66,Who is the governor of Wyoming?,"SELECT ?person WHERE {
  ?place dbo:leaderTitle ""Governor"" .
  ?place rdfs:label ""Wyoming""@en .
  ?place dbo:leader ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
67,Where did the architect of the Eiffel Tower study?,"SELECT ?university WHERE {
  dbr:Eiffel_Tower dbo:architect ?architect .
  ?architect dbo:almaMater ?university .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
68,Give me all world heritage sites designated within the past two years.,"SELECT ?site WHERE {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dbo:yearOfInscription ?year .
  FILTER (?year > 2014)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
69,Give me all actors who were born in Paris after 1950.,"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor dbo:birthPlace dbr:Paris .
  ?actor dbo:birthDate ?date .
  FILTER (?date > ""1950-01-01""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
70,Which movies star both Liz Taylor and Richard Burton?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  ?movie dbo:starring dbr:Elizabeth_Taylor .
  ?movie dbo:starring dbr:Richard_Burton .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
71,Give me all Australian nonprofit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?organization
WHERE {
  ?organization rdf:type dbo:Non-ProfitOrganisation .
  ?organization dct:subject category:Australian_non-profit_organisations
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
72,Which pope succeeded John Paul II?,"SELECT ?pope WHERE {
  ?pope dbo:predecessor dbr:Pope_John_Paul_II .
  ?pope rdf:type dbo:Pope .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
73,Give me all ESA astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dbo:occupation dbr:Astronaut ;
             dct:subject dbc:European_Space_Agency_astronauts .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
74,Who was president of Pakistan in 1978?,"SELECT ?person WHERE {
  ?person dbo:office dbr:President_of_Pakistan .
  ?person dbo:termStart ?start .
  ?person dbo:termEnd ?end .
  FILTER (?start <= ""1978-01-01""^^xsd:date && ?end >= ""1978-12-31""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
75,Who is the owner of Rolls-Royce?,"SELECT ?owner WHERE {
  dbr:Rolls-Royce dbo:owner ?owner .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
76,How many museums does Paris have?,"SELECT (count(?museum) as ?count) WHERE {
  ?museum dbo:location dbr:Paris .
  ?museum rdf:type dbo:Museum .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
77,Where was JFK assassinated?,"SELECT ?place WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
78,Give me all federal chancellors of Germany.,"SELECT ?person WHERE {
  ?person dbo:office dbr:Chancellor_of_Germany .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
79,Show me everyone who was born on Halloween.,"SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (datatype(?date) = xsd:date && MONTH(?date) = 10 && DAY(?date) = 31)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
80,Which beer originated in Ireland?,"SELECT ?beer WHERE {
  ?beer rdf:type dbo:Beer ;
        dbo:origin dbr:Ireland .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
81,To which countries does the Himalayan mountain system extend?,"SELECT ?country WHERE {
  dbr:Himalayas dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
82,Which actors were born in Germany?,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Germany .
  ?actor rdf:type dbo:Actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
83,How much carbs does peanut butter have?,"SELECT ?carbs WHERE {
  dbr:Peanut_butter dbp:carbs ?carbs .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?count) WHERE {
  ?film dbo:producer ?producer .
} 
ORDER BY DESC(?count)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
85,How many employees does Google have?,"SELECT ?number_of_employees WHERE {
  dbr:Google dbo:numberOfEmployees ?number_of_employees .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
86,Give me all actors who were born in Berlin.,"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor dbo:birthPlace dbr:Berlin .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
87,Who created Goofy?,"SELECT ?creator WHERE {
  dbr:Goofy dbo:creator ?creator .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
88,Which music albums contain the song Last Christmas?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album WHERE {
  ?song dbo:album ?album .
  ?song rdfs:label ""Last Christmas""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
89,When was Alberta admitted as province?,"SELECT ?date WHERE {
  dbr:Alberta dbp:admittancedate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
90,How many missions does the Soyuz programme have?,"SELECT COUNT(?mission) WHERE {
  ?mission dbo:programme dbr:Soyuz_programme .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
91,Give me all the TV shows with Neil Patrick Harris.,"SELECT ?show WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris .
  ?show rdf:type dbo:TelevisionShow .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
92,When were the Hells Angels founded?,"SELECT ?date WHERE {
  dbr:Hells_Angels dbo:foundingDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
93,What is the net income of Apple?,"SELECT ?netIncome WHERE {
  dbr:Apple_Inc dbo:netIncome ?netIncome .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
94,Give me all Swedish holidays.,"SELECT ?holiday WHERE {
  ?holiday dbo:country dbr:Sweden .
  ?holiday rdf:type dbo:Holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
95,In which city was the former Dutch queen Juliana buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  res:Juliana_of_the_Netherlands dbp:burialPlace ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
96,List all the musicals with music by Leonard Bernstein.,"SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
97,Give me all companies in the advertising industry.,"SELECT ?company WHERE {
  ?company rdf:type dbo:Company .
  ?company dbo:industry dbr:Advertising .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
98,What is the largest metropolitan area in Washington state?,"SELECT ?city WHERE {
  ?city dbo:isPartOf dbr:Washington_(state) .
  ?city dbp:largestmetro ?metro .
} ORDER BY DESC(?metro) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
99,Who killed John Lennon?,"SELECT ?killer WHERE {
  dbr:John_Lennon dbo:deathCause ?death .
  ?death dbo:conviction ?killer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
100,Which writers studied in Istanbul?,"SELECT ?writer WHERE {
  ?writer rdf:type dbo:Writer .
  ?writer dbo:education ?institution .
  ?institution dbo:city dbr:Istanbul .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
101,Give me all Australian metalcore bands.,"SELECT ?band WHERE {
  ?band dbo:genre dbr:Metalcore .
  ?band dbo:origin dbr:Australia .
  ?band rdf:type dbo:Band .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
102,Which countries adopted the Euro?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
103,Give me all types of eating disorders.,"SELECT ?eatingDisorder WHERE {
  ?eatingDisorder dct:subject dbc:Eating_disorders.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
104,Was Marc Chagall a jew?,"SELECT ?answer 
WHERE { 
  dbr:Marc_Chagall dbo:ethnicity ?answer . 
  FILTER (str(?answer) = ""Jewish"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT ?rank WHERE {
  dbr:Brazil dbp:fifaMin ?rank .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
106,How many films did Leonardo DiCaprio star in?,"SELECT (COUNT(?film) as ?count) WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
107,Was Margaret Thatcher a chemist?,"SELECT ?answer 
WHERE {
  dbr:Margaret_Thatcher dbo:occupation ?occupation .
  ?occupation rdfs:label ?answer .
  FILTER (lang(?answer) = 'en' && regex(?answer, ""chemist"", ""i""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
108,Which U.S. states are in the same time zone as Utah?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?state WHERE {
  dbr:Utah dbp:timeZone ?utahTimeZone .
  ?state dbo:timeZone ?utahTimeZone .
  ?state dbo:country dbr:United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
109,Give me all books written by Danielle Steel.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
110,Which country has the most official languages?,"SELECT ?country (COUNT(?language) AS ?count) WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
}
ORDER BY DESC(?count)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
111,What is the total amount of men and women serving in the FDNY?,"SELECT ?total WHERE {
  dbr:New_York_City_Fire_Department dbp:employees ?total .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
112,Which actor played Chewbacca?,"SELECT ?actor WHERE {
  dbr:Chewbacca dbo:portrayer ?actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
113,Give me all libraries established earlier than 1400.,"SELECT ?library WHERE {
  ?library rdf:type dbo:Library .
  ?library dbo:foundingYear ?year .
  FILTER (?year < 1400)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
114,Which programming languages were influenced by Perl?,"SELECT ?programmingLanguage WHERE {
  ?programmingLanguage dbo:influencedBy dbr:Perl .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
115,In which U.S. state is Mount McKinley located?,"SELECT ?state WHERE {
  dbr:Denali dbo:location ?state .
  ?state rdf:type dbo:Place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
116,What airlines are part of the SkyTeam alliance?,"SELECT ?airline WHERE {
  ?airline dbo:alliance dbr:SkyTeam .
  ?airline rdf:type dbo:Airline .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
117,Which ships were called after Benjamin Franklin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ship
WHERE {
  ?ship dbo:shipNamesake dbr:Benjamin_Franklin .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
118,Give me all Methodist politicians.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Politician .
  ?person dbo:religion dbr:Methodism .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
119,What other books have been written by the author of The Fault in Our Stars?,"SELECT ?book WHERE {
  ?book dbo:author ?author .
  ?bookOfInterest dbo:author ?author .
  ?bookOfInterest rdfs:label ""The Fault in Our Stars""@en .
  FILTER (?book != ?bookOfInterest)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
120,What is the highest mountain?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain .
  OPTIONAL { ?mountain dbo:elevation ?elevation . }
} ORDER BY DESC(?elevation) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
121,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
ORDER BY DESC(?bookCount)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
122,Which programming languages influenced Javascript?,"SELECT ?programmingLanguage WHERE {
  dbr:JavaScript dbo:influencedBy ?programmingLanguage .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
123,Which musician wrote the most books?,"SELECT ?musician (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?musician .
  ?musician rdf:type dbo:MusicalArtist .
}
ORDER BY DESC(?bookCount)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
124,Which films starring Clint Eastwood did he direct himself?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Clint_Eastwood .
  ?film dbo:director dbr:Clint_Eastwood .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
125,Which software has been developed by organizations founded in California?,"SELECT ?software WHERE {
  ?org dbo:foundingPlace dbr:California .
  ?org dbo:product ?software .
  ?software rdf:type dbo:Software .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
126,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
127,How many airlines are members of the Star Alliance?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline rdf:type dbo:Airline ;
           dbo:alliance dbr:Star_Alliance .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
128,Give me all actors called Baldwin.,"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor foaf:name ?name .
  FILTER(CONTAINS(?name, ""Baldwin""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
129,Who wrote The Hunger Games?,"SELECT ?author WHERE {
  dbr:The_Hunger_Games dbp:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
130,For which label did Elvis record his first album?,"SELECT ?label WHERE {
  ?album dbo:artist dbr:Elvis_Presley ;
         dbo:recordLabel ?label .
  {
    SELECT ?album WHERE {
      ?album dbo:artist dbr:Elvis_Presley .
    } ORDER BY ASC(?album) LIMIT 1
  }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
131,Is Christian Bale starring in Batman Begins?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  FILTER (str(?film) = ""Batman Begins"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
132,Where is the residence of the prime minister of Spain?,"SELECT ?residence WHERE {
  ?person dbo:office dbr:Prime_Minister_of_Spain .
  ?person dbo:residence ?residence .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?movie) AS ?movieCount)
WHERE {
  ?movie dbo:starring ?actor .
}
ORDER BY DESC(?movieCount)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
134,Which countries have more than two official languages?,"SELECT ?country WHERE {
  ?country a dbo:Country .
  {
    SELECT ?country (COUNT(?language) AS ?languageCount) WHERE {
      ?country dbo:officialLanguage ?language .
    } GROUP BY ?country
  }
  FILTER(?languageCount > 2)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
135,Which countries have more than ten caves?,"SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:location ?country .
  ?cave a dbo:Cave .
}
GROUP BY ?country
HAVING (?caveCount > 10)","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"SELECT ?song WHERE {
  ?song dbo:musicalArtist dbr:Bruce_Springsteen .
  ?song dbo:releaseDate ?date .
  FILTER ( ?date >= ""1980-01-01""^^xsd:date && ?date < ""1991-01-01""^^xsd:date )
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
137,Which television shows were created by John Cleese?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:John_Cleese.
  ?show rdf:type dbo:TelevisionShow.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
138,When did Latvia join the EU?,"SELECT ?date WHERE {
  dbr:Latvia dbp:accessioneudate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
139,Which soccer players were born on Malta?,"SELECT ?player WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player rdf:type dbo:SoccerPlayer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
140,How many politicians graduated from Columbia University?,"SELECT (COUNT(?person) AS ?count)
WHERE {
  ?person dbo:almaMater dbr:Columbia_University .
  ?person rdf:type dbo:Politician .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
141,Give me the birthdays of all actors of the television show Charmed.,"SELECT ?actor ?birthday WHERE {
  ?show dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
  ?show rdfs:label ""Charmed""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
142,Which telecommunications organizations are located in Belgium?,"SELECT ?organization 
WHERE {
  ?organization dbo:industry dbr:Telecommunication ;
                dbo:location dbr:Belgium .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
143,Give me a list of all lakes in Denmark.,"SELECT ?lake WHERE {
  ?lake rdf:type dbo:Lake .
  ?lake dbo:country dbr:Denmark .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
144,How many children does Eddie Murphy have?,"SELECT ?children WHERE {
  dbr:Eddie_Murphy dbo:children ?children .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
145,Show me all English Gothic buildings in Kent.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?building
WHERE {
  ?building dbo:architecturalStyle dbr:English_Gothic_architecture .
  ?building dbo:location dbr:Kent .
  ?building rdf:type dbo:Building .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
146,Who is the manager of Real Madrid?,"SELECT ?manager WHERE {
  dbr:Real_Madrid_C.F. dbo:manager ?manager .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
147,In which countries can you pay using the West African CFA franc?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
148,Which holidays are celebrated around the world?,"SELECT ?holiday WHERE {
  ?country dbo:officialHolidays ?holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
149,What is the longest river?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
150,Which organizations were founded in 1930?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1930""^^xsd:gYear .
  ?organization rdf:type dbo:Organisation .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
151,What is the birth name of Angela Merkel?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
152,Who has Tom Cruise been married to?,"SELECT ?person WHERE {
  dbr:Tom_Cruise dbo:spouse ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
153,Which weapons did Heckler & Koch develop?,"SELECT ?weapon WHERE {
  ?weapon dbo:manufacturer dbr:Heckler_&_Koch .
  ?weapon rdf:type dbo:Weapon .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
154,What is the smallest city by area in Germany?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Germany ;
        dbo:areaTotal ?area .
}
ORDER BY ASC(?area)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
155,What is the ruling party in Lisbon?,"SELECT ?party WHERE {
  dbr:Lisbon dbp:leaderParty ?party .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
156,How heavy is Jupiter's lightest moon?,"SELECT ?moon ?mass WHERE {
  ?moon dbo:satelliteOf dbr:Jupiter .
  ?moon dbo:mass ?mass .
} ORDER BY ASC(?mass) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
157,How many employees does IBM have?,"SELECT ?numberOfEmployees WHERE {
  dbr:IBM dbo:numberOfEmployees ?numberOfEmployees .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
158,List all episodes of the first season of the HBO television series The Sopranos!,"SELECT ?episode WHERE {
  ?episode dbo:series dbr:The_Sopranos .
  ?episode dbo:seasonNumber 1 .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
159,What does ICRO stand for?,"SELECT ?abbreviation WHERE {
  ?s dbo:abbreviation ""ICRO"" .
  ?s rdfs:label ?abbreviation .
  FILTER (lang(?abbreviation) = 'en')
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?newSeriesEpisodes ?oldSeriesEpisodes WHERE {
  ?newSeries rdfs:label ""Battlestar Galactica (2004 TV series)""@en .
  ?newSeries dbo:numberOfEpisodes ?newSeriesEpisodes .
  ?oldSeries rdfs:label ""Battlestar Galactica (1978 TV series)""@en .
  ?oldSeries dbo:numberOfEpisodes ?oldSeriesEpisodes .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
161,Give me all films produced by Hal Roach.,"SELECT ?film WHERE {
  ?film dbo:producer dbr:Hal_Roach .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
162,Who played Agent Smith in Matrix?,"SELECT ?actor WHERE {
  dbr:The_Matrix dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (LANG(?actorLabel) = ""en"") .
  FILTER (CONTAINS(?actorLabel, ""Hugo Weaving"")) .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
163,Which Greek parties are pro-European?,"SELECT ?party WHERE {
  ?party dbo:location dbr:Greece .
  ?party dbo:ideology dbr:Pro-Europeanism .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
164,Give me a list of all bandleaders that play trumpet.,"SELECT ?bandleader WHERE {
  ?bandleader rdf:type dbo:MusicalArtist .
  ?bandleader dbo:instrument dbr:Trumpet .
  ?bandleader dbo:occupation dbr:Bandleader .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
165,What is the second highest mountain on Earth?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 2 OFFSET 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
166,Is Egypts largest city also its capital?,"SELECT ?answer 
WHERE { 
  { dbr:Egypt dbo:capital ?capital } . 
  { dbr:Egypt dbo:largestCity ?largestCity } . 
  BIND(IF(str(?capital) = str(?largestCity), ""Yes"", ""No"") AS ?answer) 
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
167,Which rockets were launched from Baikonur?,"SELECT ?rocket WHERE {
  ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
168,How many programming languages are there?,"SELECT (COUNT(?programmingLanguage) AS ?count) WHERE {
  ?programmingLanguage rdf:type dbo:ProgrammingLanguage .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
169,Which Chess players died in the same place they were born in?,"SELECT ?player WHERE {
  ?player rdf:type dbo:ChessPlayer .
  ?player dbo:birthPlace ?place .
  ?player dbo:deathPlace ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
170,Who is the owner of Facebook?,"SELECT ?owner WHERE {
  dbr:Facebook dbo:foundedBy ?owner .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
171,Give me all movies with Tom Cruise.,"SELECT ?movie WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:starring dbr:Tom_Cruise .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
172,In which U.S. state is Fort Knox located?,"SELECT ?state WHERE {
  dbr:Fort_Knox dbo:location ?state .
  ?state rdf:type dbo:Place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"SELECT ?city WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:isPartOf dbr:New_Jersey .
  ?city dbo:populationTotal ?population .
  FILTER (?population > 100000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
174,Which mountains are higher than the Nanga Parbat?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
  dbr:Nanga_Parbat dbo:elevation ?nangaParbatElevation .
  FILTER(?elevation > ?nangaParbatElevation)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
175,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bSide WHERE {
  dbr:Ramones dbo:bSide ?bSide .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
176,What are the specialities of the UNC Health Care?,"SELECT ?speciality WHERE {
  dbr:UNC_Health_Care dbp:speciality ?speciality .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
177,When was Olof Palme shot?,"SELECT ?date WHERE {
  dbr:Olof_Palme dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
178,List the seven kings of Rome.,"SELECT ?king WHERE {
  ?king dbo:monarch dbr:King_of_Rome .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
179,Give me all people that were born in Vienna and died in Berlin.,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Vienna .
  ?person dbo:deathPlace dbr:Berlin .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
180,Is Darth Vader Luke’s father?,"SELECT ?answer 
WHERE { 
  dbr:Darth_Vader dbo:child ?answer . 
  FILTER (?answer = dbr:Luke_Skywalker) 
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
181,Show me all the breweries in Australia.,"SELECT ?brewery WHERE {
  ?brewery dbo:industry dbr:Brewery ;
           dbo:location dbr:Australia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?film WHERE {
  ?film dbo:director ?director .
  ?film dbo:producer ?producer .
  ?film dbo:budget ?budget .
  ?director rdfs:label ""Steven Spielberg""@en .
  ?producer rdfs:label ""Steven Spielberg""@en .
  FILTER (?budget >= 80000000) .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
183,Give me all soccer clubs in Spain.,"SELECT ?club WHERE {
  ?club rdf:type dbo:SoccerClub .
  ?club dbo:ground ?ground .
  ?ground dbo:country dbr:Spain .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
184,Who produced films starring Natalie Portman?,"SELECT DISTINCT ?producer WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
185,Give me all breeds of the German Shepherd dog.,"SELECT ?breed WHERE {
  ?breed dbo:species dbr:German_Shepherd.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight
WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Chicago_Bulls> .
  ?player dbo:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
187,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
188,What is the largest country in the world?,"SELECT ?country WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:areaTotal ?area .
} ORDER BY DESC(?area) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
189,What is the largest city in america?,"SELECT ?city WHERE {
  dbr:United_States dbo:largestCity ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
190,Who was the pope that founded the Vatican Television?,"SELECT ?pope WHERE {
  ?tv dbo:foundedBy ?pope .
  ?pope rdf:type dbo:Pope .
  ?tv rdfs:label ""Vatican Television""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
191,Who discovered Ceres?,"SELECT ?person WHERE {
  dbr:Ceres_(dwarf_planet) dbo:discoverer ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
192,Who is the king of the Netherlands?,"SELECT ?person WHERE {
  ?person dbo:leaderTitle dbr:Monarchy_of_the_Netherlands .
  ?person rdf:type dbo:Person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
193,Is Cola a beverage?,"SELECT ?answer WHERE {
  dbr:Cola rdf:type ?type .
  ?type rdfs:subClassOf* dbo:Beverage .
  BIND(EXISTS{dbr:Cola rdf:type ?type . ?type rdfs:subClassOf* dbo:Beverage} AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  res:Angela_Merkel dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
195,Who wrote the book Les Piliers de la terre?,"SELECT ?author WHERE {
  ?book rdfs:label ""Les Piliers de la terre""@en.
  ?book dbo:author ?author.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
196,Which airports does Yeti Airlines serve?,"SELECT ?airport WHERE {
  dbr:Yeti_Airlines dbo:targetAirport ?airport .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
197,Where is the birthplace of Goethe?,"SELECT ?birthplace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?answer WHERE {
  res:Cuban_Missile_Crisis dbo:date ?cuban_date .
  res:Bay_of_Pigs_Invasion dbo:date ?bay_date .
  BIND(?cuban_date < ?bay_date AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
199,Which ingredients do I need for carrot cake?,"SELECT ?ingredient WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
200,Who created Wikipedia?,"SELECT ?creator WHERE {
  dbr:Wikipedia dbo:author ?creator .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
201,What is the highest mountain in Saxony Germany?,"SELECT ?mountain WHERE {
  ?mountain dbo:location dbr:Saxony .
  ?mountain rdf:type dbo:Mountain .
} ORDER BY DESC(?elevation) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
202,Who is the current federal minister of finance in Germany?,"SELECT ?person WHERE {
  ?organisation dbo:leader ?person .
  ?organisation rdf:type dbo:GovernmentAgency .
  ?organisation dbo:country dbr:Germany .
  ?organisation dbo:agencyType dbr:Ministry_of_Finance .
} LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
203,In which country is Mecca located?,"SELECT ?country WHERE {
  dbr:Mecca dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor WHERE {
  ?show rdfs:label ""Breaking Bad""@en.
  ?show dbo:starring ?actor.
  ?actor rdfs:label ?actorLabel.
  FILTER (lang(?actorLabel) = ""en"").
  ?actor dbo:character ?character.
  ?character rdfs:label ""Gus Fring""@en.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
205,In which country does the Nile start?,"SELECT ?country WHERE {
  dbr:Nile dbo:sourceCountry ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
206,In which state Penn State University is located?,"SELECT ?state WHERE {
  dbr:Pennsylvania_State_University dbo:state ?state .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
207,What is the biggest stadium in Spain?,"SELECT ?stadium WHERE {
  ?stadium dbo:location dbr:Spain .
  ?stadium rdf:type dbo:Stadium .
} ORDER BY DESC(?seatingCapacity) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach
WHERE {
  ?team dbo:location dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
209,How large is the area of UK?,"SELECT ?area WHERE {
  dbr:United_Kingdom dbo:areaTotal ?area .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
210,Who created Batman?,"SELECT ?creator WHERE {
  dbr:Batman dbo:creator ?creator .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
211,Was Sigmund Freud married?,"SELECT ?answer WHERE {
  dbr:Sigmund_Freud dbo:spouse ?answer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
212,Who are the developers of DBpedia?,"SELECT ?developer WHERE {
  dbr:DBpedia dbo:developer ?developer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
213,Give me all movies directed by Francis Ford Coppola.,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
214,Are tree frogs a type of amphibian?,"SELECT ?answer 
WHERE {
  dbr:Tree_frog rdf:type ?answer .
  ?answer rdfs:subClassOf* dbo:Amphibian .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
215,What is the location of the Houses of Parliament?,"SELECT ?location WHERE {
  dbr:Palace_of_Westminster dbo:location ?location .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
216,how much is the elevation of Düsseldorf Airport ?,"SELECT ?elevation WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
217,How much is the population of mexico city ?,"SELECT ?population WHERE {
  dbr:Mexico_City dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
218,when was the founding date of french fifth republic?,"SELECT ?date WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
219,Who was the first King of England?,"SELECT ?person WHERE {
  ?person dbo:positionHeld dbr:Monarch_of_England .
  ?person dbo:reignStart ?reignStart .
} ORDER BY ?reignStart LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
220,Who is the editor of Forbes?,"SELECT ?editor WHERE {
  dbr:Forbes dbo:editor ?editor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
221,Which awards did Douglas Hofstadter win?,"SELECT ?award WHERE {
  ?person dbo:award ?award .
  ?person foaf:name ""Douglas Hofstadter""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
222,Who is the youngest Darts player?,"SELECT ?player WHERE {
  ?player rdf:type dbo:DartsPlayer .
  ?player dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
223,Is horse racing a sport?,SELECT ?object WHERE { dbr:Horse_racing rdf:type ?object . ?object rdfs:subClassOf dbo:Sport },"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
225,How many people live in Poland?,"SELECT ?population WHERE {
  dbr:Poland dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
226,When was the last episode of the TV series Friends aired?,"SELECT ?date WHERE {
  dbr:Friends dbo:finalEpisode ?episode .
  ?episode dbo:releaseDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
227,Is the wife of president Obama called Michelle?,"SELECT ?answer 
WHERE { 
  dbr:Barack_Obama dbo:spouse ?answer . 
  FILTER (str(?answer) = ""Michelle Obama"") 
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
229,Who is 8th president of US?,"SELECT ?president WHERE {
  ?president dbo:orderInOffice 8 ;
             dct:subject dbc:Presidents_of_the_United_States .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
230,how much is the total population of  european union?,"SELECT ?population WHERE {
  dbr:European_Union dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
231,Give me all launch pads operated by NASA.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?launchPad
WHERE {
  ?launchPad dbo:operator <http://dbpedia.org/resource/NASA> .
  ?launchPad a dbo:LaunchPad .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
232,Who developed the video game World of Warcraft?,"SELECT ?developer WHERE {
  dbr:World_of_Warcraft dbo:developer ?developer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
233,What is the birth name of Adele?,"SELECT ?birthName WHERE {
  dbr:Adele dbp:birthName ?birthName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
234,What is the population of Cairo?,"SELECT ?population WHERE {
  dbr:Cairo dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
235,Is Frank Herbert still alive?,"SELECT ?answer WHERE {
  dbr:Frank_Herbert dbo:deathDate ?answer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
236,What is the last work of Dan Brown?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?date
WHERE {
  res:Dan_Brown dbo:work ?work .
  ?work dbo:releaseDate ?date .
}
ORDER BY DESC(?date)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
237,Where is Sungkyunkwan University?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  res:Sungkyunkwan_University dbo:location ?location .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
238,Who is the author of the interpretation of dreams?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  FILTER (str(?book) = ""The Interpretation of Dreams"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
239,When was the death  of  Shakespeare?,"SELECT ?date WHERE {
  dbr:William_Shakespeare dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
241,Who developed Slack?,"SELECT ?company WHERE {
  ?software dbo:developer ?company .
  FILTER (lcase(str(?software)) = ""slack"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
242,Where is the origin of Carolina reaper?,"SELECT ?origin WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
243,In which year was Rachel Stevens born?,"SELECT ?birthYear WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
244,How often did Jane Fonda marry?,"SELECT (COUNT(?spouse) as ?count) WHERE {
  dbr:Jane_Fonda dbo:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
245,Was the wife of president Lincoln called Mary?,"SELECT ?answer 
WHERE { 
  dbr:Abraham_Lincoln dbo:spouse ?spouse .
  ?spouse rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  BIND (str(?label) AS ?answer) .
  FILTER (str(?answer) = 'Mary Todd Lincoln') 
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
246,Which cities does the Weser flow through?,"SELECT ?city WHERE {
  ?river dbo:wikiPageID dbr:Weser .
  ?river dbo:city ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
247,In which programming language is GIMP written?,"SELECT ?programmingLanguage WHERE {
  dbr:GIMP dbo:programmingLanguage ?programmingLanguage .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
248,Which university did Angela Merkel attend?,"SELECT ?university WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
249,List all the musicals with music by Elton John.,"SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
250,How many Aldi stores are there?,"SELECT ?numberOfLocations WHERE {
  dbr:Aldi dbo:numberOfLocations ?numberOfLocations .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
251,What is the longest river in the world?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
252,When was John Adams born?,"SELECT ?birthDate WHERE {
  dbr:John_Adams dbo:birthDate ?birthDate .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
253,Which companies produce hovercrafts?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Hovercraft
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
254,Who was the wife of U.S. president Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
255,Which species does an elephant belong?,"SELECT ?species WHERE {
  dbr:Elephant dbo:species ?species .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
256,How many people live in the capital of Australia?,"SELECT ?population WHERE {
  dbr:Australia dbo:capital ?capital .
  ?capital dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
257,In which ancient empire could you pay with cocoa beans?,"SELECT ?place WHERE {
  ?place dbo:currency dbr:Cocoa_bean .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
258,How many theories did Albert Einstein come up with?,"SELECT COUNT(?theory) WHERE {
  dbr:Albert_Einstein dbo:knownFor ?theory .
  ?theory rdf:type dbo:Theory .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
259,Who composed the soundtrack for Cameron's Titanic?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?composer WHERE {
  res:Titanic_(1997_film) dbo:musicComposer ?composer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
260,Give me the runtime of Toy Story.,"SELECT ?runtime WHERE {
  dbr:Toy_Story dbo:runtime ?runtime .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
262,With how many countries Iran has borders?,"SELECT COUNT(?country) WHERE {
  dbr:Iran dbp:borders ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
263,Which electronics companies were founded in Beijing?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Electronics .
  ?company dbo:foundationPlace dbr:Beijing .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
264,Who was the successor of John F. Kennedy?,"SELECT ?successor WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
265,Who is the mayor of Paris?,"SELECT ?person WHERE {
  dbr:Paris dbo:mayor ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
266,Did Arnold Schwarzenegger attend a university?,"SELECT ?university WHERE {
  dbr:Arnold_Schwarzenegger dbo:almaMater ?university .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
267,Is James Bond married?,"SELECT ?spouse
WHERE {
  dbr:James_Bond dbo:spouse ?spouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
268,Does the Isar flow into a lake?,"SELECT ?lake WHERE {
  dbr:Isar dbo:inflow ?lake .
  ?lake rdf:type dbo:Lake .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
269,Which Indian company has the most employees?,"SELECT ?company WHERE {
  ?company a dbo:Company .
  ?company dbo:country dbr:India .
  ?company dbo:numberOfEmployees ?employees .
} ORDER BY DESC(?employees) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
270,Who was John F. Kennedy's vice president?,"SELECT ?vicePresident WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
271,Which country does the creator of Miffy come from?,"SELECT ?country WHERE {
  ?miffy dbo:creator ?creator .
  ?creator dbo:nationality ?country .
  ?miffy rdfs:label ""Miffy""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
273,In what city is the Heineken brewery?,"SELECT ?city WHERE {
  dbr:Heineken dbo:location ?city .
  ?city rdf:type dbo:City .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
274,Is Barack Obama a democrat?,"SELECT ?answer WHERE {
  dbr:Barack_Obama dbo:party ?party.
  BIND(REPLACE(str(?party), ""http://dbpedia.org/resource/"", """") AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
275,List the children of Margaret Thatcher.,"SELECT ?child WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
276,From which region is the Melon de Bourgogne?,"SELECT ?region WHERE {
  dbr:Melon_de_Bourgogne dbo:wineRegion ?region .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
278,how big is the total area of North Rhine- Westphalia?,"SELECT ?area WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?area .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
279,Which city has the most inhabitants?,"SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
280,What is Donald Trump's main business?,"SELECT ?mainBusiness WHERE {
  dbr:Donald_Trump dbo:owner ?mainBusiness .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
281,When will start the final match of the football world cup 2018?,"SELECT ?date WHERE {
  dbr:2018_FIFA_World_Cup_Final dbo:startTime ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
282,Which films did Stanley Kubrick direct?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
283,how much is the population  Iraq?,"SELECT ?population WHERE {
  dbr:Iraq dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population WHERE {
  dbr:Canada dbo:largestCity ?city .
  ?city dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
285,Who is the mayor of the capital of French Polynesia?,"SELECT ?person WHERE {
  ?country dbo:officialName ""French Polynesia""@en .
  ?country dbo:capital ?city .
  ?city dbo:mayor ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
286,Give me all actors starring in movies directed by William Shatner.,"SELECT ?actor WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
287,How tall is Claudia Schiffer?,"SELECT ?height WHERE {
  dbr:Claudia_Schiffer dbo:height ?height .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
288,how much is the population densty rank of germany?,"SELECT ?populationDensityRank WHERE {
  dbr:Germany dbp:populationDensityRank ?populationDensityRank .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
289,What is the highest mountain in Italy?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:location dbr:Italy ;
            dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
290,List all games by GMT.,"SELECT ?game WHERE {
  ?game dbo:publisher ?publisher .
  ?publisher foaf:name ""GMT"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
291,What is the official language of Suriname?,"SELECT ?officialLanguage WHERE {
  dbr:Suriname dbo:officialLanguage ?officialLanguage .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
292,In which city did Nikos Kazantzakis die?,"SELECT ?city WHERE {
  dbr:Nikos_Kazantzakis dbo:deathPlace ?city .
  ?city rdf:type dbo:City .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
293,What is in a chocolate chip cookie?,"SELECT ?ingredient WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
294,In which country is the Limerick Lake?,"SELECT ?country WHERE {
  dbr:Limerick_Lake dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
295,Give me all video games published by Mean Hamster Software.,"SELECT ?game WHERE {
  ?game dbo:publisher <http://dbpedia.org/resource/Mean_Hamster_Software> .
  ?game rdf:type dbo:VideoGame .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
296,Give me all members of Prodigy.,"SELECT ?member WHERE {
  dbr:The_Prodigy dbo:bandMember ?member .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
297,In which time zone is Rome?,"SELECT ?timeZone WHERE {
  dbr:Rome dbo:timeZone ?timeZone .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
298,How high is the lighthouse in Colombo?,"SELECT ?height WHERE {
  ?lighthouse dbo:location dbr:Colombo .
  ?lighthouse dbo:height ?height .
  ?lighthouse rdf:type dbo:Lighthouse .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
299,Who are the writers of the Wall album of Pink Floyd?,"SELECT ?writer WHERE {
  dbr:The_Wall dbp:writer ?writer .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
300,Who is the mayor of Rotterdam?,"SELECT ?person WHERE {
  dbr:Rotterdam dbo:leaderName ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
301,What is the largest city in Australia?,"SELECT ?city WHERE {
  dbr:Australia dbo:largestCity ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
302,Who was married to president Chirac?,"SELECT ?person WHERE {
  dbr:Jacques_Chirac dbo:spouse ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
303,What form of government is found in South Africa?,"SELECT ?governmentType WHERE {
  dbr:South_Africa dbo:governmentType ?governmentType .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
304,How high is the Yokohama Marine Tower?,"SELECT ?height WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
305,Which holidays are celebrated around the world? test2,"SELECT ?holiday WHERE {
  ?country dbo:officialHolidays ?holiday .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
306,Who is the tallest basketball player?,"SELECT ?player ?height
WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
307,How many languages are spoken in Turkmenistan?,"SELECT (COUNT(?language) AS ?count) WHERE {
  dbr:Turkmenistan dbo:officialLanguage ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
308,Did Che Guevara have children?,"SELECT ?child WHERE {
  dbr:Che_Guevara dbo:child ?child .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"SELECT ?year WHERE {
  ?person dbo:award ?award .
  ?award dct:subject dbc:Cannes_Film_Festival_award_winners .
  ?award rdfs:label ?awardLabel .
  ?person rdfs:label ?personLabel .
  ?award dbo:year ?year .
  FILTER (lang(?personLabel) = 'en' && lang(?awardLabel) = 'en') .
  FILTER (regex(?personLabel, ""Kaurismäki"", ""i"") && regex(?awardLabel, ""Grand Prix"", ""i"")) .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
310,To which party does the mayor of Paris belong?,"SELECT ?party WHERE {
  dbr:Paris dbo:mayor ?mayor.
  ?mayor dbo:party ?party.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver WHERE {
  ?driver rdf:type dbo:FormulaOneRacer .
} ORDER BY DESC(?races) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
312,What country is Sitecore from?,"SELECT ?country WHERE {
  dbr:Sitecore dbo:locationCountry ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
314,Is Christian Bale starring in Velvet Goldmine?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  FILTER (str(?film) = ""Velvet Goldmine"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_Bono, dbr:Cher.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
316,How many ethnic groups live in Slovenia?,"SELECT (COUNT(?ethnicGroup) AS ?count) WHERE {
  dbr:Slovenia dbo:ethnicGroup ?ethnicGroup .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
317,What is the capital of Cameroon?,"SELECT ?capital WHERE {
  dbr:Cameroon dbo:capital ?capital .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
318,Was Natalie Portman born in the United States?,"SELECT ?answer 
WHERE {
  dbr:Natalie_Portman dbo:birthPlace ?place .
  ?place rdfs:label ?answer .
  FILTER (lang(?answer) = 'en')
  FILTER CONTAINS(?answer, ""United States"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
319,How many pages does War and Peace have?,"SELECT ?pages WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?pages .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
320,Who is the oldest child of Meryl Streep?,"SELECT ?child WHERE {
  dbr:Meryl_Streep dbo:child ?child .
  ?child dbo:birthDate ?birthDate .
} ORDER BY ASC(?birthDate) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
321,Which television shows were created by Walt Disney?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
322,What does IYCM stand for?,"SELECT ?meaning WHERE {
  ?s dbo:abbreviation ""IYCM"" .
  ?s rdfs:label ?meaning .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
323,Which types of grapes grow in Oregon?,"SELECT ?grape WHERE {
  ?region dbo:growingGrape ?grape .
  ?region rdfs:label ""Oregon""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
324,Was U.S. president Jackson involved in a war?,"SELECT ?war WHERE {
  ?war dbo:combatant dbr:Andrew_Jackson .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
325,When was the Titanic completed?,"SELECT ?date WHERE {
  dbr:Titanic dbo:completionDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
326,Did Tesla win a nobel prize in physics?,"SELECT ?award
WHERE {
  dbr:Nikola_Tesla dbo:award ?award .
  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en')
  FILTER CONTAINS(?awardLabel, ""Nobel Prize in Physics"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
327,How many states are in Mexico?,"SELECT (count(?state) as ?count) WHERE {
  ?state dbo:country dbr:Mexico .
  ?state rdf:type dbo:AdministrativeRegion .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project .
  ?scientist dbo:award dbr:Nobel_Peace_Prize .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
329,How much did the Lego Movie cost?,"SELECT ?cost WHERE {
  dbr:The_Lego_Movie dbo:budget ?cost .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
330,Who composed the music for Harold and Maude?,"SELECT ?composer WHERE {
  ?film dbo:musicComposer ?composer .
  ?film rdfs:label ""Harold and Maude""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
331,List all episodes of the first season of the HBO television series The Sopranos.,"SELECT ?episode WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber 1 .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
332,Which city has the least inhabitants?,"SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
333,Where is Syngman Rhee buried?,"SELECT ?place WHERE {
  dbr:Syngman_Rhee dbo:restingPlace ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
334,Does Neymar play for Real Madrid?,"SELECT ?answer 
WHERE { 
  dbr:Neymar dbo:team ?team . 
  ?team rdfs:label ?answer .
  FILTER (lang(?answer) = 'en') .
  FILTER (str(?answer) = 'Real Madrid C.F.')
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
335,Who wrote the book The Pillars of the Earth?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
336,Do Prince Harry and Prince William have the same parents?,"SELECT ?parent WHERE {
  { dbr:Prince_William,_Duke_of_Cambridge dbo:parent ?parent . }
  UNION
  { dbr:Prince_Harry,_Duke_of_Sussex dbo:parent ?parent . }
} GROUP BY ?parent HAVING (COUNT(?parent) = 2)","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?person WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
338,Does Breaking Bad have more episodes than Game of Thrones?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?bbEpisodes ?gotEpisodes WHERE {
  res:Breaking_Bad dbo:numberOfEpisodes ?bbEpisodes .
  res:Game_of_Thrones dbo:numberOfEpisodes ?gotEpisodes .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
339,Who was Vincent van Gogh inspired by?,"SELECT ?person WHERE {
  dbr:Vincent_van_Gogh dbo:influencedBy ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building WHERE {
  ?building dbo:floorCount ?floorCount .
  FILTER(?floorCount < (SELECT ?burjKhalifaFloors WHERE {
    dbr:Burj_Khalifa dbo:floorCount ?burjKhalifaFloors
  }))
} ORDER BY DESC(?floorCount) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
341,What was the final result of the War of the Roses?,"SELECT ?result WHERE {
  ?event dbo:result ?result .
  ?event rdfs:label ""Wars of the Roses""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
342,How much did Pulp Fiction cost?,"SELECT ?cost WHERE {
  dbr:Pulp_Fiction dbo:budget ?cost .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
343,Is proinsulin a protein?,"SELECT ?answer 
WHERE {
  dbr:Proinsulin rdf:type ?type .
  ?type rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  BIND (CONTAINS(?label, ""protein"") AS ?answer) .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
344,Do Urdu and Persian have a common root?,"SELECT ?commonRoot WHERE {
  dbo:Urdu dbo:languageFamily ?commonRoot .
  dbo:Persian dbo:languageFamily ?commonRoot .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"SELECT ?actor WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:producer dbr:Benicio_del_Toro .
  ?movie dbo:starring ?actor .
  ?movie dbo:country dbr:Spain .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?lake ?area WHERE {
  {
    SELECT (dbo:areaTotal as ?property) WHERE {
      res:Lake_Baikal dbo:areaTotal ?area .
    }
    BIND(res:Lake_Baikal as ?lake)
  }
  UNION
  {
    SELECT (dbo:areaTotal as ?property) WHERE {
      res:Great_Bear_Lake dbo:areaTotal ?area .
    }
    BIND(res:Great_Bear_Lake as ?lake)
  }
} ORDER BY DESC(?area)","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
347,Show me all books in Asimov's Foundation series.,"SELECT ?book WHERE {
  ?book dbo:series dbr:Foundation_series .
  ?book rdf:type dbo:Book .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
348,Where was Bach born?,"SELECT ?birthPlace WHERE {
  dbr:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
349,Which city has the oldest running metro?,"SELECT ?city WHERE {
  ?metro dbo:location ?city ;
         dbo:openingYear ?year .
  FILTER NOT EXISTS {
    ?otherMetro dbo:location ?otherCity ;
                dbo:openingYear ?otherYear .
    FILTER (?otherYear < ?year)
  }
} ORDER BY ?year LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
350,Who designed the Brooklyn Bridge?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?architect
WHERE {
  ?bridge dbo:architect ?architect .
  ?bridge rdfs:label ""Brooklyn Bridge""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
351,How many people live in Eurasia?,"SELECT ?population WHERE {
  dbr:Eurasia dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host WHERE {
  dbr:BBC_Wildlife_Specials dbo:presenter ?host .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
353,"What is the total population of Melbourne, Florida?","SELECT ?population WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
354,What country is Mount Everest in?,"SELECT ?country WHERE {
  dbr:Mount_Everest dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
355,To which artistic movement did the painter of The Three Dancers belong?,"SELECT ?movement WHERE {
  dbr:The_Three_Dancers dbo:author ?author.
  ?author dbo:movement ?movement.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
356,When did Operation Overlord commence?,"SELECT ?date WHERE {
  dbr:Operation_Overlord dbo:date ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
357,What is the bridge with the longest span?,"SELECT ?bridge WHERE {
  ?bridge a dbo:Bridge .
} ORDER BY DESC(?mainspan) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
358,Is there a video game called Battle Chess?,"SELECT ?game WHERE {
  ?game rdf:type dbo:VideoGame .
  ?game rdfs:label ""Battle Chess""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
359,Who was buried in the Great Pyramid of Giza?,"SELECT ?person WHERE {
  ?person dbo:restingPlace dbr:Great_Pyramid_of_Giza
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"SELECT ?plant WHERE {
  dbr:Ford_Motor_Company dbo:location ?plant .
  ?plant dbo:country dbr:Malaysia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
361,Did Socrates influence Aristotle?,"SELECT ?answer 
WHERE { 
  dbr:Aristotle dbo:influencedBy ?answer . 
  FILTER (?answer = dbr:Socrates) 
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
362,How many children did Benjamin Franklin have?,"SELECT COUNT(?child) WHERE {
  dbr:Benjamin_Franklin dbo:child ?child .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
363,How tall is Michael Jordan?,"SELECT ?height WHERE {
  dbr:Michael_Jordan dbo:height ?height .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
364,In which UK city are the headquarters of the MI6?,"SELECT ?city WHERE {
  dbr:Secret_Intelligence_Service dbo:headquarter ?city .
  ?city rdf:type dbo:City .
  ?city dbo:country dbr:United_Kingdom .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
365,Who created Family Guy?,"SELECT ?creator WHERE {
  dbr:Family_Guy dbo:creator ?creator .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
366,In which city does the Chile Route 68 end?,"SELECT ?city WHERE {
  ?route dbo:routeNumber ""68"" .
  ?route dbo:routeEnd ?city .
  ?route dbo:isPartOf dbr:Chile .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild WHERE {
  ?person dbo:birthName ""Elvis Presley""@en .
  ?person dbo:child ?child .
  ?child dbo:child ?grandchild .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
368,When did the Ming dynasty dissolve?,"SELECT ?date WHERE {
  dbr:Ming_dynasty dbo:dissolutionDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
369,In which military conflicts did Lawrence of Arabia participate?,"SELECT ?conflict WHERE {
  dbr:Lawrence_of_Arabia dbo:battle ?conflict .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
370,What is the timezone in San Pedro de Atacama?,"SELECT ?timezone WHERE {
  dbr:San_Pedro_de_Atacama dbo:timeZone ?timezone .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
371,Give me all books by William Goldman with more than 300 pages.,"SELECT ?book WHERE {
  ?book dbo:author ?author .
  ?author foaf:name ""William Goldman""@en .
  ?book dbo:numberOfPages ?pages .
  FILTER (?pages > 300)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
372,What did Bruce Carver die from?,"SELECT ?cause_of_death WHERE {
  dbr:Bruce_Carver dbo:deathCause ?cause_of_death.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"SELECT DISTINCT ?airline WHERE {
  ?airline dbo:parentCompany dbr:Lufthansa .
  ?airline dbo:targetAirport dbr:Dortmund_Airport .
  ?airline dbo:targetAirport dbr:Berlin_Tegel_Airport .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
374,Does Abraham Lincoln's death place have a website?,"SELECT ?website WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
  ?place foaf:homepage ?website .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
375,Did Elvis Presley have children?,"SELECT ?child WHERE {
  dbr:Elvis_Presley dbo:child ?child .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
376,Is Michelle Obama the wife of Barack Obama?,"SELECT ?answer 
WHERE {
  dbr:Barack_Obama dbo:spouse ?answer .
  FILTER (?answer = dbr:Michelle_Obama)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
377,In which city does Sylvester Stallone live?,"SELECT ?city WHERE {
  dbr:Sylvester_Stallone dbo:residence ?city .
  ?city a dbo:City .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
378,Which books by Kerouac were published by Viking Press?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Jack_Kerouac .
  ?book dbo:publisher dbr:Viking_Press .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
379,Who wrote the song Hotel California?,"SELECT ?person WHERE {
  ?song rdfs:label ""Hotel California""@en.
  ?song dbo:writer ?person.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
380,What is the capital of Canada?,"SELECT ?capital WHERE {
  dbr:Canada dbo:capital ?capital .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
381,Who is the mayor of Tel Aviv?,"SELECT ?person WHERE {
  dbr:Tel_Aviv dbo:leaderName ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
382,What form of government does Russia have?,"SELECT ?formOfGovernment WHERE {
  dbr:Russia dbo:governmentType ?formOfGovernment .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Muhammad_Ali .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
384,Who was the first to climb Mount Everest?,"SELECT ?person WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
385,How many languages are spoken in Colombia?,"SELECT (COUNT(?language) AS ?count) WHERE {
  dbr:Colombia dbo:officialLanguage ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
386,What is the currency of the Czech Republic?,"SELECT ?currency WHERE {
  dbr:Czech_Republic dbo:currency ?currency .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
387,Where in France is sparkling wine produced?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?region dbo:country dbr:France .
  ?wine dbo:region ?region .
  ?wine dbo:type dbr:Sparkling_wine .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
388,When did Boris Becker end his active career?,"SELECT ?date WHERE {
  dbr:Boris_Becker dbo:activeYearsEndDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke .
  ?movie dbo:director dbr:Guy_Ritchie .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Julia_Roberts .
  ?film dbo:starring dbr:Richard_Gere .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
391,Show me Hemingway's autobiography.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Ernest_Hemingway .
  ?book rdf:type dbo:Book .
  ?book dbo:literaryGenre dbr:Autobiography .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
392,How tall is Amazon Eve?,"SELECT ?height WHERE {
  dbr:Amazon_Eve dbo:height ?height .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
393,What are the five boroughs of New York?,"SELECT ?borough WHERE {
  dbr:New_York_City dbo:borough ?borough .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
394,Give me all Canadian Grunge record labels.,"SELECT ?label WHERE {
  ?label rdf:type dbo:RecordLabel .
  ?label dbo:country dbr:Canada .
  ?label dbo:genre dbr:Grunge_music .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
395,In which country does the Ganges start?,"SELECT ?country WHERE {
  dbr:Ganges dbo:sourceCountry ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
396,Who is the founder of Penguin Books?,"SELECT ?founder WHERE {
  dbr:Penguin_Books dbo:founder ?founder .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
397,Who wrote the Game of Thrones theme?,"SELECT ?person WHERE {
  dbr:Game_of_Thrones dbo:composer ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
398,Who is the president of Eritrea?,"SELECT ?person WHERE {
  dbr:Eritrea dbo:leader ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
399,In which city did John F. Kennedy die?,"SELECT ?city WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?city .
  ?city rdf:type dbo:City .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
400,What is the highest mountain in Australia?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:location dbr:Australia ;
            dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
401,Who writes the Farmers' Almanac?,"SELECT ?person WHERE {
  ?work rdfs:label ""Farmers' Almanac""@en .
  ?work dbp:editor ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
402,Give me the currency of China.,"SELECT ?currency WHERE {
  dbr:China dbo:currency ?currency .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
403,Give me all Swedish oceanographers.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Oceanography .
  ?person dbo:nationality dbr:Sweden .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
404,In which city are the headquarters of the United Nations?,"SELECT ?city WHERE {
  dbr:United_Nations dbo:headquarter ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
405,Is Rita Wilson the wife of Tom Hanks?,"SELECT ?answer 
WHERE {
  dbr:Tom_Hanks dbo:spouse ?answer .
  FILTER (?answer = dbr:Rita_Wilson)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
406,In which countries do people speak Japanese?,"SELECT ?country WHERE {
  ?country dbo:officialLanguage dbp:Japanese .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget WHERE {
  ?film dbo:director dbr:Tim_Burton .
  ?film dbo:budget ?budget .
} ORDER BY DESC(?budget) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
408,Which museum in New York has the most visitors?,"SELECT ?museum WHERE {
  ?museum dbo:location dbr:New_York_City .
  ?museum dbo:numberOfVisitors ?visitors .
} ORDER BY DESC(?visitors) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
409,What was the first Queen album?,"SELECT ?album WHERE {
  ?album dbo:artist dbr:Queen .
  ?album dbo:releaseDate ?date .
} ORDER BY ?date LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?firstName WHERE {
  dbr:Queens_of_the_Stone_Age dbo:alias ?firstName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
411,What was the last movie with Alec Guinness?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Alec_Guinness .
  ?movie dbo:releaseDate ?date .
} ORDER BY DESC(?date) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
412,Give me all actors starring in Last Action Hero.,"SELECT ?actor WHERE {
  dbr:Last_Action_Hero dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
413,Who discovered Pluto?,"SELECT ?person WHERE {
  dbr:Pluto dbo:discoverer ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
1,List all boardgames by GMT.,"SELECT ?boardgame WHERE {
  ?boardgame dbo:publisher dbr:GMT_Games .
  ?boardgame rdf:type dbo:BoardGame .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
2,Who developed Skype?,"SELECT ?developer WHERE {
  dbr:Skype dbo:developer ?developer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
3,Which people were born in Heraklion?,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
4,In which U.S. state is Area 51 located?,"SELECT ?state WHERE {
  dbr:Area_51 dbo:location ?state .
  ?state rdf:type dbo:Place .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
5,Who is the mayor of New York City?,"SELECT ?mayor WHERE {
  dbr:New_York_City dbo:leaderName ?mayor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
6,Which countries have places with more than two caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:location ?place .
  ?place dbo:country ?country .
  ?cave a dbo:Cave .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 2)","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
7,Where did Abraham Lincoln die?,"SELECT ?deathPlace WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
8,Which airports does Air China serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport WHERE {
  dbr:Air_China dbo:targetAirport ?airport .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
9,Give me all actors starring in movies directed by and starring William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorName WHERE {
  ?movie dbo:director dbr:William_Shatner ;
         dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (LANG(?actorName) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
10,What are the official languages of the Philippines?,"SELECT ?language 
WHERE {
  dbr:Philippines dbo:officialLanguage ?language .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
11,Give me all Danish films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?film WHERE {
  ?film dbo:country dbr:Denmark .
  ?film rdf:type dbo:Film .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Brad_Pitt .
  ?movie dbo:director dbr:Guy_Ritchie .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
13,Give me the grandchildren of Bruce Lee.,"SELECT ?grandchild WHERE {
  ?person dbo:birthName ""Bruce Lee""@en.
  ?person dbo:child ?child.
  ?child dbo:child ?grandchild.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
14,Which other weapons did the designer of the Uzi develop?,"SELECT ?weapon WHERE {
  ?uzi dbo:designer ?designer .
  ?weapon dbo:designer ?designer .
  FILTER (?weapon != dbo:Uzi)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
15,Who is the owner of Universal Studios?,"SELECT ?owner 
WHERE { 
  dbr:Universal_Studios dbo:owner ?owner .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
16,Which state of the USA has the highest population density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbo:populationDensity ?populationDensity .
} ORDER BY DESC(?populationDensity) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
17,Which monarchs were married to a German?,"SELECT ?monarch WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch rdf:type dbo:Monarch .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
18,Which organizations were founded in 1950?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1950""^^xsd:gYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
19,Who created the comic Captain America?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?creator
WHERE {
  dbr:Captain_America dbo:author ?creator .
  ?creator rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
20,Give me the Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  ?mission dbo:astronaut ?astronaut .
  FILTER (?mission = dbr:Apollo_14)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
21,Who wrote the book The pillars of the Earth?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
22,Which state of the United States of America has the highest density?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbp:density ?density .
} ORDER BY DESC(?density) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
23,Which spaceflights were launched from Baikonur?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spaceflight
WHERE {
  ?spaceflight dbo:launchSite dbo:Baikonur_Cosmodrome.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
24,Give me a list of all trumpet players that were bandleaders.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?name WHERE {
  ?player dbo:instrument dbr:Trumpet .
  ?player rdf:type dbo:MusicalArtist .
  ?player dbo:occupation dbr:Bandleader .
  ?player rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
25,Which U.S. states are in the same timezone as Utah?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  dbr:Utah dbo:timeZone ?utahTimeZone .
  ?state rdf:type dbo:Place ;
         dbo:timeZone ?utahTimeZone .
  ?state dct:subject dbc:States_of_the_United_States .
  FILTER (?state != dbr:Utah)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
26,Which U.S. states possess gold minerals?,"SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbp:mineral ""Gold"" .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
27,Who is the daughter of Ingrid Bergman married to?,"SELECT ?husband WHERE {
  ?person dbo:parent dbr:Ingrid_Bergman .
  ?person dbo:spouse ?husband .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
28,How deep is Lake Placid?,"SELECT ?depth WHERE {
  dbr:Lake_Placid dbo:maximumDepth ?depth .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
29,Show me all museums in London.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?museum
WHERE {
  ?museum dbo:location dbr:London .
  ?museum a dbo:Museum .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
30,Which caves have more than 3 entrances?,"SELECT ?cave WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbp:entranceCount ?entrances .
  FILTER(?entrances > 3)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
31,Who is the tallest player of the Atlanta Falcons?,"SELECT ?player ?height
WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Atlanta_Falcons> .
  ?player dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
32,What are the top-10 action role-playing video games according to IGN?,"SELECT ?game ?IGNRating
WHERE {
  ?game rdf:type dbo:VideoGame ;
        dbo:genre dbr:Action_role-playing_game ;
        dbo:rating ?IGNRating .
  FILTER (?IGNRating >= 0)
}
ORDER BY DESC(?IGNRating)
LIMIT 10","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
33,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer WHERE {
  ?writer dbo:occupation dbr:Writer .
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
34,Show me all basketball players that are higher than 2 meters.,"SELECT ?player WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
  FILTER (?height > 2.0)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
35,When was the Statue of Liberty built?,"SELECT ?date WHERE {
  dbr:Statue_of_Liberty dbo:completionDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
36,Which states border Illinois?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?state WHERE {
  dbo:Illinois dbp:borderingstates ?state .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
37,Who developed Minecraft?,"SELECT ?developer WHERE {
  dbr:Minecraft dbo:developer ?developer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
38,Where did Hillel Slovak die?,"SELECT ?deathPlace WHERE {
  dbr:Hillel_Slovak dbo:deathPlace ?deathPlace .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
39,What movies does Jesse Eisenberg play in?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
40,Give all swimmers that were born in Moscow.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?swimmer WHERE {
  ?swimmer dbo:birthPlace dbr:Moscow .
  ?swimmer rdf:type dbo:Swimmer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
41,Give me all cosmonauts.,"SELECT ?cosmonaut WHERE {
  ?cosmonaut dbo:occupation dbr:Cosmonaut .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
42,Give me all Swiss non-profit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?org WHERE {
  ?org rdf:type dbo:Non-ProfitOrganisation .
  ?org dbo:locationCountry dbr:Switzerland .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
43,Which presidents were born in 1945?,"SELECT ?president WHERE {
  ?president dbo:birthYear 1945 .
  ?president rdf:type dbo:President .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
44,What kind of music did Lou Reed play?,"SELECT ?genre WHERE {
  dbr:Lou_Reed dbo:genre ?genre .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
45,Where do the Red Sox play?,"SELECT ?stadium WHERE {
  dbr:Boston_Red_Sox dbp:ballpark ?stadium .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
46,Show a list of soccer clubs that play in the Bundesliga.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:league dbr:Bundesliga .
  ?club a dbo:SoccerClub .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
47,Which volcanos in Japan erupted since 2000?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?volcano WHERE {
  ?volcano dbo:locatedInArea dbo:Japan .
  ?volcano dbo:eruptionYear ?year .
  FILTER (?year >= ""2000""^^xsd:gYear)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
48,Which bridges cross the Seine?,"SELECT ?bridge WHERE {
  ?bridge dbo:crosses dbr:Seine ;
          rdf:type dbo:Bridge .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
49,What is the official color of the University of Oxford?,"SELECT ?officialColor WHERE {
  dbr:University_of_Oxford dbo:officialSchoolColour ?officialColor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
50,How many films did Hal Roach produce?,"SELECT (COUNT(?film) AS ?count) 
WHERE {
  ?film dbo:producer dbr:Hal_Roach.
  ?film rdf:type dbo:Film.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
51,Give me all Danish movies.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?movie WHERE {
  ?movie dbo:country dbr:Denmark .
  ?movie rdf:type dbo:Film .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
52,What is the most frequent cause of death?,"SELECT ?causeOfDeath (COUNT(?causeOfDeath) AS ?count) WHERE {
  ?person dbo:deathCause ?causeOfDeath .
} 
GROUP BY ?causeOfDeath
ORDER BY DESC(?count)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
53,Who are the four youngest MVP basketball players?,"SELECT ?player ?birthDate
WHERE {
  ?player dbo:award dbr:NBA_Most_Valuable_Player_Award ;
          dbo:birthDate ?birthDate .
}
ORDER BY DESC(?birthDate)
LIMIT 4","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
54,Give me all companies in Munich.,"SELECT ?company WHERE {
  ?company dbo:location dbr:Munich .
  ?company rdf:type dbo:Company .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
55,Give me the capitals of all countries that the Himalayas run through.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?capital
WHERE {
  ?mountain dbo:country ?country .
  ?country dbo:capital ?capital .
  FILTER (?mountain = dbr:Himalayas)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
56,How many movies did Park Chan-wook direct?,"SELECT (COUNT(?movie) AS ?movieCount) 
WHERE {
  ?movie dbo:director dbr:Park_Chan-wook .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
57,Which rivers flow into a German lake?,"SELECT ?river WHERE {
  ?lake a dbo:Lake ;
        dbo:country dbr:Germany ;
        dbo:inflow ?river .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline rdf:type dbo:Airline .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
59,Give me all islands that belong to Japan.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island
WHERE {
  ?island dbo:country dbr:Japan .
  ?island a dbo:Island .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
60,How many inhabitants does Maribor have?,"SELECT ?population WHERE {
  dbr:Maribor dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
61,Give me all Apollo 14 astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dbo:mission dbr:Apollo_14 .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
62,Which companies have more than 1 million employees?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?company
WHERE {
  ?company a dbo:Company ;
           dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film WHERE {
  ?film dbo:director dbr:Garry_Marshall .
  ?film dbo:starring dbr:Julia_Roberts .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
64,Give me all soccer clubs in the Premier League.,"SELECT ?club WHERE {
  ?club dbo:league dbr:Premier_League .
  ?club rdf:type dbo:SoccerClub .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
65,What is the highest place of the Urals?,"SELECT ?place ?elevation 
WHERE {
  ?place dbo:location dbr:Ural_Mountains ;
         dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
66,Who is the governor of Wyoming?,"SELECT ?governor WHERE {
  dbr:Wyoming dbp:governor ?governor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
67,Where did the architect of the Eiffel Tower study?,"SELECT ?university WHERE {
  ?eiffelTower dbo:architect ?architect .
  ?architect dbo:almaMater ?university .
  ?eiffelTower rdfs:label ""Eiffel Tower""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
68,Give me all world heritage sites designated within the past two years.,"SELECT ?site WHERE {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dbo:yearOfInscription ?year .
  FILTER (?year >= 2014)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
69,Give me all actors who were born in Paris after 1950.,"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor dbo:birthPlace dbr:Paris .
  ?actor dbo:birthDate ?date .
  FILTER (YEAR(?date) > 1950)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
70,Which movies star both Liz Taylor and Richard Burton?,"SELECT ?movie WHERE {
  ?movie dbo:starring <http://dbpedia.org/resource/Elizabeth_Taylor> .
  ?movie dbo:starring <http://dbpedia.org/resource/Richard_Burton> .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
71,Give me all Australian nonprofit organizations.,"SELECT ?organization 
WHERE {
  ?organization dbo:country dbr:Australia .
  ?organization rdf:type dbo:Non-ProfitOrganisation .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
72,Which pope succeeded John Paul II?,"SELECT ?successor WHERE {
  dbpedia:John_Paul_II dbo:successor ?successor.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
73,Give me all ESA astronauts.,"SELECT ?astronaut WHERE {
  ?astronaut dbo:occupation dbr:European_Space_Agency.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
74,Who was president of Pakistan in 1978?,"SELECT ?person WHERE {
  ?person dbo:office dbr:President_of_Pakistan .
  ?person dbo:termStart ?start .
  ?person dbo:termEnd ?end .
  FILTER (YEAR(?start) <= 1978 && YEAR(?end) >= 1978)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
75,Who is the owner of Rolls-Royce?,"SELECT ?owner 
WHERE {
  dbr:Rolls-Royce dbo:owner ?owner .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
76,How many museums does Paris have?,"SELECT (COUNT(?museum) AS ?count) WHERE {
  ?museum dbo:location dbr:Paris .
  ?museum rdf:type dbo:Museum .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
77,Where was JFK assassinated?,"SELECT ?place WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?place .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
78,Give me all federal chancellors of Germany.,"SELECT ?chancellor WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
79,Show me everyone who was born on Halloween.,"SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (datatype(?date) = xsd:date && MONTH(?date) = 10 && DAY(?date) = 31)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
80,Which beer originated in Ireland?,"SELECT ?beer WHERE {
  ?beer dbo:type dbr:Beer ;
        dbo:origin dbr:Ireland .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
81,To which countries does the Himalayan mountain system extend?,"SELECT ?country WHERE {
  dbr:Himalayas dbo:location ?country .
  ?country rdf:type dbo:Country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
82,Which actors were born in Germany?,"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor dbo:birthPlace ?place .
  ?place dbo:country dbr:Germany .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
83,How much carbs does peanut butter have?,"SELECT ?carbs
WHERE {
  dbr:Peanut_butter dbp:carbs ?carbs .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?count) WHERE {
  ?film dbo:producer ?producer .
} 
GROUP BY ?producer 
ORDER BY DESC(?count) 
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
85,How many employees does Google have?,"SELECT ?numberOfEmployees WHERE {
  dbr:Google dbo:numberOfEmployees ?numberOfEmployees .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
86,Give me all actors who were born in Berlin.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor dbo:birthPlace dbr:Berlin .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
87,Who created Goofy?,"SELECT ?creator WHERE {
  dbr:Goofy dbo:creator ?creator .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
88,Which music albums contain the song Last Christmas?,"SELECT ?album WHERE {
  ?song dbo:title ""Last Christmas""@en.
  ?song dbo:album ?album.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
89,When was Alberta admitted as province?,"SELECT ?date WHERE {
  dbr:Alberta dbp:establishedDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
90,How many missions does the Soyuz programme have?,"SELECT (COUNT(?mission) AS ?numberOfMissions)
WHERE {
  ?mission dbo:programme dbr:Soyuz_programme.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
91,Give me all the TV shows with Neil Patrick Harris.,"SELECT ?show WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris .
  ?show rdf:type dbo:TelevisionShow .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
92,When were the Hells Angels founded?,"SELECT ?foundingYear WHERE {
  dbr:Hells_Angels dbo:foundingYear ?foundingYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
93,What is the net income of Apple?,"SELECT ?netIncome WHERE {
  dbr:Apple_Inc dbo:netIncome ?netIncome .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
94,Give me all Swedish holidays.,"SELECT ?holiday WHERE {
  ?holiday dbo:country dbr:Sweden .
  ?holiday rdf:type dbo:Holiday .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
95,In which city was the former Dutch queen Juliana buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  dbr:Juliana_of_the_Netherlands dbp:burialPlace ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
96,List all the musicals with music by Leonard Bernstein.,"SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
97,Give me all companies in the advertising industry.,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Advertising .
  ?company rdf:type dbo:Company .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
98,What is the largest metropolitan area in Washington state?,"SELECT ?city ?metroArea
WHERE {
  ?city dbo:isPartOf dbr:Washington_(state) .
  ?city dbp:largestMetro ?metroArea .
}
ORDER BY DESC(?metroArea)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
99,Who killed John Lennon?,"SELECT ?killer WHERE {
  dbr:John_Lennon dbo:deathCause ?killer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
100,Which writers studied in Istanbul?,"SELECT ?writer WHERE {
  ?writer rdf:type dbo:Writer .
  ?writer dbo:education ?institution .
  ?institution dbo:city dbr:Istanbul .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
101,Give me all Australian metalcore bands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?band
WHERE {
  ?band dbo:genre dbr:Metalcore ;
        dbo:origin dbr:Australia .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
102,Which countries adopted the Euro?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:Euro .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
103,Give me all types of eating disorders.,"SELECT ?eatingDisorder WHERE {
  ?eatingDisorder rdf:type dbo:Disease .
  ?eatingDisorder dbo:field dbr:Eating_disorders .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
104,Was Marc Chagall a jew?,"SELECT ?religion WHERE {
  dbr:Marc_Chagall dbo:religion ?religion .
  FILTER (?religion = dbr:Judaism)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"SELECT ?rank WHERE {
  dbr:Brazil dbp:fifaMin ?rank .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
106,How many films did Leonardo DiCaprio star in?,"SELECT (COUNT(?film) AS ?count) WHERE {
  ?film dbo:starring dbr:Leonardo_DiCaprio .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
107,Was Margaret Thatcher a chemist?,"SELECT ?occupation WHERE {
  dbr:Margaret_Thatcher dbo:occupation ?occupation .
  FILTER (str(?occupation) = ""Chemist"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
108,Which U.S. states are in the same time zone as Utah?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?state WHERE {
  dbr:Utah dbp:timeZone ?utahTimeZone .
  ?state rdf:type dbo:Place .
  ?state dbp:timeZone ?utahTimeZone .
  ?state dbo:country dbr:United_States .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
109,Give me all books written by Danielle Steel.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
110,Which country has the most official languages?,"SELECT ?country (COUNT(?language) AS ?languageCount)
WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
}
GROUP BY ?country
ORDER BY DESC(?languageCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
111,What is the total amount of men and women serving in the FDNY?,"SELECT ?totalEmployees WHERE {
  dbr:New_York_City_Fire_Department dbp:employees ?totalEmployees .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
112,Which actor played Chewbacca?,"SELECT ?actor WHERE {
  dbr:Chewbacca dbo:portrayer ?actor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
113,Give me all libraries established earlier than 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library
WHERE {
  ?library dbo:established ?date .
  ?library rdf:type dbo:Library .
  FILTER (?date < ""1400""^^xsd:gYear)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
114,Which programming languages were influenced by Perl?,"SELECT ?programmingLanguage WHERE {
  ?programmingLanguage dbo:influencedBy dbr:Perl .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
115,In which U.S. state is Mount McKinley located?,"SELECT ?state WHERE {
  dbr:Denali dbo:location ?state .
  ?state rdf:type dbo:Place .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
116,What airlines are part of the SkyTeam alliance?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airline WHERE {
  ?airline dbo:alliance dbr:SkyTeam .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
117,Which ships were called after Benjamin Franklin?,"SELECT ?ship WHERE {
  ?ship dbo:shipNamesake dbr:Benjamin_Franklin .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
118,Give me all Methodist politicians.,"SELECT ?politician WHERE {
  ?politician dbo:religion dbr:Methodism .
  ?politician rdf:type dbo:Politician .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
119,What other books have been written by the author of The Fault in Our Stars?,"SELECT ?book WHERE {
  ?book dbo:author ?author .
  dbr:The_Fault_in_Our_Stars dbo:author ?author .
  FILTER(?book != dbr:The_Fault_in_Our_Stars)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
120,What is the highest mountain?,"SELECT ?mountain WHERE {
  ?mountain rdf:type dbo:Mountain .
} ORDER BY DESC(?elevation) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
121,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
GROUP BY ?poet
ORDER BY DESC(?bookCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
122,Which programming languages influenced Javascript?,"SELECT ?language 
WHERE {
  dbr:JavaScript dbo:influencedBy ?language .
  ?language rdf:type dbo:ProgrammingLanguage .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
123,Which musician wrote the most books?,"SELECT ?musician (COUNT(?book) AS ?bookCount)
WHERE {
  ?musician rdf:type dbo:MusicalArtist .
  ?book dbo:author ?musician .
}
GROUP BY ?musician
ORDER BY DESC(?bookCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
124,Which films starring Clint Eastwood did he direct himself?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Clint_Eastwood .
  ?film dbo:director dbr:Clint_Eastwood .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
125,Which software has been developed by organizations founded in California?,"SELECT ?software WHERE {
  ?company dbo:foundationPlace/dbo:country dbr:California .
  ?company dbo:product ?software .
  ?software rdf:type dbo:Software .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
126,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
127,How many airlines are members of the Star Alliance?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline dbo:alliance dbr:Star_Alliance .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
128,Give me all actors called Baldwin.,"SELECT ?actor WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor foaf:name ?name .
  FILTER(CONTAINS(?name, ""Baldwin""))
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
129,Who wrote The Hunger Games?,"SELECT ?author WHERE {
  dbr:The_Hunger_Games dbo:author ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
130,For which label did Elvis record his first album?,"SELECT ?label WHERE {
  ?album dbo:artist dbr:Elvis_Presley ;
         dbo:recordLabel ?label .
  FILTER NOT EXISTS {
    ?otherAlbum dbo:artist dbr:Elvis_Presley ;
                dbo:recordLabel ?otherLabel ;
                dbo:releaseDate ?otherDate .
    FILTER (?otherDate < ?date)
  }
} ORDER BY ?date LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
131,Is Christian Bale starring in Batman Begins?,"SELECT ?film WHERE {
  ?film dbo:starring dbr:Christian_Bale .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Batman_Begins"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
132,Where is the residence of the prime minister of Spain?,"SELECT ?residence WHERE {
  ?person dbo:office dbr:Prime_Minister_of_Spain ;
          dbo:residence ?residence .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?movie) AS ?movieCount)
WHERE {
  ?movie dbo:starring ?actor .
}
GROUP BY ?actor
ORDER BY DESC(?movieCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
134,Which countries have more than two official languages?,"SELECT ?country WHERE {
  ?country a dbo:Country .
  {
    SELECT ?country (COUNT(?language) AS ?languageCount) WHERE {
      ?country dbo:officialLanguage ?language .
    } GROUP BY ?country
  }
  FILTER(?languageCount > 2)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
135,Which countries have more than ten caves?,"SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave dbo:location ?country .
  ?cave rdf:type dbo:Cave .
  ?country rdf:type dbo:Country .
}
GROUP BY ?country
HAVING (?caveCount > 10)","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?song ?releaseDate
WHERE {
  ?song dbo:artist <http://dbpedia.org/resource/Bruce_Springsteen> .
  ?song dbo:releaseDate ?releaseDate .
  ?song rdf:type dbo:Song .
  FILTER (?releaseDate >= ""1980-01-01""^^xsd:date && ?releaseDate <= ""1990-12-31""^^xsd:date)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
137,Which television shows were created by John Cleese?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:John_Cleese.
  ?show rdf:type dbo:TelevisionShow.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
138,When did Latvia join the EU?,"SELECT ?date WHERE {
  dbr:Latvia dbp:accessioneudate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
139,Which soccer players were born on Malta?,"SELECT ?player WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player rdf:type dbo:SoccerPlayer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
140,How many politicians graduated from Columbia University?,"SELECT (COUNT(?politician) AS ?count) 
WHERE {
  ?politician dbo:almaMater dbr:Columbia_University .
  ?politician rdf:type dbo:Politician .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
141,Give me the birthdays of all actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?birthday WHERE {
  dbr:Charmed dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
142,Which telecommunications organizations are located in Belgium?,"SELECT ?organization
WHERE {
  ?organization dbo:industry dbr:Telecommunication ;
                dbo:location dbr:Belgium .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
143,Give me a list of all lakes in Denmark.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lake WHERE {
  ?lake dbo:country dbr:Denmark .
  ?lake a dbo:Lake .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
144,How many children does Eddie Murphy have?,"SELECT ?children WHERE {
  dbr:Eddie_Murphy dbo:children ?children.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
145,Show me all English Gothic buildings in Kent.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?building ?name WHERE {
  ?building dbo:architecturalStyle dbr:English_Gothic_architecture ;
            dbo:location dbr:Kent ;
            rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
146,Who is the manager of Real Madrid?,"SELECT ?manager WHERE {
  dbr:Real_Madrid_C.F. dbo:manager ?manager .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
147,In which countries can you pay using the West African CFA franc?,"SELECT ?country WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
148,Which holidays are celebrated around the world?,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
149,What is the longest river?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River .
} ORDER BY DESC(?length) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
150,Which organizations were founded in 1930?,"SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1930""^^xsd:gYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
151,What is the birth name of Angela Merkel?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbp:birthName ?birthName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
152,Who has Tom Cruise been married to?,"SELECT ?name WHERE {
  dbr:Tom_Cruise dbo:spouse ?spouse.
  ?spouse rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
153,Which weapons did Heckler & Koch develop?,"SELECT ?weapon WHERE {
  ?weapon dbo:manufacturer dbr:Heckler_&_Koch .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
154,What is the smallest city by area in Germany?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City ;
        dbo:country dbr:Germany ;
        dbo:areaTotal ?area .
}
ORDER BY ASC(?area)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
155,What is the ruling party in Lisbon?,"SELECT ?party WHERE {
  dbr:Lisbon dbp:leaderParty ?party .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
156,How heavy is Jupiter's lightest moon?,"SELECT ?moon ?mass WHERE {
  ?moon dbo:satelliteOf dbr:Jupiter ;
        dbo:mass ?mass .
} ORDER BY ASC(?mass) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
157,How many employees does IBM have?,"SELECT ?numberOfEmployees WHERE {
  dbr:IBM dbo:numberOfEmployees ?numberOfEmployees .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
158,List all episodes of the first season of the HBO television series The Sopranos!,"SELECT ?episode WHERE {
  ?show dbo:series ?series .
  ?series rdfs:label ""The Sopranos""@en .
  ?episode dbo:series ?show .
  ?episode dbo:seasonNumber 1 .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
159,What does ICRO stand for?,"SELECT ?description WHERE {
  ?s dbo:abbreviation ""ICRO"" .
  ?s rdfs:comment ?description .
  FILTER (lang(?description) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"SELECT ?newSeriesEpisodes ?oldSeriesEpisodes WHERE {
  ?newSeries dbo:series 'Battlestar Galactica (2004 TV series)'@en.
  ?newSeries dbo:numberOfEpisodes ?newSeriesEpisodes.
  ?oldSeries dbo:series 'Battlestar Galactica (1978 TV series)'@en.
  ?oldSeries dbo:numberOfEpisodes ?oldSeriesEpisodes.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
161,Give me all films produced by Hal Roach.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film WHERE {
  ?film dbo:producer dbr:Hal_Roach .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
162,Who played Agent Smith in Matrix?,"SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""The Matrix""@en .
  ?actor rdfs:label ?actorLabel .
  FILTER (LANG(?actorLabel) = ""en"") .
  ?actor dbo:abstract ?abstract .
  FILTER (LANG(?abstract) = ""en"") .
  FILTER (CONTAINS(?abstract, ""Agent Smith"")) .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
163,Which Greek parties are pro-European?,"SELECT ?party WHERE {
  ?party rdf:type dbo:PoliticalParty .
  ?party dbo:country dbr:Greece .
  ?party dbo:ideology dbr:Pro-Europeanism .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
164,Give me a list of all bandleaders that play trumpet.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandleader WHERE {
  ?bandleader rdf:type dbo:MusicalArtist .
  ?bandleader dbo:instrument dbr:Trumpet .
  ?bandleader dbo:occupation dbr:Bandleader .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
165,What is the second highest mountain on Earth?,"SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
OFFSET 1
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
166,Is Egypts largest city also its capital?,"SELECT ?capital ?largestCity
WHERE {
  dbr:Egypt dbo:capital ?capital .
  dbr:Egypt dbo:largestCity ?largestCity .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
167,Which rockets were launched from Baikonur?,"SELECT ?rocket WHERE {
  ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
168,How many programming languages are there?,"SELECT (COUNT(?language) AS ?count) WHERE {
  ?language rdf:type dbo:ProgrammingLanguage .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
169,Which Chess players died in the same place they were born in?,"SELECT ?player WHERE {
  ?player rdf:type dbo:ChessPlayer .
  ?player dbo:birthPlace ?birthPlace .
  ?player dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
170,Who is the owner of Facebook?,"SELECT ?owner 
WHERE { 
  dbr:Facebook dbo:foundedBy ?owner .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
171,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
172,In which U.S. state is Fort Knox located?,"SELECT ?state WHERE {
  dbr:Fort_Knox dbo:location ?state .
  ?state rdf:type dbo:Place .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?population
WHERE {
  ?city dbo:isPartOf <http://dbpedia.org/resource/New_Jersey> .
  ?city dbo:populationTotal ?population .
  FILTER (?population > 100000) .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
174,Which mountains are higher than the Nanga Parbat?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?height
WHERE {
  ?mountain dbo:elevation ?height .
  ?nanga dbo:elevation ?nangaHeight .
  FILTER(?height > ?nangaHeight) .
  FILTER(?mountain != dbo:Nanga_Parbat) .
  ?mountain rdfs:label ?mountainLabel .
  ?nanga rdfs:label ""Nanga Parbat""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
175,Give me all B-sides of the Ramones.,"SELECT ?bSide WHERE {
  ?song dbo:artist dbr:Ramones ;
        dbo:bSide ?bSide .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
176,What are the specialities of the UNC Health Care?,"SELECT ?speciality WHERE {
  dbr:UNC_Health_Care dbp:speciality ?speciality .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
177,When was Olof Palme shot?,"SELECT ?date WHERE {
  dbr:Olof_Palme dbo:deathDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
178,List the seven kings of Rome.,"SELECT ?king WHERE {
  ?king dbo:monarch dbr:King_of_Rome .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
179,Give me all people that were born in Vienna and died in Berlin.,"SELECT ?person
WHERE {
  ?person dbo:birthPlace dbr:Vienna .
  ?person dbo:deathPlace dbr:Berlin .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
180,Is Darth Vader Luke’s father?,"SELECT ?father WHERE {
  dbpedia:Luke_Skywalker dbo:parent ?father.
  FILTER (str(?father) = ""http://dbpedia.org/resource/Darth_Vader"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
181,Show me all the breweries in Australia.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?brewery
WHERE {
  ?brewery dbo:country dbr:Australia .
  ?brewery rdf:type dbo:Brewery .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?film ?filmLabel WHERE {
  ?film dbo:producer <http://dbpedia.org/resource/Steven_Spielberg> .
  ?film dbo:budget ?budget .
  ?film rdfs:label ?filmLabel .
  FILTER (?budget >= 80000000) .
  FILTER (lang(?filmLabel) = 'en') .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
183,Give me all soccer clubs in Spain.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:ground ?ground .
  ?ground dbo:country dbr:Spain .
  ?club rdf:type dbo:SoccerClub .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
184,Who produced films starring Natalie Portman?,"SELECT ?producer WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Natalie_Portman> .
  ?film dbo:producer ?producer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
185,Give me all breeds of the German Shepherd dog.,"SELECT ?breed WHERE {
  ?breed dbo:wikiPageRedirects dbr:German_Shepherd.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight
WHERE {
  ?team dbo:shortName ""Chicago Bulls"" .
  ?player dbo:team ?team .
  ?player dbo:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
187,Which languages are spoken in Estonia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
188,What is the largest country in the world?,"SELECT ?country WHERE {
  ?country a dbo:Country ;
           dbo:areaTotal ?area .
}
ORDER BY DESC(?area)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
189,What is the largest city in america?,"SELECT ?city WHERE {
  dbr:United_States dbo:largestCity ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
190,Who was the pope that founded the Vatican Television?,"SELECT ?pope WHERE {
  ?tv dbo:foundingYear ?year .
  ?tv rdfs:label ""Vatican Television""@en .
  ?pope dbo:birthDate ?birth .
  ?pope dbo:deathDate ?death .
  ?pope rdf:type dbo:Pope .
  FILTER (?birth <= ?year && ?year <= ?death)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
191,Who discovered Ceres?,"SELECT ?person WHERE {
  dbr:Ceres_(dwarf_planet) dbo:discoverer ?person .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
192,Who is the king of the Netherlands?,"SELECT ?king WHERE {
  dbr:Netherlands dbo:leader ?king .
  ?king rdf:type dbo:Monarch .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
193,Is Cola a beverage?,"SELECT ?subject WHERE {
  ?subject rdfs:label ""Cola""@en .
  ?subject rdf:type dbo:Beverage .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"SELECT ?almaMater WHERE {
  ?person dbo:almaMater ?almaMater .
  ?person foaf:name ""Angela Merkel""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
195,Who wrote the book Les Piliers de la terre?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Les Piliers de la terre""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
196,Which airports does Yeti Airlines serve?,"SELECT ?airport WHERE {
  ?airline dbo:wikiPageID ?id .
  ?airline rdfs:label ""Yeti Airlines""@en .
  ?airline dbo:targetAirport ?airport .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
197,Where is the birthplace of Goethe?,"SELECT ?birthplace WHERE {
  dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"SELECT ?cubanMissileCrisisDate ?bayOfPigsInvasionDate WHERE {
  dbr:Cuban_Missile_Crisis dbo:startDate ?cubanMissileCrisisDate .
  dbr:Bay_of_Pigs_Invasion dbo:startDate ?bayOfPigsInvasionDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
199,Which ingredients do I need for carrot cake?,"SELECT ?ingredient WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
200,Who created Wikipedia?,"SELECT ?creator
WHERE {
  dbr:Wikipedia dbo:author ?creator .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
201,What is the highest mountain in Saxony Germany?,"SELECT ?mountain ?elevation WHERE {
  ?mountain dbo:location dbr:Saxony ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
202,Who is the current federal minister of finance in Germany?,"SELECT ?person WHERE {
  ?x a dbo:GovernmentAgency ;
     dbo:country dbr:Germany ;
     dbo:leader ?person .
  ?person rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
203,In which country is Mecca located?,"SELECT ?country WHERE {
  dbr:Mecca dbo:country ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
204,Who played Gus Fring in Breaking Bad?,"SELECT ?actor WHERE {
  ?show dbo:starring ?actor .
  ?show rdfs:label ""Breaking Bad""@en .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = ""en"") .
  ?actor dbo:character ?character .
  ?character rdfs:label ""Gus Fring""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
205,In which country does the Nile start?,"SELECT ?country WHERE {
  dbr:Nile dbo:sourceCountry ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
206,In which state Penn State University is located?,"SELECT ?state WHERE {
  dbr:Pennsylvania_State_University dbo:location ?state .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
207,What is the biggest stadium in Spain?,"SELECT ?stadium ?capacity
WHERE {
  ?stadium dbo:location dbr:Spain ;
           dbo:seatingCapacity ?capacity .
}
ORDER BY DESC(?capacity)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
208,Who is the coach of Ankara's ice hockey team?,"SELECT ?coach
WHERE {
  ?team dbo:location dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
209,How large is the area of UK?,"SELECT ?area WHERE {
  dbr:United_Kingdom dbo:areaTotal ?area .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
210,Who created Batman?,"SELECT ?creator WHERE {
  dbr:Batman dbo:creator ?creator .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
211,Was Sigmund Freud married?,"SELECT ?spouse
WHERE {
  dbr:Sigmund_Freud dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
212,Who are the developers of DBpedia?,"SELECT ?developer WHERE {
  dbr:DBpedia dbo:developer ?developer
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
213,Give me all movies directed by Francis Ford Coppola.,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
214,Are tree frogs a type of amphibian?,"SELECT ?answer 
WHERE {
  dbr:Tree_frog rdf:type ?answer .
  FILTER (?answer = dbo:Amphibian)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
215,What is the location of the Houses of Parliament?,"SELECT ?location WHERE {
  dbr:Palace_of_Westminster dbo:location ?location .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
216,how much is the elevation of Düsseldorf Airport ?,"SELECT ?elevation 
WHERE {
  dbr:Düsseldorf_Airport dbo:elevation ?elevation .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
217,How much is the population of mexico city ?,"SELECT ?population WHERE {
  dbr:Mexico_City dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
218,when was the founding date of french fifth republic?,"SELECT ?foundingDate WHERE {
  dbr:French_Fifth_Republic dbo:foundingDate ?foundingDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
219,Who was the first King of England?,"SELECT ?person ?name WHERE {
  ?person dbo:succession dbp:List_of_English_monarchs.
  ?person dbo:reignStart ?reignStart.
  ?person foaf:name ?name.
} ORDER BY ?reignStart
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
220,Who is the editor of Forbes?,"SELECT ?editor WHERE {
  dbr:Forbes dbo:editor ?editor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
221,Which awards did Douglas Hofstadter win?,"SELECT ?award 
WHERE {
  ?person dbo:award ?award .
  ?person foaf:name ""Douglas Hofstadter""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
222,Who is the youngest Darts player?,"SELECT ?player ?birthDate
WHERE {
  ?player rdf:type dbo:DartsPlayer.
  ?player dbo:birthDate ?birthDate.
}
ORDER BY DESC(?birthDate)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
223,Is horse racing a sport?,"SELECT ?subject WHERE {
  ?subject rdfs:label ""Horse racing""@en .
  ?subject rdf:type dbo:Sport .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
224,Which river does the Brooklyn Bridge cross?,"SELECT ?river WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
225,How many people live in Poland?,"SELECT ?population WHERE {
  dbr:Poland dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
226,When was the last episode of the TV series Friends aired?,"SELECT ?endDate WHERE {
  ?show rdf:type dbo:TelevisionShow .
  ?show rdfs:label ""Friends""@en .
  ?show dbo:finalBroadcast ?endDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
227,Is the wife of president Obama called Michelle?,"SELECT ?name WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse .
  ?spouse rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  FILTER (str(?name) = ""Michelle Obama"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
229,Who is 8th president of US?,"SELECT ?president WHERE {
  ?president dbo:orderInOffice 8 ;
             rdf:type dbo:President ;
             dbo:country dbr:United_States .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
230,how much is the total population of  european union?,"SELECT ?population WHERE {
  dbr:European_Union dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
231,Give me all launch pads operated by NASA.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?launchPad
WHERE {
  ?launchPad dbo:operator <http://dbpedia.org/resource/National_Aeronautics_and_Space_Administration> .
  ?launchPad rdf:type dbo:LaunchPad .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
232,Who developed the video game World of Warcraft?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?developer
WHERE {
  dbr:World_of_Warcraft dbo:developer ?developer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
233,What is the birth name of Adele?,"SELECT ?birthName WHERE {
  dbr:Adele dbp:birthName ?birthName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
234,What is the population of Cairo?,"SELECT ?population WHERE {
  dbr:Cairo dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
235,Is Frank Herbert still alive?,"SELECT ?deathDate WHERE {
  dbr:Frank_Herbert dbo:deathDate ?deathDate.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
236,What is the last work of Dan Brown?,"SELECT ?work ?date WHERE {
  ?person foaf:name ""Dan Brown""@en.
  ?work dbo:author ?person.
  ?work dbo:publicationDate ?date.
} ORDER BY DESC(?date) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
237,Where is Sungkyunkwan University?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?location
WHERE {
  res:Sungkyunkwan_University dbo:location ?location .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
238,Who is the author of the interpretation of dreams?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Interpretation of Dreams""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
239,When was the death  of  Shakespeare?,"SELECT ?deathDate WHERE {
  dbr:William_Shakespeare dbo:deathDate ?deathDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
241,Who developed Slack?,"SELECT ?developer WHERE {
  dbr:Slack_Technologies dbo:developer ?developer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
242,Where is the origin of Carolina reaper?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?origin WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
243,In which year was Rachel Stevens born?,"SELECT ?birthYear WHERE {
  dbr:Rachel_Stevens dbo:birthYear ?birthYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
244,How often did Jane Fonda marry?,"SELECT (COUNT(?spouse) as ?count) WHERE {
  dbr:Jane_Fonda dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
245,Was the wife of president Lincoln called Mary?,"SELECT ?name WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?spouse .
  ?spouse rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  FILTER (str(?name) = ""Mary Todd Lincoln"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
246,Which cities does the Weser flow through?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  dbr:Weser dbo:city ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
247,In which programming language is GIMP written?,"SELECT ?programmingLanguage WHERE {
  dbr:GIMP dbo:programmingLanguage ?programmingLanguage .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
248,Which university did Angela Merkel attend?,"SELECT ?university WHERE {
  dbr:Angela_Merkel dbo:almaMater ?university .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
249,List all the musicals with music by Elton John.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
250,How many Aldi stores are there?,"SELECT ?numberOfLocations WHERE {
  dbr:Aldi dbo:numberOfLocations ?numberOfLocations .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
251,What is the longest river in the world?,"SELECT ?river WHERE {
  ?river rdf:type dbo:River .
} ORDER BY DESC(?length) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
252,When was John Adams born?,"SELECT ?birthDate WHERE {
  dbr:John_Adams dbo:birthDate ?birthDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
253,Which companies produce hovercrafts?,"SELECT ?company WHERE {
  ?company dbo:industry ?industry .
  ?industry rdfs:label ?industryLabel .
  FILTER (lang(?industryLabel) = 'en') .
  FILTER (contains(lcase(?industryLabel), ""hovercraft"")) .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
254,Who was the wife of U.S. president Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
255,Which species does an elephant belong?,"SELECT ?species WHERE {
  dbr:Elephant dbo:species ?species .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
256,How many people live in the capital of Australia?,"SELECT ?population WHERE {
  dbr:Australia dbo:capital ?capital .
  ?capital dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
257,In which ancient empire could you pay with cocoa beans?,"SELECT ?empire WHERE {
  ?empire dbo:currency ?currency .
  ?currency rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER (contains(lcase(str(?label)), ""cocoa beans"")) .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
258,How many theories did Albert Einstein come up with?,"SELECT COUNT(?theory) WHERE {
  dbr:Albert_Einstein dbo:knownFor ?theory .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
259,Who composed the soundtrack for Cameron's Titanic?,"SELECT ?composer WHERE {
  dbr:Titanic_(1997_film) dbo:musicComposer ?composer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
260,Give me the runtime of Toy Story.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?runtime
WHERE {
  res:Toy_Story dbo:runtime ?runtime .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
262,With how many countries Iran has borders?,"SELECT COUNT(?country) WHERE {
  dbr:Iran dbo:border ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
263,Which electronics companies were founded in Beijing?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Electronics.
  ?company dbo:foundingPlace dbr:Beijing.
  ?company rdf:type dbo:Company.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
264,Who was the successor of John F. Kennedy?,"SELECT ?successor WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
265,Who is the mayor of Paris?,"SELECT ?name WHERE {
  dbr:Paris dbo:mayor ?mayor.
  ?mayor foaf:name ?name.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
266,Did Arnold Schwarzenegger attend a university?,"SELECT ?university WHERE {
  dbr:Arnold_Schwarzenegger dbo:almaMater ?university .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
267,Is James Bond married?,"SELECT ?spouse
WHERE {
  dbr:James_Bond dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
268,Does the Isar flow into a lake?,"SELECT ?lake WHERE {
  dbr:Isar dbo:inflow ?lake .
  ?lake rdf:type dbo:Lake .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
269,Which Indian company has the most employees?,"SELECT ?company ?employees
WHERE {
  ?company a dbo:Company ;
           dbo:locationCountry dbr:India ;
           dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?employees)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
270,Who was John F. Kennedy's vice president?,"SELECT ?vicePresident WHERE {
  dbr:John_F._Kennedy dbo:vicePresident ?vicePresident .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
271,Which country does the creator of Miffy come from?,"SELECT ?country WHERE {
  ?miffy dbo:creator ?creator .
  ?miffy rdfs:label ""Miffy""@en .
  ?creator dbo:birthPlace ?country .
  ?country a dbo:Country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
273,In what city is the Heineken brewery?,"SELECT ?city WHERE {
  dbr:Heineken dbo:locationCity ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
274,Is Barack Obama a democrat?,"SELECT ?party WHERE {
  dbpedia:Barack_Obama dbpedia-owl:party ?party .
  FILTER (str(?party) = ""Democratic Party (United States)"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
275,List the children of Margaret Thatcher.,"SELECT ?child WHERE {
  dbr:Margaret_Thatcher dbo:child ?child .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
276,From which region is the Melon de Bourgogne?,"SELECT ?region WHERE {
  ?wine dbo:variety dbr:Melon_de_Bourgogne .
  ?wine dbo:wineRegion ?region .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
278,how big is the total area of North Rhine- Westphalia?,"SELECT ?area WHERE {
  dbr:North_Rhine-Westphalia dbo:areaTotal ?area .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
279,Which city has the most inhabitants?,"SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
280,What is Donald Trump's main business?,"SELECT ?mainBusiness WHERE {
  dbr:Donald_Trump dbo:knownFor ?mainBusiness .
  ?mainBusiness rdf:type dbo:Company .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
281,When will start the final match of the football world cup 2018?,"SELECT ?date WHERE {
  dbr:2018_FIFA_World_Cup_Final dbo:startTime ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
282,Which films did Stanley Kubrick direct?,"SELECT ?film WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
283,how much is the population  Iraq?,"SELECT ?population WHERE {
  dbr:Iraq dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
284,How many inhabitants does the largest city in Canada have?,"SELECT ?population WHERE {
  dbr:Canada dbo:largestCity ?city .
  ?city dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
285,Who is the mayor of the capital of French Polynesia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mayor WHERE {
  dbr:French_Polynesia dbo:capital ?capital .
  ?capital dbo:mayor ?mayorResource .
  ?mayorResource foaf:name ?mayor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
286,Give me all actors starring in movies directed by William Shatner.,"SELECT ?actor WHERE {
  ?movie dbo:director dbr:William_Shatner .
  ?movie dbo:starring ?actor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
287,How tall is Claudia Schiffer?,"SELECT ?height WHERE {
  dbr:Claudia_Schiffer dbo:height ?height .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
288,how much is the population densty rank of germany?,"SELECT ?populationDensityRank WHERE {
  dbr:Germany dbp:populationDensityRank ?populationDensityRank .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
289,What is the highest mountain in Italy?,"SELECT ?mountain ?elevation WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:location dbr:Italy ;
            dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
290,List all games by GMT.,"SELECT ?game WHERE {
  ?game dbo:publisher ?publisher .
  ?publisher foaf:name ""GMT Games""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
291,What is the official language of Suriname?,"SELECT ?officialLanguage WHERE {
  dbr:Suriname dbo:officialLanguage ?officialLanguage .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
292,In which city did Nikos Kazantzakis die?,"SELECT ?city WHERE {
  dbr:Nikos_Kazantzakis dbo:deathPlace ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
293,What is in a chocolate chip cookie?,"SELECT ?ingredient WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
294,In which country is the Limerick Lake?,"SELECT ?country WHERE {
  ?lake dbo:country ?country .
  ?lake rdfs:label ""Limerick Lake""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
295,Give me all video games published by Mean Hamster Software.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?game ?gameLabel WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software.
  ?game rdfs:label ?gameLabel.
  FILTER (lang(?gameLabel) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
296,Give me all members of Prodigy.,"SELECT ?member 
WHERE {
  ?band dbo:bandMember ?member .
  ?band rdfs:label ""The Prodigy""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
297,In which time zone is Rome?,"SELECT ?timeZone WHERE {
  dbr:Rome dbo:timeZone ?timeZone .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
298,How high is the lighthouse in Colombo?,"SELECT ?height WHERE {
  ?lighthouse dbo:location dbr:Colombo .
  ?lighthouse rdf:type dbo:Lighthouse .
  ?lighthouse dbo:height ?height .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
299,Who are the writers of the Wall album of Pink Floyd?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer
WHERE {
  dbr:The_Wall dbo:musicComposer ?writer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
300,Who is the mayor of Rotterdam?,"SELECT ?mayor WHERE {
  dbr:Rotterdam dbo:leaderName ?mayor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
301,What is the largest city in Australia?,"SELECT ?city WHERE {
  dbr:Australia dbo:largestCity ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
302,Who was married to president Chirac?,"SELECT ?spouse
WHERE {
  dbr:Jacques_Chirac dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
303,What form of government is found in South Africa?,"SELECT ?governmentType WHERE {
  dbr:South_Africa dbo:governmentType ?governmentType .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
304,How high is the Yokohama Marine Tower?,"SELECT ?height WHERE {
  dbr:Yokohama_Marine_Tower dbo:height ?height .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
305,Which holidays are celebrated around the world? test2,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
306,Who is the tallest basketball player?,"SELECT ?player ?height
WHERE {
  ?player rdf:type dbo:BasketballPlayer ;
          dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
307,How many languages are spoken in Turkmenistan?,"SELECT COUNT(?language) WHERE {
  dbr:Turkmenistan dbo:officialLanguage ?language .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
308,Did Che Guevara have children?,"SELECT ?child 
WHERE {
  dbr:Che_Guevara dbo:child ?child .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"SELECT ?year WHERE {
  ?award dbo:winner dbr:Aki_Kaurismäki .
  ?award dbo:award dbr:Grand_Prix_(Cannes_Film_Festival) .
  ?award dbo:year ?year .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
310,To which party does the mayor of Paris belong?,"SELECT ?party WHERE {
  dbr:Paris dbo:mayor ?mayor.
  ?mayor dbo:party ?party.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver ?races
WHERE {
  ?driver rdf:type dbo:FormulaOneRacer .
  ?driver dbo:numberOfRaces ?races .
}
ORDER BY DESC(?races)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
312,What country is Sitecore from?,"SELECT ?country 
WHERE {
  dbr:Sitecore dbo:locationCountry ?country.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
313,Give me the birth place of Frank Sinatra.,"SELECT ?birthPlace WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
314,Is Christian Bale starring in Velvet Goldmine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film 
WHERE {
  ?film dbo:starring res:Christian_Bale .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Velvet_Goldmine"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  ?son dbo:parent dbr:Sonny_Bono, dbr:Cher.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
316,How many ethnic groups live in Slovenia?,"SELECT (COUNT(?ethnicGroup) AS ?count) WHERE {
  dbr:Slovenia dbo:ethnicGroup ?ethnicGroup .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
317,What is the capital of Cameroon?,"SELECT ?capital WHERE {
  dbr:Cameroon dbo:capital ?capital .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
318,Was Natalie Portman born in the United States?,"SELECT ?birthPlace WHERE {
  dbr:Natalie_Portman dbo:birthPlace ?birthPlace .
  FILTER (str(?birthPlace) = ""United States"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
319,How many pages does War and Peace have?,"SELECT ?numberOfPages WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?numberOfPages .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
320,Who is the oldest child of Meryl Streep?,"SELECT ?child ?birthDate
WHERE {
  ?person dbo:birthName ""Meryl Streep""@en.
  ?person dbo:child ?child.
  ?child dbo:birthDate ?birthDate.
}
ORDER BY ASC(?birthDate)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
321,Which television shows were created by Walt Disney?,"SELECT ?show WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
322,What does IYCM stand for?,"SELECT ?meaning
WHERE {
  ?s dbo:abbreviation ""IYCM"" .
  ?s rdfs:label ?meaning .
  FILTER (lang(?meaning) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
323,Which types of grapes grow in Oregon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grape WHERE {
  ?region dbo:growingGrape ?grape .
  ?region rdfs:label ""Oregon""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
324,Was U.S. president Jackson involved in a war?,"SELECT ?war WHERE {
  dbr:Andrew_Jackson dbo:militaryCommand ?war .
  ?war rdf:type dbo:MilitaryConflict .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
325,When was the Titanic completed?,"SELECT ?completionDate WHERE {
  dbr:RMS_Titanic dbo:completionDate ?completionDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
326,Did Tesla win a nobel prize in physics?,"SELECT ?award
WHERE {
  dbr:Nikola_Tesla dbo:award ?award .
  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en')
  FILTER CONTAINS(?awardLabel, ""Nobel Prize in Physics"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
327,How many states are in Mexico?,"SELECT (COUNT(?state) AS ?count) WHERE {
  ?state dbo:country dbr:Mexico .
  ?state rdf:type dbo:AdministrativeRegion .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist WHERE {
  ?scientist rdf:type dbo:Scientist .
  ?scientist dbo:knownFor dbr:Manhattan_Project .
  ?scientist dbo:award dbr:Nobel_Peace_Prize .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
329,How much did the Lego Movie cost?,"SELECT ?budget WHERE {
  dbr:The_Lego_Movie dbo:budget ?budget .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
330,Who composed the music for Harold and Maude?,"SELECT ?composer WHERE {
  ?film dbo:musicComposer ?composer .
  ?film rdfs:label ""Harold and Maude""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
331,List all episodes of the first season of the HBO television series The Sopranos.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?episode ?title WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber 1 ;
           rdfs:label ?title .
  FILTER (lang(?title) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
332,Which city has the least inhabitants?,"SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
333,Where is Syngman Rhee buried?,"SELECT ?place WHERE {
  dbr:Syngman_Rhee dbo:restingPlace ?place .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
334,Does Neymar play for Real Madrid?,"SELECT ?team WHERE {
  dbr:Neymar dbo:team ?team .
  FILTER (?team = dbr:Real_Madrid_C.F.)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
335,Who wrote the book The Pillars of the Earth?,"SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""The Pillars of the Earth""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
336,Do Prince Harry and Prince William have the same parents?,"SELECT ?parent WHERE {
  { dbr:Prince_William,_Duke_of_Cambridge dbo:parent ?parent . }
  UNION
  { dbr:Prince_Harry,_Duke_of_Sussex dbo:parent ?parent . }
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?doctoralSupervisor WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?doctoralSupervisor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
338,Does Breaking Bad have more episodes than Game of Thrones?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes WHERE {
  ?bb dbo:numberOfEpisodes ?breakingBadEpisodes .
  ?bb rdfs:label ""Breaking Bad""@en .
  ?got dbo:numberOfEpisodes ?gameOfThronesEpisodes .
  ?got rdfs:label ""Game of Thrones""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
339,Who was Vincent van Gogh inspired by?,"SELECT ?person WHERE {
  ?person dbo:influenced dbr:Vincent_van_Gogh.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
340,Which building after the Burj Khalifa has the most floors?,"SELECT ?building ?floors
WHERE {
  ?building dbo:floorCount ?floors .
  FILTER (?floors < 
    (SELECT ?burj_floors WHERE {
      dbr:Burj_Khalifa dbo:floorCount ?burj_floors
    })
  )
}
ORDER BY DESC(?floors)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
341,What was the final result of the War of the Roses?,"SELECT ?result WHERE {
  dbr:Wars_of_the_Roses dbo:result ?result .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
342,How much did Pulp Fiction cost?,"SELECT ?budget WHERE {
  dbr:Pulp_Fiction dbo:budget ?budget .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
343,Is proinsulin a protein?,"SELECT ?subject WHERE {
  ?subject dbo:wikiPageID ?pageId .
  ?subject rdf:type dbo:Protein .
  ?subject rdfs:label ?label .
  FILTER (lang(?label) = 'en' && regex(?label, ""proinsulin"", ""i""))
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
344,Do Urdu and Persian have a common root?,"SELECT ?commonRoot WHERE {
  dbr:Urdu dbo:languageFamily ?commonRoot .
  dbr:Persian dbo:languageFamily ?commonRoot .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorName WHERE {
  ?film dbo:producer dbr:Benicio_del_Toro ;
        dbo:starring ?actor ;
        dbp:country ""Spain"" .
  ?actor rdfs:label ?actorName .
  FILTER (lang(?actorName) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?lake ?area
WHERE {
  {
    SELECT (dbo:Lake_Baikal as ?lake) (dbo:areaTotal as ?area)
    WHERE {
      dbo:Lake_Baikal dbo:areaTotal ?area .
    }
  }
  UNION
  {
    SELECT (dbo:Great_Bear_Lake as ?lake) (dbo:areaTotal as ?area)
    WHERE {
      dbo:Great_Bear_Lake dbo:areaTotal ?area .
    }
  }
}
ORDER BY DESC(?area)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
347,Show me all books in Asimov's Foundation series.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  ?book dbo:series dbr:Foundation_series .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
348,Where was Bach born?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  res:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
349,Which city has the oldest running metro?,"SELECT ?city WHERE {
  ?metro dbo:location ?city .
  ?metro dbo:openingYear ?year .
} ORDER BY ASC(?year) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
350,Who designed the Brooklyn Bridge?,"SELECT ?architect WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?architect .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
351,How many people live in Eurasia?,"SELECT (SUM(?population) as ?totalPopulation) WHERE {
  { 
    ?country dbo:continent dbr:Eurasia ;
             dbo:populationTotal ?population .
  }
  UNION
  { 
    ?city dbo:isPartOf dbr:Eurasia ;
          dbo:populationTotal ?population .
  }
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host 
WHERE {
  ?show dbo:series <http://dbpedia.org/resource/BBC_Wildlife_Specials> .
  ?show dbo:presenter ?host .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
353,"What is the total population of Melbourne, Florida?","SELECT ?population WHERE {
  dbr:Melbourne,_Florida dbo:populationTotal ?population .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
354,What country is Mount Everest in?,"SELECT ?country WHERE {
  dbr:Mount_Everest dbo:country ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
355,To which artistic movement did the painter of The Three Dancers belong?,"SELECT ?movement WHERE {
  ?work dbo:author ?author .
  ?author dbo:movement ?movement .
  ?work rdfs:label ""The Three Dancers""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
356,When did Operation Overlord commence?,"SELECT ?date WHERE {
  dbr:Operation_Overlord dbo:date ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
357,What is the bridge with the longest span?,"SELECT ?bridge ?span WHERE {
  ?bridge rdf:type dbo:Bridge .
  ?bridge dbo:mainspan ?span .
} ORDER BY DESC(?span) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
358,Is there a video game called Battle Chess?,"SELECT ?game 
WHERE {
  ?game rdf:type dbo:VideoGame .
  ?game rdfs:label ""Battle Chess""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
359,Who was buried in the Great Pyramid of Giza?,"SELECT ?person WHERE {
  ?person dbo:restingPlace dbr:Great_Pyramid_of_Giza.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"SELECT ?plant WHERE {
  dbr:Ford_Motor_Company dbo:location ?plant .
  ?plant dbo:country dbr:Malaysia .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
361,Did Socrates influence Aristotle?,"SELECT ?answer 
WHERE {
  dbr:Aristotle dbo:influencedBy ?answer .
  FILTER (?answer = dbr:Socrates)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
362,How many children did Benjamin Franklin have?,"SELECT COUNT(?child) WHERE {
  dbr:Benjamin_Franklin dbo:child ?child .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
363,How tall is Michael Jordan?,"SELECT ?height 
WHERE {
  dbr:Michael_Jordan dbo:height ?height .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
364,In which UK city are the headquarters of the MI6?,"SELECT ?city WHERE {
  dbr:Secret_Intelligence_Service dbo:headquarter ?city .
  ?city dbo:country dbr:United_Kingdom .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
365,Who created Family Guy?,"SELECT ?creator WHERE {
  dbr:Family_Guy dbo:creator ?creator .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
366,In which city does the Chile Route 68 end?,"SELECT ?city WHERE {
  dbr:Chile_Route_68 dbo:routeEnd ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
367,Give me the grandchildren of Elvis Presley.,"SELECT ?grandchild WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
368,When did the Ming dynasty dissolve?,"SELECT ?dissolutionDate WHERE {
  dbr:Ming_dynasty dbo:dissolutionDate ?dissolutionDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
369,In which military conflicts did Lawrence of Arabia participate?,"SELECT ?conflict WHERE {
  dbr:Lawrence_of_Arabia dbo:battle ?conflict .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
370,What is the timezone in San Pedro de Atacama?,"SELECT ?timezone WHERE {
  dbr:San_Pedro_de_Atacama dbo:timeZone ?timezone .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
371,Give me all books by William Goldman with more than 300 pages.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?pages
WHERE {
  ?book rdf:type dbo:Book .
  ?book dbo:author dbr:William_Goldman .
  ?book dbo:numberOfPages ?pages .
  FILTER(?pages > 300)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
372,What did Bruce Carver die from?,"SELECT ?causeOfDeath WHERE {
  dbr:Bruce_Carver dbo:deathCause ?causeOfDeath.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:Lufthansa .
  ?subsidiary dbo:targetAirport dbr:Dortmund_Airport .
  ?subsidiary dbo:targetAirport dbr:Berlin_Tegel_Airport .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
374,Does Abraham Lincoln's death place have a website?,"SELECT ?website WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?deathPlace .
  ?deathPlace foaf:homepage ?website .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
375,Did Elvis Presley have children?,"SELECT ?child WHERE {
  dbr:Elvis_Presley dbo:child ?child .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
376,Is Michelle Obama the wife of Barack Obama?,"SELECT ?answer 
WHERE {
  dbr:Barack_Obama dbo:spouse ?answer .
  FILTER (?answer = dbr:Michelle_Obama)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
377,In which city does Sylvester Stallone live?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  res:Sylvester_Stallone dbo:residence ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
378,Which books by Kerouac were published by Viking Press?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Jack_Kerouac .
  ?book dbo:publisher dbr:Viking_Press .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
379,Who wrote the song Hotel California?,"SELECT ?writer WHERE {
  ?song dbo:writer ?writer .
  ?song rdfs:label ""Hotel California""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
380,What is the capital of Canada?,"SELECT ?capital 
WHERE { 
  dbr:Canada dbo:capital ?capital .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
381,Who is the mayor of Tel Aviv?,"SELECT ?mayor WHERE {
  dbr:Tel_Aviv dbo:leaderName ?mayor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
382,What form of government does Russia have?,"SELECT ?governmentType WHERE {
  dbr:Russia dbo:governmentType ?governmentType .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Muhammad_Ali .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
384,Who was the first to climb Mount Everest?,"SELECT ?person WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?person .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
385,How many languages are spoken in Colombia?,"SELECT COUNT(?language) WHERE {
  dbr:Colombia dbo:officialLanguage ?language .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
386,What is the currency of the Czech Republic?,"SELECT ?currency WHERE {
  dbr:Czech_Republic dbo:currency ?currency .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
387,Where in France is sparkling wine produced?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?region dbo:country dbr:France .
  ?winery dbo:location ?region .
  ?winery dbo:wineProduced ?wine .
  ?wine dbo:type dbr:Sparkling_wine .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
388,When did Boris Becker end his active career?,"SELECT ?endDate WHERE {
  dbr:Boris_Becker dbo:activeYearsEndDate ?endDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke .
  ?movie dbo:director dbr:Guy_Ritchie .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
390,In which films did Julia Roberts as well as Richard Gere play?,"SELECT ?film WHERE {
  ?film dbo:starring <http://dbpedia.org/resource/Julia_Roberts> .
  ?film dbo:starring <http://dbpedia.org/resource/Richard_Gere> .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
391,Show me Hemingway's autobiography.,"SELECT ?book ?name WHERE {
  ?book dbo:author dbr:Ernest_Hemingway .
  ?book rdf:type dbo:Book .
  ?book dbo:literaryGenre dbr:Autobiography .
  ?book rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
392,How tall is Amazon Eve?,"SELECT ?height 
WHERE {
  dbr:Amazon_Eve dbo:height ?height .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
393,What are the five boroughs of New York?,"SELECT ?borough WHERE {
  dbr:New_York_City dbo:borough ?borough .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
394,Give me all Canadian Grunge record labels.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?label WHERE {
  ?label rdf:type dbo:RecordLabel .
  ?label dbo:locationCountry dbr:Canada .
  ?artist dbo:recordLabel ?label .
  ?artist dbo:genre dbr:Grunge_music .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
395,In which country does the Ganges start?,"SELECT ?country WHERE {
  dbr:Ganges dbo:sourceCountry ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
396,Who is the founder of Penguin Books?,"SELECT ?founder WHERE {
  dbr:Penguin_Books dbo:founder ?founder .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
397,Who wrote the Game of Thrones theme?,"SELECT ?composer WHERE {
  dbr:Game_of_Thrones dbo:composer ?composer .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
398,Who is the president of Eritrea?,"SELECT ?president WHERE {
  dbr:Eritrea dbo:leader ?president .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
399,In which city did John F. Kennedy die?,"SELECT ?city WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?city .
  ?city rdf:type dbo:City .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
400,What is the highest mountain in Australia?,"SELECT ?mountain ?elevation WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:location dbr:Australia ;
            dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
401,Who writes the Farmers' Almanac?,"SELECT ?author WHERE {
  dbr:Farmers'_Almanac dbp:editor ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
402,Give me the currency of China.,"SELECT ?currency WHERE {
  dbr:China dbo:currency ?currency .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
403,Give me all Swedish oceanographers.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Oceanographer ;
          dbo:nationality dbr:Sweden .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
404,In which city are the headquarters of the United Nations?,"SELECT ?city WHERE {
  dbr:United_Nations dbo:headquarter ?city .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
405,Is Rita Wilson the wife of Tom Hanks?,"SELECT ?answer 
WHERE {
  dbr:Tom_Hanks dbo:spouse ?answer .
  FILTER (?answer = dbr:Rita_Wilson)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
406,In which countries do people speak Japanese?,"SELECT ?country WHERE {
  ?country dbo:officialLanguage dbp:Japanese .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
407,Which of Tim Burton's films had the highest budget?,"SELECT ?film ?budget
WHERE {
  ?film dbo:director dbr:Tim_Burton ;
        dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
408,Which museum in New York has the most visitors?,"SELECT ?museum WHERE {
  ?museum dbo:location dbr:New_York_City .
  ?museum dbo:numberOfVisitors ?visitors
} ORDER BY DESC(?visitors) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
409,What was the first Queen album?,"SELECT ?album WHERE {
  ?album dbo:artist dbr:Queen_(band) .
} ORDER BY ?releaseDate
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?firstName WHERE {
  dbr:Queens_of_the_Stone_Age dbo:alias ?firstName .
} LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
411,What was the last movie with Alec Guinness?,"SELECT ?movie ?date WHERE {
  ?movie dbo:starring dbr:Alec_Guinness .
  ?movie dbo:releaseDate ?date .
} ORDER BY DESC(?date) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
412,Give me all actors starring in Last Action Hero.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?actorLabel WHERE {
  dbr:Last_Action_Hero dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
413,Who discovered Pluto?,"SELECT ?person WHERE {
  dbr:Pluto dbo:discoverer ?person .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
1,List all boardgames by GMT.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?boardgame WHERE {
  ?boardgame dbo:publisher dbr:GMT_Games .
  ?boardgame rdf:type dbo:BoardGame .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
2,Who developed Skype?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?developer
WHERE {
  dbr:Skype dbo:developer ?developer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
3,Which people were born in Heraklion?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Heraklion .
  ?person a foaf:Person .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
4,In which U.S. state is Area 51 located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  dbr:Area_51 dbo:location ?state .
  ?state rdf:type dbo:Place .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
5,Who is the mayor of New York City?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  dbr:New_York_City dbo:leaderName ?mayor.
  ?mayor rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
6,Which countries have places with more than two caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
    ?cave rdf:type dbo:Cave .
    ?cave dbo:location ?country .
    ?country rdf:type dbo:Country .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 2)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
7,Where did Abraham Lincoln die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?place WHERE {
  res:Abraham_Lincoln dbo:deathPlace ?place .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
8,Which airports does Air China serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?airport ?airportLabel WHERE {
  dbr:Air_China dbo:targetAirport ?airport .
  ?airport rdfs:label ?airportLabel .
  FILTER (lang(?airportLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
9,Give me all actors starring in movies directed by and starring William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorName WHERE {
  ?movie dbo:director dbr:William_Shatner ;
         dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (LANG(?actorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
10,What are the official languages of the Philippines?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language WHERE {
  dbr:Philippines dbo:officialLanguage ?lang .
  ?lang rdfs:label ?language .
  FILTER (lang(?language) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
11,Give me all Danish films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?filmLabel WHERE {
  ?film dbo:country dbr:Denmark .
  ?film rdf:type dbo:Film .
  ?film rdfs:label ?filmLabel .
  FILTER (lang(?filmLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
12,Which movies starring Brad Pitt were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Brad_Pitt .
  ?movie dbo:director dbr:Guy_Ritchie .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
13,Give me the grandchildren of Bruce Lee.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild WHERE {
  dbr:Bruce_Lee dbo:child ?child .
  ?child dbo:child ?grandchild .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
14,Which other weapons did the designer of the Uzi develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?weapon WHERE {
  dbr:Uzi dbp:designer ?designer.
  ?weapon dbo:designer ?designer.
  FILTER (?weapon != dbr:Uzi)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
15,Who is the owner of Universal Studios?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?owner
WHERE {
  dbr:Universal_Studios dbo:owner ?ownerEntity.
  ?ownerEntity rdfs:label ?owner.
  FILTER (lang(?owner) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
16,Which state of the USA has the highest population density?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?state WHERE {
  ?state dbo:country <http://dbpedia.org/resource/United_States> .
  ?state dbo:populationDensity ?density .
} ORDER BY DESC(?density) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
17,Which monarchs were married to a German?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?monarch ?spouse
WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch rdf:type dbo:Monarch .
  ?spouse dbo:birthPlace dbr:Germany .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
18,Which organizations were founded in 1950?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?organization
WHERE {
  ?organization dbo:foundingYear ""1950""^^xsd:gYear .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
19,Who created the comic Captain America?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?creator
WHERE {
  dbr:Captain_America dbo:author ?creator .
  ?creator rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
20,Give me the Apollo 14 astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?astronaut WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
21,Who wrote the book The pillars of the Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorName WHERE {
  ?book a dbo:Book ;
        rdfs:label ""The Pillars of the Earth""@en ;
        dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (lang(?authorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
22,Which state of the United States of America has the highest density?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?state WHERE {
  ?state dbo:country dbr:United_States ;
         dbp:density ?density .
}
ORDER BY DESC(?density)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
23,Which spaceflights were launched from Baikonur?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spaceflight WHERE {
  ?spaceflight dbo:launchPad dbr:Baikonur_Cosmodrome.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
24,Give me a list of all trumpet players that were bandleaders.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?playerLabel WHERE {
  ?player dbo:instrument dbr:Trumpet .
  ?player dbo:occupation dbr:Bandleader .
  ?player rdfs:label ?playerLabel .
  FILTER (lang(?playerLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
25,Which U.S. states are in the same timezone as Utah?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  dbr:Utah dbo:timeZone ?utahTimeZone .
  ?state rdf:type dbo:Place ;
         dbo:timeZone ?utahTimeZone .
  FILTER (?state != dbr:Utah)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
26,Which U.S. states possess gold minerals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?state WHERE {
  ?state dbo:country dbr:United_States .
  ?state dbp:mineral ?mineral .
  FILTER (regex(str(?mineral), ""Gold"", ""i""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
27,Who is the daughter of Ingrid Bergman married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?husband
WHERE {
  res:Ingrid_Bergman dbo:child ?daughter .
  ?daughter dbo:spouse ?husband .
  ?husband rdfs:label ?husbandLabel .
  FILTER (lang(?husbandLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
28,How deep is Lake Placid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?depth WHERE {
  res:Lake_Placid dbo:maximumDepth ?depth .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
29,Show me all museums in London.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?museum
WHERE {
  ?museum dbo:location dbr:London .
  ?museum rdf:type dbo:Museum .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
30,Which caves have more than 3 entrances?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?cave WHERE {
  ?cave a dbo:Cave .
  ?cave dbp:entranceCount ?entranceCount .
  FILTER (?entranceCount > 3)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
31,Who is the tallest player of the Atlanta Falcons?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?player ?height
WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Atlanta_Falcons> .
  ?player dbo:height ?height .
}
ORDER BY DESC(?height)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
32,What are the top-10 action role-playing video games according to IGN?,"Sorry, but it's not possible to create a SPARQL query for this specific question. DBpedia does not contain data about IGN's video game rankings.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
33,Give me all writers that won the Nobel Prize in literature.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer ?writerLabel WHERE {
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
  ?writer rdfs:label ?writerLabel .
  FILTER (lang(?writerLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
34,Show me all basketball players that are higher than 2 meters.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?height
WHERE {
  ?player rdf:type dbo:BasketballPlayer .
  ?player dbo:height ?height .
  FILTER (?height > 2)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
35,When was the Statue of Liberty built?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Statue_of_Liberty dbo:completionDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
36,Which states border Illinois?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  dbr:Illinois dbp:borderingstates ?state .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
37,Who developed Minecraft?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?developer
WHERE {
  ?game rdfs:label ""Minecraft""@en .
  ?game dbo:developer ?developerNode .
  ?developerNode rdfs:label ?developer .
  FILTER (lang(?developer) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
38,Where did Hillel Slovak die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?place WHERE {
  res:Hillel_Slovak dbo:deathPlace ?place .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
39,What movies does Jesse Eisenberg play in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Jesse_Eisenberg .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
40,Give all swimmers that were born in Moscow.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?swimmer WHERE {
  ?swimmer dbo:birthPlace dbr:Moscow .
  ?swimmer rdf:type dbo:Swimmer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
41,Give me all cosmonauts.,"SELECT ?cosmonaut WHERE {
  ?cosmonaut dbo:occupation dbr:Cosmonaut .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
42,Give me all Swiss non-profit organizations.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?organization ?name WHERE {
  ?organization rdf:type dbo:Non-ProfitOrganisation .
  ?organization dbo:locationCountry dbr:Switzerland .
  ?organization rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
43,Which presidents were born in 1945?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?president ?birthDate WHERE {
  ?president dbo:birthDate ?birthDate .
  ?president dbo:office ?office .
  FILTER (regex(str(?office), ""President"", ""i"") && year(?birthDate) = 1945)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
44,What kind of music did Lou Reed play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?genre WHERE {
  dbr:Lou_Reed dbo:genre ?genreResource.
  ?genreResource rdfs:label ?genre.
  FILTER (lang(?genre) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
45,Where do the Red Sox play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?stadium WHERE {
  res:Boston_Red_Sox dbp:ballpark ?stadium .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
46,Show a list of soccer clubs that play in the Bundesliga.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?club dbo:league dbr:Bundesliga .
  ?club rdf:type dbo:SoccerClub .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
47,Which volcanos in Japan erupted since 2000?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?volcano WHERE {
  ?volcano dbo:locatedInArea dbo:Japan .
  ?volcano dbo:eruptionYear ?year .
  FILTER (?year >= ""2000""^^xsd:gYear)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
48,Which bridges cross the Seine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bridge WHERE {
  ?bridge dbo:crosses dbr:Seine .
  ?bridge rdf:type dbo:Bridge .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
49,What is the official color of the University of Oxford?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?officialColor WHERE {
  dbr:University_of_Oxford dbo:officialSchoolColour ?officialColor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
50,How many films did Hal Roach produce?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:producer dbr:Hal_Roach .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
51,Give me all Danish movies.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?movie WHERE {
  ?movie dbo:country dbr:Denmark .
  ?movie rdf:type dbo:Film .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
52,What is the most frequent cause of death?,"I'm sorry for the confusion, but it's not possible to generate a SPARQL query for this question. DBpedia, which is based on information from Wikipedia, does not contain statistical data about the frequency of causes of death. It's more suited for retrieving specific information about specific entities, like the cause of death for a particular person. For statistical data, a different data source would be more appropriate.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
53,Who are the four youngest MVP basketball players?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?player ?birthDate
WHERE {
  ?player dbo:award dbr:NBA_Most_Valuable_Player_Award ;
          dbo:birthDate ?birthDate .
}
ORDER BY DESC(?birthDate)
LIMIT 4","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
54,Give me all companies in Munich.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company WHERE {
  ?company dbo:location dbr:Munich .
  ?company a dbo:Company .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
55,Give me the capitals of all countries that the Himalayas run through.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?capital
WHERE {
  ?mountain dbo:country ?country .
  ?country dbo:capital ?capital .
  FILTER (?mountain = dbr:Himalayas)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
56,How many movies did Park Chan-wook direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT (COUNT(?movie) AS ?count) WHERE {
  ?movie dbo:director dbr:Park_Chan-wook .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
57,Which rivers flow into a German lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?river ?lake WHERE {
  ?lake dbo:country dbr:Germany .
  ?river dbo:inflow ?lake .
  ?river rdfs:label ?riverLabel .
  ?lake rdfs:label ?lakeLabel .
  FILTER (lang(?riverLabel) = 'en')
  FILTER (lang(?lakeLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
58,How many airlines are there?,"SELECT (COUNT(?airline) AS ?count) WHERE {
  ?airline rdf:type dbo:Airline .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
59,Give me all islands that belong to Japan.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island
WHERE {
  ?island dbo:country dbr:Japan .
  ?island rdf:type dbo:Island .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
60,How many inhabitants does Maribor have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population WHERE {
  res:Maribor dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
61,Give me all Apollo 14 astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?astronaut
WHERE {
  dbr:Apollo_14 dbo:crew ?astronaut .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
62,Which companies have more than 1 million employees?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company WHERE {
  ?company a dbo:Company .
  ?company dbo:numberOfEmployees ?employees .
  FILTER (?employees > 1000000)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
63,In which films directed by Garry Marshall was Julia Roberts starring?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?filmLabel WHERE {
  ?film dbo:director dbr:Garry_Marshall .
  ?film dbo:starring dbr:Julia_Roberts .
  ?film rdfs:label ?filmLabel .
  FILTER (lang(?filmLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
64,Give me all soccer clubs in the Premier League.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?club ?clubLabel
WHERE {
  ?club dbo:league dbr:Premier_League .
  ?club rdf:type dbo:SoccerClub .
  ?club rdfs:label ?clubLabel .
  FILTER (lang(?clubLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
65,What is the highest place of the Urals?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?place ?elevation
WHERE {
  ?place dbo:location ?urals .
  ?place dbp:elevation ?elevation .
  ?urals rdfs:label ""Urals""@en .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
66,Who is the governor of Wyoming?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor
WHERE {
  dbr:Wyoming dbp:governor ?governor.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
67,Where did the architect of the Eiffel Tower study?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?university ?universityLabel WHERE {
  dbr:Eiffel_Tower dbo:architect ?architect .
  ?architect dbo:almaMater ?university .
  ?university rdfs:label ?universityLabel .
  FILTER (lang(?universityLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
68,Give me all world heritage sites designated within the past two years.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?site ?year WHERE {
  ?site rdf:type dbo:WorldHeritageSite .
  ?site dbo:yearOfInscription ?year .
  FILTER (?year >= ""2018""^^xsd:integer)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
69,Give me all actors who were born in Paris after 1950.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?name WHERE {
  ?actor dbo:birthPlace dbr:Paris .
  ?actor dbo:birthDate ?date .
  ?actor rdfs:label ?name .
  ?actor rdf:type dbo:Actor .
  FILTER (lang(?name) = 'en') .
  FILTER (?date > ""1950-01-01""^^xsd:date) .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
70,Which movies star both Liz Taylor and Richard Burton?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?movie ?movieLabel WHERE {
  ?movie rdf:type dbo:Film .
  ?movie dbo:starring dbr:Elizabeth_Taylor .
  ?movie dbo:starring dbr:Richard_Burton .
  ?movie rdfs:label ?movieLabel .
  FILTER (lang(?movieLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
71,Give me all Australian nonprofit organizations.,"Apologies for the confusion, here is the SPARQL query for your request:

```sparql
SELECT ?organization 
WHERE {
  ?organization dbo:location dbr:Australia .
  ?organization rdf:type dbo:Non-ProfitOrganisation .
}
```

This query will return all non-profit organizations located in Australia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
72,Which pope succeeded John Paul II?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  res:Pope_John_Paul_II dbo:successor ?successorNode.
  ?successorNode rdfs:label ?successor.
  FILTER (lang(?successor) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
73,Give me all ESA astronauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?astronaut WHERE {
  ?astronaut dbo:occupation dbr:Astronaut ;
             dbo:almaMater ?almaMater .
  FILTER (str(?almaMater) = ""European Space Agency"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
74,Who was president of Pakistan in 1978?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person dbo:birthDate ?birthDate .
  ?person dbp:title ""President of Pakistan""@en .
  FILTER (
    ""1978-01-01""^^xsd:date <= ?birthDate &&
    ?birthDate < ""1979-01-01""^^xsd:date
  )
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
75,Who is the owner of Rolls-Royce?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?owner
WHERE {
  dbr:Rolls-Royce dbo:owner ?ownerResource.
  ?ownerResource rdfs:label ?owner.
  FILTER (lang(?owner) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
76,How many museums does Paris have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT (COUNT(?museum) AS ?count)
WHERE {
  ?museum dbo:location <http://dbpedia.org/resource/Paris> ;
          a dbo:Museum .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
77,Where was JFK assassinated?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?place ?placeLabel WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?place .
  ?place rdfs:label ?placeLabel .
  FILTER (lang(?placeLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
78,Give me all federal chancellors of Germany.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?chancellor ?name WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
  ?chancellor rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
79,Show me everyone who was born on Halloween.,"Apologies for the confusion, but the information provided seems to be incorrect. Here is the correct SPARQL query to find everyone who was born on Halloween:

```sparql
SELECT ?person ?name WHERE {
  ?person dbo:birthDate ?date .
  ?person foaf:name ?name .
  FILTER (datatype(?date) = xsd:date && month(?date) = 10 && day(?date) = 31)
}
```

This query will return a list of people and their names who were born on October 31st, which is Halloween.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
80,Which beer originated in Ireland?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?beer WHERE {
  ?beer dbo:origin dbr:Ireland .
  ?beer rdf:type dbo:Beer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
81,To which countries does the Himalayan mountain system extend?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country
WHERE {
  dbr:Himalayas dbo:country ?countryResource.
  ?countryResource rdfs:label ?country.
  FILTER (lang(?country) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
82,Which actors were born in Germany?,"SELECT ?actor WHERE {
  ?actor dbo:birthPlace ?place .
  ?actor rdf:type dbo:Actor .
  ?place dbo:country dbr:Germany .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
83,How much carbs does peanut butter have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?carbs
WHERE {
  ?food rdfs:label ""Peanut butter""@en .
  ?food dbo:Food ?carbs .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
84,Who produced the most films?,"SELECT ?producer (COUNT(?film) AS ?count) WHERE {
  ?film dbo:producer ?producer .
} 
ORDER BY DESC(?count)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
85,How many employees does Google have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?numberOfEmployees WHERE {
  res:Google dbo:numberOfEmployees ?numberOfEmployees .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
86,Give me all actors who were born in Berlin.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?actor dbo:birthPlace dbr:Berlin .
  ?actor rdf:type dbo:Actor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
87,Who created Goofy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?creator WHERE {
  dbr:Goofy dbo:creator ?creatorResource.
  ?creatorResource rdfs:label ?creator.
  FILTER (lang(?creator) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
88,Which music albums contain the song Last Christmas?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?albumLabel WHERE {
  dbr:Last_Christmas dbo:album ?album .
  ?album rdfs:label ?albumLabel .
  FILTER (lang(?albumLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
89,When was Alberta admitted as province?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?admittanceDate WHERE {
  res:Alberta dbp:admittancedate ?admittanceDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
90,How many missions does the Soyuz programme have?,"SELECT (COUNT(?mission) AS ?count) WHERE {
  ?mission dbo:programme dbr:Soyuz_programme.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
91,Give me all the TV shows with Neil Patrick Harris.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show WHERE {
  ?show dbo:starring dbr:Neil_Patrick_Harris .
  ?show rdf:type dbo:TelevisionShow .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
92,When were the Hells Angels founded?,"SELECT ?date WHERE {
  dbr:Hells_Angels dbo:foundingDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
93,What is the net income of Apple?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?netIncome WHERE {
  res:Apple_Inc dbo:netIncome ?netIncome .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
94,Give me all Swedish holidays.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?holiday ?holidayLabel WHERE {
  dbr:Sweden dbo:publicHolidays ?holiday .
  ?holiday rdfs:label ?holidayLabel .
  FILTER (lang(?holidayLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
95,In which city was the former Dutch queen Juliana buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  dbr:Juliana_of_the_Netherlands dbp:burialPlace ?city .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
96,List all the musicals with music by Leonard Bernstein.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Leonard_Bernstein .
  ?musical rdf:type dbo:Musical .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
97,Give me all companies in the advertising industry.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company
WHERE {
  ?company dbo:industry <http://dbpedia.org/resource/Advertising>.
  ?company rdf:type dbo:Company.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
98,What is the largest metropolitan area in Washington state?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?metroArea
WHERE {
  ?city dbo:isPartOf <http://dbpedia.org/resource/Washington_(state)> .
  ?city dbp:largestmetro ?metroArea .
}
ORDER BY DESC(?metroArea)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
99,Who killed John Lennon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?killer WHERE {
  res:John_Lennon dbo:deathCause ?death .
  ?death dbp:conviction ?killer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
100,Which writers studied in Istanbul?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writer ?writerLabel WHERE {
  ?writer dbo:education/dbo:city dbr:Istanbul .
  ?writer rdf:type dbo:Writer .
  ?writer rdfs:label ?writerLabel .
  FILTER (lang(?writerLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
101,Give me all Australian metalcore bands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  ?band dbo:genre dbr:Metalcore .
  ?band dbo:country dbr:Australia .
  ?band rdf:type dbo:Band .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
102,Which countries adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?country dbo:currency <http://dbpedia.org/resource/Euro> .
  ?country a dbo:Country .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
103,Give me all types of eating disorders.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?eating_disorder ?label
WHERE {
  ?eating_disorder dbo:wikiPageDisambiguates ?dis .
  ?dis rdf:type dbo:Disease .
  ?dis rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER (regex(?label, ""Eating disorder"", ""i"")) .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
104,Was Marc Chagall a jew?,"SELECT ?person ?religion WHERE {
  ?person dbo:religion dbr:Judaism .
  ?person rdfs:label ""Marc Chagall""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
105,What was Brazil's lowest rank in the FIFA World Ranking?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?lowestRank WHERE {
  res:Brazil dbp:fifaMin ?lowestRank .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
106,How many films did Leonardo DiCaprio star in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT (COUNT(?film) AS ?count)
WHERE {
  ?film dbo:starring res:Leonardo_DiCaprio .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
107,Was Margaret Thatcher a chemist?,"SELECT ?answer 
WHERE {
  dbr:Margaret_Thatcher dbo:occupation ?occupation .
  ?occupation rdfs:label ?answer .
  FILTER (lang(?answer) = 'en')
  FILTER (contains(lcase(str(?answer)), ""chemist""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
108,Which U.S. states are in the same time zone as Utah?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  dbr:Utah dbp:timeZone ?utahTimeZone .
  ?state rdf:type dbo:Place .
  ?state dbp:timeZone ?utahTimeZone .
  ?state dbo:country dbr:United_States .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
109,Give me all books written by Danielle Steel.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel
WHERE {
  ?book dbo:author dbr:Danielle_Steel .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
110,Which country has the most official languages?,"SELECT ?country (COUNT(?language) AS ?count) WHERE {
  ?country a dbo:Country ;
           dbo:officialLanguage ?language .
}
ORDER BY DESC(?count)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
111,What is the total amount of men and women serving in the FDNY?,"SELECT ?total WHERE {
  dbr:New_York_City_Fire_Department dbp:employees ?total .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
112,Which actor played Chewbacca?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorName WHERE {
  dbr:Chewbacca dbo:portrayedBy ?actor.
  ?actor rdfs:label ?actorName.
  FILTER (lang(?actorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
113,Give me all libraries established earlier than 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library WHERE {
  ?library dbo:established ?year .
  ?library rdf:type dbo:Library .
  FILTER (?year < ""1400""^^xsd:gYear)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
114,Which programming languages were influenced by Perl?,"SELECT ?programming_language WHERE {
  ?programming_language dbo:influencedBy dbr:Perl .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
115,In which U.S. state is Mount McKinley located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  dbr:Denali dbo:location ?state .
  ?state rdf:type dbo:Place .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
116,What airlines are part of the SkyTeam alliance?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?airline ?airlineLabel WHERE {
  ?airline dbo:alliance dbr:SkyTeam.
  ?airline rdfs:label ?airlineLabel.
  FILTER (lang(?airlineLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
117,Which ships were called after Benjamin Franklin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ship WHERE {
  ?ship dbo:shipNamesake dbr:Benjamin_Franklin .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
118,Give me all Methodist politicians.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?politician ?name WHERE {
  ?politician rdf:type dbo:Person .
  ?politician dbo:religion dbr:Methodism .
  ?politician dbo:occupation dbr:Politician .
  ?politician rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
119,What other books have been written by the author of The Fault in Our Stars?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  dbr:The_Fault_in_Our_Stars dbo:author ?author .
  ?book dbo:author ?author .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = 'en')
  FILTER (?book != dbr:The_Fault_in_Our_Stars)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
120,What is the highest mountain?,"SELECT ?mountain ?elevation WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
121,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
GROUP BY ?poet
ORDER BY DESC(?bookCount)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
122,Which programming languages influenced Javascript?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?language WHERE {
  dbr:JavaScript dbo:influencedBy ?language .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
123,Which musician wrote the most books?,"SELECT ?musician (COUNT(?book) AS ?bookCount)
WHERE {
  ?musician rdf:type dbo:MusicalArtist.
  ?book dbo:author ?musician.
}
ORDER BY DESC(?bookCount)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
124,Which films starring Clint Eastwood did he direct himself?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?filmLabel WHERE {
  ?film dbo:director dbr:Clint_Eastwood .
  ?film dbo:starring dbr:Clint_Eastwood .
  ?film rdfs:label ?filmLabel .
  FILTER (lang(?filmLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
125,Which software has been developed by organizations founded in California?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?software ?organization
WHERE {
  ?organization dbo:foundingPlace dbr:California .
  ?organization dbo:product ?software .
  ?software a dbo:Software .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
126,Which instruments does Cat Stevens play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrumentLink .
  ?instrumentLink rdfs:label ?instrument .
  FILTER (lang(?instrument) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
127,How many airlines are members of the Star Alliance?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT (COUNT(?airline) AS ?count)
WHERE {
  ?airline rdf:type dbo:Airline ;
           dbo:alliance dbr:Star_Alliance .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
128,Give me all actors called Baldwin.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?actor dbo:occupation dbo:Actor ;
         foaf:name ?name .
  FILTER (CONTAINS(?name, ""Baldwin""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
129,Who wrote The Hunger Games?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorName WHERE {
  ?book rdfs:label ""The Hunger Games""@en.
  ?book dbo:author ?author.
  ?author rdfs:label ?authorName.
  FILTER (lang(?authorName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
130,For which label did Elvis record his first album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label WHERE {
  ?album dbo:musicalArtist dbr:Elvis_Presley ;
         dbo:recordLabel ?label .
  {
    SELECT ?album WHERE {
      ?album dbo:musicalArtist dbr:Elvis_Presley .
    } 
    ORDER BY ?album 
    LIMIT 1
  }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
131,Is Christian Bale starring in Batman Begins?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film WHERE {
  ?film rdf:type dbo:Film .
  ?film dbo:starring dbr:Christian_Bale .
  ?film rdfs:label ""Batman Begins""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
132,Where is the residence of the prime minister of Spain?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  dbr:Prime_Minister_of_Spain dbo:residence ?residence .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
133,Which actor was casted in the most movies?,"SELECT ?actor (COUNT(?movie) AS ?movieCount)
WHERE {
  ?movie dbo:starring ?actor .
}
ORDER BY DESC(?movieCount)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
134,Which countries have more than two official languages?,"SELECT ?country WHERE {
  ?country a dbo:Country .
  {
    SELECT ?country (COUNT(?language) AS ?languageCount) WHERE {
      ?country dbo:officialLanguage ?language .
    } GROUP BY ?country
  }
  FILTER(?languageCount > 2)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
135,Which countries have more than ten caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country (COUNT(?cave) AS ?caveCount)
WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbo:location ?country .
  ?country rdf:type dbo:Country .
}
GROUP BY ?country
HAVING (COUNT(?cave) > 10)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
136,Show me all songs from Bruce Springsteen released between 1980 and 1990.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?song ?releaseDate
WHERE {
  ?song dbo:musicalArtist <http://dbpedia.org/resource/Bruce_Springsteen> .
  ?song dbo:releaseDate ?releaseDate .
  ?song rdf:type dbo:Song .
  FILTER (xsd:dateTime(?releaseDate) >= ""1980-01-01T00:00:00Z""^^xsd:dateTime && xsd:dateTime(?releaseDate) <= ""1990-12-31T23:59:59Z""^^xsd:dateTime)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
137,Which television shows were created by John Cleese?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show WHERE {
  ?show dbo:creator dbr:John_Cleese.
  ?show rdf:type dbo:TelevisionShow.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
138,When did Latvia join the EU?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?date WHERE {
  dbo:Latvia dbp:accessioneudate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
139,Which soccer players were born on Malta?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player ?playerLabel WHERE {
  ?player dbo:birthPlace dbr:Malta .
  ?player dbo:occupation dbr:Soccer_player .
  ?player rdfs:label ?playerLabel .
  FILTER (lang(?playerLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
140,How many politicians graduated from Columbia University?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?person) AS ?count)
WHERE {
  ?person dbo:almaMater dbr:Columbia_University .
  ?person a dbo:Politician .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
141,Give me the birthdays of all actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?birthday
WHERE {
  dbr:Charmed dbo:starring ?actor .
  ?actor dbo:birthDate ?birthday .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
142,Which telecommunications organizations are located in Belgium?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?organization ?name WHERE {
  ?organization dbo:industry dbr:Telecommunication ;
                dbo:locationCountry dbr:Belgium ;
                rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
143,Give me a list of all lakes in Denmark.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?lake WHERE {
  ?lake dbo:country dbr:Denmark .
  ?lake a dbo:Lake .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
144,How many children does Eddie Murphy have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT COUNT(?child) WHERE {
  res:Eddie_Murphy dbo:child ?child .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
145,Show me all English Gothic buildings in Kent.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?building ?buildingLabel
WHERE {
  ?building dbo:architecturalStyle dbr:English_Gothic_architecture ;
            dbo:location dbr:Kent .
  ?building rdfs:label ?buildingLabel .
  FILTER (lang(?buildingLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
146,Who is the manager of Real Madrid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager
WHERE {
  dbr:Real_Madrid_C.F. dbo:manager ?managerResource.
  ?managerResource rdfs:label ?manager.
  FILTER (lang(?manager) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
147,In which countries can you pay using the West African CFA franc?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country dbo:currency dbr:West_African_CFA_franc.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
148,Which holidays are celebrated around the world?,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
149,What is the longest river?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
150,Which organizations were founded in 1930?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?organization WHERE {
  ?organization dbo:foundingYear ""1930""^^xsd:gYear .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
151,What is the birth name of Angela Merkel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  res:Angela_Merkel dbp:birthName ?birthName .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
152,Who has Tom Cruise been married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Tom_Cruise dbo:spouse ?spouse.
  ?spouse rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
153,Which weapons did Heckler & Koch develop?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?weapon WHERE {
  ?weapon dbo:manufacturer dbr:Heckler_&_Koch .
  ?weapon rdf:type dbo:Weapon .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
154,What is the smallest city by area in Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?area
WHERE {
  ?city dbo:country dbo:Germany .
  ?city dbo:areaTotal ?area .
}
ORDER BY ASC(?area)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
155,What is the ruling party in Lisbon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  dbr:Lisbon dbp:leaderParty ?party .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
156,How heavy is Jupiter's lightest moon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?moon ?mass
WHERE {
  ?moon dbo:satelliteOf <http://dbpedia.org/resource/Jupiter> ;
        dbo:mass ?mass .
}
ORDER BY ASC(?mass)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
157,How many employees does IBM have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?numberOfEmployees WHERE {
  res:IBM dbo:numberOfEmployees ?numberOfEmployees .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
158,List all episodes of the first season of the HBO television series The Sopranos!,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?episode ?episodeName WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber 1 ;
           rdfs:label ?episodeName .
  FILTER (lang(?episodeName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
159,What does ICRO stand for?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?meaning
WHERE {
  ?s dbo:wikiPageRedirects <http://dbpedia.org/resource/ICRO>.
  ?s rdfs:label ?meaning.
  FILTER (lang(?meaning) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
160,Does the new Battlestar Galactica series have more episodes than the old one?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?oldSeriesEpisodes ?newSeriesEpisodes WHERE {
  ?oldSeries dbo:numberOfEpisodes ?oldSeriesEpisodes ;
             rdfs:label ""Battlestar Galactica (1978 TV series)""@en .
  ?newSeries dbo:numberOfEpisodes ?newSeriesEpisodes ;
             rdfs:label ""Battlestar Galactica (2004 TV series)""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
161,Give me all films produced by Hal Roach.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film WHERE {
  ?film dbo:producer dbr:Hal_Roach.
  ?film rdf:type dbo:Film.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
162,Who played Agent Smith in Matrix?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorName WHERE {
  dbr:The_Matrix dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (LANG(?actorName) = ""en"") .
  ?actor dbo:abstract ?abstract .
  FILTER (LANG(?abstract) = ""en"") .
  FILTER (CONTAINS(?abstract, ""Agent Smith"")) .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
163,Which Greek parties are pro-European?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?party ?partyLabel WHERE {
  ?party dct:subject dbc:Pro-European_political_parties_in_Greece .
  ?party rdfs:label ?partyLabel .
  FILTER (lang(?partyLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
164,Give me a list of all bandleaders that play trumpet.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandleader WHERE {
  ?bandleader rdf:type dbo:MusicalArtist .
  ?bandleader dbo:instrument dbr:Trumpet .
  ?bandleader dbo:occupation dbr:Bandleader .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
165,What is the second highest mountain on Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 2
OFFSET 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
166,Is Egypts largest city also its capital?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?capital ?largestCity
WHERE {
  dbr:Egypt dbo:capital ?capital .
  dbr:Egypt dbo:largestCity ?largestCity .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
167,Which rockets were launched from Baikonur?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?rocket WHERE {
  ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome.
  ?rocket rdf:type dbo:Rocket.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
168,How many programming languages are there?,"SELECT (COUNT(?programmingLanguage) AS ?count) WHERE {
  ?programmingLanguage rdf:type dbo:ProgrammingLanguage.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
169,Which Chess players died in the same place they were born in?,"SELECT ?player WHERE {
  ?player rdf:type dbo:ChessPlayer .
  ?player dbo:birthPlace ?birthPlace .
  ?player dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
170,Who is the owner of Facebook?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?owner WHERE {
  res:Facebook dbo:foundedBy ?owner .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
171,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
172,In which U.S. state is Fort Knox located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  dbr:Fort_Knox dbo:location ?state .
  ?state rdf:type dbo:Place .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
173,Give me all cities in New Jersey with more than 100000 inhabitants.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?population
WHERE {
  ?city dbo:isPartOf <http://dbpedia.org/resource/New_Jersey> .
  ?city dbo:populationTotal ?population .
  FILTER (?population > 100000) .
  ?city rdf:type dbo:City .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
174,Which mountains are higher than the Nanga Parbat?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
  FILTER(?elevation > 
    (SELECT ?nangaParbatElevation 
     WHERE {
       dbr:Nanga_Parbat dbo:elevation ?nangaParbatElevation .
     })
  )
} ORDER BY DESC(?elevation)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
175,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bSide WHERE {
  dbr:Ramones dbo:bSide ?bSide .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
176,What are the specialities of the UNC Health Care?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?speciality WHERE {
  dbr:UNC_Health_Care dbp:speciality ?speciality.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
177,When was Olof Palme shot?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?date WHERE {
  res:Olof_Palme dbo:deathDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
178,List the seven kings of Rome.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?king
WHERE {
  dbr:King_of_Rome dbp:title ?king .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
179,Give me all people that were born in Vienna and died in Berlin.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?personLabel WHERE {
  ?person dbo:birthPlace dbr:Vienna .
  ?person dbo:deathPlace dbr:Berlin .
  ?person rdfs:label ?personLabel .
  FILTER (lang(?personLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
180,Is Darth Vader Luke’s father?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?answer WHERE {
  dbr:Darth_Vader dbo:child ?answer .
  FILTER (str(?answer) = ""Luke Skywalker"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
181,Show me all the breweries in Australia.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?brewery ?name WHERE {
  ?brewery dbo:location dbr:Australia .
  ?brewery dbo:type dbr:Brewery .
  ?brewery rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
182,Give me all films produced by Steven Spielberg with a budget of at least $80 million.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?film WHERE {
  ?film dbo:producer dbr:Steven_Spielberg .
  ?film dbo:budget ?budget .
  FILTER (?budget >= 80000000) .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
183,Give me all soccer clubs in Spain.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?club ?clubLabel
WHERE {
  ?club dbo:ground/dbo:country dbr:Spain .
  ?club rdf:type dbo:SoccerClub .
  ?club rdfs:label ?clubLabel .
  FILTER (lang(?clubLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
184,Who produced films starring Natalie Portman?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producerName WHERE {
  ?film dbo:starring dbr:Natalie_Portman .
  ?film dbo:producer ?producer .
  ?producer rdfs:label ?producerName .
  FILTER (lang(?producerName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
185,Give me all breeds of the German Shepherd dog.,"Sorry for the confusion, but it seems there was a misunderstanding. Here's the SPARQL query for your request:

```
SELECT ?subBreed WHERE {
  ?subBreed dbo:wikiPageRedirects dbr:German_Shepherd.
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
186,Who is the heaviest player of the Chicago Bulls?,"SELECT ?player ?weight
WHERE {
  ?player dbo:team <http://dbpedia.org/resource/Chicago_Bulls> .
  ?player dbo:weight ?weight .
}
ORDER BY DESC(?weight)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
187,Which languages are spoken in Estonia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?lang .
  ?lang rdfs:label ?language .
  FILTER (lang(?language) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
188,What is the largest country in the world?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?country ?area
WHERE {
  ?country rdf:type dbo:Country .
  ?country dbo:areaTotal ?area .
}
ORDER BY DESC(?area)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
189,What is the largest city in america?,"The SPARQL query for the question ""What is the largest city in America?"" would be:

```
SELECT ?city WHERE {
  dbr:United_States dbo:largestCity ?city .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
190,Who was the pope that founded the Vatican Television?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?pope WHERE {
  dbr:Vatican_Television_Center dbo:foundingYear ?year .
  ?pope dbo:birthYear ?birthYear .
  ?pope dbo:deathYear ?deathYear .
  FILTER (?birthYear <= ?year && ?year <= ?deathYear)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
191,Who discovered Ceres?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?discoverer
WHERE {
  dbr:Ceres_(dwarf_planet) dbo:discoverer ?discovererLink.
  ?discovererLink rdfs:label ?discoverer.
  FILTER (lang(?discoverer) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
192,Who is the king of the Netherlands?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?king
WHERE {
  res:Netherlands dbo:monarch ?king .
  ?king rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
193,Is Cola a beverage?,"The SPARQL query to check if Cola is a beverage would be:

```sparql
ASK WHERE {
  dbr:Coca-Cola rdf:type dbo:Beverage .
}
```

This query will return a boolean value. If it returns true, it means that Cola is a beverage according to DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
194,What is the alma mater of the chancellor of Germany Angela Merkel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?almaMater WHERE {
  res:Angela_Merkel dbo:almaMater ?almaMaterEntity .
  ?almaMaterEntity rdfs:label ?almaMater .
  FILTER (lang(?almaMater) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
195,Who wrote the book Les Piliers de la terre?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author
WHERE {
  ?book rdfs:label ""Les Piliers de la terre""@fr.
  ?book dbo:author ?authorLink.
  ?authorLink rdfs:label ?author.
  FILTER (lang(?author) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
196,Which airports does Yeti Airlines serve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?airport ?airportLabel WHERE {
  dbr:Yeti_Airlines dbo:targetAirport ?airport .
  ?airport rdfs:label ?airportLabel .
  FILTER (lang(?airportLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
197,Where is the birthplace of Goethe?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?birthplace WHERE {
  res:Johann_Wolfgang_von_Goethe dbo:birthPlace ?birthplace .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
198,Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?cubanMissileCrisisDate ?bayOfPigsInvasionDate WHERE {
  res:Cuban_Missile_Crisis dbo:date ?cubanMissileCrisisDate .
  res:Bay_of_Pigs_Invasion dbo:date ?bayOfPigsInvasionDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
199,Which ingredients do I need for carrot cake?,"SELECT ?ingredient WHERE {
  dbr:Carrot_cake dbo:ingredient ?ingredient .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
200,Who created Wikipedia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?creator
WHERE {
  dbr:Wikipedia dbo:author ?creator .
  ?creator rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
201,What is the highest mountain in Saxony Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:location <http://dbpedia.org/resource/Saxony> .
  ?mountain dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
202,Who is the current federal minister of finance in Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  dbr:Federal_Ministry_of_Finance_(Germany) dbo:leader ?minister.
  ?minister foaf:name ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
203,In which country is Mecca located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  dbr:Mecca dbo:country ?countryResource.
  ?countryResource rdfs:label ?country.
  FILTER (lang(?country) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
204,Who played Gus Fring in Breaking Bad?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorName WHERE {
  dbr:Gus_Fring dbo:portrayer ?actor.
  ?actor rdfs:label ?actorName.
  FILTER (lang(?actorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
205,In which country does the Nile start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?river dbo:sourceCountry ?country .
  ?river rdfs:label ""Nile""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
206,In which state Penn State University is located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  dbr:Pennsylvania_State_University dbo:state ?stateResource.
  ?stateResource rdfs:label ?state.
  FILTER (lang(?state) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
207,What is the biggest stadium in Spain?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?stadium ?capacity
WHERE {
  ?stadium rdf:type dbo:Stadium .
  ?stadium dbo:location <http://dbpedia.org/resource/Spain> .
  ?stadium dbo:seatingCapacity ?capacity .
}
ORDER BY DESC(?capacity)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
208,Who is the coach of Ankara's ice hockey team?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?coachName WHERE {
  ?team dbo:location dbr:Ankara ;
        dbo:sport dbr:Ice_hockey ;
        dbo:coach ?coach .
  ?coach rdfs:label ?coachName .
  FILTER (lang(?coachName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
209,How large is the area of UK?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?area
WHERE {
  res:United_Kingdom dbo:areaTotal ?area .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
210,Who created Batman?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?creator
WHERE {
  dbr:Batman dbo:creator ?creatorResource.
  ?creatorResource rdfs:label ?creator.
  FILTER (lang(?creator) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
211,Was Sigmund Freud married?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  res:Sigmund_Freud dbo:spouse ?spouse .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
212,Who are the developers of DBpedia?,"SELECT ?developer
WHERE {
  dbr:DBpedia dbo:developer ?developer
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
213,Give me all movies directed by Francis Ford Coppola.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?movie dbo:director dbr:Francis_Ford_Coppola.
  ?movie rdf:type dbo:Film.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
214,Are tree frogs a type of amphibian?,"SELECT ?answer 
WHERE {
  dbr:Tree_frog rdf:type ?answer .
  FILTER (?answer = dbo:Amphibian)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
215,What is the location of the Houses of Parliament?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?location WHERE {
  res:Palace_of_Westminster dbo:location ?location .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
216,how much is the elevation of Düsseldorf Airport ?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?elevation WHERE {
  res:Düsseldorf_Airport dbo:elevation ?elevation .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
217,How much is the population of mexico city ?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population
WHERE {
  res:Mexico_City dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
218,when was the founding date of french fifth republic?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  res:French_Fifth_Republic dbo:foundingDate ?foundingDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
219,Who was the first King of England?,"SELECT ?person ?personLabel WHERE {
  ?person dbo:positionHeld dbr:Monarchy_of_the_United_Kingdom .
  ?person dbo:reignStart ?reignStart .
  ?person rdfs:label ?personLabel .
  FILTER (lang(?personLabel) = 'en')
} ORDER BY ?reignStart LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
220,Who is the editor of Forbes?,"SELECT ?editor WHERE {
  dbr:Forbes dbo:editor ?editor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
221,Which awards did Douglas Hofstadter win?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?awardLabel WHERE {
  dbr:Douglas_Hofstadter dbo:award ?award .
  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
222,Who is the youngest Darts player?,"SELECT ?player ?birthDate WHERE {
  ?player rdf:type dbo:DartsPlayer.
  ?player dbo:birthDate ?birthDate.
} ORDER BY DESC(?birthDate) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
223,Is horse racing a sport?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?isSport
WHERE {
  dbr:Horse_racing rdf:type ?isSport .
  FILTER (?isSport = dbo:Sport)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
224,Which river does the Brooklyn Bridge cross?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?river WHERE {
  dbr:Brooklyn_Bridge dbo:crosses ?river .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
225,How many people live in Poland?,"SPARQL Query:
```
SELECT ?population WHERE {
  dbr:Poland dbo:populationTotal ?population .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
226,When was the last episode of the TV series Friends aired?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?endDate WHERE {
  ?show a dbo:TelevisionShow ;
        rdfs:label ""Friends""@en ;
        dbo:endingYear ?endDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
227,Is the wife of president Obama called Michelle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name
WHERE {
  dbo:Barack_Obama dbo:spouse ?spouse .
  ?spouse rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
HAVING (?name = ""Michelle Obama""@en)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
229,Who is 8th president of US?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?president ?name WHERE {
  ?president dbo:orderInOffice 8 ;
             dbo:office res:President_of_the_United_States ;
             rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
230,how much is the total population of  european union?,"The SPARQL query for the question ""how much is the total population of European Union?"" would be:

```
SELECT ?population
WHERE {
  dbr:European_Union dbo:populationTotal ?population .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
231,Give me all launch pads operated by NASA.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?launchPad
WHERE {
  ?launchPad dbo:operator dbr:NASA .
  ?launchPad rdf:type dbo:LaunchPad .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
232,Who developed the video game World of Warcraft?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?developer
WHERE {
  dbr:World_of_Warcraft dbo:developer ?developer .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
233,What is the birth name of Adele?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person rdfs:label ""Adele""@en.
  ?person dbo:birthName ?birthName.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
234,What is the population of Cairo?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population WHERE {
  res:Cairo dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
235,Is Frank Herbert still alive?,"SELECT ?deathDate WHERE {
  dbr:Frank_Herbert dbo:deathDate ?deathDate.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
236,What is the last work of Dan Brown?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?date
WHERE {
  dbr:Dan_Brown dbo:notableWork ?work .
  ?work dbo:releaseDate ?date .
}
ORDER BY DESC(?date)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
237,Where is Sungkyunkwan University?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?location
WHERE {
  res:Sungkyunkwan_University dbo:location ?location .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
238,Who is the author of the interpretation of dreams?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author
WHERE {
  dbr:The_Interpretation_of_Dreams dbo:author ?authorResource.
  ?authorResource rdfs:label ?author.
  FILTER (lang(?author) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
239,When was the death  of  Shakespeare?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?deathDate WHERE {
  res:William_Shakespeare dbo:deathDate ?deathDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
241,Who developed Slack?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company WHERE {
  dbr:Slack_(software) dbo:developer ?company .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
242,Where is the origin of Carolina reaper?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?origin WHERE {
  dbr:Carolina_Reaper dbo:origin ?origin .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
243,In which year was Rachel Stevens born?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?birthYear WHERE {
  res:Rachel_Stevens dbo:birthYear ?birthYear .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
244,How often did Jane Fonda marry?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT (COUNT(?spouse) as ?count)
WHERE {
  dbr:Jane_Fonda dbo:spouse ?spouse .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
245,Was the wife of president Lincoln called Mary?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name
WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Abraham Lincoln""@en .
  ?spouse rdfs:label ?name .
  FILTER (lang(?name) = ""en"")
}
HAVING (?name = ""Mary Todd Lincoln""@en)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
246,Which cities does the Weser flow through?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?cityLabel WHERE {
  dbr:Weser dbo:city ?city .
  ?city rdfs:label ?cityLabel .
  FILTER (lang(?cityLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
247,In which programming language is GIMP written?,"SELECT ?language WHERE {
  dbr:GIMP dbo:programmingLanguage ?language .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
248,Which university did Angela Merkel attend?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  res:Angela_Merkel dbo:almaMater ?university .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
249,List all the musicals with music by Elton John.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musical WHERE {
  ?musical dbo:musicBy dbr:Elton_John .
  ?musical rdf:type dbo:Musical .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
250,How many Aldi stores are there?,"SELECT ?numberOfLocations WHERE {
  dbr:Aldi dbo:numberOfLocations ?numberOfLocations .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
251,What is the longest river in the world?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?river ?length
WHERE {
  ?river rdf:type dbo:River .
  ?river dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
252,When was John Adams born?,"SELECT ?birthDate WHERE {
  dbr:John_Adams dbo:birthDate ?birthDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
253,Which companies produce hovercrafts?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?companyLabel WHERE {
  ?company dbo:product dbr:Hovercraft .
  ?company rdfs:label ?companyLabel .
  FILTER (lang(?companyLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
254,Who was the wife of U.S. president Lincoln?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Abraham_Lincoln dbo:spouse ?spouse .
  ?spouse rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
255,Which species does an elephant belong?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?species WHERE {
  dbr:Elephant dbo:species ?species .
  ?species rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
256,How many people live in the capital of Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population WHERE {
  res:Australia dbo:capital ?capital .
  ?capital dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
257,In which ancient empire could you pay with cocoa beans?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?empire WHERE {
  ?empire dbo:currency ?currency .
  ?currency rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  FILTER (contains(lcase(str(?label)), ""cocoa beans"")) .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
258,How many theories did Albert Einstein come up with?,"SELECT COUNT(?theory) WHERE {
  dbr:Albert_Einstein dbo:knownFor ?theory .
  ?theory rdf:type dbo:Theory .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
259,Who composed the soundtrack for Cameron's Titanic?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composerName WHERE {
  dbr:Titanic_(1997_film) dbo:musicComposer ?composer.
  ?composer rdfs:label ?composerName.
  FILTER (lang(?composerName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
260,Give me the runtime of Toy Story.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?runtime
WHERE {
  res:Toy_Story dbo:runtime ?runtime .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
262,With how many countries Iran has borders?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?country) AS ?count) 
WHERE {
  dbr:Iran dbo:borders ?country .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
263,Which electronics companies were founded in Beijing?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company WHERE {
  ?company dbo:industry dbr:Electronics.
  ?company dbo:foundingPlace dbr:Beijing.
  ?company rdf:type dbo:Company.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
264,Who was the successor of John F. Kennedy?,"SELECT ?successor WHERE {
  dbr:John_F._Kennedy dbo:successor ?successor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
265,Who is the mayor of Paris?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?mayor WHERE {
  res:Paris dbo:mayor ?mayor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
266,Did Arnold Schwarzenegger attend a university?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  res:Arnold_Schwarzenegger dbo:almaMater ?university .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
267,Is James Bond married?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  res:James_Bond dbo:spouse ?spouse .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
268,Does the Isar flow into a lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?lake WHERE {
  res:Isar dbo:inflow ?lake .
  ?lake a dbo:Lake .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
269,Which Indian company has the most employees?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?company (MAX(?employees) as ?maxEmployees)
WHERE {
  ?company rdf:type dbo:Company .
  ?company dbo:locationCountry dbr:India .
  ?company dbo:numberOfEmployees ?employees .
}
ORDER BY DESC(?maxEmployees)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
270,Who was John F. Kennedy's vice president?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?vicePresident WHERE {
  res:John_F._Kennedy dbo:vicePresident ?vicePresident .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
271,Which country does the creator of Miffy come from?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?miffy dbo:creator ?creator .
  ?creator dbo:birthPlace ?place .
  ?place dbo:country ?country .
  FILTER (str(?miffy) = ""Miffy"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
273,In what city is the Heineken brewery?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  dbr:Heineken dbo:locationCity ?cityResource.
  ?cityResource rdfs:label ?city.
  FILTER (lang(?city) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
274,Is Barack Obama a democrat?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  res:Barack_Obama dbo:party ?party .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
275,List the children of Margaret Thatcher.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child
WHERE {
  dbr:Margaret_Thatcher dbo:child ?childResource.
  ?childResource rdfs:label ?child.
  FILTER (lang(?child) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
276,From which region is the Melon de Bourgogne?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?grape dbo:wineRegion ?region .
  ?grape rdfs:label ""Melon de Bourgogne""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
278,how big is the total area of North Rhine- Westphalia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?area
WHERE {
  res:North_Rhine-Westphalia dbo:areaTotal ?area .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
279,Which city has the most inhabitants?,"SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY DESC(?population)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
280,What is Donald Trump's main business?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?mainBusiness WHERE {
  res:Donald_Trump dbo:owner ?mainBusiness .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
281,When will start the final match of the football world cup 2018?,"SELECT ?date WHERE {
  dbr:2018_FIFA_World_Cup_Final dbo:startTime ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
282,Which films did Stanley Kubrick direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film WHERE {
  ?film dbo:director dbr:Stanley_Kubrick .
  ?film rdf:type dbo:Film .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
283,how much is the population  Iraq?,"The SPARQL query for the question ""how much is the population Iraq?"" would be:

```
SELECT ?population
WHERE {
  dbr:Iraq dbo:populationTotal ?population .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
284,How many inhabitants does the largest city in Canada have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?population WHERE {
  dbr:Canada dbo:largestCity ?city .
  ?city dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
285,Who is the mayor of the capital of French Polynesia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  dbr:French_Polynesia dbo:capital ?capital .
  ?capital dbo:mayor ?mayor .
  ?mayor rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
286,Give me all actors starring in movies directed by William Shatner.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorName WHERE {
  ?film dbo:director dbr:William_Shatner .
  ?film dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER (lang(?actorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
287,How tall is Claudia Schiffer?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?height
WHERE {
  res:Claudia_Schiffer dbo:height ?height .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
288,how much is the population densty rank of germany?,"The SPARQL query to find the population density rank of Germany would be:

```
SELECT ?populationDensityRank WHERE {
  dbr:Germany dbp:populationDensityRank ?populationDensityRank .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
289,What is the highest mountain in Italy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:location <http://dbpedia.org/resource/Italy> ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
290,List all games by GMT.,"Apologies for the confusion, but it seems there was a misunderstanding. Here is the correct SPARQL query to list all games by GMT:

```
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?game WHERE {
  ?game dbo:publisher dbr:GMT_Games .
}
```

This query will return all games that have GMT Games as their publisher. Please note that the results will depend on the data available in the DBpedia database.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
291,What is the official language of Suriname?,"SELECT ?language WHERE {
  dbr:Suriname dbo:officialLanguage ?language .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
292,In which city did Nikos Kazantzakis die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  res:Nikos_Kazantzakis dbo:deathPlace ?place .
  ?place rdfs:label ?city .
  FILTER (lang(?city) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
293,What is in a chocolate chip cookie?,"SELECT ?ingredient WHERE {
  dbr:Chocolate_chip_cookie dbo:ingredient ?ingredient .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
294,In which country is the Limerick Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?country WHERE {
  res:Limerick_Lake dbo:country ?country .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
295,Give me all video games published by Mean Hamster Software.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?game WHERE {
  ?game dbo:publisher dbr:Mean_Hamster_Software .
  ?game rdf:type dbo:VideoGame .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
296,Give me all members of Prodigy.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?member ?memberName WHERE {
  dbr:The_Prodigy dbo:bandMember ?member .
  ?member rdfs:label ?memberName .
  FILTER (lang(?memberName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
297,In which time zone is Rome?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?timeZone WHERE {
  res:Rome dbo:timeZone ?timeZone .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
298,How high is the lighthouse in Colombo?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?height
WHERE {
  dbr:Colombo_Lighthouse dbo:height ?height .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
299,Who are the writers of the Wall album of Pink Floyd?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writerName WHERE {
  dbr:The_Wall dbp:writer ?writer .
  ?writer rdfs:label ?writerName .
  FILTER (lang(?writerName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
300,Who is the mayor of Rotterdam?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  dbr:Rotterdam dbo:leaderName ?mayor.
  ?mayor rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
301,What is the largest city in Australia?,"The SPARQL query for the question ""What is the largest city in Australia?"" would be:

```
SELECT ?city WHERE {
  dbr:Australia dbo:largestCity ?city .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
302,Who was married to president Chirac?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  dbr:Jacques_Chirac dbo:spouse ?spouse.
  ?spouse rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
303,What form of government is found in South Africa?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?governmentType WHERE {
  res:South_Africa dbo:governmentType ?governmentType .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
304,How high is the Yokohama Marine Tower?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?height
WHERE {
  res:Yokohama_Marine_Tower dbo:height ?height .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
305,Which holidays are celebrated around the world? test2,"SELECT ?holiday WHERE {
  ?holiday rdf:type dbo:Holiday .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
306,Who is the tallest basketball player?,"SELECT ?player ?height
WHERE {
  ?player dbo:height ?height .
  ?player rdf:type dbo:BasketballPlayer .
}
ORDER BY DESC(?height)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
307,How many languages are spoken in Turkmenistan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT (COUNT(?language) as ?languageCount)
WHERE {
  dbr:Turkmenistan dbo:officialLanguage ?language .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
308,Did Che Guevara have children?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?child ?childName
WHERE {
  dbr:Che_Guevara dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (lang(?childName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
309,Did Kaurismäki ever win the Grand Prix at Cannes?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award ?year WHERE {
  dbr:Aki_Kaurismäki dbo:award ?awardInstance .
  ?awardInstance dbo:award ?award .
  ?awardInstance dbo:year ?year .
  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en')
  FILTER (contains(?awardLabel, ""Grand Prix""))
  FILTER (?year >= ""2016""^^xsd:date)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
310,To which party does the mayor of Paris belong?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party WHERE {
  dbr:Paris dbo:mayor ?mayor .
  ?mayor dbo:party ?partyResource .
  ?partyResource rdfs:label ?party .
  FILTER (lang(?party) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
311,Who is the Formula 1 race driver with the most races?,"SELECT ?driver ?races
WHERE {
  ?driver dbo:wikiPageWikiLink dbr:List_of_Formula_One_Grand_Prix_winners .
  ?driver dbo:races ?races .
}
ORDER BY DESC(?races)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
312,What country is Sitecore from?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country 
WHERE {
  dbr:Sitecore dbo:locationCountry ?countryResource.
  ?countryResource rdfs:label ?country.
  FILTER (lang(?country) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
313,Give me the birth place of Frank Sinatra.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace
WHERE {
  dbr:Frank_Sinatra dbo:birthPlace ?birthPlaceResource.
  ?birthPlaceResource rdfs:label ?birthPlace.
  FILTER (lang(?birthPlace) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
314,Is Christian Bale starring in Velvet Goldmine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film
WHERE {
  ?film dbo:starring res:Christian_Bale .
  FILTER (str(?film) = ""http://dbpedia.org/resource/Velvet_Goldmine"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
315,Who is the son of Sonny and Cher?,"SELECT ?son WHERE {
  dbr:Sonny_&_Cher dbo:child ?son .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
316,How many ethnic groups live in Slovenia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?ethnicGroup) AS ?count)
WHERE {
  dbr:Slovenia dbo:ethnicGroup ?ethnicGroup .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
317,What is the capital of Cameroon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?capital WHERE {
  res:Cameroon dbo:capital ?capital .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
318,Was Natalie Portman born in the United States?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace
WHERE {
  res:Natalie_Portman dbo:birthPlace ?birthPlace .
  FILTER (?birthPlace = res:United_States)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
319,How many pages does War and Peace have?,"SELECT ?pages WHERE {
  dbr:War_and_Peace dbo:numberOfPages ?pages .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
320,Who is the oldest child of Meryl Streep?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?name ?birth
WHERE {
  ?person foaf:name ""Meryl Streep""@en .
  ?person dbo:child ?child .
  ?child dbo:birthDate ?birth .
  ?child foaf:name ?name .
}
ORDER BY ?birth
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
321,Which television shows were created by Walt Disney?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?show WHERE {
  ?show dbo:creator dbr:Walt_Disney .
  ?show rdf:type dbo:TelevisionShow .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
322,What does IYCM stand for?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?meaning
WHERE {
  ?s dbo:wikiPageRedirects <http://dbpedia.org/resource/IYCM> .
  ?s rdfs:label ?meaning .
  FILTER (lang(?meaning) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
323,Which types of grapes grow in Oregon?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grape WHERE {
  dbr:Oregon dbo:growingGrape ?grapeLink.
  ?grapeLink rdfs:label ?grape.
  FILTER (lang(?grape) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
324,Was U.S. president Jackson involved in a war?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?warLabel WHERE {
  dbr:Andrew_Jackson dbo:battle ?war .
  ?war rdfs:label ?warLabel .
  FILTER (lang(?warLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
325,When was the Titanic completed?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:RMS_Titanic dbo:completionDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
326,Did Tesla win a nobel prize in physics?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?award
WHERE {
  dbr:Nikola_Tesla dbo:award ?award .
  ?award rdf:type dbo:Award .
  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = 'en')
  FILTER (contains(?awardLabel, ""Nobel Prize in Physics""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
327,How many states are in Mexico?,"SELECT (COUNT(?state) AS ?count) WHERE {
  ?state dbo:country dbr:Mexico .
  ?state rdf:type dbo:AdministrativeRegion .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
328,Which scientist is known for the Manhattan Project and the Nobel Peace Prize?,"SELECT ?scientist WHERE {
  ?scientist dbo:knownFor dbr:Manhattan_Project .
  ?scientist dbo:award dbr:Nobel_Peace_Prize .
  ?scientist rdf:type dbo:Scientist .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
329,How much did the Lego Movie cost?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?cost WHERE {
  res:The_Lego_Movie dbo:budget ?cost .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
330,Who composed the music for Harold and Maude?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composerName WHERE {
  dbr:Harold_and_Maude dbo:musicComposer ?composer .
  ?composer rdfs:label ?composerName .
  FILTER (lang(?composerName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
331,List all episodes of the first season of the HBO television series The Sopranos.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?episode ?episodeName WHERE {
  ?episode dbo:series dbr:The_Sopranos ;
           dbo:seasonNumber 1 ;
           rdfs:label ?episodeName .
  FILTER (lang(?episodeName) = 'en')
} ORDER BY ?episode","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
332,Which city has the least inhabitants?,"SELECT ?city WHERE {
  ?city a dbo:City ;
        dbo:populationTotal ?population .
}
ORDER BY ASC(?population)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
333,Where is Syngman Rhee buried?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?place ?placeLabel WHERE {
  dbr:Syngman_Rhee dbo:restingPlace ?place .
  ?place rdfs:label ?placeLabel .
  FILTER (lang(?placeLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
334,Does Neymar play for Real Madrid?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

ASK WHERE {
  res:Neymar dbo:team res:Real_Madrid_CF .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
335,Who wrote the book The Pillars of the Earth?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorName WHERE {
  ?book a dbo:Book ;
        rdfs:label ""The Pillars of the Earth""@en ;
        dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (lang(?authorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
336,Do Prince Harry and Prince William have the same parents?,"SELECT ?parent WHERE {
  { dbr:Prince_Harry dbo:parent ?parent . }
  UNION
  { dbr:Prince_William,_Duke_of_Cambridge dbo:parent ?parent . }
} GROUP BY ?parent HAVING (COUNT(?parent) = 2)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
337,Who was the doctoral supervisor of Albert Einstein?,"SELECT ?doctoralSupervisor WHERE {
  dbr:Albert_Einstein dbo:doctoralAdvisor ?doctoralSupervisor .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
338,Does Breaking Bad have more episodes than Game of Thrones?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?breakingBadEpisodes ?gameOfThronesEpisodes WHERE {
  ?bb dbo:numberOfEpisodes ?breakingBadEpisodes .
  ?bb rdfs:label ""Breaking Bad""@en .
  ?got dbo:numberOfEpisodes ?gameOfThronesEpisodes .
  ?got rdfs:label ""Game of Thrones""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
339,Who was Vincent van Gogh inspired by?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:Vincent_van_Gogh dbo:influencedBy ?person.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
340,Which building after the Burj Khalifa has the most floors?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?building ?floors
WHERE {
  ?building rdf:type dbo:Building .
  ?building dbo:floorCount ?floors .
  FILTER (?floors < (SELECT ?burj_floors WHERE {
    dbr:Burj_Khalifa dbo:floorCount ?burj_floors
  }))
}
ORDER BY DESC(?floors)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
341,What was the final result of the War of the Roses?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?result WHERE {
  res:Wars_of_the_Roses dbo:result ?result .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
342,How much did Pulp Fiction cost?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?cost WHERE {
  res:Pulp_Fiction dbo:budget ?cost .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
343,Is proinsulin a protein?,"The provided information seems to be about the lexical entry for the word ""protein"". However, to answer the question ""Is proinsulin a protein?"" using a SPARQL query, you can use the following:

```sparql
SELECT ?type 
WHERE {
  dbr:Proinsulin rdf:type ?type .
  FILTER (?type = dbo:Protein)
}
```

This query will return a result if proinsulin is a type of protein according to DBpedia.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
344,Do Urdu and Persian have a common root?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?commonRoot WHERE {
  dbr:Urdu dbo:languageFamily ?commonRoot .
  dbr:Persian dbo:languageFamily ?commonRoot .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
345,Who is starring in Spanish movies produced by Benicio del Toro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actorName WHERE {
  ?film dbo:producer dbr:Benicio_del_Toro ;
        dbo:starring ?actor ;
        dbp:country ""Spain"" .
  ?actor rdfs:label ?actorName .
  FILTER (lang(?actorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
346,Is Lake Baikal bigger than the Great Bear Lake?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?lake ?area WHERE {
  {
    SELECT (MAX(?area1) as ?area) WHERE {
      {
        SELECT ?lake1 ?area1 WHERE {
          ?lake1 rdfs:label ""Lake Baikal""@en .
          ?lake1 dbo:areaTotal ?area1 .
        }
      }
    }
  }
  UNION
  {
    SELECT (MAX(?area2) as ?area) WHERE {
      {
        SELECT ?lake2 ?area2 WHERE {
          ?lake2 rdfs:label ""Great Bear Lake""@en .
          ?lake2 dbo:areaTotal ?area2 .
        }
      }
    }
  }
} ORDER BY DESC(?area) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
347,Show me all books in Asimov's Foundation series.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  ?book dbo:series dbr:Foundation_series .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
348,Where was Bach born?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?birthPlace WHERE {
  res:Johann_Sebastian_Bach dbo:birthPlace ?birthPlace .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
349,Which city has the oldest running metro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?city WHERE {
  ?metro dbo:location ?city ;
         dbo:openingYear ?year .
  FILTER NOT EXISTS {
    ?otherMetro dbo:location ?otherCity ;
                dbo:openingYear ?otherYear .
    FILTER (?otherYear < ?year)
  }
} ORDER BY ?year LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
350,Who designed the Brooklyn Bridge?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?architect ?architectLabel WHERE {
  dbr:Brooklyn_Bridge dbo:architect ?architect .
  ?architect rdfs:label ?architectLabel .
  FILTER (lang(?architectLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
351,How many people live in Eurasia?,"SELECT (SUM(?population) as ?totalPopulation) WHERE {
  { 
    SELECT ?population WHERE {
      ?country dct:subject dbc:Countries_in_Eurasia ;
               dbo:populationTotal ?population .
    }
  }
  UNION
  { 
    SELECT ?population WHERE {
      ?city dct:subject dbc:Cities_in_Eurasia ;
            dbo:populationTotal ?population .
    }
  }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
352,Who is the host of the BBC Wildlife Specials?,"SELECT ?host WHERE {
  dbr:BBC_Wildlife_Specials dbo:presenter ?host .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
353,"What is the total population of Melbourne, Florida?","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?population WHERE {
  res:Melbourne,_Florida dbo:populationTotal ?population .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
354,What country is Mount Everest in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  dbr:Mount_Everest dbo:location ?country .
  ?country a dbo:Country .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
355,To which artistic movement did the painter of The Three Dancers belong?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movement WHERE {
  dbr:The_Three_Dancers dbo:author ?author .
  ?author dbo:movement ?movement .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
356,When did Operation Overlord commence?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Operation_Overlord dbo:date ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
357,What is the bridge with the longest span?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bridge ?span
WHERE {
  ?bridge dbo:mainspan ?span .
}
ORDER BY DESC(?span)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
358,Is there a video game called Battle Chess?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?game
WHERE {
  ?game a dbo:VideoGame ;
        rdfs:label ""Battle Chess""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
359,Who was buried in the Great Pyramid of Giza?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person dbo:restingPlace dbr:Great_Pyramid_of_Giza.
  ?person rdf:type dbo:Person.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
360,Does the Ford Motor Company have a manufacturing plant in Malaysia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?plant WHERE {
  ?plant dbo:owner dbr:Ford_Motor_Company .
  ?plant dbo:locationCountry dbr:Malaysia .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
361,Did Socrates influence Aristotle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?influence
WHERE {
  dbr:Aristotle dbo:influencedBy ?influence .
  FILTER (?influence = dbr:Socrates)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
362,How many children did Benjamin Franklin have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?child) AS ?count)
WHERE {
  dbr:Benjamin_Franklin dbo:child ?child .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
363,How tall is Michael Jordan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?height WHERE {
  res:Michael_Jordan dbo:height ?height .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
364,In which UK city are the headquarters of the MI6?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?city WHERE {
  dbr:Secret_Intelligence_Service dbo:headquarter ?city .
  ?city dbo:isPartOf dbr:United_Kingdom .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
365,Who created Family Guy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?creator
WHERE {
  ?show rdfs:label ""Family Guy""@en .
  ?show dbo:creator ?creatorLink .
  ?creatorLink rdfs:label ?creator .
  FILTER (lang(?creator) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
366,In which city does the Chile Route 68 end?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  dbr:Chile_Route_68 dbo:routeEnd ?end .
  ?end rdfs:label ?city .
  FILTER (lang(?city) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
367,Give me the grandchildren of Elvis Presley.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild
WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child dbo:child ?grandchild .
  ?grandchild rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
368,When did the Ming dynasty dissolve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Ming_dynasty dbo:dissolutionDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
369,In which military conflicts did Lawrence of Arabia participate?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?conflict ?conflictLabel WHERE {
  dbr:Lawrence_of_Arabia dbo:battle ?conflict .
  ?conflict rdfs:label ?conflictLabel .
  FILTER (lang(?conflictLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
370,What is the timezone in San Pedro de Atacama?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?timezone WHERE {
  res:San_Pedro_de_Atacama dbo:timeZone ?timezone .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
371,Give me all books by William Goldman with more than 300 pages.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?pages
WHERE {
  ?book rdf:type dbo:Book .
  ?book dbo:author dbr:William_Goldman .
  ?book dbo:numberOfPages ?pages .
  FILTER(?pages > 300)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
372,What did Bruce Carver die from?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?causeOfDeath WHERE {
  res:Bruce_Carver dbo:deathCause ?causeOfDeath.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
373,Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?airline WHERE {
  ?airline dbo:parentCompany dbr:Lufthansa .
  ?airline dbo:targetAirport dbr:Dortmund_Airport .
  ?airline dbo:targetAirport dbr:Berlin_Tegel_Airport .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
374,Does Abraham Lincoln's death place have a website?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?website
WHERE {
  res:Abraham_Lincoln dbo:deathPlace ?deathPlace .
  ?deathPlace foaf:homepage ?website .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
375,Did Elvis Presley have children?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childName WHERE {
  dbr:Elvis_Presley dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER (lang(?childName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
376,Is Michelle Obama the wife of Barack Obama?,"SELECT ?answer 
WHERE {
  dbr:Barack_Obama dbo:spouse ?answer .
  FILTER (?answer = dbr:Michelle_Obama)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
377,In which city does Sylvester Stallone live?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  res:Sylvester_Stallone dbo:residence ?cityResource.
  ?cityResource rdfs:label ?city.
  FILTER (lang(?city) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
378,Which books by Kerouac were published by Viking Press?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  ?book dbo:author dbr:Jack_Kerouac .
  ?book dbo:publisher dbr:Viking_Press .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
379,Who wrote the song Hotel California?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?writerName WHERE {
  ?song dbo:writer ?writer .
  ?song rdfs:label ""Hotel California""@en .
  ?writer rdfs:label ?writerName .
  FILTER (lang(?writerName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
380,What is the capital of Canada?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?capital
WHERE {
  res:Canada dbo:capital ?capital .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
381,Who is the mayor of Tel Aviv?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  dbr:Tel_Aviv dbo:leaderName ?mayor.
  ?mayor rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
382,What form of government does Russia have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?governmentType WHERE {
  res:Russia dbo:governmentType ?governmentType .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
383,Show me the book that Muhammad Ali wrote.,"SELECT ?book WHERE {
  ?book dbo:author dbr:Muhammad_Ali .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
384,Who was the first to climb Mount Everest?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?person WHERE {
  dbr:Mount_Everest dbo:firstAscentPerson ?person .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
385,How many languages are spoken in Colombia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?language) AS ?count) WHERE {
  dbr:Colombia dbo:officialLanguage ?language .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
386,What is the currency of the Czech Republic?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?currency WHERE {
  res:Czech_Republic dbo:currency ?currency .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
387,Where in France is sparkling wine produced?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?region WHERE {
  ?region dbo:country dbr:France .
  ?winery dbo:location ?region .
  ?winery dbo:wineProduced ?wine .
  ?wine dbo:type dbr:Sparkling_wine .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
388,When did Boris Becker end his active career?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?date WHERE {
  res:Boris_Becker dbo:activeYearsEndDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
389,Which movies starring Mickey Rourke were directed by Guy Ritchie?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?movieLabel WHERE {
  ?movie dbo:starring dbr:Mickey_Rourke .
  ?movie dbo:director dbr:Guy_Ritchie .
  ?movie rdfs:label ?movieLabel .
  FILTER (lang(?movieLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
390,In which films did Julia Roberts as well as Richard Gere play?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?film ?filmLabel WHERE {
  ?film dbo:starring dbr:Julia_Roberts, dbr:Richard_Gere.
  ?film rdfs:label ?filmLabel.
  FILTER (lang(?filmLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
391,Show me Hemingway's autobiography.,"Apologies for the confusion. Here is the correct SPARQL query:

```sparql
SELECT ?autobiography WHERE {
  ?autobiography dbo:author dbr:Ernest_Hemingway .
  ?autobiography rdf:type dbo:Book .
  ?autobiography dbo:literaryGenre dbr:Autobiography .
}
```

This query will return the autobiography of Ernest Hemingway.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
392,How tall is Amazon Eve?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?height
WHERE {
  res:Amazon_Eve dbo:height ?height .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
393,What are the five boroughs of New York?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?borough WHERE {
  dbr:New_York_City dbo:borough ?boroughResource.
  ?boroughResource rdfs:label ?borough.
  FILTER (lang(?borough) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
394,Give me all Canadian Grunge record labels.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label WHERE {
  ?label rdf:type dbo:RecordLabel .
  ?label dbo:country dbr:Canada .
  ?artist dbo:recordLabel ?label .
  ?artist dbo:genre dbr:Grunge_music .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
395,In which country does the Ganges start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country WHERE {
  ?river dbo:sourceCountry ?country .
  ?river rdfs:label ""Ganges""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
396,Who is the founder of Penguin Books?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?founder
WHERE {
  dbr:Penguin_Books dbo:founder ?founderResource.
  ?founderResource rdfs:label ?founder.
  FILTER (lang(?founder) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
397,Who wrote the Game of Thrones theme?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composerName WHERE {
  ?show dbo:composer ?composer .
  ?show rdfs:label ""Game of Thrones""@en .
  ?composer rdfs:label ?composerName .
  FILTER (lang(?composerName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
398,Who is the president of Eritrea?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?president WHERE {
  res:Eritrea dbo:leader ?presidentResource.
  ?presidentResource rdfs:label ?president.
  FILTER (lang(?president) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
399,In which city did John F. Kennedy die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city WHERE {
  dbr:John_F._Kennedy dbo:deathPlace ?place .
  ?place rdfs:label ?city .
  FILTER (lang(?city) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
400,What is the highest mountain in Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain rdf:type dbo:Mountain ;
            dbo:location <http://dbpedia.org/resource/Australia> ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
401,Who writes the Farmers' Almanac?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:Farmers'_Almanac dbp:editor ?person.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
402,Give me the currency of China.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?currency WHERE {
  dbr:China dbo:currency ?currencyLink.
  ?currencyLink rdfs:label ?currency.
  FILTER (lang(?currency) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
403,Give me all Swedish oceanographers.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Sweden .
  ?person dct:subject dbc:Oceanographers .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
404,In which city are the headquarters of the United Nations?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?city WHERE {
  res:United_Nations dbo:headquarter ?city .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
405,Is Rita Wilson the wife of Tom Hanks?,"SELECT ?answer 
WHERE {
  dbr:Tom_Hanks dbo:spouse ?answer .
  FILTER (?answer = dbr:Rita_Wilson)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
406,In which countries do people speak Japanese?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country 
WHERE {
  ?country dbo:officialLanguage ?language .
  ?language rdfs:label ?label .
  FILTER (lang(?label) = 'en' && ?label = 'Japanese') .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
407,Which of Tim Burton's films had the highest budget?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?film ?budget
WHERE {
  ?film dbo:director ?director .
  ?director foaf:name ""Tim Burton"" .
  ?film dbo:budget ?budget .
}
ORDER BY DESC(?budget)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
408,Which museum in New York has the most visitors?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?museum ?visitors
WHERE {
  ?museum dbo:location <http://dbpedia.org/resource/New_York_City> .
  ?museum dbo:numberOfVisitors ?visitors .
}
ORDER BY DESC(xsd:integer(?visitors))
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
409,What was the first Queen album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?album ?date
WHERE {
  ?album dbo:artist <http://dbpedia.org/resource/Queen_(band)> .
  ?album dbo:releaseDate ?date .
}
ORDER BY ?date
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
410,What was the first name of the band Queens of the Stone Age?,"SELECT ?firstName WHERE {
  dbr:Queens_of_the_Stone_Age dbo:alias ?firstName .
} LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
411,What was the last movie with Alec Guinness?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?date WHERE {
  ?movie dbo:starring dbr:Alec_Guinness ;
         dbo:releaseDate ?date .
}
ORDER BY DESC(?date)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
412,Give me all actors starring in Last Action Hero.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  dbr:Last_Action_Hero dbo:starring ?actorResource.
  ?actorResource rdfs:label ?actor.
  FILTER (lang(?actor) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
413,Who discovered Pluto?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?discoverer
WHERE {
  dbr:Pluto dbo:discoverer ?discovererLink.
  ?discovererLink rdfs:label ?discoverer.
  FILTER (lang(?discoverer) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
