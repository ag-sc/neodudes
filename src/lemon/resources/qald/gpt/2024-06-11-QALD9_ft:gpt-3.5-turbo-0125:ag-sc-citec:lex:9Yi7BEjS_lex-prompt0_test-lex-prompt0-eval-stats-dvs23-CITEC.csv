id,question,prompt,Gold SPARQL,Generated SPARQL,True Positive,False Positive,False Negative,Precision,Recall,F1,Exact matches
99,What is the time zone of Salt Lake City?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:Salt_Lake_City <http://dbpedia.org/ontology/timeZone> ?uri },SELECT DISTINCT ?uri WHERE { res:Salt_Lake_City dbo:timeZone ?uri },1,0,0,1.0,1.0,1.0,1
99,What is the time zone of Salt Lake City?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Salt_Lake_City <http://dbpedia.org/ontology/timeZone> ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
98,Who killed Caesar?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri dct:subject dbc:Assassins_of_Julius_Caesar },SELECT DISTINCT ?uri WHERE { res:Julius_Caesar dbo:deathPlace ?uri },0,1,9,0.0,0.0,0.0,0
98,Who killed Caesar?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dct:subject dbc:Assassins_of_Julius_Caesar },Average of all prompts,0,1,9,0.0,0.0,0.0,0
86,What is the highest mountain in Germany?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri WHERE { ?uri rdf:type onto:Mountain ; onto:elevation ?elevation ; onto:locatedInArea <http://dbpedia.org/resource/Germany> } ORDER BY DESC(?elevation) LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1,0,0,1,0.0,0.0,0.0,0
86,What is the highest mountain in Germany?,Average of all prompts,SELECT ?uri WHERE { ?uri rdf:type onto:Mountain ; onto:elevation ?elevation ; onto:locatedInArea <http://dbpedia.org/resource/Germany> } ORDER BY DESC(?elevation) LIMIT 1,Average of all prompts,0,0,1,0.0,0.0,0.0,0
84,Which American presidents were in office during the Vietnam War?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri WHERE { ?uri dct:subject dbc:Presidents_of_the_United_States . res:Vietnam_War dbo:commander ?uri },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/President> ; <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Vietnam_War> },0,0,3,0.0,0.0,0.0,0
84,Which American presidents were in office during the Vietnam War?,Average of all prompts,SELECT ?uri WHERE { ?uri dct:subject dbc:Presidents_of_the_United_States . res:Vietnam_War dbo:commander ?uri },Average of all prompts,0,0,3,0.0,0.0,0.0,0
81,Butch Otter is the governor of which U.S. state?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates> ; <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Butch_Otter> },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Butch_Otter> <http://dbpedia.org/property/governor> ?uri },0,3,1,0.0,0.0,0.0,0
81,Butch Otter is the governor of which U.S. state?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates> ; <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Butch_Otter> },Average of all prompts,0,3,1,0.0,0.0,0.0,0
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT Count(?sub) as ?c WHERE { ?sub dbo:goldMedalist dbr:Michael_Phelps . filter (contains (str(?sub), ""2008"") && contains (str(?sub), ""Olympics"")) }",SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri dbo:goldMedalist res:Michael_Phelps . ?uri <http://dbpedia.org/property/games> <http://dbpedia.org/resource/2008_Summer_Olympics> },0,1,1,0.0,0.0,0.0,0
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,Average of all prompts,"SELECT Count(?sub) as ?c WHERE { ?sub dbo:goldMedalist dbr:Michael_Phelps . filter (contains (str(?sub), ""2008"") && contains (str(?sub), ""Olympics"")) }",Average of all prompts,0,1,1,0.0,0.0,0.0,0
66,Which artists were born on the same date as Rachel Stevens?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a dbo:Artist . dbr:Rachel_Stevens dbo:birthDate ?birthdate . ?uri dbo:birthDate ?birthdate },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rachel_Stevens> <http://dbpedia.org/property/birthDate> ?date . ?uri a <http://dbpedia.org/ontology/MusicalArtist> ; <http://dbpedia.org/property/birthDate> ?date FILTER ( ?uri != <http://dbpedia.org/resource/Rachel_Stevens> ) },2,0,1,1.0,0.6666666666666666,0.8,0
66,Which artists were born on the same date as Rachel Stevens?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a dbo:Artist . dbr:Rachel_Stevens dbo:birthDate ?birthdate . ?uri dbo:birthDate ?birthdate },Average of all prompts,2,0,1,1.0,0.6666666666666666,0.8,0
64,What is the profession of Frank Herbert?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?string WHERE { res:Frank_Herbert dbpedia2:occupation ?string },SELECT DISTINCT ?uri WHERE { res:Frank_Herbert dbo:occupation ?uri },0,0,1,0.0,0.0,0.0,0
64,What is the profession of Frank Herbert?,Average of all prompts,SELECT DISTINCT ?string WHERE { res:Frank_Herbert dbpedia2:occupation ?string },Average of all prompts,0,0,1,0.0,0.0,0.0,0
6,Are Taiko some kind of Japanese musical instrument?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,ASK WHERE { <http://dbpedia.org/resource/Taiko> a <http://dbpedia.org/class/yago/WikicatJapaneseMusicalInstruments> },ASK WHERE { res:Taiko rdf:type dbo:MusicalInstrument },0,1,1,0.0,0.0,0.0,0
6,Are Taiko some kind of Japanese musical instrument?,Average of all prompts,ASK WHERE { <http://dbpedia.org/resource/Taiko> a <http://dbpedia.org/class/yago/WikicatJapaneseMusicalInstruments> },Average of all prompts,0,1,1,0.0,0.0,0.0,0
56,How many seats does the home stadium of FC Porto have?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?capacity WHERE { { dbr:FC_Porto dbo:ground ?ground . ?ground dbo:capacity ?capacity } UNION { dbr:FC_Porto dbo:ground ?ground . ?ground dbp:capacity ?capacity } },SELECT DISTINCT ?n WHERE { res:FC_Porto dbo:ground ?x . ?x dbo:seatingCapacity ?n },0,0,1,0.0,0.0,0.0,0
56,How many seats does the home stadium of FC Porto have?,Average of all prompts,SELECT ?capacity WHERE { { dbr:FC_Porto dbo:ground ?ground . ?ground dbo:capacity ?capacity } UNION { dbr:FC_Porto dbo:ground ?ground . ?ground dbp:capacity ?capacity } },Average of all prompts,0,0,1,0.0,0.0,0.0,0
49,Which frequent flyer program has the most airlines?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri WHERE { ?airline <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline> . ?airline <http://dbpedia.org/property/frequentFlyer> ?uri. } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?airline)) OFFSET 0 LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/frequentFlyer> ?ffp . ?airline <http://dbpedia.org/property/frequentFlyer> ?ffp } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?airline)) OFFSET 0 LIMIT 1,0,1,1,0.0,0.0,0.0,0
49,Which frequent flyer program has the most airlines?,Average of all prompts,SELECT ?uri WHERE { ?airline <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline> . ?airline <http://dbpedia.org/property/frequentFlyer> ?uri. } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?airline)) OFFSET 0 LIMIT 1,Average of all prompts,0,1,1,0.0,0.0,0.0,0
44,Which European countries have a constitutional monarchy?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri WHERE { ?uri dct:subject dbc:Countries_in_Europe ; dbo:governmentType dbr:Constitutional_monarchy },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Constitutional_monarchy> ; <http://dbpedia.org/ontology/continent> <http://dbpedia.org/resource/Europe> },0,0,4,0.0,0.0,0.0,0
44,Which European countries have a constitutional monarchy?,Average of all prompts,SELECT ?uri WHERE { ?uri dct:subject dbc:Countries_in_Europe ; dbo:governmentType dbr:Constitutional_monarchy },Average of all prompts,0,0,4,0.0,0.0,0.0,0
42,Which countries have places with more than two caves?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?cave rdf:type dbo:Cave ; dbo:location ?uri . ?uri rdf:type dbo:Country } GROUP BY ?uri HAVING ( COUNT(?cave) > 2 ),SELECT DISTINCT ?uri WHERE { ?cave a <http://dbpedia.org/ontology/Cave> ; <http://dbpedia.org/ontology/location> ?uri . ?uri a <http://dbpedia.org/ontology/Country> } GROUP BY ?uri HAVING ( COUNT(?cave) > 2 ),31,0,0,1.0,1.0,1.0,1
42,Which countries have places with more than two caves?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?cave rdf:type dbo:Cave ; dbo:location ?uri . ?uri rdf:type dbo:Country } GROUP BY ?uri HAVING ( COUNT(?cave) > 2 ),Average of all prompts,31,0,0,1.0,1.0,1.0,1
4,"Which airports are located in California, USA?",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airport> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/city> ?city . ?city <http://dbpedia.org/ontology/isPartOf> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/California> } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airport> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> },73,0,131,1.0,0.35784313725490197,0.5270758122743682,0
4,"Which airports are located in California, USA?",Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airport> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/city> ?city . ?city <http://dbpedia.org/ontology/isPartOf> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/California> } },Average of all prompts,73,0,131,1.0,0.35784313725490197,0.5270758122743682,0
37,What are the nicknames of San Francisco?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?string WHERE { res:San_Francisco foaf:nick ?string },SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/San_Francisco> <http://dbpedia.org/property/nickname> ?string },0,1,1,0.0,0.0,0.0,0
37,What are the nicknames of San Francisco?,Average of all prompts,PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?string WHERE { res:San_Francisco foaf:nick ?string },Average of all prompts,0,1,1,0.0,0.0,0.0,0
32,What is Angela Merkel’s birth name?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?string WHERE { res:Angela_Merkel dbp:birthName ?string },SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/property/birthName> ?string },1,0,0,1.0,1.0,1.0,1
32,What is Angela Merkel’s birth name?,Average of all prompts,SELECT DISTINCT ?string WHERE { res:Angela_Merkel dbp:birthName ?string },Average of all prompts,1,0,0,1.0,1.0,1.0,1
31,Who is the mayor of Berlin?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:Berlin dbp:leader ?uri },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Berlin> <http://dbpedia.org/property/leader> ?uri },1,0,0,1.0,1.0,1.0,1
31,Who is the mayor of Berlin?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Berlin dbp:leader ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
29,Which countries in the European Union adopted the Euro?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> } UNION { ?uri <http://dbpedia.org/property/currencyCode> ""EUR""@en } }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> ; <http://dbpedia.org/ontology/continent> <http://dbpedia.org/resource/Europe> },0,0,47,0.0,0.0,0.0,0
29,Which countries in the European Union adopted the Euro?,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> } UNION { ?uri <http://dbpedia.org/property/currencyCode> ""EUR""@en } }",Average of all prompts,0,0,47,0.0,0.0,0.0,0
23,Which software has been published by Mean Hamster Software?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Software { ?uri prop:publisher ""Mean Hamster Software""@en } UNION { ?uri onto:publisher res:Mean_Hamster_Software } }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Software> ; <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mean_Hamster_Software> },0,0,2,0.0,0.0,0.0,0
23,Which software has been published by Mean Hamster Software?,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Software { ?uri prop:publisher ""Mean Hamster Software""@en } UNION { ?uri onto:publisher res:Mean_Hamster_Software } }",Average of all prompts,0,0,2,0.0,0.0,0.0,0
68,Which country was Bill Gates born in?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?country WHERE { { dbr:Bill_Gates dbo:birthPlace ?birthPlace . ?birthPlace dbo:country ?country } UNION { dbr:Bill_Gates dbo:birthPlace ?birthPlace . ?birthPlace dbo:isPartOf ?place . ?place dbo:country ?country } },SELECT DISTINCT ?uri WHERE { res:Bill_Gates dbo:birthPlace ?x . ?x dbo:country ?uri },0,0,1,0.0,0.0,0.0,0
68,Which country was Bill Gates born in?,Average of all prompts,SELECT DISTINCT ?country WHERE { { dbr:Bill_Gates dbo:birthPlace ?birthPlace . ?birthPlace dbo:country ?country } UNION { dbr:Bill_Gates dbo:birthPlace ?birthPlace . ?birthPlace dbo:isPartOf ?place . ?place dbo:country ?country } },Average of all prompts,0,0,1,0.0,0.0,0.0,0
22,How many grand-children did Jacques Cousteau have?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT COUNT(DISTINCT ?y AS ?y) WHERE { <http://dbpedia.org/resource/Jacques_Cousteau> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/child> ?y . },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Jacques_Cousteau dbo:child ?child . ?child dbo:child ?uri },1,0,0,1.0,1.0,1.0,1
22,How many grand-children did Jacques Cousteau have?,Average of all prompts,SELECT COUNT(DISTINCT ?y AS ?y) WHERE { <http://dbpedia.org/resource/Jacques_Cousteau> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/child> ?y . },Average of all prompts,1,0,0,1.0,1.0,1.0,1
214,Give me all professional skateboarders from Sweden.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Skateboarder { ?uri dbo:birthPlace dbr:Sweden } UNION { ?uri dbo:birthPlace ?place . ?place dbo:country dbr:Sweden } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Skateboarder> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> },0,0,2,0.0,0.0,0.0,0
214,Give me all professional skateboarders from Sweden.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Skateboarder { ?uri dbo:birthPlace dbr:Sweden } UNION { ?uri dbo:birthPlace ?place . ?place dbo:country dbr:Sweden } },Average of all prompts,0,0,2,0.0,0.0,0.0,0
210,Which monarchs of the United Kingdom were married to a German?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatMonarchsOfTheUnitedKingdom ; dbo:spouse ?spouse . ?spouse dbo:birthPlace res:Germany },"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Monarch> ; <http://dbpedia.org/ontology/spouse> ?spouse { ?spouse <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> } UNION { ?spouse <http://dbpedia.org/ontology/nationality> ?x FILTER regex(?x, ""Germany"") } }",0,0,1,0.0,0.0,0.0,0
210,Which monarchs of the United Kingdom were married to a German?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatMonarchsOfTheUnitedKingdom ; dbo:spouse ?spouse . ?spouse dbo:birthPlace res:Germany },Average of all prompts,0,0,1,0.0,0.0,0.0,0
199,Give me all Argentine films.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?uri WHERE { { ?uri rdf:type yago:ArgentineFilms } UNION { ?uri rdf:type dbo:Film { ?uri dbo:country res:Argentina } UNION { ?uri dbp:country ""Argentina""@en } } }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Argentina> },243,0,0,1.0,1.0,1.0,1
199,Give me all Argentine films.,Average of all prompts,"SELECT DISTINCT ?uri WHERE { { ?uri rdf:type yago:ArgentineFilms } UNION { ?uri rdf:type dbo:Film { ?uri dbo:country res:Argentina } UNION { ?uri dbp:country ""Argentina""@en } } }",Average of all prompts,243,0,0,1.0,1.0,1.0,1
203,How did Michael Jackson die?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Michael_Jackson> <http://dbpedia.org/property/deathCause> ?s },SELECT DISTINCT ?uri WHERE { res:Michael_Jackson dbo:deathCause ?uri },0,0,1,0.0,0.0,0.0,0
203,How did Michael Jackson die?,Average of all prompts,SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Michael_Jackson> <http://dbpedia.org/property/deathCause> ?s },Average of all prompts,0,0,1,0.0,0.0,0.0,0
197,Which U.S. state has been admitted latest?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri dct:subject dbc:States_of_the_United_States ; <http://dbpedia.org/property/admittancedate> ?x } ORDER BY DESC(?x) LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PopulatedPlace> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> ; <http://dbpedia.org/property/admittancedate> ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1,1,0,0,1.0,1.0,1.0,1
197,Which U.S. state has been admitted latest?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dct:subject dbc:States_of_the_United_States ; <http://dbpedia.org/property/admittancedate> ?x } ORDER BY DESC(?x) LIMIT 1,Average of all prompts,1,0,0,1.0,1.0,1.0,1
196,Which classes does the Millepede belong to?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?String WHERE { res:Millipede dbp:taxon ?String },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Millipede> <http://dbpedia.org/property/taxon> ?uri },1,0,0,1.0,1.0,1.0,1
196,Which classes does the Millepede belong to?,Average of all prompts,SELECT DISTINCT ?String WHERE { res:Millipede dbp:taxon ?String },Average of all prompts,1,0,0,1.0,1.0,1.0,1
188,Give me the homepage of Forbes.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?string WHERE { res:Forbes foaf:homepage ?string },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Forbes> <http://xmlns.com/foaf/0.1/homepage> ?uri },1,0,0,1.0,1.0,1.0,1
188,Give me the homepage of Forbes.,Average of all prompts,SELECT DISTINCT ?string WHERE { res:Forbes foaf:homepage ?string },Average of all prompts,1,0,0,1.0,1.0,1.0,1
187,Who is the husband of Amanda Palmer?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amanda_Palmer> },SELECT DISTINCT ?uri WHERE { res:Amanda_Palmer dbo:spouse ?uri },0,0,1,0.0,0.0,0.0,0
187,Who is the husband of Amanda Palmer?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amanda_Palmer> },Average of all prompts,0,0,1,0.0,0.0,0.0,0
176,Who painted The Storm on the Sea of Galilee?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:The_Storm_on_the_Sea_of_Galilee dbo:author ?uri },SELECT DISTINCT ?uri WHERE { res:The_Storm_on_the_Sea_of_Galilee dbo:author ?uri },1,0,0,1.0,1.0,1.0,1
176,Who painted The Storm on the Sea of Galilee?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:The_Storm_on_the_Sea_of_Galilee dbo:author ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
62,What is the highest place of Karakoram?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:Karakoram dbp:highest ?uri },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakoram> <http://dbpedia.org/property/highest> ?uri },1,0,0,1.0,1.0,1.0,1
62,What is the highest place of Karakoram?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Karakoram dbp:highest ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
173,When did Finland join the EU?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?date WHERE { res:Finland dbp:accessioneudate ?date },SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Finland> <http://dbpedia.org/property/accessioneudate> ?date },1,0,0,1.0,1.0,1.0,1
173,When did Finland join the EU?,Average of all prompts,SELECT DISTINCT ?date WHERE { res:Finland dbp:accessioneudate ?date },Average of all prompts,1,0,0,1.0,1.0,1.0,1
168,Which actors play in Big Bang Theory?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Big_Bang_Theory> <http://dbpedia.org/ontology/starring> ?uri },SELECT DISTINCT ?uri WHERE { res:The_Big_Bang_Theory dbo:starring ?uri },10,0,0,1.0,1.0,1.0,1
168,Which actors play in Big Bang Theory?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Big_Bang_Theory> <http://dbpedia.org/ontology/starring> ?uri },Average of all prompts,10,0,0,1.0,1.0,1.0,1
166,Which computer scientist won an oscar?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Computer_science> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Academy_Award> },SELECT DISTINCT ?uri WHERE { ?uri rdf:type res:Computer_scientist ; dbo:award res:Academy_Award },0,0,1,0.0,0.0,0.0,0
166,Which computer scientist won an oscar?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Computer_science> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Academy_Award> },Average of all prompts,0,0,1,0.0,0.0,0.0,0
160,Who wrote Harry Potter?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Potter> <http://dbpedia.org/property/author> ?uri },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Potter> <http://dbpedia.org/property/author> ?uri },1,0,0,1.0,1.0,1.0,1
160,Who wrote Harry Potter?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Potter> <http://dbpedia.org/property/author> ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
158,Give me all writers that won the Nobel Prize in literature.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> },21,0,0,1.0,1.0,1.0,1
158,Give me all writers that won the Nobel Prize in literature.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> },Average of all prompts,21,0,0,1.0,1.0,1.0,1
157,Give me English actors starring in Lovesick.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lovesick_(1983_film)> dbo:starring ?uri . ?uri dbo:birthPlace ?city . ?city dbo:country <http://dbpedia.org/resource/United_Kingdom> },SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Person ; dbo:birthPlace res:England ; dbo:starring res:Lovesick },0,0,2,0.0,0.0,0.0,0
157,Give me English actors starring in Lovesick.,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lovesick_(1983_film)> dbo:starring ?uri . ?uri dbo:birthPlace ?city . ?city dbo:country <http://dbpedia.org/resource/United_Kingdom> },Average of all prompts,0,0,2,0.0,0.0,0.0,0
155,What is the nick name of Baghdad?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?nm WHERE { dbr:Baghdad foaf:nick ?nm },SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/Baghdad> <http://xmlns.com/foaf/0.1/nick> ?string },1,0,0,1.0,1.0,1.0,1
155,What is the nick name of Baghdad?,Average of all prompts,SELECT ?nm WHERE { dbr:Baghdad foaf:nick ?nm },Average of all prompts,1,0,0,1.0,1.0,1.0,1
150,In which city was the president of Montenegro born?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/title> dbr:President_of_Montenegro ; dbo:birthPlace ?uri . ?uri dbo:type dbr:Capital_city },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/President_of_Montenegro> <http://dbpedia.org/property/birthPlace> ?x . ?x <http://dbpedia.org/property/cityofbirth> ?uri },0,0,1,0.0,0.0,0.0,0
150,In which city was the president of Montenegro born?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/title> dbr:President_of_Montenegro ; dbo:birthPlace ?uri . ?uri dbo:type dbr:Capital_city },Average of all prompts,0,0,1,0.0,0.0,0.0,0
149,Which U.S. state has the highest population density?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/capital> ?capital . ?uri <http://dbpedia.org/property/densityrank> ?density . OPTIONAL {?uri <http://www.w3.org/2000/01/rdf-schema#label> ?string. FILTER (lang(?string) = 'en') } } ORDER BY ASC(?density) LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PopulatedPlace> ; <http://dbpedia.org/property/densityrank> ?density } ORDER BY ASC(?density) OFFSET 0 LIMIT 1,1,0,0,1.0,1.0,1.0,1
149,Which U.S. state has the highest population density?,Average of all prompts,SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/capital> ?capital . ?uri <http://dbpedia.org/property/densityrank> ?density . OPTIONAL {?uri <http://www.w3.org/2000/01/rdf-schema#label> ?string. FILTER (lang(?string) = 'en') } } ORDER BY ASC(?density) LIMIT 1,Average of all prompts,1,0,0,1.0,1.0,1.0,1
25,What is the longest river in China?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/China> ; <http://dbpedia.org/property/length> ?l } ORDER BY DESC(?l) OFFSET 0 LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:River ; dbo:length ?length ; dbo:country res:China } ORDER BY DESC(?length) LIMIT 1,0,1,1,0.0,0.0,0.0,0
25,What is the longest river in China?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/China> ; <http://dbpedia.org/property/length> ?l } ORDER BY DESC(?l) OFFSET 0 LIMIT 1,Average of all prompts,0,1,1,0.0,0.0,0.0,0
143,What is the area code of Berlin?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?string WHERE { res:Berlin dbo:areaCode ?string },SELECT DISTINCT ?uri WHERE { res:Berlin dbo:areaCode ?uri },1,0,0,1.0,1.0,1.0,1
143,What is the area code of Berlin?,Average of all prompts,SELECT DISTINCT ?string WHERE { res:Berlin dbo:areaCode ?string },Average of all prompts,1,0,0,1.0,1.0,1.0,1
140,How many scientists graduated from an Ivy League university?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Scientist> ; <http://dbpedia.org/ontology/almaMater> ?university . ?university <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Ivy_League> ; a <http://dbpedia.org/ontology/University> },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Scientist> ; <http://dbpedia.org/ontology/almaMater> ?x . ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Ivy_League> },0,1,1,0.0,0.0,0.0,0
140,How many scientists graduated from an Ivy League university?,Average of all prompts,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Scientist> ; <http://dbpedia.org/ontology/almaMater> ?university . ?university <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Ivy_League> ; a <http://dbpedia.org/ontology/University> },Average of all prompts,0,1,1,0.0,0.0,0.0,0
139,Which professional surfers were born in Australia?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { { ?uri dbo:occupation res:Surfer ; dbo:birthPlace res:Australia } UNION { ?uri dbo:occupation res:Surfer ; dbo:birthPlace ?place . ?place dbo:country res:Australia } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Surfer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Australia> },0,0,2,0.0,0.0,0.0,0
139,Which professional surfers were born in Australia?,Average of all prompts,SELECT DISTINCT ?uri WHERE { { ?uri dbo:occupation res:Surfer ; dbo:birthPlace res:Australia } UNION { ?uri dbo:occupation res:Surfer ; dbo:birthPlace ?place . ?place dbo:country res:Australia } },Average of all prompts,0,0,2,0.0,0.0,0.0,0
137,Give me all Dutch parties.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> },11,0,0,1.0,1.0,1.0,1
137,Give me all Dutch parties.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> },Average of all prompts,11,0,0,1.0,1.0,1.0,1
136,How many moons does Mars have?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Mars> <http://dbpedia.org/property/satellites> ?n },SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Mars> <http://dbpedia.org/property/satellites> ?n },1,0,0,1.0,1.0,1.0,1
136,How many moons does Mars have?,Average of all prompts,SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Mars> <http://dbpedia.org/property/satellites> ?n },Average of all prompts,1,0,0,1.0,1.0,1.0,1
134,What is Batman's real name?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?label WHERE { <http://dbpedia.org/resource/Batman> <http://xmlns.com/foaf/0.1/name> ?label FILTER ( str(?label) != ""Batman"" ) }",SELECT DISTINCT ?name WHERE { res:Batman foaf:name ?name },1,1,0,0.5,1.0,0.6666666666666666,0
134,What is Batman's real name?,Average of all prompts,"SELECT DISTINCT ?label WHERE { <http://dbpedia.org/resource/Batman> <http://xmlns.com/foaf/0.1/name> ?label FILTER ( str(?label) != ""Batman"" ) }",Average of all prompts,1,1,0,0.5,1.0,0.6666666666666666,0
132,What is Elon Musk famous for?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elon_Musk> <http://dbpedia.org/ontology/knownFor> ?uri },SELECT DISTINCT ?uri WHERE { res:Elon_Musk dbo:knownFor ?uri },6,0,0,1.0,1.0,1.0,1
132,What is Elon Musk famous for?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elon_Musk> <http://dbpedia.org/ontology/knownFor> ?uri },Average of all prompts,6,0,0,1.0,1.0,1.0,1
128,Who is the author of WikiLeaks?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri WHERE { res:WikiLeaks onto:author ?uri },SELECT DISTINCT ?uri WHERE { res:WikiLeaks dbo:author ?uri },1,0,0,1.0,1.0,1.0,1
128,Who is the author of WikiLeaks?,Average of all prompts,SELECT ?uri WHERE { res:WikiLeaks onto:author ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
126,Sean Parnell was the governor of which U.S. state?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:Sean_Parnell dbo:region ?uri },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sean_Parnell> <http://dbpedia.org/property/governor> ?x . ?uri <http://dbpedia.org/ontology/governor> ?x },0,4,1,0.0,0.0,0.0,0
126,Sean Parnell was the governor of which U.S. state?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Sean_Parnell dbo:region ?uri },Average of all prompts,0,4,1,0.0,0.0,0.0,0
125,How many years was the Ford Model T manufactured?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?years WHERE { res:Ford_Model_T dbo:productionEndYear ?end ; dbo:productionStartYear ?start. BIND ( ( year(xsd:date(?end)) - year(xsd:date(?start)) ) AS ?years) },SELECT (xsd:integer(?end)-xsd:integer(?start) AS ?years) WHERE { res:Ford_Model_T dbo:productionStartYear ?start ; dbo:productionEndYear ?end },0,0,1,0.0,0.0,0.0,0
125,How many years was the Ford Model T manufactured?,Average of all prompts,SELECT ?years WHERE { res:Ford_Model_T dbo:productionEndYear ?end ; dbo:productionStartYear ?start. BIND ( ( year(xsd:date(?end)) - year(xsd:date(?start)) ) AS ?years) },Average of all prompts,0,0,1,0.0,0.0,0.0,0
124,When was Carlo Giuliani shot?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT xsd:date(?date) WHERE { res:Death_of_Carlo_Giuliani dbo:deathDate ?date },SELECT DISTINCT ?date WHERE { res:Carlo_Giuliani dbo:deathDate ?date },0,0,0,0.0,0.0,0.0,0
124,When was Carlo Giuliani shot?,Average of all prompts,SELECT DISTINCT xsd:date(?date) WHERE { res:Death_of_Carlo_Giuliani dbo:deathDate ?date },Average of all prompts,0,0,0,0.0,0.0,0.0,0
123,Give me all animals that are extinct.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/conservationStatus> ""EX"" }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/extinct> <http://dbpedia.org/resource/Extinction> },0,0,914,0.0,0.0,0.0,0
123,Give me all animals that are extinct.,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/conservationStatus> ""EX"" }",Average of all prompts,0,0,914,0.0,0.0,0.0,0
122,Who was the wife of President Lincoln?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri ?string WHERE { dbr:Abraham_Lincoln onto:spouse ?uri },SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:spouse ?uri },1,0,0,1.0,1.0,1.0,1
122,Who was the wife of President Lincoln?,Average of all prompts,SELECT ?uri ?string WHERE { dbr:Abraham_Lincoln onto:spouse ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
111,How many awards has Bertrand Russell?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT (COUNT(?Awards) AS ?Counter) WHERE { dbr:Bertrand_Russell dbp:awards ?Awards },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { <http://dbpedia.org/resource/Bertrand_Russell> <http://dbpedia.org/property/awards> ?uri },1,0,0,1.0,1.0,1.0,1
111,How many awards has Bertrand Russell?,Average of all prompts,SELECT (COUNT(?Awards) AS ?Counter) WHERE { dbr:Bertrand_Russell dbp:awards ?Awards },Average of all prompts,1,0,0,1.0,1.0,1.0,1
117,Is Pamela Anderson a vegan?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,ASK WHERE { dbr:Pamela_Anderson a <http://dbpedia.org/class/yago/WikicatAmericanVegans> },ASK WHERE { res:Pamela_Anderson dbo:diet <http://dbpedia.org/resource/Veganism> },0,1,1,0.0,0.0,0.0,0
117,Is Pamela Anderson a vegan?,Average of all prompts,ASK WHERE { dbr:Pamela_Anderson a <http://dbpedia.org/class/yago/WikicatAmericanVegans> },Average of all prompts,0,1,1,0.0,0.0,0.0,0
59,Which space probes were sent into orbit around the sun?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?s WHERE { ?s dct:subject dbc:Missions_to_the_Sun ; rdf:type ?type FILTER ( ?type IN (dbo:Satellite, dbo:ArtificialSatellite) ) }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SpaceProbe> ; <http://dbpedia.org/ontology/orbits> <http://dbpedia.org/resource/Sun> },0,0,16,0.0,0.0,0.0,0
59,Which space probes were sent into orbit around the sun?,Average of all prompts,"SELECT DISTINCT ?s WHERE { ?s dct:subject dbc:Missions_to_the_Sun ; rdf:type ?type FILTER ( ?type IN (dbo:Satellite, dbo:ArtificialSatellite) ) }",Average of all prompts,0,0,16,0.0,0.0,0.0,0
113,Which German cities have more than 250000 inhabitants?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/City> } UNION { ?uri a <http://dbpedia.org/ontology/Town> } ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> ; <http://dbpedia.org/ontology/populationTotal> ?population FILTER ( ?population > 250000 ) },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/City> ; <http://dbpedia.org/ontology/populationTotal> ?pop ; <http://dbpedia.org/ontology/isPartOf> <http://dbpedia.org/resource/Germany> FILTER ( ?pop > 250000 ) },0,0,25,0.0,0.0,0.0,0
113,Which German cities have more than 250000 inhabitants?,Average of all prompts,SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/City> } UNION { ?uri a <http://dbpedia.org/ontology/Town> } ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> ; <http://dbpedia.org/ontology/populationTotal> ?population FILTER ( ?population > 250000 ) },Average of all prompts,0,0,25,0.0,0.0,0.0,0
104,Who is the daughter of Robert Kennedy married to?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_F._Kennedy> <http://dbpedia.org/ontology/child> ?child . ?child <http://dbpedia.org/ontology/spouse> ?uri },SELECT DISTINCT ?uri WHERE { res:Robert_F._Kennedy dbo:child ?child . ?child dbo:spouse ?uri },1,0,0,1.0,1.0,1.0,1
104,Who is the daughter of Robert Kennedy married to?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_F._Kennedy> <http://dbpedia.org/ontology/child> ?child . ?child <http://dbpedia.org/ontology/spouse> ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
10,How many students does the Free University of Amsterdam have?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?num WHERE { dbr:Vrije_Universiteit_Amsterdam <http://dbpedia.org/ontology/numberOfStudents> ?num },SELECT DISTINCT ?n WHERE { res:Vrije_Universiteit_Amsterdam dbo:numberOfStudents ?n },1,0,0,1.0,1.0,1.0,1
10,How many students does the Free University of Amsterdam have?,Average of all prompts,SELECT DISTINCT ?num WHERE { dbr:Vrije_Universiteit_Amsterdam <http://dbpedia.org/ontology/numberOfStudents> ?num },Average of all prompts,1,0,0,1.0,1.0,1.0,1
1,What is the revenue of IBM?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?number WHERE { res:IBM onto:revenue ?number },SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/IBM> <http://dbpedia.org/property/revenue> ?num },1,0,0,1.0,1.0,1.0,1
1,What is the revenue of IBM?,Average of all prompts,SELECT ?number WHERE { res:IBM onto:revenue ?number },Average of all prompts,1,0,0,1.0,1.0,1.0,1
178,How many James Bond movies do exist?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri dct:subject <http://dbpedia.org/resource/Category:James_Bond_films> },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/property/bondActor> <http://dbpedia.org/resource/Sean_Connery> },0,1,1,0.0,0.0,0.0,0
178,How many James Bond movies do exist?,Average of all prompts,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri dct:subject <http://dbpedia.org/resource/Category:James_Bond_films> },Average of all prompts,0,1,1,0.0,0.0,0.0,0
129,Who does the voice of Bart Simpson?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bart_Simpson> <http://dbpedia.org/property/voiceactor> ?uri },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bart_Simpson> <http://dbpedia.org/property/voiceactor> ?uri },1,0,0,1.0,1.0,1.0,1
129,Who does the voice of Bart Simpson?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bart_Simpson> <http://dbpedia.org/property/voiceactor> ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
183,Who was Tom Hanks married to?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { dbr:Tom_Hanks dbo:spouse ?uri },SELECT DISTINCT ?uri WHERE { res:Tom_Hanks dbo:spouse ?uri },1,0,0,1.0,1.0,1.0,1
183,Who was Tom Hanks married to?,Average of all prompts,SELECT DISTINCT ?uri WHERE { dbr:Tom_Hanks dbo:spouse ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
181,Through which countries does the Yenisei river flow?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:Yenisei_River <http://dbpedia.org/ontology/country> ?uri },SELECT DISTINCT ?uri WHERE { res:Yenisei dbo:country ?uri },0,0,2,0.0,0.0,0.0,0
181,Through which countries does the Yenisei river flow?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Yenisei_River <http://dbpedia.org/ontology/country> ?uri },Average of all prompts,0,0,2,0.0,0.0,0.0,0
7,Give me all cars that are produced in Germany.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Automobile> { ?uri <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Germany> } UNION { ?uri <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Germany> } UNION { { ?uri <http://dbpedia.org/ontology/manufacturer> ?x } UNION { ?uri <http://dbpedia.org/property/manufacturer> ?x } { ?x <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Germany> } UNION { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Germany> } } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Automobile> ; <http://dbpedia.org/ontology/assembly> ?x . ?x <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Germany> },1,3,492,0.25,0.002028397565922921,0.004024144869215291,0
7,Give me all cars that are produced in Germany.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Automobile> { ?uri <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Germany> } UNION { ?uri <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Germany> } UNION { { ?uri <http://dbpedia.org/ontology/manufacturer> ?x } UNION { ?uri <http://dbpedia.org/property/manufacturer> ?x } { ?x <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Germany> } UNION { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Germany> } } },Average of all prompts,1,3,492,0.25,0.002028397565922921,0.004024144869215291,0
135,When did Michael Jackson die?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Michael_Jackson> <http://dbpedia.org/ontology/deathDate> ?date },SELECT DISTINCT ?date WHERE { res:Michael_Jackson dbo:deathDate ?date },1,0,0,1.0,1.0,1.0,1
135,When did Michael Jackson die?,Average of all prompts,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Michael_Jackson> <http://dbpedia.org/ontology/deathDate> ?date },Average of all prompts,1,0,0,1.0,1.0,1.0,1
50,What is the highest volcano in Africa?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> ?area . ?area dct:subject dbc:Countries_in_Africa . ?uri <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Volcano ; dbo:elevation ?elevation ; dbo:locatedInArea res:Africa } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1,0,0,1,0.0,0.0,0.0,0
50,What is the highest volcano in Africa?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> ?area . ?area dct:subject dbc:Countries_in_Africa . ?uri <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) LIMIT 1,Average of all prompts,0,0,1,0.0,0.0,0.0,0
39,Which poet wrote the most books?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Poet> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?x <http://dbpedia.org/ontology/author> ?uri } UNION { ?x <http://dbpedia.org/ontology/writer> ?uri } { ?x a <http://dbpedia.org/ontology/Book> } UNION { ?x a <http://dbpedia.org/ontology/WrittenWork> } UNION { ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> } UNION { ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork> } } ORDER BY DESC(COUNT(DISTINCT ?x)) OFFSET 0 LIMIT 1,0,1,1,0.0,0.0,0.0,0
39,Which poet wrote the most books?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Poet> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1,Average of all prompts,0,1,1,0.0,0.0,0.0,0
83,Give me all gangsters from the prohibition era.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Gangster ; dct:subject dbc:Prohibition-era_gangsters },SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Gangster> . ?uri <http://dbpedia.org/ontology/activeYearsStartYear> ?start . ?uri <http://dbpedia.org/ontology/activeYearsEndYear> ?end FILTER ( ?start >= 1920 && ?end <= 1933 ) },0,0,22,0.0,0.0,0.0,0
83,Give me all gangsters from the prohibition era.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Gangster ; dct:subject dbc:Prohibition-era_gangsters },Average of all prompts,0,0,22,0.0,0.0,0.0,0
71,Give me all spacecrafts that flew to Mars.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?s WHERE { ?s dct:subject dbc:Mars_rovers ; rdf:type ?type FILTER ( ?type IN (dbo:Satellite, dbo:ArtificialSatellite) ) }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Spacecraft> ; <http://dbpedia.org/ontology/destination> <http://dbpedia.org/resource/Mars> },0,0,14,0.0,0.0,0.0,0
71,Give me all spacecrafts that flew to Mars.,Average of all prompts,"SELECT DISTINCT ?s WHERE { ?s dct:subject dbc:Mars_rovers ; rdf:type ?type FILTER ( ?type IN (dbo:Satellite, dbo:ArtificialSatellite) ) }",Average of all prompts,0,0,14,0.0,0.0,0.0,0
213,Show me all Czech movies.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> },48,0,0,1.0,1.0,1.0,1
213,Show me all Czech movies.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> },Average of all prompts,48,0,0,1.0,1.0,1.0,1
209,Give me all taikonauts.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/People's_Republic_of_China> } UNION { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/China> } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/ontology/agency> <http://dbpedia.org/resource/China_National_Space_Administration> },0,0,7,0.0,0.0,0.0,0
209,Give me all taikonauts.,Average of all prompts,SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/People's_Republic_of_China> } UNION { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/China> } },Average of all prompts,0,0,7,0.0,0.0,0.0,0
105,Which countries have more than ten volcanoes?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?x a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> ?uri . ?uri a <http://dbpedia.org/ontology/Country> } GROUP BY ?uri HAVING ( COUNT(?x) > 10 ),SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> . ?volcano a <http://dbpedia.org/ontology/Volcano> { ?volcano <http://dbpedia.org/ontology/locatedInArea> ?uri } UNION { ?volcano <http://dbpedia.org/ontology/country> ?uri } } GROUP BY ?uri HAVING ( COUNT(?volcano) > 10 ),18,0,0,1.0,1.0,1.0,1
105,Which countries have more than ten volcanoes?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?x a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> ?uri . ?uri a <http://dbpedia.org/ontology/Country> } GROUP BY ?uri HAVING ( COUNT(?x) > 10 ),Average of all prompts,18,0,0,1.0,1.0,1.0,1
52,Give me all movies with Tom Cruise.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Film { ?uri prop:starring res:Tom_Cruise } UNION { ?uri onto:starring res:Tom_Cruise } OPTIONAL { ?uri rdfs:label ?string FILTER ( lang(?string) = ""en"" ) } }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Tom_Cruise> },26,0,0,1.0,1.0,1.0,1
52,Give me all movies with Tom Cruise.,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Film { ?uri prop:starring res:Tom_Cruise } UNION { ?uri onto:starring res:Tom_Cruise } OPTIONAL { ?uri rdfs:label ?string FILTER ( lang(?string) = ""en"" ) } }",Average of all prompts,26,0,0,1.0,1.0,1.0,1
102,When did Dracula's creator die?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT xsd:date(?date) WHERE { <http://dbpedia.org/resource/Count_Dracula> <http://dbpedia.org/ontology/creator> ?x . ?x <http://dbpedia.org/ontology/deathDate> ?date. },SELECT DISTINCT ?date WHERE { res:Bram_Stoker dbo:deathDate ?date },1,1,0,0.5,1.0,0.6666666666666666,0
102,When did Dracula's creator die?,Average of all prompts,SELECT DISTINCT xsd:date(?date) WHERE { <http://dbpedia.org/resource/Count_Dracula> <http://dbpedia.org/ontology/creator> ?x . ?x <http://dbpedia.org/ontology/deathDate> ?date. },Average of all prompts,1,1,0,0.5,1.0,0.6666666666666666,0
21,Who created English Wikipedia?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri WHERE { <http://dbpedia.org/resource/Wikipedia> onto:author ?uri },SELECT DISTINCT ?uri WHERE { res:English_Wikipedia dbo:author ?uri },2,0,0,1.0,1.0,1.0,1
21,Who created English Wikipedia?,Average of all prompts,SELECT ?uri WHERE { <http://dbpedia.org/resource/Wikipedia> onto:author ?uri },Average of all prompts,2,0,0,1.0,1.0,1.0,1
34,Give me all female German chancellors.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:Chancellor_of_Germany dbp:incumbent ?uri },"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Chancellor> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> ; <http://dbpedia.org/ontology/gender> ""female""@en }",0,0,1,0.0,0.0,0.0,0
34,Give me all female German chancellors.,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Chancellor_of_Germany dbp:incumbent ?uri },Average of all prompts,0,0,1,0.0,0.0,0.0,0
145,Who owns Aldi?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:Aldi dbp:founders ?uri },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aldi> <http://dbpedia.org/property/founders> ?uri },2,0,0,1.0,1.0,1.0,1
145,Who owns Aldi?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Aldi dbp:founders ?uri },Average of all prompts,2,0,0,1.0,1.0,1.0,1
154,Which books were written by Danielle Steel?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri WHERE { ?uri rdf:type onto:Book ; onto:author <http://dbpedia.org/resource/Danielle_Steel> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Danielle_Steel> },47,0,0,1.0,1.0,1.0,1
154,Which books were written by Danielle Steel?,Average of all prompts,SELECT ?uri WHERE { ?uri rdf:type onto:Book ; onto:author <http://dbpedia.org/resource/Danielle_Steel> },Average of all prompts,47,0,0,1.0,1.0,1.0,1
198,Who was influenced by Socrates?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Socrates> },SELECT DISTINCT ?uri WHERE { res:Socrates dbo:influenced ?uri },4,1,18,0.8,0.18181818181818182,0.2962962962962963,0
198,Who was influenced by Socrates?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Socrates> },Average of all prompts,4,1,18,0.8,0.18181818181818182,0.2962962962962963,0
162,How deep is Lake Chiemsee?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Chiemsee> <http://dbpedia.org/ontology/maximumDepth> ?n },SELECT DISTINCT ?depth WHERE { res:Lake_Chiemsee dbo:maxDepth ?depth },0,0,1,0.0,0.0,0.0,0
162,How deep is Lake Chiemsee?,Average of all prompts,SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Chiemsee> <http://dbpedia.org/ontology/maximumDepth> ?n },Average of all prompts,0,0,1,0.0,0.0,0.0,0
212,Which companies work in the aerospace industry as well as in medicine?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a dbo:Company ; dbo:industry dbr:Aerospace ; dbo:industry dbr:Medical },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> ; <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Aerospace> ; <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Medicine> },0,0,2,0.0,0.0,0.0,0
212,Which companies work in the aerospace industry as well as in medicine?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a dbo:Company ; dbo:industry dbr:Aerospace ; dbo:industry dbr:Medical },Average of all prompts,0,0,2,0.0,0.0,0.0,0
96,Which professional surfers were born on the Philippines?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Surfer ; dbo:birthPlace res:Philippines },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Surfer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Philippines> },0,0,1,0.0,0.0,0.0,0
96,Which professional surfers were born on the Philippines?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Surfer ; dbo:birthPlace res:Philippines },Average of all prompts,0,0,1,0.0,0.0,0.0,0
40,Who were the parents of Queen Victoria?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:Queen_Victoria dbo:parent ?uri },SELECT DISTINCT ?uri WHERE { res:Queen_Victoria dbo:parent ?uri },2,0,0,1.0,1.0,1.0,1
40,Who were the parents of Queen Victoria?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Queen_Victoria dbo:parent ?uri },Average of all prompts,2,0,0,1.0,1.0,1.0,1
79,Are there any castles in the United States?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,ASK WHERE { ?uri dct:subject dbc:Castles_in_the_United_States },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Castle> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> } },0,1,1,0.0,0.0,0.0,0
79,Are there any castles in the United States?,Average of all prompts,ASK WHERE { ?uri dct:subject dbc:Castles_in_the_United_States },Average of all prompts,0,1,1,0.0,0.0,0.0,0
141,Which languages are spoken in Estonia?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spokenIn> <http://dbpedia.org/resource/Estonia> },SELECT DISTINCT ?uri WHERE { res:Estonia dbo:spokenIn ?uri },0,0,8,0.0,0.0,0.0,0
141,Which languages are spoken in Estonia?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spokenIn> <http://dbpedia.org/resource/Estonia> },Average of all prompts,0,0,8,0.0,0.0,0.0,0
80,Give me a list of all critically endangered birds.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?uri ?p WHERE { ?uri rdf:type dbo:Bird { ?uri dbo:conservationStatus ""CR"" } UNION { ?uri dct:subject dbc:Critically_endangered_animals } }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Bird> ; <http://dbpedia.org/ontology/conservationStatus> <http://dbpedia.org/resource/Critically_Endangered> },0,0,198,0.0,0.0,0.0,0
80,Give me a list of all critically endangered birds.,Average of all prompts,"SELECT DISTINCT ?uri ?p WHERE { ?uri rdf:type dbo:Bird { ?uri dbo:conservationStatus ""CR"" } UNION { ?uri dct:subject dbc:Critically_endangered_animals } }",Average of all prompts,0,0,198,0.0,0.0,0.0,0
159,Which countries are connected by the Rhine?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { {<http://dbpedia.org/resource/Rhine> dbo:country ?uri } UNION {dbr:Rhine dbp:country ?uri} },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rhine> <http://dbpedia.org/property/country> ?uri },6,0,5,1.0,0.5454545454545454,0.7058823529411764,0
159,Which countries are connected by the Rhine?,Average of all prompts,SELECT DISTINCT ?uri WHERE { {<http://dbpedia.org/resource/Rhine> dbo:country ?uri } UNION {dbr:Rhine dbp:country ?uri} },Average of all prompts,6,0,5,1.0,0.5454545454545454,0.7058823529411764,0
107,Who was the father of Queen Elizabeth II?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT * WHERE { res:Elizabeth_II dbo:parent ?uri . ?uri <http://xmlns.com/foaf/0.1/gender> ""male""@en }",SELECT DISTINCT ?uri WHERE { res:Elizabeth_II dbo:parent ?uri . ?uri dbo:occupation res:Prince },0,0,1,0.0,0.0,0.0,0
107,Who was the father of Queen Elizabeth II?,Average of all prompts,"SELECT DISTINCT * WHERE { res:Elizabeth_II dbo:parent ?uri . ?uri <http://xmlns.com/foaf/0.1/gender> ""male""@en }",Average of all prompts,0,0,1,0.0,0.0,0.0,0
163,Give me all chemical elements.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri rdf:type owl:Thing ; dct:subject dbc:Chemical_elements },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ChemicalElement> },0,1,119,0.0,0.0,0.0,0
163,Give me all chemical elements.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type owl:Thing ; dct:subject dbc:Chemical_elements },Average of all prompts,0,1,119,0.0,0.0,0.0,0
211,Give me all American presidents of the last 20 years.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Person ; dct:subject dbc:Presidents_of_the_United_States ; dbo:activeYearsEndDate ?termEnd FILTER ( ( year(now()) - year(?termEnd) ) <= 20 ) },"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/President> ; <http://dbpedia.org/property/presidentStart> ?start FILTER ( ?start > ""1996""^^xsd:integer ) }",0,2,2,0.0,0.0,0.0,0
211,Give me all American presidents of the last 20 years.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Person ; dct:subject dbc:Presidents_of_the_United_States ; dbo:activeYearsEndDate ?termEnd FILTER ( ( year(now()) - year(?termEnd) ) <= 20 ) },Average of all prompts,0,2,2,0.0,0.0,0.0,0
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?rel WHERE { <http://dbpedia.org/resource/Worst_Case_Scenario_(film)> ?p ?o ; dbo:releaseDate ?rel FILTER contains(lcase(str(?o)), ""netherlands"") }","SELECT DISTINCT ?date WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; rdfs:label ""Worst Case Scenario""@en ; dbpprop:released ""Netherlands""^^xsd:string ; dbpedia-owl:cinematography ?date }",0,0,1,0.0,0.0,0.0,0
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,Average of all prompts,"SELECT DISTINCT ?rel WHERE { <http://dbpedia.org/resource/Worst_Case_Scenario_(film)> ?p ?o ; dbo:releaseDate ?rel FILTER contains(lcase(str(?o)), ""netherlands"") }",Average of all prompts,0,0,1,0.0,0.0,0.0,0
144,Whom did Lance Bass marry?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { {<http://dbpedia.org/resource/Lance_Bass> dbo:spouse ?uri} UNION {?uri dbo:spouse <http://dbpedia.org/resource/Lance_Bass>} },SELECT DISTINCT ?uri WHERE { res:Lance_Bass dbo:spouse ?uri },1,0,0,1.0,1.0,1.0,1
144,Whom did Lance Bass marry?,Average of all prompts,SELECT DISTINCT ?uri WHERE { {<http://dbpedia.org/resource/Lance_Bass> dbo:spouse ?uri} UNION {?uri dbo:spouse <http://dbpedia.org/resource/Lance_Bass>} },Average of all prompts,1,0,0,1.0,1.0,1.0,1
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/TUI_Travel> <http://dbpedia.org/ontology/subsidiary> ?uri . ?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_International_Airport> ; <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Dublin_Airport> },SELECT DISTINCT ?uri WHERE { ?uri dbo:subsidiary res:TUI_Travel dbo:targetAirport res:Glasgow_International_Airport ; dbo:targetAirport res:Dublin_Airport },0,0,1,0.0,0.0,0.0,0
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/TUI_Travel> <http://dbpedia.org/ontology/subsidiary> ?uri . ?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_International_Airport> ; <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Dublin_Airport> },Average of all prompts,0,0,1,0.0,0.0,0.0,0
131,What languages are spoken in Pakistan?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pakistan> <http://dbpedia.org/ontology/language> ?uri },SELECT DISTINCT ?uri WHERE { res:Pakistan dbo:language ?uri },16,0,0,1.0,1.0,1.0,1
131,What languages are spoken in Pakistan?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pakistan> <http://dbpedia.org/ontology/language> ?uri },Average of all prompts,16,0,0,1.0,1.0,1.0,1
120,Who is the daughter of Bill Clinton married to?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { dbr:Bill_Clinton dbo:child ?child . ?child dbo:spouse ?uri . ?uri rdfs:label ?string },SELECT DISTINCT ?uri WHERE { res:Bill_Clinton dbo:child ?child . ?child dbo:spouse ?uri },1,0,0,1.0,1.0,1.0,1
120,Who is the daughter of Bill Clinton married to?,Average of all prompts,SELECT DISTINCT ?uri WHERE { dbr:Bill_Clinton dbo:child ?child . ?child dbo:spouse ?uri . ?uri rdfs:label ?string },Average of all prompts,1,0,0,1.0,1.0,1.0,1
164,Who was on the Apollo 11 mission?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apollo_11> <http://dbpedia.org/property/crewMembers> ?uri },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apollo_11> <http://dbpedia.org/property/crewMembers> ?uri },3,0,0,1.0,1.0,1.0,1
164,Who was on the Apollo 11 mission?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apollo_11> <http://dbpedia.org/property/crewMembers> ?uri },Average of all prompts,3,0,0,1.0,1.0,1.0,1
88,What is the wavelength of Indigo?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?n WHERE { dbr:Indigo dbo:wavelength ?n },SELECT ?wavelength WHERE { dbr:Indigo dbo:wavelength ?wavelength },1,0,0,1.0,1.0,1.0,1
88,What is the wavelength of Indigo?,Average of all prompts,SELECT ?n WHERE { dbr:Indigo dbo:wavelength ?n },Average of all prompts,1,0,0,1.0,1.0,1.0,1
151,Give me all B-sides of the Ramones.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?string WHERE { ?x dbo:musicalArtist res:Ramones ; dbo:bSide ?string },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/MusicalWork> ; <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Ramones> ; <http://dbpedia.org/ontology/bSide> ?x },0,0,11,0.0,0.0,0.0,0
151,Give me all B-sides of the Ramones.,Average of all prompts,SELECT DISTINCT ?string WHERE { ?x dbo:musicalArtist res:Ramones ; dbo:bSide ?string },Average of all prompts,0,0,11,0.0,0.0,0.0,0
63,Who was called Scarface?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT ?uri WHERE { ?uri dbo:alias ?alias FILTER contains(lcase(?alias), ""scarface"") }","SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/alias> ""Scarface""@en }",0,0,2,0.0,0.0,0.0,0
63,Who was called Scarface?,Average of all prompts,"SELECT ?uri WHERE { ?uri dbo:alias ?alias FILTER contains(lcase(?alias), ""scarface"") }",Average of all prompts,0,0,2,0.0,0.0,0.0,0
27,Which rivers flow into the North Sea?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/mouth> <http://dbpedia.org/resource/North_Sea> },0,0,17,0.0,0.0,0.0,0
27,Which rivers flow into the North Sea?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea> },Average of all prompts,0,0,17,0.0,0.0,0.0,0
156,Where is Fort Knox located?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Knox> <http://dbpedia.org/ontology/location> ?uri. ?uri a <http://dbpedia.org/ontology/Place>. },SELECT DISTINCT ?uri WHERE { res:Fort_Knox dbo:location ?uri },1,0,0,1.0,1.0,1.0,1
156,Where is Fort Knox located?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Knox> <http://dbpedia.org/ontology/location> ?uri. ?uri a <http://dbpedia.org/ontology/Place>. },Average of all prompts,1,0,0,1.0,1.0,1.0,1
207,Which daughters of British earls died at the same place they were born at?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatDaughtersOfBritishEarls ; dbo:birthPlace ?x ; dbo:deathPlace ?y FILTER ( ?x = ?y ) },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Noble&gt; ; <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Earl_of_Cardigan&gt; ; <http://dbpedia.org/ontology/birthPlace> ?x ; <http://dbpedia.org/ontology/deathPlace> ?y FILTER ( ?x = ?y ) },0,0,13,0.0,0.0,0.0,0
207,Which daughters of British earls died at the same place they were born at?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatDaughtersOfBritishEarls ; dbo:birthPlace ?x ; dbo:deathPlace ?y FILTER ( ?x = ?y ) },Average of all prompts,0,0,13,0.0,0.0,0.0,0
24,How many emperors did China have?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT COUNT(DISTINCT ?uri AS ?uri) WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Emperor_of_China> . },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Emperor_of_China> },1,0,0,1.0,1.0,1.0,1
24,How many emperors did China have?,Average of all prompts,SELECT COUNT(DISTINCT ?uri AS ?uri) WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Emperor_of_China> . },Average of all prompts,1,0,0,1.0,1.0,1.0,1
133,What are the names of the Teenage Mutant Ninja Turtles?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles> <http://dbpedia.org/property/members> ?x . ?x foaf:givenName ?s },SELECT DISTINCT ?name WHERE { <http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles> <http://xmlns.com/foaf/0.1/givenName> ?name },0,0,4,0.0,0.0,0.0,0
133,What are the names of the Teenage Mutant Ninja Turtles?,Average of all prompts,PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles> <http://dbpedia.org/property/members> ?x . ?x foaf:givenName ?s },Average of all prompts,0,0,4,0.0,0.0,0.0,0
103,Where does Piccadilly start?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Piccadilly> },SELECT DISTINCT ?uri WHERE { res:Piccadilly_line dbo:routeStart ?uri },0,0,1,0.0,0.0,0.0,0
103,Where does Piccadilly start?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Piccadilly> },Average of all prompts,0,0,1,0.0,0.0,0.0,0
165,What is the name of the university where Obama's wife studied?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Barack_Obama> <http://dbpedia.org/ontology/spouse> ?x . ?x <http://dbpedia.org/ontology/almaMater> ?s },SELECT DISTINCT ?uri WHERE { res:Michelle_Obama dbo:almaMater ?uri },2,0,0,1.0,1.0,1.0,1
165,What is the name of the university where Obama's wife studied?,Average of all prompts,SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Barack_Obama> <http://dbpedia.org/ontology/spouse> ?x . ?x <http://dbpedia.org/ontology/almaMater> ?s },Average of all prompts,2,0,0,1.0,1.0,1.0,1
108,When did Paraguay proclaim its independence?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Paraguay> <http://dbpedia.org/ontology/foundingDate> ?date },SELECT DISTINCT ?date WHERE { res:Paraguay dbo:foundingDate ?date },2,0,0,1.0,1.0,1.0,1
108,When did Paraguay proclaim its independence?,Average of all prompts,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Paraguay> <http://dbpedia.org/ontology/foundingDate> ?date },Average of all prompts,2,0,0,1.0,1.0,1.0,1
15,How short is the shortest active NBA player?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?n WHERE { ?x a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association> ; <http://dbpedia.org/ontology/height> ?n FILTER NOT EXISTS { ?x <http://dbpedia.org/ontology/activeYearsEndYear> ?d } } ORDER BY ASC(?n) OFFSET 0 LIMIT 1,"SELECT (MIN(?height) AS ?minHeight) WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/birthDate> ?date ; <http://dbpedia.org/ontology/height> ?height FILTER (regex(?uri, ""NBA"") && !regex(?uri, ""retired"")) }",0,0,1,0.0,0.0,0.0,0
15,How short is the shortest active NBA player?,Average of all prompts,SELECT DISTINCT ?n WHERE { ?x a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association> ; <http://dbpedia.org/ontology/height> ?n FILTER NOT EXISTS { ?x <http://dbpedia.org/ontology/activeYearsEndYear> ?d } } ORDER BY ASC(?n) OFFSET 0 LIMIT 1,Average of all prompts,0,0,1,0.0,0.0,0.0,0
45,Where did Abraham Lincoln die?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri },SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri },2,0,0,1.0,1.0,1.0,1
45,Where did Abraham Lincoln die?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri },Average of all prompts,2,0,0,1.0,1.0,1.0,1
82,When was Jack Wolfskin founded?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT xsd:date(?year) WHERE { res:Jack_Wolfskin dbo:foundingYear ?year },SELECT DISTINCT ?uri WHERE { res:Jack_Wolfskin dbo:foundingYear ?uri },0,1,1,0.0,0.0,0.0,0
82,When was Jack Wolfskin founded?,Average of all prompts,SELECT DISTINCT xsd:date(?year) WHERE { res:Jack_Wolfskin dbo:foundingYear ?year },Average of all prompts,0,1,1,0.0,0.0,0.0,0
9,In which city is the headquarter of Air China?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_China> <http://dbpedia.org/ontology/headquarter> ?uri . ?uri a <http://dbpedia.org/class/yago/City108524735> },SELECT DISTINCT ?uri WHERE { res:Air_China dbo:headquarter ?x . ?x dbo:location ?uri },0,0,1,0.0,0.0,0.0,0
9,In which city is the headquarter of Air China?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_China> <http://dbpedia.org/ontology/headquarter> ?uri . ?uri a <http://dbpedia.org/class/yago/City108524735> },Average of all prompts,0,0,1,0.0,0.0,0.0,0
201,What is the founding year of the brewery that produces Pilsner Urquell?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT xsd:date(?num) WHERE { <http://dbpedia.org/resource/Pilsner_Urquell> <http://dbpedia.org/property/brewery> ?uri . ?uri dbo:foundingYear ?num },SELECT DISTINCT ?uri WHERE { res:Pilsner_Urquell dbo:manufacturer ?uri . ?uri dbo:foundingYear ?x },0,0,1,0.0,0.0,0.0,0
201,What is the founding year of the brewery that produces Pilsner Urquell?,Average of all prompts,SELECT DISTINCT xsd:date(?num) WHERE { <http://dbpedia.org/resource/Pilsner_Urquell> <http://dbpedia.org/property/brewery> ?uri . ?uri dbo:foundingYear ?num },Average of all prompts,0,0,1,0.0,0.0,0.0,0
171,When did the Boston Tea Party take place?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?d WHERE { <http://dbpedia.org/resource/Boston_Tea_Party> <http://dbpedia.org/property/date> ?d },SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Boston_Tea_Party> <http://dbpedia.org/property/date> ?date },1,0,0,1.0,1.0,1.0,1
171,When did the Boston Tea Party take place?,Average of all prompts,SELECT DISTINCT ?d WHERE { <http://dbpedia.org/resource/Boston_Tea_Party> <http://dbpedia.org/property/date> ?d },Average of all prompts,1,0,0,1.0,1.0,1.0,1
182,Which animals are critically endangered?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/conservationStatus> ""CR"" }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/conservationStatus> <http://dbpedia.org/resource/Critically_Endangered> },0,0,1503,0.0,0.0,0.0,0
182,Which animals are critically endangered?,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/conservationStatus> ""CR"" }",Average of all prompts,0,0,1503,0.0,0.0,0.0,0
13,Which politicians were married to a German?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/spouse> ?spouse { ?spouse <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> } UNION { ?spouse <http://dbpedia.org/ontology/birthPlace> ?p . ?p <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> } },"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/spouse> ?spouse { ?spouse <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> } UNION { ?spouse <http://dbpedia.org/property/nationality> ?n FILTER regex(?n, ""Germany"") } }",0,2,11,0.0,0.0,0.0,0
13,Which politicians were married to a German?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/spouse> ?spouse { ?spouse <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> } UNION { ?spouse <http://dbpedia.org/ontology/birthPlace> ?p . ?p <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> } },Average of all prompts,0,2,11,0.0,0.0,0.0,0
114,How big is the earth's diameter?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT (( xsd:double(?radius) * 2 ) AS ?diameter) WHERE { res:Earth dbo:meanRadius ?radius },SELECT ?diameter WHERE { dbr:Earth dbo:diameter ?diameter },0,0,1,0.0,0.0,0.0,0
114,How big is the earth's diameter?,Average of all prompts,SELECT DISTINCT (( xsd:double(?radius) * 2 ) AS ?diameter) WHERE { res:Earth dbo:meanRadius ?radius },Average of all prompts,0,0,1,0.0,0.0,0.0,0
92,Is the wife of President Obama called Michelle?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"ASK WHERE { res:Barack_Obama onto:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, ""Michelle"") }",ASK WHERE { res:Barack_Obama dbo:spouse res:Michelle_Obama },1,0,0,1.0,1.0,1.0,1
92,Is the wife of President Obama called Michelle?,Average of all prompts,"ASK WHERE { res:Barack_Obama onto:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, ""Michelle"") }",Average of all prompts,1,0,0,1.0,1.0,1.0,1
194,Which U.S. state has the abbreviation MN?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?uri WHERE { ?uri a yago:WikicatStatesOfTheUnitedStates ; <http://dbpedia.org/property/postalabbreviation> ""MN""^^<http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> }","SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/postalabbreviation> ""MN""@en }",0,0,1,0.0,0.0,0.0,0
194,Which U.S. state has the abbreviation MN?,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri a yago:WikicatStatesOfTheUnitedStates ; <http://dbpedia.org/property/postalabbreviation> ""MN""^^<http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> }",Average of all prompts,0,0,1,0.0,0.0,0.0,0
175,When did Muhammad die?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT xsd:date(?date) WHERE { res:Muhammad dbo:deathDate ?date },SELECT DISTINCT ?date WHERE { res:Muhammad dbo:deathDate ?date },1,1,0,0.5,1.0,0.6666666666666666,0
175,When did Muhammad die?,Average of all prompts,SELECT DISTINCT xsd:date(?date) WHERE { res:Muhammad dbo:deathDate ?date },Average of all prompts,1,1,0,0.5,1.0,0.6666666666666666,0
26,What is the atmosphere of the Moon composed of?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moon> <http://dbpedia.org/property/atmosphereComposition> ?uri },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moon> <http://dbpedia.org/property/atmosphereComposition> ?uri },7,0,0,1.0,1.0,1.0,1
26,What is the atmosphere of the Moon composed of?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moon> <http://dbpedia.org/property/atmosphereComposition> ?uri },Average of all prompts,7,0,0,1.0,1.0,1.0,1
60,Who is the governor of Texas?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?string WHERE { res:Texas dbp:governor ?string },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Texas> <http://dbpedia.org/property/governor> ?uri },1,0,0,1.0,1.0,1.0,1
60,Who is the governor of Texas?,Average of all prompts,SELECT DISTINCT ?string WHERE { res:Texas dbp:governor ?string },Average of all prompts,1,0,0,1.0,1.0,1.0,1
110,Which movies did Kurosawa direct?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:director res:Akira_Kurosawa },SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:director res:Akira_Kurosawa },32,0,0,1.0,1.0,1.0,1
110,Which movies did Kurosawa direct?,Average of all prompts,SELECT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:director res:Akira_Kurosawa },Average of all prompts,32,0,0,1.0,1.0,1.0,1
206,What was the name of the famous battle in 1836 in San Antonio?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT ?uri WHERE { ?uri a dbo:MilitaryConflict ; dbo:place dbr:San_Antonio ; dbo:date ?date FILTER ( ?date > ""1835-12-31T00:00:00Z""^^xsd:dateTime ) FILTER ( ?date <= ""1836-12-31T00:00:00Z""^^xsd:dateTime ) }","SELECT DISTINCT ?uri WHERE { ?uri dbo:date ""1836-03-06""^^xsd:date ; dbo:place res:San_Antonio }",1,0,0,1.0,1.0,1.0,1
206,What was the name of the famous battle in 1836 in San Antonio?,Average of all prompts,"SELECT ?uri WHERE { ?uri a dbo:MilitaryConflict ; dbo:place dbr:San_Antonio ; dbo:date ?date FILTER ( ?date > ""1835-12-31T00:00:00Z""^^xsd:dateTime ) FILTER ( ?date <= ""1836-12-31T00:00:00Z""^^xsd:dateTime ) }",Average of all prompts,1,0,0,1.0,1.0,1.0,1
97,Give me the official websites of actors of the television show Charmed.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charmed> onto:starring ?actors . ?actors foaf:homepage ?uri },SELECT DISTINCT ?uri WHERE { ?uri foaf:homepage ?x . { res:Charmed dbo:starring ?p . ?p foaf:homepage ?x } UNION { res:Charmed dbo:starring ?p . ?p dbo:officialWebsite ?x } },0,2,2,0.0,0.0,0.0,0
97,Give me the official websites of actors of the television show Charmed.,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charmed> onto:starring ?actors . ?actors foaf:homepage ?uri },Average of all prompts,0,2,2,0.0,0.0,0.0,0
20,How many calories does a baguette have?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Baguette> <http://dbpedia.org/property/calories> ?n },SELECT DISTINCT ?calories WHERE { <http://dbpedia.org/resource/Baguette> <http://dbpedia.org/property/calories> ?calories },1,0,0,1.0,1.0,1.0,1
20,How many calories does a baguette have?,Average of all prompts,SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Baguette> <http://dbpedia.org/property/calories> ?n },Average of all prompts,1,0,0,1.0,1.0,1.0,1
169,Give me all libraries established before 1400.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/property/established> ?year FILTER ( ?year < 1400 ) },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> { ?uri <http://dbpedia.org/property/established> ?date } UNION { ?uri <http://dbpedia.org/ontology/established> ?date } FILTER (year(?date) < 1400) },0,0,11,0.0,0.0,0.0,0
169,Give me all libraries established before 1400.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/property/established> ?year FILTER ( ?year < 1400 ) },Average of all prompts,0,0,11,0.0,0.0,0.0,0
38,Give me all Frisian islands that belong to the Netherlands.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatFrisianIslands ; dbo:country res:Netherlands },"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Island> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> { ?uri <http://dbpedia.org/property/region> <http://dbpedia.org/resource/Frisian_Islands> } UNION { ?uri <http://dbpedia.org/property/location> ?loc FILTER regex(?loc, ""Frisian Islands"") } }",0,0,1,0.0,0.0,0.0,0
38,Give me all Frisian islands that belong to the Netherlands.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatFrisianIslands ; dbo:country res:Netherlands },Average of all prompts,0,0,1,0.0,0.0,0.0,0
192,Which museum exhibits The Scream by Munch?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:The_Scream dbo:museum ?uri },SELECT DISTINCT ?uri WHERE { res:The_Scream dbo:museum ?uri },1,0,0,1.0,1.0,1.0,1
192,Which museum exhibits The Scream by Munch?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:The_Scream dbo:museum ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
78,When was the De Beers company founded?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT xsd:date(?date) WHERE { res:De_Beers dbo:foundingYear ?date },SELECT DISTINCT ?date WHERE { res:De_Beers dbo:foundingYear ?date },0,1,1,0.0,0.0,0.0,0
78,When was the De Beers company founded?,Average of all prompts,SELECT DISTINCT xsd:date(?date) WHERE { res:De_Beers dbo:foundingYear ?date },Average of all prompts,0,1,1,0.0,0.0,0.0,0
19,Who became president after JFK died?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/property/presidentEnd> ?x . ?uri <http://dbpedia.org/property/presidentStart> ?x; a <http://dbpedia.org/ontology/Person>. },"SELECT DISTINCT ?uri WHERE { ?uri dbo:office res:President_of_the_United_States ; dbp:presidentStart ?date FILTER ( ?date > ""1963-11-22""^^xsd:date ) }",0,0,1,0.0,0.0,0.0,0
19,Who became president after JFK died?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/property/presidentEnd> ?x . ?uri <http://dbpedia.org/property/presidentStart> ?x; a <http://dbpedia.org/ontology/Person>. },Average of all prompts,0,0,1,0.0,0.0,0.0,0
190,Who are the parents of the wife of Juan Carlos I?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { res:Juan_Carlos_I_of_Spain dbo:spouse ?x . ?x dbo:parent ?uri },SELECT DISTINCT ?uri WHERE { res:Juan_Carlos_I dbo:spouse ?wife . ?wife dbo:parent ?uri },0,0,2,0.0,0.0,0.0,0
190,Who are the parents of the wife of Juan Carlos I?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Juan_Carlos_I_of_Spain dbo:spouse ?x . ?x dbo:parent ?uri },Average of all prompts,0,0,2,0.0,0.0,0.0,0
174,Who is the novelist of the work a song of ice and fire?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?Novelist WHERE { dbr:A_Song_of_Ice_and_Fire dbp:author ?Novelist },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Song_of_Ice_and_Fire> <http://dbpedia.org/property/author> ?uri },1,0,0,1.0,1.0,1.0,1
174,Who is the novelist of the work a song of ice and fire?,Average of all prompts,SELECT ?Novelist WHERE { dbr:A_Song_of_Ice_and_Fire dbp:author ?Novelist },Average of all prompts,1,0,0,1.0,1.0,1.0,1
189,In which studio did the Beatles record their first album?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?studio WHERE { ?album dbo:artist dbr:The_Beatles ; rdf:type dbo:Album ; dbo:releaseDate ?date ; dbp:studio ?studio } ORDER BY ASC(?date) LIMIT 1,SELECT DISTINCT ?uri WHERE { ?x rdf:type dbo:Album ; dbo:artist res:The_Beatles ; dbo:releaseDate ?date ; dbo:recordLabel ?uri } ORDER BY ASC(?date) OFFSET 0 LIMIT 1,0,1,1,0.0,0.0,0.0,0
189,In which studio did the Beatles record their first album?,Average of all prompts,SELECT ?studio WHERE { ?album dbo:artist dbr:The_Beatles ; rdf:type dbo:Album ; dbo:releaseDate ?date ; dbp:studio ?studio } ORDER BY ASC(?date) LIMIT 1,Average of all prompts,0,1,1,0.0,0.0,0.0,0
152,Which beer brewing companies are located in North-Rhine Westphalia?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?company WHERE { ?company dct:subject dbc:Companies_based_in_North_Rhine-Westphalia ; rdf:type dbo:Brewery },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/North_Rhine-Westphalia> ; <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Brewing> },0,0,4,0.0,0.0,0.0,0
152,Which beer brewing companies are located in North-Rhine Westphalia?,Average of all prompts,SELECT ?company WHERE { ?company dct:subject dbc:Companies_based_in_North_Rhine-Westphalia ; rdf:type dbo:Brewery },Average of all prompts,0,0,4,0.0,0.0,0.0,0
94,When did princess Diana die?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT xsd:date(?d) WHERE { <http://dbpedia.org/resource/Diana,_Princess_of_Wales> <http://dbpedia.org/ontology/deathDate> ?d }","SELECT DISTINCT ?date WHERE { res:Diana,_Princess_of_Wales dbo:deathDate ?date }",0,0,1,0.0,0.0,0.0,0
94,When did princess Diana die?,Average of all prompts,"SELECT DISTINCT xsd:date(?d) WHERE { <http://dbpedia.org/resource/Diana,_Princess_of_Wales> <http://dbpedia.org/ontology/deathDate> ?d }",Average of all prompts,0,0,1,0.0,0.0,0.0,0
8,Who founded Intel?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Intel> <http://dbpedia.org/property/founders> ?uri },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Intel> <http://dbpedia.org/property/founder> ?uri },0,0,2,0.0,0.0,0.0,0
8,Who founded Intel?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Intel> <http://dbpedia.org/property/founders> ?uri },Average of all prompts,0,0,2,0.0,0.0,0.0,0
95,Who is the youngest player in the Premier League?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri dbo:team ?team . ?league dbo:league res:Premier_League . ?league dbo:team ?team . ?uri dbo:birthDate ?date } ORDER BY DESC(?date) LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Person ; dbo:league res:Premier_League ; dbo:birthDate ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1,0,0,1,0.0,0.0,0.0,0
95,Who is the youngest player in the Premier League?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dbo:team ?team . ?league dbo:league res:Premier_League . ?league dbo:team ?team . ?uri dbo:birthDate ?date } ORDER BY DESC(?date) LIMIT 1,Average of all prompts,0,0,1,0.0,0.0,0.0,0
119,Which instruments does Cat Stevens play?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cat_Stevens> <http://dbpedia.org/ontology/instrument> ?uri },SELECT DISTINCT ?uri WHERE { res:Cat_Stevens dbo:instrument ?uri },10,0,0,1.0,1.0,1.0,1
119,Which instruments does Cat Stevens play?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cat_Stevens> <http://dbpedia.org/ontology/instrument> ?uri },Average of all prompts,10,0,0,1.0,1.0,1.0,1
115,How many rivers and lakes are in South Carolina?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT (COUNT(DISTINCT ?uri) AS ?count) WHERE { { ?uri dbo:location dbr:South_Carolina ; rdf:type dbo:Lake } UNION { ?uri dct:subject dbc:Rivers_and_streams_of_South_Carolina } },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { { ?uri a <http://dbpedia.org/ontology/River> } UNION { ?uri a <http://dbpedia.org/ontology/Lake> } { ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Carolina> } },0,1,1,0.0,0.0,0.0,0
115,How many rivers and lakes are in South Carolina?,Average of all prompts,SELECT (COUNT(DISTINCT ?uri) AS ?count) WHERE { { ?uri dbo:location dbr:South_Carolina ; rdf:type dbo:Lake } UNION { ?uri dct:subject dbc:Rivers_and_streams_of_South_Carolina } },Average of all prompts,0,1,1,0.0,0.0,0.0,0
116,Who was called Rodzilla?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,"SELECT DISTINCT ?uri WHERE { ?uri <http://xmlns.com/foaf/0.1/nick> ""Rodzilla""@en }","SELECT DISTINCT ?uri WHERE { ?uri dbo:nickname ""Rodzilla""@en }",0,0,1,0.0,0.0,0.0,0
116,Who was called Rodzilla?,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri <http://xmlns.com/foaf/0.1/nick> ""Rodzilla""@en }",Average of all prompts,0,0,1,0.0,0.0,0.0,0
138,Give me the capitals of all countries in Africa.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?country dct:subject dbc:Countries_in_Africa ; dbo:capital ?uri },SELECT DISTINCT ?uri WHERE { ?uri dbo:capital ?x . ?x dbo:country res:Countries_in_Africa },0,0,59,0.0,0.0,0.0,0
138,Give me the capitals of all countries in Africa.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?country dct:subject dbc:Countries_in_Africa ; dbo:capital ?uri },Average of all prompts,0,0,59,0.0,0.0,0.0,0
177,Which bridges are of the same type as the Manhattan Bridge?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?bridge WHERE { dbr:Manhattan_Bridge dbo:type ?type . ?bridge dbo:type ?type ; rdf:type dbo:Bridge },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manhattan_Bridge> <http://dbpedia.org/ontology/type> ?x . ?uri a <http://dbpedia.org/ontology/Bridge> ; <http://dbpedia.org/ontology/type> ?x FILTER ( ?uri != <http://dbpedia.org/resource/Manhattan_Bridge> ) },159,0,1,1.0,0.99375,0.9968652037617556,0
177,Which bridges are of the same type as the Manhattan Bridge?,Average of all prompts,SELECT DISTINCT ?bridge WHERE { dbr:Manhattan_Bridge dbo:type ?type . ?bridge dbo:type ?type ; rdf:type dbo:Bridge },Average of all prompts,159,0,1,1.0,0.99375,0.9968652037617556,0
101,How many companies were founded by the founder of Facebook?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT (COUNT(DISTINCT ?x) AS ?c) WHERE { <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/foundedBy> ?uri . ?x <http://dbpedia.org/ontology/foundedBy> ?uri },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Mark_Zuckerberg> },0,1,1,0.0,0.0,0.0,0
101,How many companies were founded by the founder of Facebook?,Average of all prompts,SELECT (COUNT(DISTINCT ?x) AS ?c) WHERE { <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/foundedBy> ?uri . ?x <http://dbpedia.org/ontology/foundedBy> ?uri },Average of all prompts,0,1,1,0.0,0.0,0.0,0
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/trailheads> <http://dbpedia.org/resource/Grand_Canyon> FILTER NOT EXISTS { ?uri <http://dbpedia.org/property/hazards> <http://dbpedia.org/resource/Flash_flood> } },"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/HikingTrail> ; <http://dbpedia.org/property/trailheads> <http://dbpedia.org/resource/Grand_Canyon> ; <http://dbpedia.org/property/hazards> ""no flash floods""@en }",0,0,1,0.0,0.0,0.0,0
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/trailheads> <http://dbpedia.org/resource/Grand_Canyon> FILTER NOT EXISTS { ?uri <http://dbpedia.org/property/hazards> <http://dbpedia.org/resource/Flash_flood> } },Average of all prompts,0,0,1,0.0,0.0,0.0,0
87,Which book has the most pages?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:numberOfPages ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/numberOfPages> ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1,1,0,0,1.0,1.0,1.0,1
87,Which book has the most pages?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:numberOfPages ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1,Average of all prompts,1,0,0,1.0,1.0,1.0,1
148,What is the largest state in the United States?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri WHERE { ?uri dct:subject dbc:States_of_the_United_States ; rdf:type dbo:AdministrativeRegion ; dbo:areaTotal ?area } ORDER BY DESC(?area) OFFSET 0 LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PopulatedPlace> ; <http://dbpedia.org/ontology/largestCity> ?x } ORDER BY DESC(?x) OFFSET 0 LIMIT 1,0,1,1,0.0,0.0,0.0,0
148,What is the largest state in the United States?,Average of all prompts,SELECT ?uri WHERE { ?uri dct:subject dbc:States_of_the_United_States ; rdf:type dbo:AdministrativeRegion ; dbo:areaTotal ?area } ORDER BY DESC(?area) OFFSET 0 LIMIT 1,Average of all prompts,0,1,1,0.0,0.0,0.0,0
43,Give me the websites of companies with more than 500000 employees.,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT distinct ?web WHERE { ?sub dbo:numberOfEmployees ?obj . ?sub foaf:homepage ?web FILTER( xsd:integer(?obj) > 500000 ) . },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/numberOfEmployees> ?x } UNION { ?uri <http://dbpedia.org/property/numEmployees> ?x } FILTER ( ?x > 500000 ) { ?uri <http://xmlns.com/foaf/0.1/homepage> ?y } UNION { ?uri <http://dbpedia.org/property/homepage> ?y } },0,2059,37,0.0,0.0,0.0,0
43,Give me the websites of companies with more than 500000 employees.,Average of all prompts,SELECT distinct ?web WHERE { ?sub dbo:numberOfEmployees ?obj . ?sub foaf:homepage ?web FILTER( xsd:integer(?obj) > 500000 ) . },Average of all prompts,0,2059,37,0.0,0.0,0.0,0
179,What were the names of the three ships by Columbus?,You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.,SELECT ?uri WHERE { ?uri rdf:type dbo:Ship ; dct:subject dbc:Christopher_Columbus ; dct:subject dbc:Exploration_ships },SELECT DISTINCT ?uri WHERE { ?uri a yago:WikicatShipsOfChristopherColumbus ; rdfs:label ?label } ORDER BY ?uri OFFSET 0 LIMIT 3,0,0,3,0.0,0.0,0.0,0
179,What were the names of the three ships by Columbus?,Average of all prompts,SELECT ?uri WHERE { ?uri rdf:type dbo:Ship ; dct:subject dbc:Christopher_Columbus ; dct:subject dbc:Exploration_ships },Average of all prompts,0,0,3,0.0,0.0,0.0,0
