id,question,sparql,prompt
99,What is the time zone of Salt Lake City?,"SELECT ?timezone WHERE {
  dbr:Salt_Lake_City dbo:timeZone ?timezone .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
98,Who killed Caesar?,"SELECT ?person WHERE {
  dbr:Julius_Caesar dbo:deathCause ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
86,What is the highest mountain in Germany?,"SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:country dbr:Germany ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
84,Which American presidents were in office during the Vietnam War?,"SELECT ?president ?termStart ?termEnd WHERE {
  ?president dbo:office dbr:President_of_the_United_States ;
             dbo:termPeriod ?term .
  ?term dbo:president ?president ;
        dbo:termStart ?termStart ;
        dbo:termEnd ?termEnd .
  FILTER ((?termStart >= ""1955-11-01""^^xsd:date && ?termStart <= ""1975-04-30""^^xsd:date) ||
          (?termEnd >= ""1955-11-01""^^xsd:date && ?termEnd <= ""1975-04-30""^^xsd:date) ||
          (?termStart <= ""1955-11-01""^^xsd:date && ?termEnd >= ""1975-04-30""^^xsd:date))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
81,Butch Otter is the governor of which U.S. state?,"SELECT ?state WHERE {
  dbr:Butch_Otter dbo:office ?office .
  ?office dbo:location ?state .
  ?state rdf:type dbo:U.S._State .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,"SELECT ?goldMedals WHERE {
  dbr:Michael_Phelps dbo:goldMedalist ?goldMedals .
  ?goldMedals dbo:olympicGames dbr:2008_Summer_Olympics .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
66,Which artists were born on the same date as Rachel Stevens?,"SELECT ?person ?name WHERE {
  dbr:Rachel_Stevens dbo:birthDate ?birthdate .
  ?person dbo:birthDate ?birthdate .
  ?person dbo:occupation dbr:Artist .
  ?person foaf:name ?name .
  FILTER (?person != dbr:Rachel_Stevens)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
64,What is the profession of Frank Herbert?,"SELECT ?profession WHERE {
  dbr:Frank_Herbert dbo:occupation ?profession .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
6,Are Taiko some kind of Japanese musical instrument?,"SELECT ?answer 
WHERE {
  dbr:Taiko dbo:country dbr:Japan.
  dbr:Taiko rdf:type dbo:MusicalInstrument.
  BIND(""Yes"" AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
56,How many seats does the home stadium of FC Porto have?,"SELECT ?seats WHERE {
  dbr:FC_Porto dbo:ground ?stadium.
  ?stadium dbo:seatingCapacity ?seats.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
49,Which frequent flyer program has the most airlines?,"SELECT ?program ?count WHERE {
  {
    SELECT ?program (COUNT(?airline) AS ?count) WHERE {
      ?airline dbo:frequentFlyerProgram ?program .
    } GROUP BY ?program
  }
  ORDER BY DESC(?count)
  LIMIT 1
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
44,Which European countries have a constitutional monarchy?,"SELECT ?country WHERE {
  ?country dct:subject dbc:Countries_in_Europe.
  ?country dct:subject dbc:Constitutional_monarchies.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
42,Which countries have places with more than two caves?,"SELECT DISTINCT ?country WHERE {
  ?place dbo:country ?country ;
         dbo:type dbr:Cave .
  {
    SELECT ?place WHERE {
      ?place dbo:type dbr:Cave .
    } GROUP BY ?place HAVING (COUNT(?place) > 2)
  }
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
4,"Which airports are located in California, USA?","SELECT ?airport WHERE {
  ?airport dbo:location dbr:California .
  ?airport rdf:type dbo:Airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
37,What are the nicknames of San Francisco?,"SELECT ?nicknames WHERE {
  dbr:San_Francisco dbo:nickname ?nicknames .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
32,What is Angela Merkelâ€™s birth name?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
31,Who is the mayor of Berlin?,"SELECT ?mayor WHERE {
  dbr:Berlin dbo:leader ?mayor .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
29,Which countries in the European Union adopted the Euro?,"SELECT ?country WHERE {
  ?country dct:subject dbc:Countries_in_the_European_Union .
  ?country dct:subject dbc:Eurozone_countries .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
23,Which software has been published by Mean Hamster Software?,"SELECT ?software WHERE {
  ?software dbo:publisher dbr:Mean_Hamster_Software.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
68,Which country was Bill Gates born in?,"SELECT ?country WHERE {
  dbr:Bill_Gates dbo:birthPlace ?place .
  ?place dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
22,How many grand-children did Jacques Cousteau have?,"SELECT COUNT(?grandchild) WHERE {
  ?person dbo:children ?child .
  ?child dbo:children ?grandchild .
  ?person foaf:name ""Jacques Cousteau""@en .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
214,Give me all professional skateboarders from Sweden.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Skateboarder ;
          dbo:birthPlace dbr:Sweden .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
210,Which monarchs of the United Kingdom were married to a German?,"SELECT ?monarch ?spouse WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch dct:subject dbc:Monarchs_of_the_United_Kingdom .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dct:subject dbc:Germany .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
199,Give me all Argentine films.,"SELECT ?film WHERE {
  ?film dbo:country dbr:Argentina .
  ?film rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
203,How did Michael Jackson die?,"SELECT ?causeOfDeath WHERE {
  dbr:Michael_Jackson dbo:deathCause ?causeOfDeath .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
197,Which U.S. state has been admitted latest?,"SELECT ?state ?admission_date WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:timeZone ?timeZone.
  ?state dbo:admissionUnion ?admission_date.
  FILTER (strstarts(str(?timeZone), ""http://dbpedia.org/resource/Time_in_""))
} ORDER BY DESC(?admission_date) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
196,Which classes does the Millepede belong to?,"SELECT ?class WHERE {
  dbr:Millipede rdf:type ?class .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
188,Give me the homepage of Forbes.,"SELECT ?homepage WHERE {
  dbr:Forbes foaf:homepage ?homepage .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
187,Who is the husband of Amanda Palmer?,"SELECT ?husband WHERE {
  dbr:Amanda_Palmer dbo:spouse ?husband .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
176,Who painted The Storm on the Sea of Galilee?,"SELECT ?artist WHERE {
  dbr:The_Storm_on_the_Sea_of_Galilee dbo:author ?artist .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
62,What is the highest place of Karakoram?,"SELECT ?place ?elevation 
WHERE {
  ?place dbo:range dbpedia:Karakoram.
  ?place dbo:elevation ?elevation.
} 
ORDER BY DESC(?elevation)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
173,When did Finland join the EU?,"SELECT ?date WHERE {
  dbr:Finland dbo:EUAccession ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
168,Which actors play in Big Bang Theory?,"SELECT ?actor WHERE {
  dbr:The_Big_Bang_Theory dbo:starring ?actor
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
166,Which computer scientist won an oscar?,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Computer_scientist .
  ?person dbo:award dbr:Academy_Award .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
160,Who wrote Harry Potter?,"SELECT ?author WHERE {
  dbr:Harry_Potter dbo:author ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
158,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer ?writerLabel WHERE {
  ?writer dbo:award dbr:Nobel_Prize_in_Literature.
  ?writer rdf:type dbo:Writer.
  ?writer rdfs:label ?writerLabel.
  FILTER(lang(?writerLabel) = ""en"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
157,Give me English actors starring in Lovesick.,"SELECT ?actor WHERE {
  ?actor dbo:occupation dbr:Actor .
  ?actor dbo:birthPlace dbr:England .
  ?actor ?p dbr:Lovesick_(TV_series) .
  FILTER(?p IN (dbo:starring))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
155,What is the nick name of Baghdad?,"SELECT ?nickName WHERE {
  dbr:Baghdad dbo:nickname ?nickName .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
150,In which city was the president of Montenegro born?,"SELECT ?city WHERE {
  ?person dbo:birthPlace ?city .
  ?person dbo:office dbr:President_of_Montenegro .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
149,Which U.S. state has the highest population density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:populationDensity ?populationDensity.
} ORDER BY DESC(?populationDensity) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
25,What is the longest river in China?,"SELECT ?river ?length WHERE {
  ?river dbo:country dbr:China;
         dbo:length ?length.
} ORDER BY DESC(?length) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
143,What is the area code of Berlin?,"SELECT ?areacode WHERE {
  dbr:Berlin dbo:areaCode ?areacode .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
140,How many scientists graduated from an Ivy League university?,"SELECT (COUNT(DISTINCT ?scientist) AS ?count) WHERE {
  ?scientist dbo:almaMater ?university .
  ?scientist rdf:type dbo:Scientist .
  ?university dct:subject dbc:Ivy_League_universities .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
139,Which professional surfers were born in Australia?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Australia .
  ?surfer rdf:type dbo:Surfer .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
137,Give me all Dutch parties.,"SELECT ?party WHERE {
  ?party dbo:country dbr:Netherlands .
  ?party rdf:type dbo:PoliticalParty .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
136,How many moons does Mars have?,"SELECT ?moonCount WHERE {
  dbr:Mars dbo:numberOfMoons ?moonCount .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
134,What is Batman's real name?,"SELECT ?realName WHERE {
  dbr:Batman dbo:alias ?realName .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
132,What is Elon Musk famous for?,"SELECT ?property ?value WHERE {
  dbr:Elon_Musk ?property ?value
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
128,Who is the author of WikiLeaks?,"SELECT ?author WHERE {
  dbr:WikiLeaks dbo:author ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
126,Sean Parnell was the governor of which U.S. state?,"SELECT ?state WHERE {
  dbr:Sean_Parnell dbo:office ?office .
  ?office dbo:location ?state .
  ?state rdf:type dbo:U.S._State .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
125,How many years was the Ford Model T manufactured?,"SELECT (MAX(?endYear) - MIN(?startYear)) as ?manufacturingYears
WHERE {
  dbr:Ford_Model_T dbo:productionStartYear ?startYear .
  dbr:Ford_Model_T dbo:productionEndYear ?endYear .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
124,When was Carlo Giuliani shot?,"SELECT ?date WHERE {
  dbr:Carlo_Giuliani dbo:deathDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
123,Give me all animals that are extinct.,"SELECT ?animal WHERE {
  ?animal dbo:extinctionYear ?extinctionYear .
  ?animal rdf:type dbo:Species .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
122,Who was the wife of President Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
111,How many awards has Bertrand Russell?,"SELECT COUNT(?award) WHERE {
  dbr:Bertrand_Russell dbo:award ?award .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
117,Is Pamela Anderson a vegan?,"SELECT ?answer WHERE {
  dbr:Pamela_Anderson dbo:diet ?answer .
  FILTER (str(?answer) = ""Veganism"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
59,Which space probes were sent into orbit around the sun?,"SELECT ?probe WHERE {
  ?probe dbo:type dbr:Space_probe .
  ?probe dbo:orbit ?orbit .
  ?orbit rdfs:label ?orbitLabel .
  FILTER (lang(?orbitLabel) = ""en"") .
  FILTER (regex(?orbitLabel, ""Sun"", ""i"")) .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
113,Which German cities have more than 250000 inhabitants?,"SELECT ?city WHERE {
  ?city rdf:type dbo:City .
  ?city dbo:country dbr:Germany .
  ?city dbo:populationTotal ?population .
  FILTER(?population > 250000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
104,Who is the daughter of Robert Kennedy married to?,"SELECT ?spouse WHERE {
  ?person dbo:parent dbr:Robert_F._Kennedy .
  ?person dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
10,How many students does the Free University of Amsterdam have?,"SELECT ?numberOfStudents WHERE {
  dbr:VU_University_Amsterdam dbo:numberOfStudents ?numberOfStudents .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
1,What is the revenue of IBM?,"SELECT ?revenue WHERE {
  dbr:IBM dbo:revenue ?revenue .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
178,How many James Bond movies do exist?,"SELECT (COUNT(?movie) AS ?count) WHERE {
  ?movie dbo:series dbr:James_Bond_in_film.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
129,Who does the voice of Bart Simpson?,"SELECT ?person WHERE {
  dbr:Bart_Simpson dbo:voice ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
183,Who was Tom Hanks married to?,"SELECT ?spouse WHERE {
  dbr:Tom_Hanks dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
181,Through which countries does the Yenisei river flow?,"SELECT ?country WHERE {
  dbr:Yenisei_River dbo:country ?country
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
7,Give me all cars that are produced in Germany.,"SELECT ?car WHERE {
  ?car dbo:manufacturer ?manufacturer .
  ?manufacturer dbo:location ?location .
  ?location dbo:country dbr:Germany .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
135,When did Michael Jackson die?,"SELECT ?deathDate WHERE {
  dbr:Michael_Jackson dbo:deathDate ?deathDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
50,What is the highest volcano in Africa?,"SELECT ?volcano ?elevation WHERE {
  ?volcano dbo:location dbr:Africa ;
           rdf:type dbo:Volcano ;
           dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
39,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount) WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
} 
ORDER BY DESC(?bookCount) 
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
83,Give me all gangsters from the prohibition era.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Gangster .
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate >= ""1920-01-17""^^xsd:date && ?birthDate <= ""1933-12-05""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
71,Give me all spacecrafts that flew to Mars.,"SELECT ?spacecraft WHERE {
  ?spacecraft dbo:destination dbr:Mars .
  ?spacecraft rdf:type dbo:Spacecraft .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
213,Show me all Czech movies.,"SELECT ?movie WHERE {
  ?movie dbo:country dbr:Czech_Republic .
  ?movie rdf:type dbo:Film .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
209,Give me all taikonauts.,"SELECT ?taikonaut WHERE {
  ?taikonaut dbo:occupation dbr:Taikonaut.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
105,Which countries have more than ten volcanoes?,"SELECT ?country WHERE {
  ?volcano dbo:location ?country .
  ?volcano rdf:type dbo:Volcano .
} GROUP BY ?country HAVING (COUNT(?volcano) > 10)",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
52,Give me all movies with Tom Cruise.,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdf:type dbo:Film.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
102,When did Dracula's creator die?,"SELECT ?date WHERE {
  dbr:Bram_Stoker dbo:deathDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
21,Who created English Wikipedia?,"SELECT ?creator WHERE {
  dbr:English_Wikipedia dbo:creator ?creator .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
34,Give me all female German chancellors.,"SELECT ?chancellor ?name WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
  ?chancellor dbo:gender dbr:Female .
  ?chancellor rdfs:label ?name .
  FILTER (lang(?name) = ""en"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
145,Who owns Aldi?,"SELECT ?owner WHERE {
  dbr:Aldi dbo:owner ?owner .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
154,Which books were written by Danielle Steel?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
198,Who was influenced by Socrates?,"SELECT ?person WHERE {
  ?person dbo:influencedBy dbr:Socrates .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
162,How deep is Lake Chiemsee?,"SELECT ?depth WHERE {
  dbr:Lake_Chiemsee dbo:depth ?depth .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
212,Which companies work in the aerospace industry as well as in medicine?,"SELECT DISTINCT ?company WHERE {
  ?company dbo:industry dbr:Aerospace.
  ?company dbo:industry dbr:Medicine.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
96,Which professional surfers were born on the Philippines?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Philippines .
  ?surfer dbo:occupation dbr:Surfing .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
40,Who were the parents of Queen Victoria?,"SELECT ?parent WHERE {
  dbr:Queen_Victoria dbo:parent ?parent .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
79,Are there any castles in the United States?,"SELECT ?castle WHERE {
  ?castle dbo:country dbr:United_States .
  ?castle rdf:type dbo:Castle .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
141,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
80,Give me a list of all critically endangered birds.,"SELECT ?bird WHERE {
  ?bird dbo:status <http://dbpedia.org/resource/Critically_Endangered>.
  ?bird rdf:type <http://dbpedia.org/ontology/Bird>.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
159,Which countries are connected by the Rhine?,"SELECT DISTINCT ?country WHERE {
  dbr:Rhine dbo:country ?country .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
107,Who was the father of Queen Elizabeth II?,"SELECT ?father WHERE {
  dbr:Elizabeth_II dbp:father ?father .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
163,Give me all chemical elements.,"SELECT ?element WHERE {
  ?element dbo:wikiPageID ?id .
  ?element rdf:type dbo:ChemicalElement .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
211,Give me all American presidents of the last 20 years.,"SELECT ?president ?start ?end WHERE {
  ?president dbo:office dbr:President_of_the_United_States ;
             dbo:birthPlace ?birthPlace ;
             dbo:termStart ?start ;
             dbo:termEnd ?end .
  ?birthPlace dbo:country dbr:United_States .
  FILTER (?start >= ""1996-10-01""^^xsd:date)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,"SELECT ?date WHERE {
  dbr:Worst_Case_Scenario_(film) dbo:releaseDate ?date .
  FILTER (langMatches(lang(?date), ""NL""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
144,Whom did Lance Bass marry?,"SELECT ?person WHERE {
  dbr:Lance_Bass dbo:spouse ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"SELECT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:TUI_Travel .
  ?subsidiary dbo:hubAirport dbr:Glasgow_Airport, dbr:Dublin_Airport .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
131,What languages are spoken in Pakistan?,"SELECT ?language WHERE {
  dbr:Pakistan dbo:officialLanguage ?language
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
120,Who is the daughter of Bill Clinton married to?,"SELECT ?spouse WHERE {
  ?person dbo:parent <http://dbpedia.org/resource/Bill_Clinton> .
  ?person dbo:spouse ?spouse .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
164,Who was on the Apollo 11 mission?,"SELECT ?person WHERE {
  dbr:Apollo_11 dbo:crew ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
88,What is the wavelength of Indigo?,"SELECT ?wavelength WHERE {
  dbr:Indigo dbo:wavelength ?wavelength .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
151,Give me all B-sides of the Ramones.,"SELECT ?bside WHERE {
  ?album dbo:artist dbr:Ramones .
  ?album dbo:bside ?bside .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
63,Who was called Scarface?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER(LANG(?label) = ""en"") .
  FILTER(CONTAINS(LCASE(?label), ""scarface"")) .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
27,Which rivers flow into the North Sea?,"SELECT ?river WHERE {
  ?river dbo:mouth dbr:North_Sea .
  ?river rdf:type dbo:River .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
156,Where is Fort Knox located?,"SELECT ?location WHERE {
  dbr:Fort_Knox dbo:location ?location .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
207,Which daughters of British earls died at the same place they were born at?,"SELECT ?person ?birthPlace WHERE {
  ?person dbo:parent ?parent .
  ?parent dbo:nobleTitle ?title .
  ?title rdf:type dbo:Earl .
  ?parent dbo:birthPlace ?birthPlace .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:deathPlace ?birthPlace .
  ?person dbo:gender dbr:Female .
  FILTER (strstarts(str(?title), ""http://dbpedia.org/resource/Earl_of""))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
24,How many emperors did China have?,"SELECT (COUNT(?emperor) AS ?count) WHERE {
  ?emperor dbo:birthPlace dbr:China .
  ?emperor rdf:type dbo:Monarch .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
133,What are the names of the Teenage Mutant Ninja Turtles?,"SELECT ?turtleName WHERE {
  dbr:Teenage_Mutant_Ninja_Turtles dbo:character ?character.
  ?character rdfs:label ?turtleName.
  FILTER(lang(?turtleName) = ""en"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
103,Where does Piccadilly start?,"SELECT ?start WHERE {
  dbr:Piccadilly dbo:locationStart ?start.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
165,What is the name of the university where Obama's wife studied?,"SELECT ?university WHERE {
  ?person dbo:spouse dbr:Barack_Obama .
  ?person dbo:almaMater ?university .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
108,When did Paraguay proclaim its independence?,"SELECT ?date WHERE {
  dbr:Paraguay dbo:independenceDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
15,How short is the shortest active NBA player?,"SELECT ?height WHERE {
  ?player dbo:height ?height .
  ?player dbo:team ?team .
  ?team rdf:type yago:NationalBasketballAssociationTeams .
  ?player dbo:activeYearsEndYear ?endYear
  FILTER (?endYear >= 2016)
} 
ORDER BY ?height 
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
45,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
82,When was Jack Wolfskin founded?,"SELECT ?date WHERE {
  dbr:Jack_Wolfskin dbo:foundingDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
9,In which city is the headquarter of Air China?,"SELECT ?city WHERE {
  dbr:Air_China dbo:location ?city .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
201,What is the founding year of the brewery that produces Pilsner Urquell?,"SELECT ?foundingYear WHERE {
  ?brewery dbo:product dbr:Pilsner_Urquell .
  ?brewery dbo:foundingYear ?foundingYear .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
171,When did the Boston Tea Party take place?,"SELECT ?date WHERE {
  dbr:Boston_Tea_Party dbo:date ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
182,Which animals are critically endangered?,"SELECT ?animal WHERE {
  ?animal dbo:status <http://dbpedia.org/resource/Critically_Endangered>
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
13,Which politicians were married to a German?,"SELECT ?politician WHERE {
  ?politician dbo:spouse ?spouse .
  ?politician rdf:type dbo:Politician .
  ?spouse dbo:birthPlace res:Germany .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
114,How big is the earth's diameter?,"SELECT ?diameter WHERE {
  dbr:Earth dbo:diameter ?diameter .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
92,Is the wife of President Obama called Michelle?,"SELECT ?answer WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Michelle Obama"")
  BIND(EXISTS{dbr:Barack_Obama dbo:spouse dbr:Michelle_Obama} AS ?answer)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
194,Which U.S. state has the abbreviation MN?,"SELECT ?state WHERE {
  ?state dbo:country dbr:United_States ;
         dbo:iso3166code ""US-MN"" .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
175,When did Muhammad die?,"SELECT ?date WHERE {
  dbr:Muhammad dbo:deathDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
26,What is the atmosphere of the Moon composed of?,"SELECT ?atmosphereComposition WHERE {
  dbr:Moon dbo:atmosphereComposition ?atmosphereComposition .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
60,Who is the governor of Texas?,"SELECT ?person WHERE {
  ?person dbo:office dbr:Governor_of_Texas .
  ?person dbo:termEnd ?termEnd .
  FILTER (?termEnd > ""2016-10-01""^^xsd:date)
} LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
110,Which movies did Kurosawa direct?,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Akira_Kurosawa.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
206,What was the name of the famous battle in 1836 in San Antonio?,"SELECT ?battle WHERE {
  ?battle dbo:location dbr:San_Antonio .
  ?battle dbo:date ?date .
  FILTER (YEAR(?date) = 1836)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
97,Give me the official websites of actors of the television show Charmed.,"SELECT ?actor ?website
WHERE {
  ?show dbo:starring ?actor.
  ?actor dbo:officialWebsite ?website.
  FILTER (str(?show) = ""http://dbpedia.org/resource/Charmed"")
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
20,How many calories does a baguette have?,"SELECT ?calories WHERE {
  dbr:Baguette dbo:foodEnergy ?calories.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
169,Give me all libraries established before 1400.,"SELECT ?library WHERE {
  ?library dbo:type dbr:Library .
  ?library dbo:foundingYear ?foundingYear .
  FILTER (?foundingYear < 1400)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
38,Give me all Frisian islands that belong to the Netherlands.,"SELECT ?island WHERE {
  ?island dbo:country dbr:Netherlands .
  ?island dbo:isPartOf dbr:West_Frisian_Islands .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
192,Which museum exhibits The Scream by Munch?,"SELECT ?museum WHERE {
  dbr:The_Scream dbo:museum ?museum .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
78,When was the De Beers company founded?,"SELECT ?foundingYear WHERE {
  dbr:De_Beers dbo:foundingYear ?foundingYear .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
19,Who became president after JFK died?,"SELECT ?person WHERE {
  ?person dbo:predecessor dbr:John_F._Kennedy .
  ?person rdf:type dbo:President .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
190,Who are the parents of the wife of Juan Carlos I?,"SELECT ?person WHERE {
  dbr:Juan_Carlos_I_of_Spain dbo:spouse ?spouse .
  ?spouse dbo:parent ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
174,Who is the novelist of the work a song of ice and fire?,"SELECT ?author WHERE {
  dbr:A_Song_of_Ice_and_Fire dbo:author ?author .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
189,In which studio did the Beatles record their first album?,"SELECT ?studio WHERE {
  dbr:The_Beatles dbo:recordLabel ?recordLabel .
  ?recordLabel dbo:location ?studio .
  {
    SELECT (MIN(?date) AS ?firstDate) WHERE {
      dbr:The_Beatles dbo:album ?album .
      ?album dbo:releaseDate ?date .
    }
  }
  ?album dbo:releaseDate ?firstDate .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
152,Which beer brewing companies are located in North-Rhine Westphalia?,"SELECT ?company WHERE {
  ?company dbo:industry dbr:Brewery ;
           dbo:location dbr:North_Rhine-Westphalia .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
94,When did princess Diana die?,"SELECT ?date WHERE {
  dbr:Princess_Diana dbo:deathDate ?date .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
8,Who founded Intel?,"SELECT ?founder WHERE {
  dbr:Intel dbo:foundingPerson ?founder .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
95,Who is the youngest player in the Premier League?,"SELECT ?player WHERE {
  ?player dbo:league ?league .
  ?player dbo:birthDate ?birthDate .
  ?league rdfs:label ""Premier League""@en .
} ORDER BY DESC(?birthDate) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
119,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
115,How many rivers and lakes are in South Carolina?,"# Query for rivers
SELECT (COUNT(?river) AS ?riverCount) WHERE {
  ?river dbo:state dbr:South_Carolina ;
         rdf:type dbo:River .
}

# Query for lakes
SELECT (COUNT(?lake) AS ?lakeCount) WHERE {
  ?lake dbo:state dbr:South_Carolina ;
        rdf:type dbo:Lake .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
116,Who was called Rodzilla?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER(LANG(?label) = ""en"") .
  FILTER(CONTAINS(LCASE(?label), ""rodzilla"")) .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
138,Give me the capitals of all countries in Africa.,"SELECT ?country ?capital WHERE {
  ?country dct:subject dbc:Countries_in_Africa.
  ?country dbo:capital ?capital.
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
177,Which bridges are of the same type as the Manhattan Bridge?,"SELECT ?bridge WHERE {
  dbr:Manhattan_Bridge dbo:bridgeType ?type .
  ?bridge dbo:bridgeType ?type .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
101,How many companies were founded by the founder of Facebook?,"SELECT COUNT(?company) WHERE {
  ?person dbo:knownFor dbr:Facebook .
  ?company dbo:foundingPerson ?person .
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,"SELECT ?trail WHERE {
  ?trail dbo:location dbr:Grand_Canyon.
  ?trail rdf:type dbo:HikingTrail.
  OPTIONAL { ?trail dbo:danger dbr:Flash_flood. }
  FILTER (!bound(?danger))
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
87,Which book has the most pages?,"SELECT ?book ?pages
WHERE {
  ?book dbo:numberOfPages ?pages.
}
ORDER BY DESC(?pages)
LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
148,What is the largest state in the United States?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:areaTotal ?area.
} ORDER BY DESC(?area) LIMIT 1",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
43,Give me the websites of companies with more than 500000 employees.,"SELECT ?company ?website WHERE {
  ?company dbo:numberOfEmployees ?employees .
  ?company foaf:homepage ?website .
  FILTER(?employees > 500000)
}",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
179,What were the names of the three ships by Columbus?,"SELECT ?ship WHERE {
  ?ship dbo:operator dbr:Christopher_Columbus.
} LIMIT 3",You are a system which creates SPARQL queries for DBPEDIA from 2016-10 from natural language user questions. You answer just with SPARQL queries and nothing else.
99,What is the time zone of Salt Lake City?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?timezone WHERE {
  res:Salt_Lake_City dbo:timeZone ?timezone .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
98,Who killed Caesar?,"SELECT ?killer WHERE {
  dbr:Julius_Caesar dbo:deathCause ?killer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
86,What is the highest mountain in Germany?,"SELECT ?mountain ?elevation WHERE {
  ?mountain dbo:country dbr:Germany ;
            rdf:type dbo:Mountain ;
            dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
84,Which American presidents were in office during the Vietnam War?,"SELECT ?president ?termStart ?termEnd WHERE {
  ?president dbo:office dbr:President_of_the_United_States ;
             dbo:birthPlace dbr:United_States ;
             dbo:termStart ?termStart ;
             dbo:termEnd ?termEnd .
  FILTER((?termStart <= ""1975-04-30""^^xsd:date && ?termEnd >= ""1955-11-01""^^xsd:date) || 
         (?termStart >= ""1955-11-01""^^xsd:date && ?termStart <= ""1975-04-30""^^xsd:date))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
81,Butch Otter is the governor of which U.S. state?,"SELECT ?state WHERE {
  dbr:Butch_Otter dbo:office ?office .
  ?office dbo:location ?state .
  ?state rdf:type dbo:U.S._State .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,"SELECT ?goldMedals WHERE {
  dbr:Michael_Phelps dbo:goldMedalist ?goldMedals .
  ?goldMedals dbo:olympicGames dbr:2008_Summer_Olympics .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
66,Which artists were born on the same date as Rachel Stevens?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  ?artist dbo:birthDate ?birthdate .
  ?artist a dbo:Artist .
  {
    SELECT ?birthdate WHERE {
      dbr:Rachel_Stevens dbo:birthDate ?birthdate .
    }
  }
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
64,What is the profession of Frank Herbert?,"SELECT ?profession WHERE {
  dbr:Frank_Herbert dbo:occupation ?profession .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
6,Are Taiko some kind of Japanese musical instrument?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label WHERE {
  dbr:Taiko rdfs:label ?label .
  dbr:Taiko dbo:country dbr:Japan .
  dbr:Taiko dbo:type dbr:Musical_instrument .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
56,How many seats does the home stadium of FC Porto have?,"SELECT ?seats WHERE {
  dbr:FC_Porto dbo:ground ?stadium .
  ?stadium dbo:seatingCapacity ?seats .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
49,Which frequent flyer program has the most airlines?,"SELECT ?program WHERE {
  ?program rdf:type dbo:FrequentFlyerProgram.
  ?airline dbo:frequentFlyerProgram ?program.
} ORDER BY DESC(COUNT(?airline)) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
44,Which European countries have a constitutional monarchy?,"SELECT ?country WHERE {
  ?country dct:subject dbc:Countries_in_Europe.
  ?country dct:subject dbc:Constitutional_monarchies.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
42,Which countries have places with more than two caves?,"SELECT ?country WHERE {
  ?place dbo:country ?country .
  ?place dbo:type dbr:Cave .
} GROUP BY ?country HAVING (COUNT(?place) > 2)",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
4,"Which airports are located in California, USA?","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport WHERE {
  ?airport dbo:location dbr:California .
  ?airport rdf:type dbo:Airport .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
37,What are the nicknames of San Francisco?,"SELECT ?nickname WHERE {
  dbr:San_Francisco dbo:nickname ?nickname .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
32,What is Angela Merkelâ€™s birth name?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
31,Who is the mayor of Berlin?,"SELECT ?mayor WHERE {
  dbr:Berlin dbo:leader ?mayor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
29,Which countries in the European Union adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country ?countryLabel WHERE {
  ?country dbo:currency dbr:Euro ;
           dbo:isPartOf dbr:European_Union .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
23,Which software has been published by Mean Hamster Software?,"SELECT ?software WHERE {
  ?software dbo:publisher dbr:Mean_Hamster_Software
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
68,Which country was Bill Gates born in?,"SELECT ?country WHERE {
  dbr:Bill_Gates dbo:birthPlace ?place .
  ?place dbo:country ?country .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
22,How many grand-children did Jacques Cousteau have?,"SELECT (COUNT(?grandchild) AS ?count) WHERE {
  dbr:Jacques_Cousteau dbo:child ?child .
  ?child dbo:child ?grandchild .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
214,Give me all professional skateboarders from Sweden.,"SELECT ?skateboarder WHERE {
  ?skateboarder dbo:occupation dbr:Skateboarder ;
                dbo:birthPlace dbr:Sweden .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
210,Which monarchs of the United Kingdom were married to a German?,"SELECT ?monarch ?spouse WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch dct:subject dbc:Monarchs_of_the_United_Kingdom .
  ?spouse dbo:birthPlace dbr:Germany .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
199,Give me all Argentine films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film dbo:country dbr:Argentina .
  ?film rdf:type dbo:Film .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
203,How did Michael Jackson die?,"SELECT ?causeOfDeath WHERE {
  dbr:Michael_Jackson dbo:deathCause ?causeOfDeath .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
197,Which U.S. state has been admitted latest?,"SELECT ?state ?admissionDate WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:timeZone ?timeZone.
  ?state dbo:admissionDate ?admissionDate.
} ORDER BY DESC(?admissionDate) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
196,Which classes does the Millepede belong to?,"SELECT ?class WHERE {
  dbr:Millipede dct:subject ?class .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
188,Give me the homepage of Forbes.,"SELECT ?homepage WHERE {
  dbr:Forbes foaf:homepage ?homepage .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
187,Who is the husband of Amanda Palmer?,"SELECT ?husband WHERE {
  dbr:Amanda_Palmer dbo:spouse ?husband .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
176,Who painted The Storm on the Sea of Galilee?,"SELECT ?artist WHERE {
  dbr:The_Storm_on_the_Sea_of_Galilee dbo:author ?artist .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
62,What is the highest place of Karakoram?,"SELECT ?place ?elevation
WHERE {
  ?place dbo:range dbp:Karakoram.
  ?place dbo:elevation ?elevation.
}
ORDER BY DESC(?elevation)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
173,When did Finland join the EU?,"SELECT ?date WHERE {
  dbr:Finland dbo:EUAccession ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
168,Which actors play in Big Bang Theory?,"SELECT ?actor WHERE {
  dbr:The_Big_Bang_Theory dbo:starring ?actor
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
166,Which computer scientist won an oscar?,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Computer_scientist .
  ?person dbo:award dbr:Academy_Awards .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
160,Who wrote Harry Potter?,"SELECT ?author WHERE {
  dbr:Harry_Potter dbo:author ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
158,Give me all writers that won the Nobel Prize in literature.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writer WHERE {
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
157,Give me English actors starring in Lovesick.,"SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""Lovesick""@en .
  ?actor dbo:birthPlace ?place .
  ?place dbo:country dbr:United_Kingdom .
  ?actor rdf:type dbo:Actor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
155,What is the nick name of Baghdad?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickName WHERE {
  dbr:Baghdad dbp:nickname ?nickName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
150,In which city was the president of Montenegro born?,"SELECT ?city WHERE {
  ?person dbo:birthPlace ?city .
  ?person dbo:office dbr:President_of_Montenegro .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
149,Which U.S. state has the highest population density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:populationDensity ?populationDensity.
} ORDER BY DESC(?populationDensity) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
25,What is the longest river in China?,"SELECT ?river ?length WHERE {
  ?river dbo:country dbr:China ;
         dbo:length ?length .
} ORDER BY DESC(?length) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
143,What is the area code of Berlin?,"SELECT ?areacode WHERE {
  dbr:Berlin dbo:areaCode ?areacode .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
140,How many scientists graduated from an Ivy League university?,"SELECT (COUNT(?scientist) AS ?count) WHERE {
  ?scientist dbo:almaMater ?university .
  ?scientist rdf:type dbo:Scientist .
  ?university dct:subject dbc:Ivy_League_universities .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
139,Which professional surfers were born in Australia?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Australia .
  ?surfer rdf:type dbo:Surfer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
137,Give me all Dutch parties.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?party WHERE {
  ?party dct:subject dbc:Political_parties_in_the_Netherlands .
  ?party rdf:type dbo:PoliticalParty .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
136,How many moons does Mars have?,"SELECT ?moons WHERE {
  dbr:Mars dbo:numberOfMoons ?moons .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
134,What is Batman's real name?,"SELECT ?realName WHERE {
  dbr:Batman dbo:alias ?realName .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
132,What is Elon Musk famous for?,"SELECT ?abstract
WHERE {
  dbr:Elon_Musk dbo:abstract ?abstract .
  FILTER (lang(?abstract) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
128,Who is the author of WikiLeaks?,"SELECT ?author WHERE {
  dbr:WikiLeaks dbo:founder ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
126,Sean Parnell was the governor of which U.S. state?,"SELECT ?state WHERE {
  dbr:Sean_Parnell dct:office ?office .
  ?office dbo:officeHolder dbr:Sean_Parnell ;
          dbo:location ?state .
  FILTER (regex(str(?state), ""U.S._state"", ""i""))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
125,How many years was the Ford Model T manufactured?,"SELECT (MAX(?endYear) - MIN(?startYear)) as ?manufacturingYears
WHERE {
  dbr:Ford_Model_T dbo:productionStartYear ?startYear .
  dbr:Ford_Model_T dbo:productionEndYear ?endYear .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
124,When was Carlo Giuliani shot?,"SELECT ?date WHERE {
  dbr:Carlo_Giuliani dbo:deathDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
123,Give me all animals that are extinct.,"SELECT ?animal WHERE {
  ?animal dbo:extinctionDate ?extinctionDate .
  ?animal rdf:type dbo:Species .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
122,Who was the wife of President Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
111,How many awards has Bertrand Russell?,"SELECT (COUNT(?award) AS ?awardCount) WHERE {
  dbr:Bertrand_Russell dbo:award ?award .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
117,Is Pamela Anderson a vegan?,"SELECT ?answer WHERE {
  dbr:Pamela_Anderson dbo:diet ?diet.
  BIND(REPLACE(str(?diet), ""http://dbpedia.org/resource/"", """") AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
59,Which space probes were sent into orbit around the sun?,"SELECT ?probe WHERE {
  ?probe dbo:type dbr:Space_probe .
  ?probe dbo:orbit ?orbit .
  FILTER (regex(str(?orbit), ""Sun"", ""i""))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
113,Which German cities have more than 250000 inhabitants?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?population
WHERE {
  ?city dbo:country dbr:Germany ;
        dbo:populationTotal ?population .
  FILTER (?population > 250000)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
104,Who is the daughter of Robert Kennedy married to?,"SELECT ?spouse WHERE {
  ?person dbo:parent dbr:Robert_F._Kennedy .
  ?person dbo:spouse ?spouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
10,How many students does the Free University of Amsterdam have?,"SELECT ?numberOfStudents WHERE {
  dbr:VU_University_Amsterdam dbo:numberOfStudents ?numberOfStudents .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
1,What is the revenue of IBM?,"SELECT ?revenue WHERE {
  dbr:IBM dbo:revenue ?revenue .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
178,How many James Bond movies do exist?,"SELECT (COUNT(?movie) AS ?count) WHERE {
  ?movie dbo:series dbr:James_Bond_in_film.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
129,Who does the voice of Bart Simpson?,"SELECT ?person WHERE {
  dbr:Bart_Simpson dbo:voice ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
183,Who was Tom Hanks married to?,"SELECT ?person WHERE {
  dbr:Tom_Hanks dbo:spouse ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
181,Through which countries does the Yenisei river flow?,"SELECT ?country WHERE {
  dbr:Yenisei_River dbo:country ?country
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
7,Give me all cars that are produced in Germany.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?car WHERE {
  ?car dbo:manufacturer ?manufacturer .
  ?manufacturer dbo:locationCountry dbr:Germany .
  ?car rdf:type dbo:Automobile .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
135,When did Michael Jackson die?,"SELECT ?date WHERE {
  dbr:Michael_Jackson dbo:deathDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
50,What is the highest volcano in Africa?,"SELECT ?volcano WHERE {
  ?volcano dbo:location dbr:Africa .
  ?volcano rdf:type dbo:Volcano .
  ?volcano dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
39,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
ORDER BY DESC(?bookCount)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
83,Give me all gangsters from the prohibition era.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?gangster WHERE {
  ?gangster dct:subject dbc:Prohibition-era_gangsters .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
71,Give me all spacecrafts that flew to Mars.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spacecraft WHERE {
  ?spacecraft dbo:destination dbr:Mars .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
213,Show me all Czech movies.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie dbo:country dbr:Czech_Republic .
  ?movie rdf:type dbo:Film .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
209,Give me all taikonauts.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Taikonaut.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
105,Which countries have more than ten volcanoes?,"SELECT ?country WHERE {
  ?volcano dbo:location ?country .
  ?volcano rdf:type dbo:Volcano .
} GROUP BY ?country HAVING (COUNT(?volcano) > 10)",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
52,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?movie ?movieLabel WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdfs:label ?movieLabel.
  FILTER (lang(?movieLabel) = 'en')
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
102,When did Dracula's creator die?,"SELECT ?date WHERE {
  ?person dbo:deathDate ?date .
  ?person rdfs:label ""Bram Stoker""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
21,Who created English Wikipedia?,"SELECT ?creator WHERE { 
  dbr:English_Wikipedia dbo:creator ?creator 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
34,Give me all female German chancellors.,"SELECT ?chancellor ?name WHERE {
  ?chancellor dbo:office dbr:Chancellor_of_Germany .
  ?chancellor dbo:gender dbr:Female .
  ?chancellor rdfs:label ?name .
  FILTER (lang(?name) = ""en"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
145,Who owns Aldi?,"SELECT ?owner WHERE { 
  dbr:Aldi dbo:owner ?owner 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
154,Which books were written by Danielle Steel?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
198,Who was influenced by Socrates?,"SELECT ?person WHERE {
  ?person dbo:influencedBy dbr:Socrates .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
162,How deep is Lake Chiemsee?,"SELECT ?depth WHERE {
  dbr:Lake_Chiemsee dbo:depth ?depth .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
212,Which companies work in the aerospace industry as well as in medicine?,"SELECT DISTINCT ?company WHERE {
  ?company dct:subject dbc:Companies_in_the_aerospace_industry.
  ?company dct:subject dbc:Medical_companies.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
96,Which professional surfers were born on the Philippines?,"SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Philippines .
  ?surfer rdf:type dbo:Surfer .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
40,Who were the parents of Queen Victoria?,"SELECT ?parent WHERE {
  dbr:Queen_Victoria dbo:parent ?parent .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
79,Are there any castles in the United States?,"SELECT ?castle WHERE {
  ?castle dbo:country dbr:United_States .
  ?castle rdf:type dbo:Castle .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
141,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
80,Give me a list of all critically endangered birds.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?bird WHERE {
  ?bird rdf:type dbo:Bird .
  ?bird dbo:conservationStatus dbr:Critically_Endangered .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
159,Which countries are connected by the Rhine?,"SELECT ?country ?countryLabel WHERE {
  ?river rdfs:label ""Rhine""@en.
  ?river dbo:country ?country.
  ?country rdfs:label ?countryLabel.
  FILTER (lang(?countryLabel) = ""en"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
107,Who was the father of Queen Elizabeth II?,"SELECT ?father WHERE {
  dbr:Elizabeth_II dbp:father ?father .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
163,Give me all chemical elements.,"SELECT ?chemicalElement WHERE {
  ?chemicalElement dbo:wikiPageID ?id .
  ?chemicalElement rdf:type dbo:ChemicalElement .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
211,Give me all American presidents of the last 20 years.,"SELECT ?president ?startDate WHERE {
  ?president dbo:office dbr:President_of_the_United_States ;
             dbo:termPeriod ?term .
  ?term dbo:startDate ?startDate .
  FILTER (?startDate >= ""1996-10-01""^^xsd:date)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,"SELECT ?date WHERE {
  dbr:Worst_Case_Scenario_(film) dbo:releaseDate ?date .
  FILTER (langMatches(lang(?date), ""NL""))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
144,Whom did Lance Bass marry?,"SELECT ?spouse WHERE {
  dbr:Lance_Bass dbo:spouse ?spouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"SELECT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:TUI_Travel .
  ?subsidiary dbo:hubAirport dbr:Glasgow_Airport, dbr:Dublin_Airport .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
131,What languages are spoken in Pakistan?,"SELECT ?language WHERE {
  dbr:Pakistan dbo:officialLanguage ?language
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
120,Who is the daughter of Bill Clinton married to?,"SELECT ?spouse WHERE {
  ?person dbo:parent <http://dbpedia.org/resource/Bill_Clinton> .
  ?person dbo:spouse ?spouse .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
164,Who was on the Apollo 11 mission?,"SELECT ?person WHERE {
  dbr:Apollo_11 dbo:crew ?person .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
88,What is the wavelength of Indigo?,"SELECT ?wavelength WHERE {
  dbr:Indigo dbo:wavelength ?wavelength .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
151,Give me all B-sides of the Ramones.,"SELECT ?bside WHERE {
  ?album dbo:artist dbr:Ramones .
  ?album dbo:bside ?bside .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
63,Who was called Scarface?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""scarface""@en)) .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
27,Which rivers flow into the North Sea?,"SELECT ?river WHERE {
  ?river dbo:mouth dbr:North_Sea .
  ?river rdf:type dbo:River .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
156,Where is Fort Knox located?,"SELECT ?location WHERE {
  dbr:Fort_Knox dbo:location ?location .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
207,Which daughters of British earls died at the same place they were born at?,"SELECT ?person ?birthPlace WHERE {
  ?person dbo:parent ?parent .
  ?parent a dbo:Earl ;
          dbo:birthPlace ?birthPlace .
  ?person dbo:birthPlace ?birthPlace ;
          dbo:deathPlace ?birthPlace ;
          foaf:gender ""female""@en .
  FILTER (strstarts(str(?parent), ""http://dbpedia.org/resource/Category:Earls_in_the_Peerage_of_Great_Britain""))
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
24,How many emperors did China have?,"SELECT (COUNT(?emperor) AS ?count) WHERE {
  ?emperor dbo:birthPlace dbr:China .
  ?emperor rdf:type dbo:Monarch .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
133,What are the names of the Teenage Mutant Ninja Turtles?,"SELECT ?turtle WHERE {
  dbr:Teenage_Mutant_Ninja_Turtles dbo:character ?turtle .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
103,Where does Piccadilly start?,"SELECT ?start WHERE {
  dbr:Piccadilly dbo:locationStart ?start.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
165,What is the name of the university where Obama's wife studied?,"SELECT ?university WHERE {
  dbr:Michelle_Obama dbo:almaMater ?university .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
108,When did Paraguay proclaim its independence?,"SELECT ?date WHERE {
  dbr:Paraguay dbo:independenceDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
15,How short is the shortest active NBA player?,"SELECT ?height WHERE {
  ?player dbo:height ?height .
  ?player dbo:team ?team .
  ?team rdf:type dbo:BasketballTeam .
  ?player dbo:careerStart ?start .
  FILTER (?start <= 2016)
} ORDER BY ?height LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
45,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
82,When was Jack Wolfskin founded?,"SELECT ?date WHERE {
  dbr:Jack_Wolfskin dbo:foundingDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
9,In which city is the headquarter of Air China?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  res:Air_China dbo:locationCity ?city .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
201,What is the founding year of the brewery that produces Pilsner Urquell?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?foundingYear WHERE {
  dbr:Pilsner_Urquell dbo:brewery ?brewery .
  ?brewery dbo:foundingYear ?foundingYear .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
171,When did the Boston Tea Party take place?,"SELECT ?date WHERE {
  dbr:Boston_Tea_Party dbo:date ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
182,Which animals are critically endangered?,"SELECT ?animal WHERE {
  ?animal dct:subject dbc:Critically_endangered_animals.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
13,Which politicians were married to a German?,"SELECT ?politician WHERE {
  ?politician dbo:spouse ?spouse .
  ?politician rdf:type dbo:Politician .
  ?spouse dbo:birthPlace res:Germany .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
114,How big is the earth's diameter?,"SELECT ?diameter WHERE {
  dbr:Earth dbo:diameter ?diameter .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
92,Is the wife of President Obama called Michelle?,"SELECT ?answer WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Michelle Obama"")
  BIND(""Yes"" AS ?answer)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
194,Which U.S. state has the abbreviation MN?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  ?state dbo:country <http://dbpedia.org/resource/United_States> ;
         dbo:iso3166code ""US-MN""^^xsd:string .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
175,When did Muhammad die?,"SELECT ?date WHERE {
  dbr:Muhammad dbo:deathDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
26,What is the atmosphere of the Moon composed of?,"SELECT ?atmosphereComposition WHERE {
  dbr:Moon dbo:atmosphereComposition ?atmosphereComposition .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
60,Who is the governor of Texas?,"SELECT ?governor WHERE {
  dbr:Texas dbo:leader ?governor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
110,Which movies did Kurosawa direct?,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Akira_Kurosawa.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
206,What was the name of the famous battle in 1836 in San Antonio?,"SELECT ?battle WHERE {
  ?battle dbo:location dbr:San_Antonio .
  ?battle dbo:date ?date .
  FILTER (YEAR(?date) = 1836)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
97,Give me the official websites of actors of the television show Charmed.,"SELECT ?actor ?website
WHERE {
  ?show dbo:starring ?actor.
  ?actor dbo:officialWebsite ?website.
  FILTER (str(?show) = ""http://dbpedia.org/resource/Charmed"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
20,How many calories does a baguette have?,"SELECT ?calories WHERE {
  dbr:Baguette dbo:calories ?calories .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
169,Give me all libraries established before 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library WHERE {
  ?library dbo:established ?date .
  ?library rdf:type dbo:Library .
  FILTER (?date < ""1400-01-01""^^xsd:date)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
38,Give me all Frisian islands that belong to the Netherlands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island WHERE {
  ?island dbo:country dbr:Netherlands .
  ?island dbo:isPartOf dbr:West_Frisian_Islands .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
192,Which museum exhibits The Scream by Munch?,"SELECT ?museum WHERE {
  dbr:The_Scream dbo:museum ?museum .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
78,When was the De Beers company founded?,"SELECT ?date WHERE { 
  dbr:De_Beers dbo:foundingDate ?date . 
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
19,Who became president after JFK died?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  res:John_F._Kennedy dbo:successor ?successor .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
190,Who are the parents of the wife of Juan Carlos I?,"SELECT ?parent WHERE {
  ?person dbo:spouse dbr:Juan_Carlos_I_of_Spain .
  ?person dbo:parent ?parent .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
174,Who is the novelist of the work a song of ice and fire?,"SELECT ?author WHERE {
  dbr:A_Song_of_Ice_and_Fire dbo:author ?author .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
189,In which studio did the Beatles record their first album?,"SELECT ?studio WHERE {
  dbr:The_Beatles dbo:recordLabel ?recordLabel .
  ?recordLabel dbo:location ?studio .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
152,Which beer brewing companies are located in North-Rhine Westphalia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?name WHERE {
  ?company dbo:industry dbr:Brewing ;
           dbo:location dbr:North_Rhine-Westphalia ;
           rdfs:label ?name .
  FILTER (lang(?name) = ""en"")
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
94,When did princess Diana die?,"SELECT ?date WHERE {
  dbr:Princess_Diana dbo:deathDate ?date .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
8,Who founded Intel?,"SELECT ?founder WHERE {
  dbr:Intel dbo:foundingPerson ?founder .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
95,Who is the youngest player in the Premier League?,"SELECT ?player ?birthDate WHERE {
  ?player dbo:league dbr:Premier_League .
  ?player dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
119,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
115,How many rivers and lakes are in South Carolina?,"# Query for rivers
SELECT (COUNT(?river) AS ?count) WHERE {
  ?river dbo:state dbr:South_Carolina ;
         rdf:type dbo:River .
}

# Query for lakes
SELECT (COUNT(?lake) AS ?count) WHERE {
  ?lake dbo:state dbr:South_Carolina ;
        rdf:type dbo:Lake .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
116,Who was called Rodzilla?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER(LANG(?label) = ""en"") .
  ?person dbo:alias ""Rodzilla""@en .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
138,Give me the capitals of all countries in Africa.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?country ?capital
WHERE {
  ?country dct:subject dbc:Countries_in_Africa .
  ?country dbo:capital ?capital .
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
177,Which bridges are of the same type as the Manhattan Bridge?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bridge ?bridgeLabel WHERE {
  dbr:Manhattan_Bridge dbo:bridgeType ?type .
  ?bridge dbo:bridgeType ?type .
  ?bridge rdfs:label ?bridgeLabel .
  FILTER (LANG(?bridgeLabel) = ""en"")
  FILTER (?bridge != dbr:Manhattan_Bridge)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
101,How many companies were founded by the founder of Facebook?,"SELECT COUNT(?company) WHERE {
  ?person dbo:knownFor dbr:Facebook.
  ?company dbo:foundingPerson ?person.
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,"Sorry, but DBpedia does not have specific information about hiking trails and their safety conditions such as the danger of flash floods. Therefore, it's not possible to generate a SPARQL query for this request.",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
87,Which book has the most pages?,"SELECT ?book ?pages
WHERE {
  ?book dbo:numberOfPages ?pages.
}
ORDER BY DESC(?pages)
LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
148,What is the largest state in the United States?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:areaTotal ?area.
} ORDER BY DESC(?area) LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
43,Give me the websites of companies with more than 500000 employees.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?company ?website WHERE {
  ?company dbo:numberOfEmployees ?employees .
  ?company foaf:homepage ?website .
  FILTER(?employees > 500000)
}",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
179,What were the names of the three ships by Columbus?,"SELECT ?ship WHERE {
  ?ship dbo:operator dbr:Christopher_Columbus.
} LIMIT 3",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
99,What is the time zone of Salt Lake City?,"SELECT ?timezone WHERE {
  dbr:Salt_Lake_City dbo:timeZone ?timezone .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
98,Who killed Caesar?,"SELECT ?person WHERE {
  dbr:Julius_Caesar dbo:deathCause ?cause .
  ?person dbo:causeOfDeath ?cause .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
86,What is the highest mountain in Germany?,"SELECT ?mountain ?elevation WHERE {
  ?mountain dbo:country dbr:Germany .
  ?mountain rdf:type dbo:Mountain .
  ?mountain dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
84,Which American presidents were in office during the Vietnam War?,"SELECT ?president ?termStart ?termEnd WHERE {
  ?president dbo:office dbr:President_of_the_United_States ;
             dbo:termStart ?termStart ;
             dbo:termEnd ?termEnd .
  FILTER((?termStart <= ""1975-04-30""^^xsd:date && ?termEnd >= ""1955-11-01""^^xsd:date) && 
         EXISTS { ?president dbo:birthPlace [dbo:country dbr:United_States] })
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
81,Butch Otter is the governor of which U.S. state?,"SELECT ?state WHERE {
  dbr:Butch_Otter dbo:office ?office .
  ?office dbo:location ?state .
  ?state rdf:type dbo:U.S._State .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,"SELECT ?goldMedals WHERE {
  dbr:Michael_Phelps dbo:goldMedalist ?goldMedals .
  ?goldMedals dbo:olympicGames dbr:2008_Summer_Olympics .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
66,Which artists were born on the same date as Rachel Stevens?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  dbpedia:Rachel_Stevens dbo:birthDate ?rachelBirthDate .
  ?artist dbo:birthDate ?birthDate .
  ?artist rdf:type dbo:Artist .
  FILTER (?birthDate = ?rachelBirthDate && ?artist != dbpedia:Rachel_Stevens)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
64,What is the profession of Frank Herbert?,"SELECT ?profession WHERE {
  dbr:Frank_Herbert dbo:occupation ?profession .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
6,Are Taiko some kind of Japanese musical instrument?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?object WHERE {
  ?object rdfs:label ""Taiko""@en .
  ?object dbo:country dbr:Japan .
  ?object a dbo:MusicalInstrument .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
56,How many seats does the home stadium of FC Porto have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?seats WHERE {
  res:FC_Porto dbo:ground ?stadium .
  ?stadium dbo:seatingCapacity ?seats .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
49,Which frequent flyer program has the most airlines?,"SELECT ?program WHERE {
  ?program rdf:type dbo:FrequentFlyerProgram.
  {
    SELECT ?program (COUNT(?airline) AS ?count) WHERE {
      ?airline rdf:type dbo:Airline.
      ?airline dbo:frequentFlyerProgram ?program.
    } GROUP BY ?program
  } ORDER BY DESC(?count) LIMIT 1
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
44,Which European countries have a constitutional monarchy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT DISTINCT ?country WHERE {
  ?country dct:subject dbc:Countries_in_Europe .
  ?country dbo:governmentType ?government .
  FILTER (regex(str(?government), ""Constitutional monarchy"", ""i""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
42,Which countries have places with more than two caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country WHERE {
  ?cave rdf:type dbo:Cave .
  ?cave dbo:location ?country .
  ?country rdf:type dbo:Country .
  {
    SELECT ?country WHERE {
      ?cave rdf:type dbo:Cave .
      ?cave dbo:location ?country .
    } GROUP BY ?country HAVING (COUNT(?cave) > 2)
  }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
4,"Which airports are located in California, USA?","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?airport WHERE {
  ?airport rdf:type dbo:Airport .
  ?airport dbo:location dbr:California .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
37,What are the nicknames of San Francisco?,"SELECT ?nicknames WHERE {
  dbr:San_Francisco dbo:nickname ?nicknames .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
32,What is Angela Merkelâ€™s birth name?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
31,Who is the mayor of Berlin?,"SELECT ?mayor WHERE {
  <http://dbpedia.org/resource/Berlin> <http://dbpedia.org/property/mayor> ?mayor .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
29,Which countries in the European Union adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country WHERE {
  ?country dbo:currency dbr:Euro .
  ?country dbo:isPartOf dbr:European_Union .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
23,Which software has been published by Mean Hamster Software?,"SELECT ?software WHERE {
  ?software dbo:publisher dbr:Mean_Hamster_Software .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
68,Which country was Bill Gates born in?,"SELECT ?country WHERE {
  dbr:Bill_Gates dbo:birthPlace ?place .
  ?place dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
22,How many grand-children did Jacques Cousteau have?,"SELECT COUNT(?grandchild) WHERE {
  ?person dbo:birthName ""Jacques-Yves Cousteau""@en.
  ?child dbo:parent ?person.
  ?grandchild dbo:parent ?child.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
214,Give me all professional skateboarders from Sweden.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Skateboarder ;
          dbo:birthPlace dbr:Sweden .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
210,Which monarchs of the United Kingdom were married to a German?,"SELECT ?monarch WHERE {
  ?monarch dbo:spouse ?spouse .
  ?monarch dct:subject dbc:Monarchs_of_the_United_Kingdom .
  ?spouse dbo:birthPlace dbr:Germany .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
199,Give me all Argentine films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film dbo:country dbr:Argentina .
  ?film rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
203,How did Michael Jackson die?,"SELECT ?causeOfDeath WHERE {
  dbr:Michael_Jackson dbo:deathCause ?causeOfDeath .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
197,Which U.S. state has been admitted latest?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:admissionDate ?date.
} ORDER BY DESC(?date) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
196,Which classes does the Millepede belong to?,"SELECT ?class WHERE {
  dbr:Millipede dct:subject ?class .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
188,Give me the homepage of Forbes.,"SELECT ?homepage WHERE {
  dbr:Forbes foaf:homepage ?homepage .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
187,Who is the husband of Amanda Palmer?,"SELECT ?husband WHERE {
  dbr:Amanda_Palmer dbo:spouse ?husband .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
176,Who painted The Storm on the Sea of Galilee?,"SELECT ?artist WHERE {
  dbr:The_Storm_on_the_Sea_of_Galilee dbo:author ?artist .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
62,What is the highest place of Karakoram?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?place ?elevation
WHERE {
  ?place dbo:mountainRange dbr:Karakoram.
  ?place dbo:elevation ?elevation.
}
ORDER BY DESC(?elevation)
LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
173,When did Finland join the EU?,"SELECT ?date WHERE {
  dbr:Finland dbo:EUAccession ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
168,Which actors play in Big Bang Theory?,"SELECT ?actor WHERE {
  dbr:The_Big_Bang_Theory dbo:starring ?actor
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
166,Which computer scientist won an oscar?,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Computer_scientist .
  ?person dbo:award dbr:Academy_Awards .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
160,Who wrote Harry Potter?,"SELECT ?author WHERE {
  dbr:Harry_Potter_(film_series) dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
158,Give me all writers that won the Nobel Prize in literature.,"SELECT ?writer WHERE {
  ?writer dbo:occupation dbr:Writer .
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
157,Give me English actors starring in Lovesick.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?film rdf:type dbo:Film .
  ?film rdfs:label ""Lovesick""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:birthPlace ?place .
  ?place dbo:country dbr:England .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
155,What is the nick name of Baghdad?,"PREFIX dbp: <http://dbpedia.org/property/>
SELECT ?nickName WHERE {
  <http://dbpedia.org/resource/Baghdad> dbp:nickname ?nickName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
150,In which city was the president of Montenegro born?,"SELECT ?city WHERE {
  ?person dbp:office ""President of Montenegro"" .
  ?person dbp:birthPlace ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
149,Which U.S. state has the highest population density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:populationDensity ?populationDensity.
} ORDER BY DESC(?populationDensity) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
25,What is the longest river in China?,"SELECT ?river WHERE {
  ?river dbo:country dbr:China .
  ?river rdf:type dbo:River .
} ORDER BY DESC(?length) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
143,What is the area code of Berlin?,"SELECT ?areacode WHERE { 
  dbr:Berlin dbo:areaCode ?areacode . 
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
140,How many scientists graduated from an Ivy League university?,"SELECT COUNT(?scientist) WHERE {
  ?scientist dbo:almaMater ?university .
  ?scientist rdf:type dbo:Scientist .
  ?university dct:subject dbc:Ivy_League .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
139,Which professional surfers were born in Australia?,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Australia .
  ?person dbo:occupation dbr:Surfing .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
137,Give me all Dutch parties.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?party WHERE {
  ?party dbo:country dbr:Netherlands .
  ?party a dbo:PoliticalParty .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
136,How many moons does Mars have?,"SELECT ?moons WHERE {
  dbr:Mars dbo:numberOfMoons ?moons .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
134,What is Batman's real name?,"SELECT ?realName WHERE {
  dbr:Batman dbo:alias ?realName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
132,What is Elon Musk famous for?,"SELECT ?property ?value WHERE {
  dbr:Elon_Musk ?property ?value
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
128,Who is the author of WikiLeaks?,"SELECT ?author WHERE {
  dbr:WikiLeaks dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
126,Sean Parnell was the governor of which U.S. state?,"SELECT ?state WHERE {
  dbr:Sean_Parnell dct:office ?office .
  ?office dbo:positionHeld dbr:Governor_of_?state .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
125,How many years was the Ford Model T manufactured?,"SELECT (MAX(?endYear) - MIN(?startYear)) as ?manufacturingYears
WHERE {
  dbr:Ford_Model_T dbo:productionStartYear ?startYear .
  dbr:Ford_Model_T dbo:productionEndYear ?endYear .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
124,When was Carlo Giuliani shot?,"SELECT ?date WHERE {
  dbr:Carlo_Giuliani dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
123,Give me all animals that are extinct.,"SELECT ?animal WHERE {
  ?animal dbo:status <http://dbpedia.org/resource/Extinct>.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
122,Who was the wife of President Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
111,How many awards has Bertrand Russell?,"SELECT COUNT(?award) WHERE {
  dbr:Bertrand_Russell dbo:award ?award .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
117,Is Pamela Anderson a vegan?,"SELECT ?answer WHERE {
  dbr:Pamela_Anderson dbo:diet ?answer .
  FILTER (str(?answer) = ""Veganism"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
59,Which space probes were sent into orbit around the sun?,"SELECT ?probe WHERE {
  ?probe dbo:type dbr:Space_probe .
  ?probe dbo:orbit dbp:Sun .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
113,Which German cities have more than 250000 inhabitants?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?city WHERE {
  ?city dbo:country dbr:Germany .
  ?city dbo:populationTotal ?population .
  FILTER(?population > 250000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
104,Who is the daughter of Robert Kennedy married to?,"SELECT ?person WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse dbo:parent dbr:Robert_F._Kennedy .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
10,How many students does the Free University of Amsterdam have?,"SELECT ?students WHERE {
  dbr:VU_University_Amsterdam dbo:numberOfStudents ?students .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
1,What is the revenue of IBM?,"SELECT ?revenue WHERE {
  dbr:IBM dbo:revenue ?revenue .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
178,How many James Bond movies do exist?,"SELECT COUNT(?movie) WHERE {
  ?movie dbo:series dbr:James_Bond_in_film.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
129,Who does the voice of Bart Simpson?,"SELECT ?person WHERE {
  dbr:The_Simpsons dbo:character dbr:Bart_Simpson .
  dbr:Bart_Simpson dbo:voice ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
183,Who was Tom Hanks married to?,"SELECT ?person WHERE {
  dbr:Tom_Hanks dbo:spouse ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
181,Through which countries does the Yenisei river flow?,"SELECT ?country WHERE {
  dbr:Yenisei_River dbo:country ?country .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
7,Give me all cars that are produced in Germany.,"SELECT ?car WHERE {
  ?car dbo:manufacturer ?manufacturer .
  ?manufacturer dbo:location ?location .
  ?location dbo:country dbr:Germany .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
135,When did Michael Jackson die?,"SELECT ?date WHERE {
  dbr:Michael_Jackson dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
50,What is the highest volcano in Africa?,"SELECT ?volcano WHERE {
  ?volcano dbo:location dbr:Africa .
  ?volcano rdf:type dbo:Volcano .
  ?volcano dbo:elevation ?elevation .
} ORDER BY DESC(?elevation) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
39,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount) WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
} ORDER BY DESC(?bookCount) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
83,Give me all gangsters from the prohibition era.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Gangster .
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate >= ""1920-01-01""^^xsd:date && ?birthDate <= ""1933-12-31""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
71,Give me all spacecrafts that flew to Mars.,"SELECT ?spacecraft WHERE {
  ?spacecraft dbo:destination dbr:Mars .
  ?spacecraft rdf:type dbo:Spacecraft .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
213,Show me all Czech movies.,"SELECT ?movie WHERE {
  ?movie dbo:country dbr:Czech_Republic .
  ?movie rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
209,Give me all taikonauts.,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Taikonaut.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
105,Which countries have more than ten volcanoes?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country
WHERE {
  ?volcano dbo:country ?country .
}
GROUP BY ?country
HAVING (COUNT(?volcano) > 10)","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
52,Give me all movies with Tom Cruise.,"SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdf:type dbo:Film.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
102,When did Dracula's creator die?,"SELECT ?date WHERE {
  dbr:Bram_Stoker dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
21,Who created English Wikipedia?,"SELECT ?creator WHERE {
  dbr:Wikipedia dbo:founder ?creator .
  FILTER (langMatches(lang(?creator), ""EN""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
34,Give me all female German chancellors.,"SELECT ?person WHERE {
  ?person dbo:office dbr:Chancellor_of_Germany .
  ?person dbo:gender dbr:Female .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
145,Who owns Aldi?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner
WHERE {
  dbr:Aldi dbp:owner ?owner .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
154,Which books were written by Danielle Steel?,"SELECT ?book WHERE {
  ?book dbo:author dbr:Danielle_Steel .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
198,Who was influenced by Socrates?,"SELECT ?person WHERE {
  ?person dbo:influencedBy dbr:Socrates .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
162,How deep is Lake Chiemsee?,"SELECT ?depth WHERE {
  dbr:Lake_Chiemsee dbo:depth ?depth .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
212,Which companies work in the aerospace industry as well as in medicine?,"SELECT DISTINCT ?company WHERE {
  ?company dbo:industry dbr:Aerospace.
  ?company dbo:industry dbr:Medicine.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
96,Which professional surfers were born on the Philippines?,"SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Philippines .
  ?person dbo:occupation dbr:Surfing .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
40,Who were the parents of Queen Victoria?,"SELECT ?parent WHERE {
  dbr:Queen_Victoria dbo:parent ?parent .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
79,Are there any castles in the United States?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?castle WHERE {
  ?castle dbo:location dbr:United_States .
  ?castle rdf:type dbo:Castle .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
141,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
80,Give me a list of all critically endangered birds.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bird WHERE {
  ?bird dbo:conservationStatus dbr:Critically_Endangered_species.
  ?bird rdf:type dbo:Bird.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
159,Which countries are connected by the Rhine?,"SELECT ?country WHERE {
  ?river rdfs:label ""Rhine""@en.
  ?river dbp:country ?countryResource.
  ?countryResource rdfs:label ?country.
  FILTER (lang(?country) = ""en"")
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
107,Who was the father of Queen Elizabeth II?,"SELECT ?father WHERE {
  dbr:Elizabeth_II dbp:father ?father .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
163,Give me all chemical elements.,"SELECT ?chemicalElement WHERE {
  ?chemicalElement dbo:instanceOf dbr:Chemical_element .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
211,Give me all American presidents of the last 20 years.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?president WHERE {
  ?president dbo:office <http://dbpedia.org/resource/President_of_the_United_States>.
  ?president dbp:termStart ?termStart.
  FILTER (?termStart >= ""1996-01-01""^^xsd:date)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,"SELECT ?date WHERE {
  dbr:Worst_Case_Scenario_(film) dbo:releaseDate ?date .
  FILTER (langMatches(lang(?date), ""NL""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
144,Whom did Lance Bass marry?,"SELECT ?person WHERE {
  dbpedia:Lance_Bass dbpedia-owl:spouse ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:TUI_Travel .
  ?subsidiary dbp:destinations ?destinations .
  FILTER (CONTAINS(?destinations, ""Glasgow"") && CONTAINS(?destinations, ""Dublin""))
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
131,What languages are spoken in Pakistan?,"SELECT ?language WHERE {
  dbr:Pakistan dbo:officialLanguage ?language
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
120,Who is the daughter of Bill Clinton married to?,"SELECT ?person WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse dbo:parent dbr:Bill_Clinton .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
164,Who was on the Apollo 11 mission?,"SELECT ?person WHERE {
  ?mission dbo:crew ?person .
  ?mission rdfs:label ""Apollo 11""@en .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
88,What is the wavelength of Indigo?,"SELECT ?wavelength WHERE {
  dbpedia:Indigo dbo:wavelength ?wavelength .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
151,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?b_side WHERE {
  ?song dbo:musicalBand dbr:Ramones .
  ?song dbo:B-side ?b_side .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
63,Who was called Scarface?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER(LANG(?label) = ""en"") .
  FILTER(CONTAINS(LCASE(?label), ""scarface"")) .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
27,Which rivers flow into the North Sea?,"SELECT ?river WHERE {
  ?river dbo:mouth dbr:North_Sea .
  ?river rdf:type dbo:River .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
156,Where is Fort Knox located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?location WHERE { res:Fort_Knox dbo:location ?location . }","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
207,Which daughters of British earls died at the same place they were born at?,"SELECT ?person WHERE {
  ?person dbo:parent ?parent .
  ?parent dbo:title ?title .
  ?title dbo:isPartOf dbr:Earl_in_the_peerages_of_Britain_and_Ireland .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:deathPlace ?birthPlace .
  ?person dbo:gender dbr:Female .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
24,How many emperors did China have?,"SELECT (count(?emperor) as ?count) WHERE {
  ?emperor dbo:monarch ?monarch.
  ?monarch dbo:country dbr:China.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
133,What are the names of the Teenage Mutant Ninja Turtles?,"SELECT ?character WHERE {
  ?character dbo:series dbr:Teenage_Mutant_Ninja_Turtles.
  ?character rdf:type dbo:FictionalCharacter.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
103,Where does Piccadilly start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?start WHERE {
  res:Piccadilly dbo:routeStart ?start .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
165,What is the name of the university where Obama's wife studied?,"SELECT ?university WHERE {
  ?person dbo:spouse dbr:Barack_Obama .
  ?person dbo:almaMater ?university .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
108,When did Paraguay proclaim its independence?,"SELECT ?date WHERE {
  dbr:Paraguay dbo:formationYear ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
15,How short is the shortest active NBA player?,"SELECT ?height WHERE {
  ?player dbo:height ?height .
  ?player dbo:team ?team .
  ?team rdf:type dbo:BasketballTeam .
  ?player dbo:careerStart ?start .
  FILTER (?start <= 2016)
} ORDER BY ?height LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
45,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
82,When was Jack Wolfskin founded?,"SELECT ?date WHERE {
  dbr:Jack_Wolfskin dbo:foundingYear ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
9,In which city is the headquarter of Air China?,"SELECT ?city WHERE {
  dbr:Air_China dbo:locationCity ?city .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
201,What is the founding year of the brewery that produces Pilsner Urquell?,"SELECT ?foundingYear WHERE {
  ?brewery dbo:product dbr:Pilsner_Urquell .
  ?brewery dbo:foundingYear ?foundingYear .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
171,When did the Boston Tea Party take place?,"SELECT ?date WHERE {
  dbr:Boston_Tea_Party dbo:date ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
182,Which animals are critically endangered?,"SELECT ?animal WHERE {
  ?animal dct:subject dbc:Critically_endangered_animals.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
13,Which politicians were married to a German?,"SELECT ?politician WHERE {
  ?politician dbo:spouse ?spouse .
  ?politician rdf:type dbo:Politician .
  ?spouse dbo:nationality dbr:Germany .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
114,How big is the earth's diameter?,"SELECT ?diameter WHERE {
  dbr:Earth dbo:diameter ?diameter .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
92,Is the wife of President Obama called Michelle?,"SELECT ?answer WHERE {
  dbo:Barack_Obama dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Michelle Obama"")
  BIND(""Yes"" AS ?answer)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
194,Which U.S. state has the abbreviation MN?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  ?state dbo:country dbr:United_States ;
         dbp:postalAbbreviation ""MN"" .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
175,When did Muhammad die?,"SELECT ?date WHERE {
  dbr:Muhammad dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
26,What is the atmosphere of the Moon composed of?,"SELECT ?atmosphereComposition WHERE {
  dbr:Moon dbo:atmosphereComposition ?atmosphereComposition .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
60,Who is the governor of Texas?,"SELECT ?person WHERE {
  ?person dbo:office dbr:Governor_of_Texas .
  ?person dbo:termEnd ?termEnd .
  FILTER (?termEnd > ""2016-10-01""^^xsd:date)
} LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
110,Which movies did Kurosawa direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?movie dbo:director res:Akira_Kurosawa .
  ?movie rdf:type dbo:Film .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
206,What was the name of the famous battle in 1836 in San Antonio?,"SELECT ?battle WHERE {
  ?battle dbo:location dbr:San_Antonio.
  ?battle dbo:date ?date.
  FILTER (year(?date) = 1836)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
97,Give me the official websites of actors of the television show Charmed.,"SELECT ?actor ?website
WHERE {
  ?show rdfs:label ""Charmed""@en.
  ?show dbo:starring ?actor.
  ?actor dbo:website ?website.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
20,How many calories does a baguette have?,"SELECT ?calories WHERE {
  dbr:Baguette dbo:foodEnergy ?calories .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
169,Give me all libraries established before 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library WHERE {
  ?library dbo:establishmentYear ?year .
  ?library rdf:type dbo:Library .
  FILTER (?year < ""1400""^^xsd:gYear)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
38,Give me all Frisian islands that belong to the Netherlands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?island WHERE {
  ?island dbo:country dbr:Netherlands .
  ?island dct:subject dbc:Frisian_Islands .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
192,Which museum exhibits The Scream by Munch?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?museum WHERE {
  dbr:The_Scream dbo:museum ?museum .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
78,When was the De Beers company founded?,"SELECT ?date WHERE {
  dbr:De_Beers dbo:foundingDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
19,Who became president after JFK died?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?date
WHERE {
  res:John_F._Kennedy dbo:successor ?person .
  ?person dbo:termPeriod ?term .
  ?term dbo:startDate ?date .
} ORDER BY ?date LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
190,Who are the parents of the wife of Juan Carlos I?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentName WHERE {
  res:Juan_Carlos_I_of_Spain dbo:spouse ?wife .
  ?wife dbo:parent ?parent .
  ?parent foaf:name ?parentName .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
174,Who is the novelist of the work a song of ice and fire?,"SELECT ?author WHERE {
  dbr:A_Song_of_Ice_and_Fire dbo:author ?author .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
189,In which studio did the Beatles record their first album?,"SELECT ?studio WHERE {
  dbr:The_Beatles dbo:recordLabel ?studio .
  ?studio dbo:foundingYear ?year .
  FILTER(?year <= 1963)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
152,Which beer brewing companies are located in North-Rhine Westphalia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company WHERE {
  ?company dbo:industry dbr:Brewery ;
           dbo:location dbr:North_Rhine-Westphalia .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
94,When did princess Diana die?,"SELECT ?date WHERE {
  dbr:Princess_Diana dbo:deathDate ?date .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
8,Who founded Intel?,"SELECT ?founder WHERE {
  dbr:Intel dbo:foundingPerson ?founder .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
95,Who is the youngest player in the Premier League?,"SELECT ?player WHERE {
  ?player dbo:league dbr:Premier_League .
  ?player dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
119,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
115,How many rivers and lakes are in South Carolina?,"SELECT (COUNT(?river) AS ?rivers) (COUNT(?lake) AS ?lakes)
WHERE {
  {
    SELECT DISTINCT ?river WHERE {
      ?river dbo:type dbr:River .
      ?river dbo:location dbr:South_Carolina .
    }
  }
  UNION
  {
    SELECT DISTINCT ?lake WHERE {
      ?lake dbo:type dbr:Lake .
      ?lake dbo:location dbr:South_Carolina .
    }
  }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
116,Who was called Rodzilla?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER(LANG(?label) = ""en"") .
  FILTER(CONTAINS(LCASE(?label), ""rodzilla"")) .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
138,Give me the capitals of all countries in Africa.,"SELECT ?country ?capital WHERE {
  ?country dct:subject dbc:Countries_in_Africa.
  ?country dbo:capital ?capital.
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
177,Which bridges are of the same type as the Manhattan Bridge?,"SELECT ?bridge WHERE {
  dbr:Manhattan_Bridge dbo:bridgeType ?type .
  ?bridge dbo:bridgeType ?type .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
101,How many companies were founded by the founder of Facebook?,"SELECT COUNT(?company) WHERE {
  ?person dbo:knownFor dbr:Facebook .
  ?person dbo:occupation dbr:Entrepreneur .
  ?company dbo:foundingPerson ?person .
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,"SELECT ?trail WHERE {
  ?trail dbo:location dbr:Grand_Canyon .
  ?trail rdf:type dbo:HikingTrail .
  ?trail dbo:hasRiskFactor ?risk .
  FILTER NOT EXISTS { ?trail dbo:hasRiskFactor dbr:Flash_flood }
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
87,Which book has the most pages?,"SELECT ?book WHERE {
  ?book rdf:type dbo:Book .
  ?book dbo:numberOfPages ?pages .
} ORDER BY DESC(?pages) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
148,What is the largest state in the United States?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:areaTotal ?area.
} ORDER BY DESC(?area) LIMIT 1","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
43,Give me the websites of companies with more than 500000 employees.,"SELECT ?company ?website WHERE {
  ?company dbo:numberOfEmployees ?employees .
  ?company foaf:homepage ?website .
  FILTER(?employees > 500000)
}","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
179,What were the names of the three ships by Columbus?,"SELECT ?ship WHERE {
  ?ship dbo:operator dbr:Christopher_Columbus.
} LIMIT 3","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information."
99,What is the time zone of Salt Lake City?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?timezone WHERE {
  res:Salt_Lake_City dbo:timeZone ?timezone .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
98,Who killed Caesar?,"SELECT ?person WHERE {
  dbr:Julius_Caesar dbo:deathCause ?deathCause.
  ?person dbo:causeOfDeath ?deathCause.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
86,What is the highest mountain in Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:country dbr:Germany ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
84,Which American presidents were in office during the Vietnam War?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?president ?start ?end WHERE {
  ?president dbo:office dbr:President_of_the_United_States ;
             dbo:birthPlace ?birthPlace ;
             dbp:termStart ?start ;
             dbp:termEnd ?end .
  FILTER (regex(str(?birthPlace), ""United_States"", ""i""))
  FILTER (?start <= ""1975-04-30""^^xsd:date && ?end >= ""1955-11-01""^^xsd:date)
} ORDER BY ?start","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
81,Butch Otter is the governor of which U.S. state?,"SELECT ?state WHERE {
  ?person dbo:birthName ""Butch Otter"" .
  ?person dbo:office ?office .
  ?office dbo:leader ?person .
  ?office dbo:location ?state .
  ?state rdf:type dbo:State .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,"SELECT ?goldMedals WHERE {
  dbr:Michael_Phelps dbo:goldMedalist ?goldMedals .
  ?goldMedals dbo:olympicGames dbr:2008_Summer_Olympics .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
66,Which artists were born on the same date as Rachel Stevens?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?artist WHERE {
  ?artist dbo:birthDate ?birthdate .
  ?rachel dbo:birthDate ?birthdate .
  FILTER (?artist != ?rachel)
  FILTER (STR(?rachel) = ""http://dbpedia.org/resource/Rachel_Stevens"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
64,What is the profession of Frank Herbert?,"SELECT ?profession WHERE {
  dbr:Frank_Herbert dbo:occupation ?profession .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
6,Are Taiko some kind of Japanese musical instrument?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label ?comment
WHERE {
  ?taiko dbo:wikiPageID ?id .
  ?taiko rdfs:label ?label .
  ?taiko rdfs:comment ?comment .
  FILTER (LANG(?label) = ""en"" && LANG(?comment) = ""en"" && REGEX(?label, ""Taiko"", ""i""))
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
56,How many seats does the home stadium of FC Porto have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?seats
WHERE {
  dbr:FC_Porto dbo:ground ?stadium .
  ?stadium dbo:seatingCapacity ?seats .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
49,Which frequent flyer program has the most airlines?,"SELECT ?program (COUNT(?airline) AS ?airlineCount) WHERE {
  ?airline dbo:frequentFlyerProgram ?program .
} 
GROUP BY ?program
ORDER BY DESC(?airlineCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
44,Which European countries have a constitutional monarchy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT DISTINCT ?country WHERE {
  ?country dct:subject dbc:Constitutional_monarchies .
  ?country dbo:continent <http://dbpedia.org/resource/Europe> .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
42,Which countries have places with more than two caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country (COUNT(?place) AS ?caveCount) WHERE {
  ?place dbo:country ?country .
  ?place dbo:type dbr:Cave .
} GROUP BY ?country HAVING (COUNT(?place) > 2)","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
4,"Which airports are located in California, USA?","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport WHERE {
  ?airport dbo:location dbr:California .
  ?airport rdf:type dbo:Airport .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
37,What are the nicknames of San Francisco?,"SELECT ?nicknames WHERE {
  dbr:San_Francisco dbo:nickname ?nicknames .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
32,What is Angela Merkelâ€™s birth name?,"SELECT ?birthName WHERE {
  dbr:Angela_Merkel dbo:birthName ?birthName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
31,Who is the mayor of Berlin?,"SELECT ?mayor WHERE {
  dbr:Berlin dbo:leader ?mayor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
29,Which countries in the European Union adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country ?countryLabel WHERE {
  ?country dbo:currency dbr:Euro ;
           dbo:region dbr:European_Union .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
23,Which software has been published by Mean Hamster Software?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software WHERE {
  ?software dbo:publisher dbr:Mean_Hamster_Software .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
68,Which country was Bill Gates born in?,"SELECT ?country 
WHERE { 
  dbr:Bill_Gates dbo:birthPlace ?place .
  ?place dbo:country ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
22,How many grand-children did Jacques Cousteau have?,"SELECT COUNT(?grandchild) WHERE {
  ?person dbo:birthName ""Jacques-Yves Cousteau""@en.
  ?person dbo:child ?child.
  ?child dbo:child ?grandchild.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
214,Give me all professional skateboarders from Sweden.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?skateboarder WHERE {
  ?skateboarder dbo:profession dbr:Skateboarding ;
                dbo:birthPlace dbr:Sweden .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
210,Which monarchs of the United Kingdom were married to a German?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?monarch ?spouse
WHERE {
  ?monarch dbo:spouse ?spouse ;
           dbo:country dbr:United_Kingdom .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
199,Give me all Argentine films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film dbo:country dbr:Argentina .
  ?film rdf:type dbo:Film .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
203,How did Michael Jackson die?,"SELECT ?causeOfDeath WHERE {
  dbr:Michael_Jackson dbo:deathCause ?causeOfDeath.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
197,Which U.S. state has been admitted latest?,"SELECT ?state ?admissionDate WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:country dbr:United_States.
  ?state dbo:foundingDate ?admissionDate.
} 
ORDER BY DESC(?admissionDate) 
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
196,Which classes does the Millepede belong to?,"SELECT ?class WHERE {
  dbr:Millipede dct:subject ?class .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
188,Give me the homepage of Forbes.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?homepage
WHERE {
  res:Forbes dbo:homepage ?homepage .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
187,Who is the husband of Amanda Palmer?,"SELECT ?husband WHERE {
  dbr:Amanda_Palmer dbo:spouse ?husband .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
176,Who painted The Storm on the Sea of Galilee?,"SELECT ?artist WHERE {
  dbr:The_Storm_on_the_Sea_of_Galilee dbo:author ?artist .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
62,What is the highest place of Karakoram?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?place ?elevation
WHERE {
  ?place dbo:mountainRange dbr:Karakoram.
  ?place dbo:elevation ?elevation.
}
ORDER BY DESC(?elevation)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
173,When did Finland join the EU?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  dbr:Finland dbp:euAccession ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
168,Which actors play in Big Bang Theory?,"SELECT ?actor WHERE {
  ?show rdfs:label ""The Big Bang Theory""@en.
  ?show dbo:starring ?actor.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
166,Which computer scientist won an oscar?,"SELECT ?person WHERE {
  ?person dbo:occupation dbr:Computer_scientist .
  ?person dbo:award dbr:Academy_Award .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
160,Who wrote Harry Potter?,"SELECT ?author WHERE {
  dbr:Harry_Potter dbo:author ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
158,Give me all writers that won the Nobel Prize in literature.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writer WHERE {
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
157,Give me English actors starring in Lovesick.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?actorLabel WHERE {
  dbr:Lovesick dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:England .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
155,What is the nick name of Baghdad?,"SELECT ?nickName WHERE {
  dbr:Baghdad dbo:nickname ?nickName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
150,In which city was the president of Montenegro born?,"SELECT ?city WHERE {
  ?person dbp:office ""President of Montenegro""^^xsd:string.
  ?person dbp:birthPlace ?city.
} LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
149,Which U.S. state has the highest population density?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:populationDensity ?populationDensity.
} ORDER BY DESC(?populationDensity) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
25,What is the longest river in China?,"SELECT ?river ?length
WHERE {
  ?river dbo:country dbr:China ;
         dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
143,What is the area code of Berlin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?areaCode
WHERE {
  res:Berlin dbo:areaCode ?areaCode .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
140,How many scientists graduated from an Ivy League university?,"SELECT COUNT(DISTINCT ?scientist) WHERE {
  ?scientist dbo:almaMater ?university .
  ?scientist rdf:type dbo:Scientist .
  ?university dct:subject dbc:Ivy_League_universities .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
139,Which professional surfers were born in Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Australia .
  ?surfer dbo:occupation dbr:Surfing .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
137,Give me all Dutch parties.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?party WHERE {
  ?party rdf:type dbo:PoliticalParty .
  ?party dbo:country dbr:Netherlands .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
136,How many moons does Mars have?,"SELECT ?numberOfMoons WHERE {
  dbr:Mars dbo:numberOfMoons ?numberOfMoons .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
134,What is Batman's real name?,"SELECT ?realName WHERE {
  dbr:Batman dbo:alias ?realName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
132,What is Elon Musk famous for?,"SELECT ?description WHERE {
  dbr:Elon_Musk dbo:abstract ?description .
  FILTER (lang(?description) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
128,Who is the author of WikiLeaks?,"SELECT ?author WHERE {
  dbr:WikiLeaks dbo:founder ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
126,Sean Parnell was the governor of which U.S. state?,"SELECT ?state WHERE {
  dbr:Sean_Parnell dct:subject ?state .
  ?state rdf:type dbo:U.S._state .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
125,How many years was the Ford Model T manufactured?,"SELECT (MAX(?endYear) - MIN(?startYear)) as ?manufacturingYears
WHERE {
  ?car dbo:manufacturer dbr:Ford_Motor_Company .
  ?car rdfs:label ?carLabel .
  FILTER (lang(?carLabel) = ""en"")
  FILTER (regex(?carLabel, ""Ford Model T"", ""i""))
  ?car dbo:productionStartYear ?startYearRaw .
  ?car dbo:productionEndYear ?endYearRaw .
  BIND(year(?startYearRaw) AS ?startYear)
  BIND(year(?endYearRaw) AS ?endYear)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
124,When was Carlo Giuliani shot?,"SELECT ?date WHERE {
  dbr:Carlo_Giuliani dbo:deathDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
123,Give me all animals that are extinct.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?animal WHERE {
  ?animal dbo:extinctionYear ?year .
  ?animal rdf:type dbo:Species .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
122,Who was the wife of President Lincoln?,"SELECT ?wife WHERE {
  dbr:Abraham_Lincoln dbo:spouse ?wife .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
111,How many awards has Bertrand Russell?,"SELECT COUNT(?award) WHERE {
  dbr:Bertrand_Russell dbo:award ?award .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
117,Is Pamela Anderson a vegan?,"SELECT ?isVegan WHERE {
  dbr:Pamela_Anderson dbo:diet ?isVegan .
  FILTER (str(?isVegan) = ""Veganism"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
59,Which space probes were sent into orbit around the sun?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?probe WHERE {
  ?probe dbo:orbit dbr:Sun .
  ?probe rdf:type dbo:SpaceProbe .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
113,Which German cities have more than 250000 inhabitants?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?population
WHERE {
  ?city dbo:country dbr:Germany ;
        dbo:populationTotal ?population .
  FILTER (?population > 250000)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
104,Who is the daughter of Robert Kennedy married to?,"SELECT ?spouse
WHERE {
  ?person dbo:parent ?parent .
  ?parent foaf:name ""Robert F. Kennedy""@en .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
10,How many students does the Free University of Amsterdam have?,"SELECT ?numberOfStudents WHERE {
  dbr:VU_University_Amsterdam dbo:numberOfStudents ?numberOfStudents .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
1,What is the revenue of IBM?,"SELECT ?revenue WHERE {
  dbr:IBM dbo:revenue ?revenue .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
178,How many James Bond movies do exist?,"SELECT (COUNT(?movie) AS ?count) WHERE {
  ?movie dbo:series dbr:James_Bond_in_film.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
129,Who does the voice of Bart Simpson?,"SELECT ?name WHERE {
  dbr:Bart_Simpson dbo:voice ?voiceActor.
  ?voiceActor foaf:name ?name.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
183,Who was Tom Hanks married to?,"SELECT ?spouse
WHERE {
  dbr:Tom_Hanks dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
181,Through which countries does the Yenisei river flow?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Yenisei_River dbo:country ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
7,Give me all cars that are produced in Germany.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?car WHERE {
  ?car dbo:manufacturer ?manufacturer .
  ?manufacturer dbo:locationCountry dbr:Germany .
  ?car rdf:type dbo:Automobile .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
135,When did Michael Jackson die?,"SELECT ?deathDate WHERE {
  dbr:Michael_Jackson dbo:deathDate ?deathDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
50,What is the highest volcano in Africa?,"SELECT ?volcano ?elevation
WHERE {
  ?volcano dbo:location dbr:Africa ;
           dbo:type dbr:Volcano ;
           dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
39,Which poet wrote the most books?,"SELECT ?poet (COUNT(?book) AS ?bookCount)
WHERE {
  ?book dbo:author ?poet .
  ?poet rdf:type dbo:Poet .
}
GROUP BY ?poet
ORDER BY DESC(?bookCount)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
83,Give me all gangsters from the prohibition era.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?gangster WHERE {
  ?gangster dct:subject dbc:Prohibition-era_gangsters .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
71,Give me all spacecrafts that flew to Mars.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spacecraft WHERE {
  ?spacecraft dbo:destination dbr:Mars .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
213,Show me all Czech movies.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?movie WHERE {
  ?movie dbo:country dbr:Czech_Republic .
  ?movie rdf:type dbo:Film .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
209,Give me all taikonauts.,"SELECT ?taikonaut WHERE {
  ?taikonaut dbo:occupation dbr:Taikonaut.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
105,Which countries have more than ten volcanoes?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country (COUNT(?volcano) AS ?volcanoCount)
WHERE {
  ?volcano dbo:country ?country .
  ?volcano a dbo:Volcano .
}
GROUP BY ?country
HAVING (COUNT(?volcano) > 10)","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
52,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?movieLabel WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdfs:label ?movieLabel.
  FILTER (lang(?movieLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
102,When did Dracula's creator die?,"SELECT ?deathDate WHERE {
  ?person dbo:birthName ""Bram Stoker""@en.
  ?person dbo:deathDate ?deathDate.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
21,Who created English Wikipedia?,"SELECT ?creator WHERE {
  dbr:Wikipedia dbo:founder ?creator .
  FILTER (langMatches(lang(?creator), ""EN""))
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
34,Give me all female German chancellors.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?chancellor ?name WHERE {
  ?chancellor rdf:type dbo:Chancellor ;
              dbo:country dbr:Germany ;
              foaf:gender ""female""@en ;
              rdfs:label ?name .
  FILTER (lang(?name) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
145,Who owns Aldi?,"SELECT ?owner 
WHERE { 
  dbr:Aldi dbo:owner ?owner . 
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
154,Which books were written by Danielle Steel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  ?book dbo:author dbr:Danielle_Steel .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
198,Who was influenced by Socrates?,"SELECT ?person WHERE {
  ?person dbo:influencedBy dbr:Socrates .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
162,How deep is Lake Chiemsee?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?depth WHERE {
  res:Lake_Chiemsee dbo:depth ?depth .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
212,Which companies work in the aerospace industry as well as in medicine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?company
WHERE {
  ?company rdf:type dbo:Company .
  ?company dbo:industry dbr:Aerospace .
  ?company dbo:industry dbr:Medicine .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
96,Which professional surfers were born on the Philippines?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Philippines .
  ?surfer dbo:occupation dbr:Surfing .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
40,Who were the parents of Queen Victoria?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?parentName WHERE {
  res:Queen_Victoria dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (lang(?parentName) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
79,Are there any castles in the United States?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?castle WHERE {
  ?castle dbo:location dbr:United_States .
  ?castle rdf:type dbo:Castle .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
141,Which languages are spoken in Estonia?,"SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?language .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
80,Give me a list of all critically endangered birds.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bird WHERE {
  ?bird dbo:conservationStatus dbr:Critically_Endangered.
  ?bird rdf:type dbo:Bird.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
159,Which countries are connected by the Rhine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  dbr:Rhine dbo:country ?country .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
107,Who was the father of Queen Elizabeth II?,"SELECT ?father WHERE {
  dbr:Elizabeth_II dbp:father ?father .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
163,Give me all chemical elements.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?element ?elementLabel WHERE {
  ?element dbo:wikiPageDisambiguates ?dis .
  ?dis rdf:type dbo:ChemicalElement .
  ?element rdfs:label ?elementLabel .
  FILTER (lang(?elementLabel) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
211,Give me all American presidents of the last 20 years.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?president ?start ?end WHERE {
  ?president dbo:office <http://dbpedia.org/resource/President_of_the_United_States> .
  ?president dbp:termStart ?start .
  ?president dbp:termEnd ?end .
  FILTER (?start >= ""1996-01-01""^^xsd:date)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,"SELECT ?releaseDate WHERE {
  ?movie rdfs:label ""Worst Case Scenario""@en.
  ?movie dbo:releaseDate ?releaseDate.
  ?movie dbo:country dbr:Netherlands.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
144,Whom did Lance Bass marry?,"SELECT ?spouse WHERE {
  dbr:Lance_Bass dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?subsidiary WHERE {
  ?subsidiary dbo:parentCompany dbr:TUI_Travel .
  ?subsidiary dbo:destination dbr:Glasgow .
  ?subsidiary dbo:destination dbr:Dublin .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
131,What languages are spoken in Pakistan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language ?languageLabel WHERE {
  <http://dbpedia.org/resource/Pakistan> dbo:officialLanguage ?language .
  ?language rdfs:label ?languageLabel .
  FILTER (lang(?languageLabel) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
120,Who is the daughter of Bill Clinton married to?,"SELECT ?spouse
WHERE {
  ?person dbo:parent <http://dbpedia.org/resource/Bill_Clinton> .
  ?person dbo:spouse ?spouse .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
164,Who was on the Apollo 11 mission?,"SELECT ?astronaut WHERE {
  dbr:Apollo_11 dbo:crew ?astronaut .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
88,What is the wavelength of Indigo?,"SELECT ?wavelength WHERE {
  dbr:Indigo dbo:wavelength ?wavelength .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
151,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bSide WHERE {
  ?album dbo:artist dbr:Ramones ;
         dbo:bSide ?bSide .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
63,Who was called Scarface?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""scarface""@en)) .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
27,Which rivers flow into the North Sea?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?river WHERE {
  ?river dbo:mouth dbr:North_Sea .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
156,Where is Fort Knox located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  res:Fort_Knox dbo:location ?location .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
207,Which daughters of British earls died at the same place they were born at?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?daughter ?birthPlace WHERE {
  ?daughter dbo:parent ?parent .
  ?parent dbo:title ?title .
  ?title dbo:isPartOf dbr:Earl .
  ?daughter dbo:birthPlace ?birthPlace .
  ?daughter dbo:deathPlace ?birthPlace .
  ?daughter dbo:gender dbr:Female .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
24,How many emperors did China have?,"SELECT (COUNT(?emperor) AS ?count) WHERE {
  ?emperor dbo:occupation dbr:Emperor_of_China .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
133,What are the names of the Teenage Mutant Ninja Turtles?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?turtle ?name WHERE {
  ?turtle dbo:series dbr:Teenage_Mutant_Ninja_Turtles.
  ?turtle rdfs:label ?name.
  FILTER(lang(?name) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
103,Where does Piccadilly start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?start WHERE {
  res:Piccadilly dbo:routeStart ?start.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
165,What is the name of the university where Obama's wife studied?,"SELECT ?university WHERE {
  ?person dbo:spouse dbr:Barack_Obama .
  ?person dbo:almaMater ?university .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
108,When did Paraguay proclaim its independence?,"SELECT ?date WHERE {
  dbr:Paraguay dbo:independenceDate ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
15,How short is the shortest active NBA player?,"SELECT ?player ?height WHERE {
  ?player dbo:height ?height .
  ?player dbo:team ?team .
  ?team rdf:type dbo:BasketballTeam .
  ?player dbo:careerStart ?start .
  FILTER (?start <= 2016)
  ?player dbo:careerEnd ?end .
  FILTER (?end >= 2016)
} 
ORDER BY ?height 
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
45,Where did Abraham Lincoln die?,"SELECT ?place WHERE {
  dbr:Abraham_Lincoln dbo:deathPlace ?place .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
82,When was Jack Wolfskin founded?,"SELECT ?foundingYear WHERE {
  dbr:Jack_Wolfskin dbo:foundingYear ?foundingYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
9,In which city is the headquarter of Air China?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarterCity WHERE {
  dbr:Air_China dbo:locationCity ?headquarterCity .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
201,What is the founding year of the brewery that produces Pilsner Urquell?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingYear WHERE {
  dbr:Pilsner_Urquell dbo:manufacturer ?brewery .
  ?brewery dbo:foundingYear ?foundingYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
171,When did the Boston Tea Party take place?,"SELECT ?date WHERE {
  dbr:Boston_Tea_Party dbo:date ?date .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
182,Which animals are critically endangered?,"SELECT ?animal WHERE {
  ?animal rdf:type dbo:Species .
  ?animal dbo:conservationStatus dbr:Critically_Endangered_species .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
13,Which politicians were married to a German?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?politician WHERE {
  ?politician dbo:spouse ?spouse .
  ?politician rdf:type dbo:Politician .
  ?spouse dbo:birthPlace dbr:Germany .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
114,How big is the earth's diameter?,"SELECT ?diameter WHERE {
  dbr:Earth dbo:diameter ?diameter .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
92,Is the wife of President Obama called Michelle?,"SELECT ?name WHERE {
  dbr:Barack_Obama dbo:spouse ?spouse .
  ?spouse foaf:name ?name .
  FILTER (str(?name) = ""Michelle Obama"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
194,Which U.S. state has the abbreviation MN?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  ?state dbo:country <http://dbpedia.org/resource/United_States> ;
         dbo:wikiPageRedirects ?redirect .
  ?redirect rdfs:label ""MN""@en .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
175,When did Muhammad die?,"SELECT ?deathDate WHERE {
  dbr:Muhammad dbo:deathDate ?deathDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
26,What is the atmosphere of the Moon composed of?,"SELECT ?atmosphereComposition WHERE {
  dbr:Moon dbo:atmosphereComposition ?atmosphereComposition .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
60,Who is the governor of Texas?,"SELECT ?governor WHERE {
  dbr:Texas dbo:leader ?governor .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
110,Which movies did Kurosawa direct?,"SELECT ?movie WHERE {
  ?movie dbo:director dbr:Akira_Kurosawa.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
206,What was the name of the famous battle in 1836 in San Antonio?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battleName WHERE {
  ?battle dbo:location dbr:San_Antonio ;
          dbo:date ?date ;
          rdfs:label ?battleName .
  FILTER (lang(?battleName) = ""en"")
  FILTER (year(?date) = 1836)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
97,Give me the official websites of actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?website
WHERE {
  ?show dbo:starring ?actor .
  ?actor dbo:wikiPageExternalLink ?website .
  ?show rdfs:label ?showLabel .
  FILTER (LANG(?showLabel) = ""en"") .
  FILTER (CONTAINS(?showLabel, ""Charmed"")) .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
20,How many calories does a baguette have?,"SELECT ?calories
WHERE {
  dbr:Baguette dbo:foodEnergy ?calories.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
169,Give me all libraries established before 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library WHERE {
  ?library dbo:established ?date .
  ?library rdf:type dbo:Library .
  FILTER (?date < ""1400-01-01""^^xsd:date)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
38,Give me all Frisian islands that belong to the Netherlands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?island WHERE {
  ?island dbo:country dbr:Netherlands .
  ?island dbo:isPartOf dbr:West_Frisian_Islands .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
192,Which museum exhibits The Scream by Munch?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?museum ?museumLabel WHERE {
  dbr:The_Scream dbo:museum ?museum .
  ?museum rdfs:label ?museumLabel .
  FILTER (lang(?museumLabel) = ""en"")
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
78,When was the De Beers company founded?,"SELECT ?foundingYear WHERE {
  dbr:De_Beers dbo:foundingYear ?foundingYear .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
19,Who became president after JFK died?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor ?successorName WHERE {
  res:John_F._Kennedy dbo:successor ?successor .
  ?successor rdfs:label ?successorName .
  FILTER (lang(?successorName) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
190,Who are the parents of the wife of Juan Carlos I?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentName WHERE {
  res:Juan_Carlos_I_of_Spain dbo:spouse ?wife .
  ?wife dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (lang(?parentName) = 'en')
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
174,Who is the novelist of the work a song of ice and fire?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  dbr:A_Song_of_Ice_and_Fire dbo:author ?author .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
189,In which studio did the Beatles record their first album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?studio
WHERE {
  ?album dbo:artist dbr:The_Beatles ;
         dbo:recordLabel ?studio .
  {
    SELECT ?album
    WHERE {
      ?album dbo:artist dbr:The_Beatles .
    }
    ORDER BY ?album
    LIMIT 1
  }
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
152,Which beer brewing companies are located in North-Rhine Westphalia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?company WHERE {
  ?company dbo:industry dbr:Brewing ;
           dbo:location dbr:North_Rhine-Westphalia .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
94,When did princess Diana die?,"SELECT ?deathDate WHERE {
  dbr:Princess_Diana dbo:deathDate ?deathDate .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
8,Who founded Intel?,"SELECT ?founder 
WHERE { 
  dbr:Intel dbo:foundingPerson ?founder .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
95,Who is the youngest player in the Premier League?,"SELECT ?player ?birthDate WHERE {
  ?player dbo:league dbr:Premier_League .
  ?player dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
119,Which instruments does Cat Stevens play?,"SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
115,How many rivers and lakes are in South Carolina?,"# Query for rivers
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT (COUNT(?river) AS ?numberOfRivers) WHERE {
  ?river dbo:location dbr:South_Carolina ;
         a dbo:River .
}

# Query for lakes
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT (COUNT(?lake) AS ?numberOfLakes) WHERE {
  ?lake dbo:location dbr:South_Carolina ;
        a dbo:Lake .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
116,Who was called Rodzilla?,"SELECT ?person WHERE {
  ?person rdfs:label ?label .
  FILTER(LANG(?label) = ""en"") .
  FILTER(CONTAINS(LCASE(?label), ""rodzilla"")) .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
138,Give me the capitals of all countries in Africa.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?country ?capital
WHERE {
  ?country dct:subject dbc:Countries_in_Africa .
  ?country dbo:capital ?capital .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
177,Which bridges are of the same type as the Manhattan Bridge?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bridge WHERE {
  dbr:Manhattan_Bridge dbo:bridgeType ?type .
  ?bridge dbo:bridgeType ?type .
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
101,How many companies were founded by the founder of Facebook?,"SELECT COUNT(?company) WHERE {
  ?person foaf:name ""Mark Zuckerberg""@en.
  ?company dbo:foundingPerson ?person.
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,"SELECT ?trail WHERE {
  ?trail dbo:location dbr:Grand_Canyon .
  ?trail rdf:type dbo:HikingTrail .
  ?trail dbo:hasRiskFactor ?risk .
  FILTER NOT EXISTS { ?trail dbo:hasRiskFactor dbr:Flash_flood }
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
87,Which book has the most pages?,"SELECT ?book ?pages
WHERE {
  ?book rdf:type dbo:Book .
  ?book dbo:numberOfPages ?pages .
}
ORDER BY DESC(?pages)
LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
148,What is the largest state in the United States?,"SELECT ?state WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:areaTotal ?area.
} ORDER BY DESC(?area) LIMIT 1","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
43,Give me the websites of companies with more than 500000 employees.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?company ?website
WHERE {
  ?company dbo:numberOfEmployees ?employees .
  ?company foaf:homepage ?website .
  FILTER(?employees > 500000)
}","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
179,What were the names of the three ships by Columbus?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?ship_name WHERE {
  ?ship dbo:operator dbr:Christopher_Columbus.
  ?ship rdfs:label ?ship_name.
  FILTER (lang(?ship_name) = 'en')
} LIMIT 3","Craft SPARQL queries from October 2016 based on user questions in natural language, exclusively dedicated to extracting information from DBpedia. Your responses should consist solely of SPARQL queries."
99,What is the time zone of Salt Lake City?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?timezone WHERE {
  res:Salt_Lake_City dbo:timeZone ?timezone .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
98,Who killed Caesar?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?killer ?killerLabel WHERE {
  dbr:Julius_Caesar dbo:deathCause ?killer .
  ?killer rdfs:label ?killerLabel .
  FILTER (lang(?killerLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
86,What is the highest mountain in Germany?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?mountain ?elevation
WHERE {
  ?mountain dbo:country dbr:Germany ;
            dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
84,Which American presidents were in office during the Vietnam War?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?president ?start ?end WHERE {
  ?president dbo:office dbr:President_of_the_United_States ;
             dbo:termPeriod ?term .
  ?term dbo:startDate ?start ;
        dbo:endDate ?end .
  FILTER (?start <= ""1975-04-30""^^xsd:date && ?end >= ""1955-11-01""^^xsd:date)
} ORDER BY ?start","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
81,Butch Otter is the governor of which U.S. state?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
SELECT ?state WHERE {
  res:Butch_Otter dbo:governorOf ?state .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?goldMedals WHERE {
  res:Michael_Phelps dbo:goldMedalist ?event .
  ?event dbo:year ""2008""^^xsd:gYear .
  ?event dbo:goldMedalist res:Michael_Phelps .
  {
    SELECT (COUNT(?event) AS ?goldMedals) WHERE {
      res:Michael_Phelps dbo:goldMedalist ?event .
      ?event dbo:year ""2008""^^xsd:gYear .
      ?event dbo:goldMedalist res:Michael_Phelps .
    }
  }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
66,Which artists were born on the same date as Rachel Stevens?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist ?name WHERE {
  ?rachel foaf:name ""Rachel Stevens""@en .
  ?rachel dbo:birthDate ?birthdate .
  ?artist dbo:birthDate ?birthdate .
  ?artist foaf:name ?name .
  FILTER (?artist != ?rachel)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
64,What is the profession of Frank Herbert?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?profession WHERE {
  res:Frank_Herbert dbo:occupation ?professionResource.
  ?professionResource rdfs:label ?profession.
  FILTER (lang(?profession) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
6,Are Taiko some kind of Japanese musical instrument?,"Yes, Taiko is a type of Japanese drum. Here is a SPARQL query that can be used to confirm this:

```
SELECT ?description
WHERE {
  dbr:Taiko dbo:abstract ?description .
  FILTER (lang(?description) = ""en"")
}
```

This query will return the English abstract (description) of the Taiko from DBpedia, which should confirm that it is a type of Japanese drum.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
56,How many seats does the home stadium of FC Porto have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?seats WHERE {
  dbr:FC_Porto dbo:ground ?stadium .
  ?stadium dbo:seatingCapacity ?seats .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
49,Which frequent flyer program has the most airlines?,"SELECT ?program ?count WHERE {
  ?program rdf:type dbo:FrequentFlyerProgram.
  {
    SELECT ?program (COUNT(?airline) AS ?count) WHERE {
      ?airline rdf:type dbo:Airline;
               dbo:frequentFlyerProgram ?program.
    } GROUP BY ?program
  } 
} ORDER BY DESC(?count) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
44,Which European countries have a constitutional monarchy?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT DISTINCT ?country WHERE {
  ?country dct:subject dbc:Constitutional_monarchies .
  ?country dbo:continent <http://dbpedia.org/resource/Europe> .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
42,Which countries have places with more than two caves?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?country WHERE {
  ?place dbo:country ?country ;
         rdf:type dbo:Place .
  {
    SELECT ?place WHERE {
      ?cave1 rdf:type dbo:Cave ;
             dbo:location ?place .
      ?cave2 rdf:type dbo:Cave ;
             dbo:location ?place .
      FILTER (?cave1 != ?cave2)
    } GROUP BY ?place HAVING (COUNT(?place) > 2)
  }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
4,"Which airports are located in California, USA?","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?airport WHERE {
  ?airport dbo:location dbr:California .
  ?airport rdf:type dbo:Airport .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
37,What are the nicknames of San Francisco?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nicknames WHERE {
  dbr:San_Francisco dbo:nickname ?nicknames.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
32,What is Angela Merkelâ€™s birth name?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  res:Angela_Merkel foaf:name ?birthName .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
31,Who is the mayor of Berlin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Berlin dbo:leader ?leader .
  ?leader rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
29,Which countries in the European Union adopted the Euro?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country ?countryLabel WHERE {
  ?country dbo:currency dbr:Euro ;
           dbo:isPartOf dbr:European_Union .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
23,Which software has been published by Mean Hamster Software?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?software WHERE {
  ?software dbo:publisher dbr:Mean_Hamster_Software.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
68,Which country was Bill Gates born in?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country 
WHERE {
  res:Bill_Gates dbo:birthPlace ?place .
  ?place dbo:country ?country .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
22,How many grand-children did Jacques Cousteau have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT (COUNT(?grandchild) AS ?count)
WHERE {
  dbr:Jacques_Cousteau dbo:child ?child .
  ?child dbo:child ?grandchild .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
214,Give me all professional skateboarders from Sweden.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?skateboarder WHERE {
  ?skateboarder rdf:type dbo:Skateboarder .
  ?skateboarder dbo:birthPlace dbr:Sweden .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
210,Which monarchs of the United Kingdom were married to a German?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?monarch ?spouse
WHERE {
  ?monarch dbo:spouse ?spouse ;
           dbo:birthPlace dbr:United_Kingdom ;
           dbo:occupation dbr:Monarch_of_the_United_Kingdom .
  ?spouse dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country dbr:Germany .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
199,Give me all Argentine films.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film dbo:country dbr:Argentina .
  ?film rdf:type dbo:Film .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
203,How did Michael Jackson die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?causeOfDeath WHERE {
  res:Michael_Jackson dbo:deathCause ?causeOfDeath.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
197,Which U.S. state has been admitted latest?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state ?date WHERE {
  ?state dbo:country dbr:United_States ;
         dbo:timeZone ?timezone ;
         dbo:foundingDate ?date .
} 
ORDER BY DESC(?date)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
196,Which classes does the Millepede belong to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?class WHERE {
  dbr:Millipede dbo:class ?classResource.
  ?classResource rdfs:label ?class.
  FILTER (lang(?class) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
188,Give me the homepage of Forbes.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?homepage
WHERE {
  ?company rdfs:label ""Forbes""@en .
  ?company dbo:homepage ?homepage .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
187,Who is the husband of Amanda Palmer?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?husband WHERE {
  res:Amanda_Palmer dbo:spouse ?husband.
  ?husband foaf:name ?name.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
176,Who painted The Storm on the Sea of Galilee?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?artist WHERE {
  dbr:The_Storm_on_the_Sea_of_Galilee dbo:author ?artist .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
62,What is the highest place of Karakoram?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?place ?elevation
WHERE {
  ?place dbo:mountainRange dbr:Karakoram.
  ?place dbo:elevation ?elevation.
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
173,When did Finland join the EU?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Finland dbo:EUAccession ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
168,Which actors play in Big Bang Theory?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?actorLabel WHERE {
  dbr:The_Big_Bang_Theory dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
166,Which computer scientist won an oscar?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  ?person dbo:occupation dbr:Computer_scientist ;
          dbo:award dbr:Academy_Awards ;
          rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
160,Who wrote Harry Potter?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?authorName WHERE {
  dbr:Harry_Potter dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (lang(?authorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
158,Give me all writers that won the Nobel Prize in literature.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?writer ?writerLabel WHERE {
  ?writer dbo:award dbr:Nobel_Prize_in_Literature .
  ?writer rdfs:label ?writerLabel .
  FILTER (lang(?writerLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
157,Give me English actors starring in Lovesick.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?actorLabel WHERE {
  dbr:Lovesick dbo:starring ?actor .
  ?actor dbo:birthPlace ?birthPlace .
  ?actor rdfs:label ?actorLabel .
  FILTER (lang(?actorLabel) = 'en') .
  FILTER CONTAINS(?birthPlace, ""England"") .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
155,What is the nick name of Baghdad?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickName WHERE {
  dbr:Baghdad dbo:nick ?nickName .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
150,In which city was the president of Montenegro born?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?city WHERE {
  ?person dbo:birthPlace ?city .
  ?person dbo:office dbr:President_of_Montenegro .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
149,Which U.S. state has the highest population density?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?state WHERE {
  ?state rdf:type dbo:Place .
  ?state dbo:country dbr:United_States .
  ?state dbo:populationDensity ?populationDensity .
} ORDER BY DESC(?populationDensity) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
25,What is the longest river in China?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?river ?length
WHERE {
  ?river dbo:country dbr:China ;
         dbo:length ?length .
}
ORDER BY DESC(?length)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
143,What is the area code of Berlin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?areaCode WHERE {
  res:Berlin dbo:areaCode ?areaCode .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
140,How many scientists graduated from an Ivy League university?,"SELECT (COUNT(?scientist) AS ?count) WHERE {
  ?scientist dbo:almaMater ?university .
  ?scientist rdf:type dbo:Scientist .
  ?university dct:subject dbc:Ivy_League_universities .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
139,Which professional surfers were born in Australia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Australia .
  ?surfer dbo:occupation dbr:Surfing .
  ?surfer foaf:name ?name .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
137,Give me all Dutch parties.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?party ?partyLabel WHERE {
  ?party dbo:country dbr:Netherlands .
  ?party rdf:type dbo:PoliticalParty .
  ?party rdfs:label ?partyLabel .
  FILTER (lang(?partyLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
136,How many moons does Mars have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?moons WHERE {
  res:Mars dbo:numberOfMoons ?moons .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
134,What is Batman's real name?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?batman dbo:wikiPageID 303.
  ?batman dbo:alias ?realName.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
132,What is Elon Musk famous for?,"SELECT ?abstract
WHERE {
  dbr:Elon_Musk dbo:abstract ?abstract .
  FILTER (lang(?abstract) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
128,Who is the author of WikiLeaks?,"SELECT ?author WHERE {
  dbr:WikiLeaks dbo:founder ?author .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
126,Sean Parnell was the governor of which U.S. state?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?state WHERE {
  res:Sean_Parnell dbo:office res:Governor_of_Alaska .
  BIND(""Alaska"" AS ?state)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
125,How many years was the Ford Model T manufactured?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT (MAX(?endYear) - MIN(?startYear)) as ?years
WHERE {
  res:Ford_Model_T dbo:productionStartYear ?startYear .
  res:Ford_Model_T dbo:productionEndYear ?endYear .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
124,When was Carlo Giuliani shot?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Carlo_Giuliani dbo:deathDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
123,Give me all animals that are extinct.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?animal ?animalLabel WHERE {
  ?animal dbo:extinctionDate ?extinctionDate .
  ?animal rdfs:label ?animalLabel .
  FILTER (lang(?animalLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
122,Who was the wife of President Lincoln?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?wife
WHERE {
  res:Abraham_Lincoln dbo:spouse ?wifeLink.
  ?wifeLink rdfs:label ?wife.
  FILTER (lang(?wife) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
111,How many awards has Bertrand Russell?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT (COUNT(?award) AS ?awardCount) WHERE {
  dbr:Bertrand_Russell dbo:award ?award .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
117,Is Pamela Anderson a vegan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?isVegan WHERE {
  res:Pamela_Anderson rdf:type dbo:Person .
  OPTIONAL { res:Pamela_Anderson dbo:diet ?isVegan . }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
59,Which space probes were sent into orbit around the sun?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?probe ?launchDate WHERE {
  ?probe dbo:orbit dbr:Sun .
  ?probe dbo:launchDate ?launchDate .
} ORDER BY ?launchDate","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
113,Which German cities have more than 250000 inhabitants?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?population
WHERE {
  ?city a dbo:City ;
        dbo:country dbr:Germany ;
        dbo:populationTotal ?population .
  FILTER (?population > 250000)
} 
ORDER BY DESC(?population)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
104,Who is the daughter of Robert Kennedy married to?,"SELECT ?spouse
WHERE {
  ?person dbo:parent dbr:Robert_F._Kennedy .
  ?person dbo:spouse ?spouse .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
10,How many students does the Free University of Amsterdam have?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?students
WHERE {
  res:Vrije_Universiteit_Amsterdam dbo:numberOfStudents ?students .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
1,What is the revenue of IBM?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?revenue WHERE {
  res:IBM dbo:revenue ?revenue .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
178,How many James Bond movies do exist?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT (COUNT(?movie) AS ?count)
WHERE {
  ?movie dbo:series dbr:James_Bond_in_film.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
129,Who does the voice of Bart Simpson?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  ?s dbo:wikiPageID 3071 .
  ?s dbo:voice ?voice .
  ?voice rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
183,Who was Tom Hanks married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Tom_Hanks dbo:spouse ?spouse.
  ?spouse rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
181,Through which countries does the Yenisei river flow?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country ?countryLabel WHERE {
  dbr:Yenisei_River dbo:country ?country .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
7,Give me all cars that are produced in Germany.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?car WHERE {
  ?car dbo:manufacturer ?manufacturer .
  ?manufacturer dbo:locationCountry dbr:Germany .
  ?car rdf:type dbo:Automobile .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
135,When did Michael Jackson die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?deathDate WHERE {
  res:Michael_Jackson dbo:deathDate ?deathDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
50,What is the highest volcano in Africa?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?volcano ?elevation
WHERE {
  ?volcano dbo:location <http://dbpedia.org/resource/Africa> ;
           dbo:type <http://dbpedia.org/resource/Volcano> ;
           dbo:elevation ?elevation .
}
ORDER BY DESC(?elevation)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
39,Which poet wrote the most books?,"This is a complex question that requires multiple steps to answer and may not be fully accurate due to the nature of the data in DBpedia. However, a possible SPARQL query to get a list of poets and the count of their books could be:

```sparql
SELECT ?poet (COUNT(?book) AS ?bookCount) WHERE {
  ?poet dbo:occupation dbr:Poet .
  ?book dbo:author ?poet .
} 
GROUP BY ?poet
ORDER BY DESC(?bookCount)
LIMIT 1
```

This query selects poets and counts their books, then orders the results in descending order by the count of books, and finally limits the result to the top one. Please note that this query assumes that all books written by a poet are correctly linked in DBpedia, which may not be the case.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
83,Give me all gangsters from the prohibition era.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?gangster WHERE {
  ?gangster dct:subject dbc:Prohibition-era_gangsters .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
71,Give me all spacecrafts that flew to Mars.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spacecraft WHERE {
  ?spacecraft dbo:destination dbr:Mars .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
213,Show me all Czech movies.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie dbo:country dbr:Czech_Republic .
  ?movie rdf:type dbo:Film .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
209,Give me all taikonauts.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?taikonaut ?name WHERE {
  ?taikonaut dbo:occupation dbr:Taikonaut.
  ?taikonaut rdfs:label ?name.
  FILTER (lang(?name) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
105,Which countries have more than ten volcanoes?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?country (COUNT(?volcano) AS ?volcanoCount)
WHERE {
  ?volcano rdf:type dbo:Volcano .
  ?volcano dbo:location ?country .
  ?country rdf:type dbo:Country .
} 
GROUP BY ?country
HAVING (COUNT(?volcano) > 10)","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
52,Give me all movies with Tom Cruise.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?movie WHERE {
  ?movie dbo:starring dbr:Tom_Cruise.
  ?movie rdf:type dbo:Film.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
102,When did Dracula's creator die?,"SELECT ?date WHERE {
  dbr:Bram_Stoker dbo:deathDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
21,Who created English Wikipedia?,"SELECT ?creator WHERE {
  dbr:Wikipedia dbo:founder ?creator .
  FILTER (langMatches(lang(?creator), ""EN""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
34,Give me all female German chancellors.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  ?person rdf:type dbo:Chancellor ;
          dbo:birthPlace dbr:Germany ;
          foaf:gender ""female""@en .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
145,Who owns Aldi?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?owner
WHERE {
  dbr:Aldi dbo:owner ?ownerResource.
  ?ownerResource rdfs:label ?owner.
  FILTER (lang(?owner) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
154,Which books were written by Danielle Steel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?book ?bookLabel WHERE {
  ?book dbo:author dbr:Danielle_Steel .
  ?book rdfs:label ?bookLabel .
  FILTER (lang(?bookLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
198,Who was influenced by Socrates?,"SELECT ?person ?personLabel WHERE {
  ?person dbo:influencedBy dbr:Socrates.
  OPTIONAL {
    ?person rdfs:label ?personLabel.
    FILTER (lang(?personLabel) = 'en')
  }
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
162,How deep is Lake Chiemsee?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?depth WHERE {
  res:Lake_Chiemsee dbo:depth ?depth .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
212,Which companies work in the aerospace industry as well as in medicine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?company WHERE {
  ?company rdf:type dbo:Company .
  ?company dct:subject ?industry1 .
  ?company dct:subject ?industry2 .
  ?industry1 rdf:type dbo:Industry .
  ?industry2 rdf:type dbo:Industry .
  ?industry1 rdfs:label ?label1 .
  ?industry2 rdfs:label ?label2 .
  FILTER (lang(?label1) = 'en' && lang(?label2) = 'en') .
  FILTER (regex(?label1, ""Aerospace"", ""i"") && regex(?label2, ""Medicine"", ""i"")) .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
96,Which professional surfers were born on the Philippines?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?surfer WHERE {
  ?surfer dbo:birthPlace dbr:Philippines .
  ?surfer dct:subject dbc:Professional_surfers .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
40,Who were the parents of Queen Victoria?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentName WHERE {
  dbr:Queen_Victoria dbo:parent ?parent.
  ?parent rdfs:label ?parentName.
  FILTER (lang(?parentName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
79,Are there any castles in the United States?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?castle ?label WHERE {
  ?castle dbo:location dbr:United_States .
  ?castle rdf:type dbo:Castle .
  ?castle rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
141,Which languages are spoken in Estonia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language WHERE {
  dbr:Estonia dbo:officialLanguage ?languageLink.
  ?languageLink rdfs:label ?language.
  FILTER (lang(?language) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
80,Give me a list of all critically endangered birds.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bird ?name WHERE {
  ?bird dbo:conservationStatus dbr:Critically_Endangered.
  ?bird dbo:class dbr:Bird.
  ?bird rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
159,Which countries are connected by the Rhine?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?country ?countryLabel WHERE {
  dbr:Rhine dbo:country ?country .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
107,Who was the father of Queen Elizabeth II?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherName WHERE {
  dbr:Elizabeth_II dbo:parent ?father.
  ?father rdfs:label ?fatherName.
  FILTER (lang(?fatherName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
163,Give me all chemical elements.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?element ?elementLabel WHERE {
  ?element dbo:wikiPageID ?id .
  ?element rdf:type dbo:ChemicalElement .
  ?element rdfs:label ?elementLabel .
  FILTER (lang(?elementLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
211,Give me all American presidents of the last 20 years.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?president ?startTerm ?endTerm WHERE {
  ?president dbo:office <http://dbpedia.org/resource/President_of_the_United_States> .
  ?president dbp:termStart ?startTerm .
  ?president dbp:termEnd ?endTerm .
  FILTER (?startTerm >= ""2001-01-01""^^xsd:date)
} ORDER BY ?startTerm","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,"To get this information, we would need to have up-to-date data in DBpedia, which is not always the case. However, assuming the data is up-to-date, the SPARQL query would look something like this:

```
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?releaseDate WHERE {
  dbr:Worst_Case_Scenario_(film) dbo:releaseDate ?releaseDate .
  FILTER (?releaseDate >= ""2016-10-01""^^xsd:date)
}
```

This query will return the release date of the movie ""Worst Case Scenario"" if it is after October 2016. However, it does not specifically target the Netherlands. DBpedia does not typically store country-specific release dates.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
144,Whom did Lance Bass marry?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Lance_Bass dbo:spouse ?spouse.
  ?spouse rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?subsidiary
WHERE {
  ?subsidiary dbo:parentCompany dbr:TUI_Travel .
  ?subsidiary dbo:hubAirport ?airport1, ?airport2 .
  ?airport1 rdfs:label ""Glasgow Airport""@en .
  ?airport2 rdfs:label ""Dublin Airport""@en .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
131,What languages are spoken in Pakistan?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?language ?languageLabel WHERE {
  dbr:Pakistan dbo:officialLanguage ?language .
  ?language rdfs:label ?languageLabel .
  FILTER (lang(?languageLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
120,Who is the daughter of Bill Clinton married to?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse
WHERE {
  dbr:Bill_Clinton dbo:child ?child .
  ?child dbo:spouse ?spouse .
  ?spouse rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
164,Who was on the Apollo 11 mission?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?astronaut ?name WHERE {
  dbr:Apollo_11 dbo:crew ?astronaut .
  ?astronaut foaf:name ?name .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
88,What is the wavelength of Indigo?,"SELECT ?wavelength WHERE {
  dbr:Indigo dbo:wavelength ?wavelength .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
151,Give me all B-sides of the Ramones.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?b_side WHERE {
  ?song dbo:musicalBand dbr:Ramones .
  ?song dbo:B-side ?b_side .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
63,Who was called Scarface?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person dbo:alias ""Scarface""@en.
  ?person rdfs:label ?name.
  FILTER (lang(?name) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
27,Which rivers flow into the North Sea?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?river WHERE {
  ?river dbo:mouth dbr:North_Sea .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
156,Where is Fort Knox located?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?location WHERE {
  res:Fort_Knox dbo:location ?locationResource.
  ?locationResource rdfs:label ?location.
  FILTER (lang(?location) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
207,Which daughters of British earls died at the same place they were born at?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?daughter ?placeOfBirth WHERE {
  ?daughter dbo:parent ?parent .
  ?parent dbo:title ?title .
  ?title rdfs:label ?label .
  ?daughter dbo:birthPlace ?placeOfBirth .
  ?daughter dbo:deathPlace ?placeOfBirth .
  FILTER (lang(?label) = 'en' && regex(?label, ""Earl of"", ""i""))
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
24,How many emperors did China have?,"SELECT (COUNT(?emperor) AS ?count) WHERE {
  ?emperor dbo:birthPlace dbr:China .
  ?emperor rdf:type dbo:Monarch .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
133,What are the names of the Teenage Mutant Ninja Turtles?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?turtleName WHERE {
  ?turtle dbo:series dbr:Teenage_Mutant_Ninja_Turtles.
  ?turtle rdfs:label ?turtleName.
  FILTER (lang(?turtleName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
103,Where does Piccadilly start?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?start WHERE {
  res:Piccadilly dbo:start ?startResource.
  ?startResource rdfs:label ?start.
  FILTER (lang(?start) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
165,What is the name of the university where Obama's wife studied?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?universityName WHERE {
  ?person dbo:spouse dbr:Barack_Obama .
  ?person dbo:almaMater ?university .
  ?university rdfs:label ?universityName .
  FILTER (lang(?universityName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
108,When did Paraguay proclaim its independence?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Paraguay dbo:formationDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
15,How short is the shortest active NBA player?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player ?height
WHERE {
  ?player dbo:height ?height .
  ?player dbo:team ?team .
  ?player dbo:careerStart ?start .
  ?player rdf:type dbo:BasketballPlayer .
  FILTER (?start >= ""2016-10-01""^^xsd:date) .
} 
ORDER BY ASC(?height)
LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
45,Where did Abraham Lincoln die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?place ?placeLabel WHERE {
  res:Abraham_Lincoln dbo:deathPlace ?place .
  ?place rdfs:label ?placeLabel .
  FILTER (lang(?placeLabel) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
82,When was Jack Wolfskin founded?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?founded WHERE {
  res:Jack_Wolfskin dbo:foundingYear ?founded .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
9,In which city is the headquarter of Air China?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?city WHERE {
  dbr:Air_China dbo:locationCity ?city .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
201,What is the founding year of the brewery that produces Pilsner Urquell?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?foundingYear WHERE {
  dbr:Pilsner_Urquell dbo:manufacturer ?brewery.
  ?brewery dbo:foundingYear ?foundingYear.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
171,When did the Boston Tea Party take place?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?date WHERE {
  res:Boston_Tea_Party dbo:date ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
182,Which animals are critically endangered?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?animal WHERE {
  ?animal dbo:conservationStatus dbr:Critically_Endangered.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
13,Which politicians were married to a German?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?politician ?politicianName WHERE {
  ?politician dbo:spouse ?spouse .
  ?politician dbo:occupation dbr:Politician .
  ?spouse dbo:birthPlace dbr:Germany .
  ?politician foaf:name ?politicianName .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
114,How big is the earth's diameter?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?diameter WHERE {
  res:Earth dbo:diameter ?diameter .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
92,Is the wife of President Obama called Michelle?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Barack_Obama dbo:spouse ?spouse.
  ?spouse rdfs:label ?name.
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
194,Which U.S. state has the abbreviation MN?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?state WHERE {
  ?state dbo:country dbr:United_States ;
         dbo:postalCode ""MN"" .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
175,When did Muhammad die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?deathDate WHERE {
  res:Muhammad dbo:deathDate ?deathDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
26,What is the atmosphere of the Moon composed of?,"SELECT ?atmosphereComposition WHERE {
  dbr:Moon dbo:atmosphereComposition ?atmosphereComposition.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
60,Who is the governor of Texas?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name WHERE {
  res:Texas dbo:leader ?leader .
  ?leader rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
110,Which movies did Kurosawa direct?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie ?movieLabel WHERE {
  ?movie dbo:director dbr:Akira_Kurosawa.
  ?movie rdfs:label ?movieLabel.
  FILTER (lang(?movieLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
206,What was the name of the famous battle in 1836 in San Antonio?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?battle WHERE {
  ?battle dbo:location dbr:San_Antonio .
  ?battle dbo:date ?date .
  FILTER (YEAR(?date) = 1836)
  ?battle rdf:type dbo:Battle .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
97,Give me the official websites of actors of the television show Charmed.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?website
WHERE {
  ?show rdfs:label ""Charmed""@en.
  ?show dbo:starring ?actor.
  ?actor foaf:homepage ?website.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
20,How many calories does a baguette have?,"SELECT ?calories
WHERE {
  dbr:Baguette dbo:calories ?calories.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
169,Give me all libraries established before 1400.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?library ?established WHERE {
  ?library rdf:type dbo:Library .
  ?library dbo:foundingYear ?established .
  FILTER (?established < ""1400""^^xsd:gYear)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
38,Give me all Frisian islands that belong to the Netherlands.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>

SELECT ?island WHERE {
  ?island dbo:country dbr:Netherlands .
  ?island dct:subject dbc:Frisian_Islands .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
192,Which museum exhibits The Scream by Munch?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?museum ?museumLabel WHERE {
  dbr:The_Scream dbo:museum ?museum .
  ?museum rdfs:label ?museumLabel .
  FILTER (lang(?museumLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
78,When was the De Beers company founded?,"SELECT ?date WHERE {
  dbr:De_Beers dbo:foundingDate ?date .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
19,Who became president after JFK died?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor ?successorName WHERE {
  res:John_F._Kennedy dbo:successor ?successor .
  ?successor rdfs:label ?successorName .
  FILTER (lang(?successorName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
190,Who are the parents of the wife of Juan Carlos I?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentName WHERE {
  dbr:Juan_Carlos_I_of_Spain dbo:spouse ?wife .
  ?wife dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (lang(?parentName) = 'en')
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
174,Who is the novelist of the work a song of ice and fire?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author ?authorLabel WHERE {
  dbr:A_Song_of_Ice_and_Fire dbo:author ?author .
  ?author rdfs:label ?authorLabel .
  FILTER (lang(?authorLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
189,In which studio did the Beatles record their first album?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?studio WHERE {
  dbr:The_Beatles dbo:recordLabel ?recordLabel.
  ?recordLabel dbo:location ?studio.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
152,Which beer brewing companies are located in North-Rhine Westphalia?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?company ?name WHERE {
  ?company dbo:industry dbr:Brewery ;
           dbo:location dbr:North_Rhine-Westphalia .
  ?company rdfs:label ?name .
  FILTER (lang(?name) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
94,When did princess Diana die?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX res: <http://dbpedia.org/resource/>

SELECT ?deathDate WHERE {
  res:Princess_Diana dbo:deathDate ?deathDate .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
8,Who founded Intel?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?founderName WHERE {
  dbr:Intel dbo:foundingPerson ?founder.
  ?founder foaf:name ?founderName.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
95,Who is the youngest player in the Premier League?,"SELECT ?player ?birthDate WHERE {
  ?player dbo:league dbr:Premier_League .
  ?player dbo:birthDate ?birthDate .
} ORDER BY DESC(?birthDate) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
119,Which instruments does Cat Stevens play?,"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?instrument WHERE {
  dbr:Cat_Stevens dbo:instrument ?instrument .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
115,How many rivers and lakes are in South Carolina?,"This query requires two separate SPARQL queries, one for rivers and one for lakes.

For rivers:

```
SELECT (COUNT(?river) AS ?count) WHERE {
  ?river dbo:location dbr:South_Carolina ;
         rdf:type dbo:River .
}
```

For lakes:

```
SELECT (COUNT(?lake) AS ?count) WHERE {
  ?lake dbo:location dbr:South_Carolina ;
        rdf:type dbo:Lake .
}
```","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
116,Who was called Rodzilla?,"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:alias ""Rodzilla""@en.
  ?person rdfs:label ?personLabel.
  FILTER (lang(?personLabel) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
138,Give me the capitals of all countries in Africa.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbc: <http://dbpedia.org/resource/Category:>

SELECT ?country ?capital
WHERE {
  ?country dct:subject dbc:Countries_in_Africa ;
           dbo:capital ?capital .
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
177,Which bridges are of the same type as the Manhattan Bridge?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bridge ?bridgeLabel WHERE {
  dbr:Manhattan_Bridge dbo:bridgeType ?type .
  ?bridge dbo:bridgeType ?type .
  ?bridge rdfs:label ?bridgeLabel .
  FILTER (LANG(?bridgeLabel) = ""en"")
  FILTER (?bridge != dbr:Manhattan_Bridge)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
101,How many companies were founded by the founder of Facebook?,"SELECT COUNT(?company) WHERE {
  ?person foaf:name ""Mark Zuckerberg""@en.
  ?company dbo:foundingPerson ?person.
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,"SPARQL does not have the capability to interpret subjective terms such as ""danger"" or ""flash floods"". However, it can be used to retrieve information about hiking trails in the Grand Canyon. Here is an example of how you might do that:

```
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?trail ?description
WHERE {
  ?trail dbo:location dbr:Grand_Canyon.
  ?trail dbo:type dbr:Hiking.
  ?trail rdfs:comment ?description.
  FILTER (lang(?description) = ""en"")
}
```

This query will return a list of hiking trails located in the Grand Canyon along with their descriptions in English. You would then need to manually review the descriptions to determine if there is any mention of flash floods.","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
87,Which book has the most pages?,"SELECT ?book ?pages WHERE {
  ?book rdf:type dbo:Book .
  ?book dbo:numberOfPages ?pages .
} ORDER BY DESC(?pages) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
148,What is the largest state in the United States?,"SELECT ?state ?area WHERE {
  ?state dct:subject dbc:States_of_the_United_States.
  ?state dbo:areaTotal ?area.
} ORDER BY DESC(?area) LIMIT 1","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
43,Give me the websites of companies with more than 500000 employees.,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?company ?website
WHERE {
  ?company a dbo:Company ;
           dbo:numberOfEmployees ?employees ;
           foaf:homepage ?website .
  FILTER (?employees > 500000)
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
179,What were the names of the three ships by Columbus?,"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?shipName WHERE {
  dbr:Christopher_Columbus dbo:ship ?ship.
  ?ship rdfs:label ?shipName.
  FILTER (lang(?shipName) = ""en"")
}","Create SPARQL queries to generate responses to user questions by interpreting natural language queries, specifically targeting DBpedia, beginning from October 2016."
