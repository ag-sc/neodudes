id,question,prompt,Gold SPARQL,Generated SPARQL,True Positive,False Positive,False Negative,Precision,Recall,F1,Exact matches
99,What is the time zone of Salt Lake City?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:Salt_Lake_City <http://dbpedia.org/ontology/timeZone> ?uri },SELECT DISTINCT ?uri WHERE { res:Salt_Lake_City dbo:timeZone ?uri },1,0,0,1.0,1.0,1.0,1
99,What is the time zone of Salt Lake City?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Salt_Lake_City <http://dbpedia.org/ontology/timeZone> ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
98,Who killed Caesar?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri dct:subject dbc:Assassins_of_Julius_Caesar },SELECT DISTINCT ?uri WHERE { res:Julius_Caesar dbo:deathPlace ?uri },0,1,9,0.0,0.0,0.0,0
98,Who killed Caesar?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dct:subject dbc:Assassins_of_Julius_Caesar },Average of all prompts,0,1,9,0.0,0.0,0.0,0
86,What is the highest mountain in Germany?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri WHERE { ?uri rdf:type onto:Mountain ; onto:elevation ?elevation ; onto:locatedInArea <http://dbpedia.org/resource/Germany> } ORDER BY DESC(?elevation) LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation ; <http://dbpedia.org/ontology/isPartOf> <http://dbpedia.org/resource/Category:Mountains_of_Germany> } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1,0,0,1,0.0,0.0,0.0,0
86,What is the highest mountain in Germany?,Average of all prompts,SELECT ?uri WHERE { ?uri rdf:type onto:Mountain ; onto:elevation ?elevation ; onto:locatedInArea <http://dbpedia.org/resource/Germany> } ORDER BY DESC(?elevation) LIMIT 1,Average of all prompts,0,0,1,0.0,0.0,0.0,0
84,Which American presidents were in office during the Vietnam War?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri WHERE { ?uri dct:subject dbc:Presidents_of_the_United_States . res:Vietnam_War dbo:commander ?uri },SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:President ; dbo:nationality res:United_States ; dbo:office res:Vietnam_War },0,0,3,0.0,0.0,0.0,0
84,Which American presidents were in office during the Vietnam War?,Average of all prompts,SELECT ?uri WHERE { ?uri dct:subject dbc:Presidents_of_the_United_States . res:Vietnam_War dbo:commander ?uri },Average of all prompts,0,0,3,0.0,0.0,0.0,0
81,Butch Otter is the governor of which U.S. state?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates> ; <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Butch_Otter> },SELECT DISTINCT ?uri WHERE { ?uri dbo:governor res:Butch_Otter },0,7,1,0.0,0.0,0.0,0
81,Butch Otter is the governor of which U.S. state?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates> ; <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Butch_Otter> },Average of all prompts,0,7,1,0.0,0.0,0.0,0
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT Count(?sub) as ?c WHERE { ?sub dbo:goldMedalist dbr:Michael_Phelps . filter (contains (str(?sub), ""2008"") && contains (str(?sub), ""Olympics"")) }",SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Michael_Phelps> <http://dbpedia.org/property/medaltemplates> ?n },0,0,1,0.0,0.0,0.0,0
73,How many gold medals did Michael Phelps win at the 2008 Olympics?,Average of all prompts,"SELECT Count(?sub) as ?c WHERE { ?sub dbo:goldMedalist dbr:Michael_Phelps . filter (contains (str(?sub), ""2008"") && contains (str(?sub), ""Olympics"")) }",Average of all prompts,0,0,1,0.0,0.0,0.0,0
66,Which artists were born on the same date as Rachel Stevens?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a dbo:Artist . dbr:Rachel_Stevens dbo:birthDate ?birthdate . ?uri dbo:birthDate ?birthdate },SELECT DISTINCT ?uri WHERE { res:Rachel_Stevens dbo:birthDate ?date . ?uri dbo:birthDate ?date FILTER ( ?uri != res:Rachel_Stevens ) },3,20,0,0.13043478260869565,1.0,0.23076923076923078,0
66,Which artists were born on the same date as Rachel Stevens?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a dbo:Artist . dbr:Rachel_Stevens dbo:birthDate ?birthdate . ?uri dbo:birthDate ?birthdate },Average of all prompts,3,20,0,0.13043478260869565,1.0,0.23076923076923078,0
64,What is the profession of Frank Herbert?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?string WHERE { res:Frank_Herbert dbpedia2:occupation ?string },SELECT DISTINCT ?uri WHERE { res:Frank_Herbert dbo:occupation ?uri },0,0,1,0.0,0.0,0.0,0
64,What is the profession of Frank Herbert?,Average of all prompts,SELECT DISTINCT ?string WHERE { res:Frank_Herbert dbpedia2:occupation ?string },Average of all prompts,0,0,1,0.0,0.0,0.0,0
6,Are Taiko some kind of Japanese musical instrument?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",ASK WHERE { <http://dbpedia.org/resource/Taiko> a <http://dbpedia.org/class/yago/WikicatJapaneseMusicalInstruments> },"ASK WHERE { res:Taiko dbo:classification ""Japanese percussion"" }",0,1,1,0.0,0.0,0.0,0
6,Are Taiko some kind of Japanese musical instrument?,Average of all prompts,ASK WHERE { <http://dbpedia.org/resource/Taiko> a <http://dbpedia.org/class/yago/WikicatJapaneseMusicalInstruments> },Average of all prompts,0,1,1,0.0,0.0,0.0,0
56,How many seats does the home stadium of FC Porto have?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?capacity WHERE { { dbr:FC_Porto dbo:ground ?ground . ?ground dbo:capacity ?capacity } UNION { dbr:FC_Porto dbo:ground ?ground . ?ground dbp:capacity ?capacity } },SELECT DISTINCT ?num WHERE { res:FC_Porto dbo:ground ?uri . ?uri dbo:seatingCapacity ?num },0,0,1,0.0,0.0,0.0,0
56,How many seats does the home stadium of FC Porto have?,Average of all prompts,SELECT ?capacity WHERE { { dbr:FC_Porto dbo:ground ?ground . ?ground dbo:capacity ?capacity } UNION { dbr:FC_Porto dbo:ground ?ground . ?ground dbp:capacity ?capacity } },Average of all prompts,0,0,1,0.0,0.0,0.0,0
49,Which frequent flyer program has the most airlines?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri WHERE { ?airline <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline> . ?airline <http://dbpedia.org/property/frequentFlyer> ?uri. } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?airline)) OFFSET 0 LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/FrequentFlyerProgram> ; <http://dbpedia.org/ontology/airline> ?x } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1,0,0,1,0.0,0.0,0.0,0
49,Which frequent flyer program has the most airlines?,Average of all prompts,SELECT ?uri WHERE { ?airline <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline> . ?airline <http://dbpedia.org/property/frequentFlyer> ?uri. } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?airline)) OFFSET 0 LIMIT 1,Average of all prompts,0,0,1,0.0,0.0,0.0,0
44,Which European countries have a constitutional monarchy?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri WHERE { ?uri dct:subject dbc:Countries_in_Europe ; dbo:governmentType dbr:Constitutional_monarchy },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Constitutional_monarchy> ; <http://dbpedia.org/ontology/continent> <http://dbpedia.org/resource/Europe> },0,0,4,0.0,0.0,0.0,0
44,Which European countries have a constitutional monarchy?,Average of all prompts,SELECT ?uri WHERE { ?uri dct:subject dbc:Countries_in_Europe ; dbo:governmentType dbr:Constitutional_monarchy },Average of all prompts,0,0,4,0.0,0.0,0.0,0
42,Which countries have places with more than two caves?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?cave rdf:type dbo:Cave ; dbo:location ?uri . ?uri rdf:type dbo:Country } GROUP BY ?uri HAVING ( COUNT(?cave) > 2 ),SELECT DISTINCT ?uri WHERE { ?place <http://dbpedia.org/ontology/wikiPageWikiLink> <http://dbpedia.org/resource/Category:Caves_of> . ?place <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PopulatedPlace> . ?place <http://dbpedia.org/ontology/country> ?uri . },0,0,31,0.0,0.0,0.0,0
42,Which countries have places with more than two caves?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?cave rdf:type dbo:Cave ; dbo:location ?uri . ?uri rdf:type dbo:Country } GROUP BY ?uri HAVING ( COUNT(?cave) > 2 ),Average of all prompts,0,0,31,0.0,0.0,0.0,0
4,"Which airports are located in California, USA?","Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airport> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/city> ?city . ?city <http://dbpedia.org/ontology/isPartOf> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/California> } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airport> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> },73,0,131,1.0,0.35784313725490197,0.5270758122743682,0
4,"Which airports are located in California, USA?",Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airport> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/city> ?city . ?city <http://dbpedia.org/ontology/isPartOf> <http://dbpedia.org/resource/California> } UNION { ?uri <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/California> } },Average of all prompts,73,0,131,1.0,0.35784313725490197,0.5270758122743682,0
37,What are the nicknames of San Francisco?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?string WHERE { res:San_Francisco foaf:nick ?string },SELECT DISTINCT ?n WHERE { res:San_Francisco dbo:nickname ?n },0,0,1,0.0,0.0,0.0,0
37,What are the nicknames of San Francisco?,Average of all prompts,PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?string WHERE { res:San_Francisco foaf:nick ?string },Average of all prompts,0,0,1,0.0,0.0,0.0,0
32,What is Angela Merkel’s birth name?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?string WHERE { res:Angela_Merkel dbp:birthName ?string },SELECT DISTINCT ?n WHERE { res:Angela_Merkel dbo:birthName ?n },0,0,1,0.0,0.0,0.0,0
32,What is Angela Merkel’s birth name?,Average of all prompts,SELECT DISTINCT ?string WHERE { res:Angela_Merkel dbp:birthName ?string },Average of all prompts,0,0,1,0.0,0.0,0.0,0
31,Who is the mayor of Berlin?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:Berlin dbp:leader ?uri },SELECT DISTINCT ?uri WHERE { res:Berlin dbo:mayor ?uri },0,0,1,0.0,0.0,0.0,0
31,Who is the mayor of Berlin?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Berlin dbp:leader ?uri },Average of all prompts,0,0,1,0.0,0.0,0.0,0
29,Which countries in the European Union adopted the Euro?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> } UNION { ?uri <http://dbpedia.org/property/currencyCode> ""EUR""@en } }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> ; <http://dbpedia.org/ontology/continent> <http://dbpedia.org/resource/Europe> },0,0,47,0.0,0.0,0.0,0
29,Which countries in the European Union adopted the Euro?,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> } UNION { ?uri <http://dbpedia.org/property/currencyCode> ""EUR""@en } }",Average of all prompts,0,0,47,0.0,0.0,0.0,0
23,Which software has been published by Mean Hamster Software?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Software { ?uri prop:publisher ""Mean Hamster Software""@en } UNION { ?uri onto:publisher res:Mean_Hamster_Software } }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Software> ; <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Mean_Hamster_Software> },0,0,2,0.0,0.0,0.0,0
23,Which software has been published by Mean Hamster Software?,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Software { ?uri prop:publisher ""Mean Hamster Software""@en } UNION { ?uri onto:publisher res:Mean_Hamster_Software } }",Average of all prompts,0,0,2,0.0,0.0,0.0,0
68,Which country was Bill Gates born in?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?country WHERE { { dbr:Bill_Gates dbo:birthPlace ?birthPlace . ?birthPlace dbo:country ?country } UNION { dbr:Bill_Gates dbo:birthPlace ?birthPlace . ?birthPlace dbo:isPartOf ?place . ?place dbo:country ?country } },SELECT DISTINCT ?uri WHERE { res:Bill_Gates dbo:birthPlace ?uri . ?uri dbo:country ?x },0,0,1,0.0,0.0,0.0,0
68,Which country was Bill Gates born in?,Average of all prompts,SELECT DISTINCT ?country WHERE { { dbr:Bill_Gates dbo:birthPlace ?birthPlace . ?birthPlace dbo:country ?country } UNION { dbr:Bill_Gates dbo:birthPlace ?birthPlace . ?birthPlace dbo:isPartOf ?place . ?place dbo:country ?country } },Average of all prompts,0,0,1,0.0,0.0,0.0,0
22,How many grand-children did Jacques Cousteau have?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT COUNT(DISTINCT ?y AS ?y) WHERE { <http://dbpedia.org/resource/Jacques_Cousteau> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/child> ?y . },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Jacques_Cousteau dbo:grandChild ?uri },0,1,1,0.0,0.0,0.0,0
22,How many grand-children did Jacques Cousteau have?,Average of all prompts,SELECT COUNT(DISTINCT ?y AS ?y) WHERE { <http://dbpedia.org/resource/Jacques_Cousteau> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/child> ?y . },Average of all prompts,0,1,1,0.0,0.0,0.0,0
214,Give me all professional skateboarders from Sweden.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Skateboarder { ?uri dbo:birthPlace dbr:Sweden } UNION { ?uri dbo:birthPlace ?place . ?place dbo:country dbr:Sweden } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Skateboarder> ; <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Professional_skateboarding> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> },0,0,2,0.0,0.0,0.0,0
214,Give me all professional skateboarders from Sweden.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Skateboarder { ?uri dbo:birthPlace dbr:Sweden } UNION { ?uri dbo:birthPlace ?place . ?place dbo:country dbr:Sweden } },Average of all prompts,0,0,2,0.0,0.0,0.0,0
210,Which monarchs of the United Kingdom were married to a German?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatMonarchsOfTheUnitedKingdom ; dbo:spouse ?spouse . ?spouse dbo:birthPlace res:Germany },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Monarch> ; <http://dbpedia.org/ontology/spouse> ?spouse { ?spouse <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> } UNION { ?spouse <http://dbpedia.org/ontology/birthPlace> ?place . ?place <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> } } },0,0,1,0.0,0.0,0.0,0
210,Which monarchs of the United Kingdom were married to a German?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatMonarchsOfTheUnitedKingdom ; dbo:spouse ?spouse . ?spouse dbo:birthPlace res:Germany },Average of all prompts,0,0,1,0.0,0.0,0.0,0
199,Give me all Argentine films.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?uri WHERE { { ?uri rdf:type yago:ArgentineFilms } UNION { ?uri rdf:type dbo:Film { ?uri dbo:country res:Argentina } UNION { ?uri dbp:country ""Argentina""@en } } }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Argentina> },243,0,0,1.0,1.0,1.0,1
199,Give me all Argentine films.,Average of all prompts,"SELECT DISTINCT ?uri WHERE { { ?uri rdf:type yago:ArgentineFilms } UNION { ?uri rdf:type dbo:Film { ?uri dbo:country res:Argentina } UNION { ?uri dbp:country ""Argentina""@en } } }",Average of all prompts,243,0,0,1.0,1.0,1.0,1
203,How did Michael Jackson die?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Michael_Jackson> <http://dbpedia.org/property/deathCause> ?s },SELECT DISTINCT ?uri WHERE { res:Michael_Jackson dbo:deathCause ?uri },0,0,1,0.0,0.0,0.0,0
203,How did Michael Jackson die?,Average of all prompts,SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Michael_Jackson> <http://dbpedia.org/property/deathCause> ?s },Average of all prompts,0,0,1,0.0,0.0,0.0,0
197,Which U.S. state has been admitted latest?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri dct:subject dbc:States_of_the_United_States ; <http://dbpedia.org/property/admittancedate> ?x } ORDER BY DESC(?x) LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:largestCity ?city } ORDER BY DESC(?uri) OFFSET 0 LIMIT 1,0,1,1,0.0,0.0,0.0,0
197,Which U.S. state has been admitted latest?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dct:subject dbc:States_of_the_United_States ; <http://dbpedia.org/property/admittancedate> ?x } ORDER BY DESC(?x) LIMIT 1,Average of all prompts,0,1,1,0.0,0.0,0.0,0
196,Which classes does the Millepede belong to?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?String WHERE { res:Millipede dbp:taxon ?String },SELECT DISTINCT ?uri WHERE { res:Millepede dbo:wikiPageRedirects ?x . ?x dbo:wikiPageWikiLink ?uri },0,0,1,0.0,0.0,0.0,0
196,Which classes does the Millepede belong to?,Average of all prompts,SELECT DISTINCT ?String WHERE { res:Millipede dbp:taxon ?String },Average of all prompts,0,0,1,0.0,0.0,0.0,0
188,Give me the homepage of Forbes.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?string WHERE { res:Forbes foaf:homepage ?string },SELECT DISTINCT ?uri WHERE { res:Forbes dbo:homepage ?uri },0,0,1,0.0,0.0,0.0,0
188,Give me the homepage of Forbes.,Average of all prompts,SELECT DISTINCT ?string WHERE { res:Forbes foaf:homepage ?string },Average of all prompts,0,0,1,0.0,0.0,0.0,0
187,Who is the husband of Amanda Palmer?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amanda_Palmer> },SELECT DISTINCT ?uri WHERE { res:Amanda_Palmer dbo:spouse ?uri },0,0,1,0.0,0.0,0.0,0
187,Who is the husband of Amanda Palmer?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amanda_Palmer> },Average of all prompts,0,0,1,0.0,0.0,0.0,0
176,Who painted The Storm on the Sea of Galilee?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:The_Storm_on_the_Sea_of_Galilee dbo:author ?uri },SELECT DISTINCT ?uri WHERE { res:The_Storm_on_the_Sea_of_Galilee dbo:artist ?uri },0,0,1,0.0,0.0,0.0,0
176,Who painted The Storm on the Sea of Galilee?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:The_Storm_on_the_Sea_of_Galilee dbo:author ?uri },Average of all prompts,0,0,1,0.0,0.0,0.0,0
62,What is the highest place of Karakoram?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:Karakoram dbp:highest ?uri },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakoram> <http://dbpedia.org/property/highest> ?uri },1,0,0,1.0,1.0,1.0,1
62,What is the highest place of Karakoram?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Karakoram dbp:highest ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
173,When did Finland join the EU?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?date WHERE { res:Finland dbp:accessioneudate ?date },SELECT DISTINCT ?date WHERE { res:Finland dbo:accessDate ?date },0,0,1,0.0,0.0,0.0,0
173,When did Finland join the EU?,Average of all prompts,SELECT DISTINCT ?date WHERE { res:Finland dbp:accessioneudate ?date },Average of all prompts,0,0,1,0.0,0.0,0.0,0
168,Which actors play in Big Bang Theory?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Big_Bang_Theory> <http://dbpedia.org/ontology/starring> ?uri },SELECT DISTINCT ?uri WHERE { res:The_Big_Bang_Theory dbo:starring ?uri },10,0,0,1.0,1.0,1.0,1
168,Which actors play in Big Bang Theory?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Big_Bang_Theory> <http://dbpedia.org/ontology/starring> ?uri },Average of all prompts,10,0,0,1.0,1.0,1.0,1
166,Which computer scientist won an oscar?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Computer_science> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Academy_Award> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ComputerScientist> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Academy_Award> },0,0,1,0.0,0.0,0.0,0
166,Which computer scientist won an oscar?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Computer_science> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Academy_Award> },Average of all prompts,0,0,1,0.0,0.0,0.0,0
160,Who wrote Harry Potter?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Potter> <http://dbpedia.org/property/author> ?uri },SELECT DISTINCT ?uri WHERE { res:Harry_Potter dbo:author ?uri },0,0,1,0.0,0.0,0.0,0
160,Who wrote Harry Potter?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Potter> <http://dbpedia.org/property/author> ?uri },Average of all prompts,0,0,1,0.0,0.0,0.0,0
158,Give me all writers that won the Nobel Prize in literature.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> },21,0,0,1.0,1.0,1.0,1
158,Give me all writers that won the Nobel Prize in literature.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> },Average of all prompts,21,0,0,1.0,1.0,1.0,1
157,Give me English actors starring in Lovesick.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lovesick_(1983_film)> dbo:starring ?uri . ?uri dbo:birthPlace ?city . ?city dbo:country <http://dbpedia.org/resource/United_Kingdom> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Actor> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Lovesick_(2014_film)> ; <http://dbpedia.org/ontology/birthPlace> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> },0,0,2,0.0,0.0,0.0,0
157,Give me English actors starring in Lovesick.,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lovesick_(1983_film)> dbo:starring ?uri . ?uri dbo:birthPlace ?city . ?city dbo:country <http://dbpedia.org/resource/United_Kingdom> },Average of all prompts,0,0,2,0.0,0.0,0.0,0
155,What is the nick name of Baghdad?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?nm WHERE { dbr:Baghdad foaf:nick ?nm },SELECT DISTINCT ?string WHERE { res:Baghdad dbo:nickname ?string },0,0,1,0.0,0.0,0.0,0
155,What is the nick name of Baghdad?,Average of all prompts,SELECT ?nm WHERE { dbr:Baghdad foaf:nick ?nm },Average of all prompts,0,0,1,0.0,0.0,0.0,0
150,In which city was the president of Montenegro born?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/title> dbr:President_of_Montenegro ; dbo:birthPlace ?uri . ?uri dbo:type dbr:Capital_city },SELECT DISTINCT ?uri WHERE { res:President_of_Montenegro dbo:birthPlace ?x . ?x dbo:country res:Montenegro ; dbo:city ?uri },0,0,1,0.0,0.0,0.0,0
150,In which city was the president of Montenegro born?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/title> dbr:President_of_Montenegro ; dbo:birthPlace ?uri . ?uri dbo:type dbr:Capital_city },Average of all prompts,0,0,1,0.0,0.0,0.0,0
149,Which U.S. state has the highest population density?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/capital> ?capital . ?uri <http://dbpedia.org/property/densityrank> ?density . OPTIONAL {?uri <http://www.w3.org/2000/01/rdf-schema#label> ?string. FILTER (lang(?string) = 'en') } } ORDER BY ASC(?density) LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:PopulatedPlace ; dbo:country <http://dbpedia.org/resource/United_States> ; dbo:populationDensity ?pd } ORDER BY DESC(?pd) OFFSET 0 LIMIT 1,0,1,1,0.0,0.0,0.0,0
149,Which U.S. state has the highest population density?,Average of all prompts,SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/capital> ?capital . ?uri <http://dbpedia.org/property/densityrank> ?density . OPTIONAL {?uri <http://www.w3.org/2000/01/rdf-schema#label> ?string. FILTER (lang(?string) = 'en') } } ORDER BY ASC(?density) LIMIT 1,Average of all prompts,0,1,1,0.0,0.0,0.0,0
25,What is the longest river in China?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/China> ; <http://dbpedia.org/property/length> ?l } ORDER BY DESC(?l) OFFSET 0 LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/China> ; <http://dbpedia.org/ontology/length> ?l } ORDER BY DESC(?l) OFFSET 0 LIMIT 1,0,1,1,0.0,0.0,0.0,0
25,What is the longest river in China?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/China> ; <http://dbpedia.org/property/length> ?l } ORDER BY DESC(?l) OFFSET 0 LIMIT 1,Average of all prompts,0,1,1,0.0,0.0,0.0,0
143,What is the area code of Berlin?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?string WHERE { res:Berlin dbo:areaCode ?string },SELECT DISTINCT ?uri WHERE { res:Berlin dbo:areaCode ?uri },1,0,0,1.0,1.0,1.0,1
143,What is the area code of Berlin?,Average of all prompts,SELECT DISTINCT ?string WHERE { res:Berlin dbo:areaCode ?string },Average of all prompts,1,0,0,1.0,1.0,1.0,1
140,How many scientists graduated from an Ivy League university?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Scientist> ; <http://dbpedia.org/ontology/almaMater> ?university . ?university <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Ivy_League> ; a <http://dbpedia.org/ontology/University> },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Scientist> ; <http://dbpedia.org/ontology/almaMater> ?x . ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Ivy_League> },0,1,1,0.0,0.0,0.0,0
140,How many scientists graduated from an Ivy League university?,Average of all prompts,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Scientist> ; <http://dbpedia.org/ontology/almaMater> ?university . ?university <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Ivy_League> ; a <http://dbpedia.org/ontology/University> },Average of all prompts,0,1,1,0.0,0.0,0.0,0
139,Which professional surfers were born in Australia?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { { ?uri dbo:occupation res:Surfer ; dbo:birthPlace res:Australia } UNION { ?uri dbo:occupation res:Surfer ; dbo:birthPlace ?place . ?place dbo:country res:Australia } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Surfboarder> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Australia> },0,0,2,0.0,0.0,0.0,0
139,Which professional surfers were born in Australia?,Average of all prompts,SELECT DISTINCT ?uri WHERE { { ?uri dbo:occupation res:Surfer ; dbo:birthPlace res:Australia } UNION { ?uri dbo:occupation res:Surfer ; dbo:birthPlace ?place . ?place dbo:country res:Australia } },Average of all prompts,0,0,2,0.0,0.0,0.0,0
137,Give me all Dutch parties.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> },11,0,0,1.0,1.0,1.0,1
137,Give me all Dutch parties.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> },Average of all prompts,11,0,0,1.0,1.0,1.0,1
136,How many moons does Mars have?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Mars> <http://dbpedia.org/property/satellites> ?n },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Mars dbo:moon ?uri },0,1,1,0.0,0.0,0.0,0
136,How many moons does Mars have?,Average of all prompts,SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Mars> <http://dbpedia.org/property/satellites> ?n },Average of all prompts,0,1,1,0.0,0.0,0.0,0
134,What is Batman's real name?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?label WHERE { <http://dbpedia.org/resource/Batman> <http://xmlns.com/foaf/0.1/name> ?label FILTER ( str(?label) != ""Batman"" ) }",SELECT DISTINCT ?uri WHERE { res:Batman dbo:alias ?uri },0,0,1,0.0,0.0,0.0,0
134,What is Batman's real name?,Average of all prompts,"SELECT DISTINCT ?label WHERE { <http://dbpedia.org/resource/Batman> <http://xmlns.com/foaf/0.1/name> ?label FILTER ( str(?label) != ""Batman"" ) }",Average of all prompts,0,0,1,0.0,0.0,0.0,0
132,What is Elon Musk famous for?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elon_Musk> <http://dbpedia.org/ontology/knownFor> ?uri },SELECT DISTINCT ?uri WHERE { res:Elon_Musk dbo:occupation ?uri },0,1,6,0.0,0.0,0.0,0
132,What is Elon Musk famous for?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elon_Musk> <http://dbpedia.org/ontology/knownFor> ?uri },Average of all prompts,0,1,6,0.0,0.0,0.0,0
128,Who is the author of WikiLeaks?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri WHERE { res:WikiLeaks onto:author ?uri },SELECT DISTINCT ?uri WHERE { res:WikiLeaks dbo:author ?uri },1,0,0,1.0,1.0,1.0,1
128,Who is the author of WikiLeaks?,Average of all prompts,SELECT ?uri WHERE { res:WikiLeaks onto:author ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
126,Sean Parnell was the governor of which U.S. state?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:Sean_Parnell dbo:region ?uri },SELECT DISTINCT ?uri WHERE { res:Sean_Parnell dbo:governor ?uri },0,1,1,0.0,0.0,0.0,0
126,Sean Parnell was the governor of which U.S. state?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Sean_Parnell dbo:region ?uri },Average of all prompts,0,1,1,0.0,0.0,0.0,0
125,How many years was the Ford Model T manufactured?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?years WHERE { res:Ford_Model_T dbo:productionEndYear ?end ; dbo:productionStartYear ?start. BIND ( ( year(xsd:date(?end)) - year(xsd:date(?start)) ) AS ?years) },SELECT DISTINCT ?length WHERE { res:Ford_Model_T dbo:assemblyLength ?length },0,0,1,0.0,0.0,0.0,0
125,How many years was the Ford Model T manufactured?,Average of all prompts,SELECT ?years WHERE { res:Ford_Model_T dbo:productionEndYear ?end ; dbo:productionStartYear ?start. BIND ( ( year(xsd:date(?end)) - year(xsd:date(?start)) ) AS ?years) },Average of all prompts,0,0,1,0.0,0.0,0.0,0
124,When was Carlo Giuliani shot?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT xsd:date(?date) WHERE { res:Death_of_Carlo_Giuliani dbo:deathDate ?date },SELECT DISTINCT ?d WHERE { res:Carlo_Giuliani dbo:deathDate ?d },0,0,0,0.0,0.0,0.0,0
124,When was Carlo Giuliani shot?,Average of all prompts,SELECT DISTINCT xsd:date(?date) WHERE { res:Death_of_Carlo_Giuliani dbo:deathDate ?date },Average of all prompts,0,0,0,0.0,0.0,0.0,0
123,Give me all animals that are extinct.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/conservationStatus> ""EX"" }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/extinct> true },0,0,914,0.0,0.0,0.0,0
123,Give me all animals that are extinct.,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/conservationStatus> ""EX"" }",Average of all prompts,0,0,914,0.0,0.0,0.0,0
122,Who was the wife of President Lincoln?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri ?string WHERE { dbr:Abraham_Lincoln onto:spouse ?uri },SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:spouse ?uri },1,0,0,1.0,1.0,1.0,1
122,Who was the wife of President Lincoln?,Average of all prompts,SELECT ?uri ?string WHERE { dbr:Abraham_Lincoln onto:spouse ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
111,How many awards has Bertrand Russell?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT (COUNT(?Awards) AS ?Counter) WHERE { dbr:Bertrand_Russell dbp:awards ?Awards },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { <http://dbpedia.org/resource/Bertrand_Russell> <http://dbpedia.org/ontology/award> ?uri },0,1,1,0.0,0.0,0.0,0
111,How many awards has Bertrand Russell?,Average of all prompts,SELECT (COUNT(?Awards) AS ?Counter) WHERE { dbr:Bertrand_Russell dbp:awards ?Awards },Average of all prompts,0,1,1,0.0,0.0,0.0,0
117,Is Pamela Anderson a vegan?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",ASK WHERE { dbr:Pamela_Anderson a <http://dbpedia.org/class/yago/WikicatAmericanVegans> },ASK WHERE { res:Pamela_Anderson dbo:diet dbr:Veganism },0,1,1,0.0,0.0,0.0,0
117,Is Pamela Anderson a vegan?,Average of all prompts,ASK WHERE { dbr:Pamela_Anderson a <http://dbpedia.org/class/yago/WikicatAmericanVegans> },Average of all prompts,0,1,1,0.0,0.0,0.0,0
59,Which space probes were sent into orbit around the sun?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?s WHERE { ?s dct:subject dbc:Missions_to_the_Sun ; rdf:type ?type FILTER ( ?type IN (dbo:Satellite, dbo:ArtificialSatellite) ) }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SpaceProbe> ; <http://dbpedia.org/ontology/Orbit> <http://dbpedia.org/resource/Heliocentric_orbit> },0,0,16,0.0,0.0,0.0,0
59,Which space probes were sent into orbit around the sun?,Average of all prompts,"SELECT DISTINCT ?s WHERE { ?s dct:subject dbc:Missions_to_the_Sun ; rdf:type ?type FILTER ( ?type IN (dbo:Satellite, dbo:ArtificialSatellite) ) }",Average of all prompts,0,0,16,0.0,0.0,0.0,0
113,Which German cities have more than 250000 inhabitants?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/City> } UNION { ?uri a <http://dbpedia.org/ontology/Town> } ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> ; <http://dbpedia.org/ontology/populationTotal> ?population FILTER ( ?population > 250000 ) },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/City> ; <http://dbpedia.org/ontology/populationTotal> ?pop ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> FILTER ( ?pop > 250000 ) },20,0,5,1.0,0.8,0.888888888888889,0
113,Which German cities have more than 250000 inhabitants?,Average of all prompts,SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/City> } UNION { ?uri a <http://dbpedia.org/ontology/Town> } ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> ; <http://dbpedia.org/ontology/populationTotal> ?population FILTER ( ?population > 250000 ) },Average of all prompts,20,0,5,1.0,0.8,0.888888888888889,0
104,Who is the daughter of Robert Kennedy married to?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_F._Kennedy> <http://dbpedia.org/ontology/child> ?child . ?child <http://dbpedia.org/ontology/spouse> ?uri },SELECT DISTINCT ?uri WHERE { res:Robert_F._Kennedy dbo:child ?child . ?child dbo:spouse ?uri },1,0,0,1.0,1.0,1.0,1
104,Who is the daughter of Robert Kennedy married to?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_F._Kennedy> <http://dbpedia.org/ontology/child> ?child . ?child <http://dbpedia.org/ontology/spouse> ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
10,How many students does the Free University of Amsterdam have?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?num WHERE { dbr:Vrije_Universiteit_Amsterdam <http://dbpedia.org/ontology/numberOfStudents> ?num },SELECT DISTINCT ?num WHERE { res:Vrije_Universiteit_Amsterdam dbo:numberOfStudents ?num },1,0,0,1.0,1.0,1.0,1
10,How many students does the Free University of Amsterdam have?,Average of all prompts,SELECT DISTINCT ?num WHERE { dbr:Vrije_Universiteit_Amsterdam <http://dbpedia.org/ontology/numberOfStudents> ?num },Average of all prompts,1,0,0,1.0,1.0,1.0,1
1,What is the revenue of IBM?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?number WHERE { res:IBM onto:revenue ?number },SELECT DISTINCT ?num WHERE { res:IBM dbo:revenue ?num },1,0,0,1.0,1.0,1.0,1
1,What is the revenue of IBM?,Average of all prompts,SELECT ?number WHERE { res:IBM onto:revenue ?number },Average of all prompts,1,0,0,1.0,1.0,1.0,1
178,How many James Bond movies do exist?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri dct:subject <http://dbpedia.org/resource/Category:James_Bond_films> },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/James_Bond> },0,1,1,0.0,0.0,0.0,0
178,How many James Bond movies do exist?,Average of all prompts,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri dct:subject <http://dbpedia.org/resource/Category:James_Bond_films> },Average of all prompts,0,1,1,0.0,0.0,0.0,0
129,Who does the voice of Bart Simpson?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bart_Simpson> <http://dbpedia.org/property/voiceactor> ?uri },SELECT DISTINCT ?uri WHERE { res:Bart_Simpson dbo:voice ?uri },0,0,1,0.0,0.0,0.0,0
129,Who does the voice of Bart Simpson?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bart_Simpson> <http://dbpedia.org/property/voiceactor> ?uri },Average of all prompts,0,0,1,0.0,0.0,0.0,0
183,Who was Tom Hanks married to?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { dbr:Tom_Hanks dbo:spouse ?uri },SELECT DISTINCT ?uri WHERE { res:Tom_Hanks dbo:spouse ?uri },1,0,0,1.0,1.0,1.0,1
183,Who was Tom Hanks married to?,Average of all prompts,SELECT DISTINCT ?uri WHERE { dbr:Tom_Hanks dbo:spouse ?uri },Average of all prompts,1,0,0,1.0,1.0,1.0,1
181,Through which countries does the Yenisei river flow?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:Yenisei_River <http://dbpedia.org/ontology/country> ?uri },SELECT DISTINCT ?uri WHERE { res:Yenisei dbo:throughMountain ?x . ?x dbo:country ?uri },0,0,2,0.0,0.0,0.0,0
181,Through which countries does the Yenisei river flow?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Yenisei_River <http://dbpedia.org/ontology/country> ?uri },Average of all prompts,0,0,2,0.0,0.0,0.0,0
7,Give me all cars that are produced in Germany.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Automobile> { ?uri <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Germany> } UNION { ?uri <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Germany> } UNION { { ?uri <http://dbpedia.org/ontology/manufacturer> ?x } UNION { ?uri <http://dbpedia.org/property/manufacturer> ?x } { ?x <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Germany> } UNION { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Germany> } } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Automobile> ; <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Germany> },212,0,281,1.0,0.4300202839756592,0.601418439716312,0
7,Give me all cars that are produced in Germany.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Automobile> { ?uri <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Germany> } UNION { ?uri <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Germany> } UNION { { ?uri <http://dbpedia.org/ontology/manufacturer> ?x } UNION { ?uri <http://dbpedia.org/property/manufacturer> ?x } { ?x <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Germany> } UNION { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Germany> } } },Average of all prompts,212,0,281,1.0,0.4300202839756592,0.601418439716312,0
135,When did Michael Jackson die?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Michael_Jackson> <http://dbpedia.org/ontology/deathDate> ?date },SELECT DISTINCT ?d WHERE { res:Michael_Jackson dbo:deathDate ?d },1,0,0,1.0,1.0,1.0,1
135,When did Michael Jackson die?,Average of all prompts,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Michael_Jackson> <http://dbpedia.org/ontology/deathDate> ?date },Average of all prompts,1,0,0,1.0,1.0,1.0,1
50,What is the highest volcano in Africa?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> ?area . ?area dct:subject dbc:Countries_in_Africa . ?uri <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/elevation> ?elevation ; <http://dbpedia.org/ontology/isPartOf> <http://dbpedia.org/resource/Africa> } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1,0,0,1,0.0,0.0,0.0,0
50,What is the highest volcano in Africa?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> ?area . ?area dct:subject dbc:Countries_in_Africa . ?uri <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) LIMIT 1,Average of all prompts,0,0,1,0.0,0.0,0.0,0
39,Which poet wrote the most books?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Poet> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> { ?x <http://dbpedia.org/ontology/author> ?uri } UNION { ?x <http://dbpedia.org/ontology/writer> ?uri } UNION { ?x <http://dbpedia.org/property/author> ?uri } UNION { ?x <http://dbpedia.org/property/writer> ?uri } UNION { ?x <http://www.w3.org/2004/02/skos/core#subject> <http://dbpedia.org/resource/Category:Poetry_books> } ?x a <http://dbpedia.org/ontology/Book> } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1,0,1,1,0.0,0.0,0.0,0
39,Which poet wrote the most books?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Poet> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1,Average of all prompts,0,1,1,0.0,0.0,0.0,0
83,Give me all gangsters from the prohibition era.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Gangster ; dct:subject dbc:Prohibition-era_gangsters },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Gangster> ; <http://dbpedia.org/ontology/Prohibition> ?x },0,0,22,0.0,0.0,0.0,0
83,Give me all gangsters from the prohibition era.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Gangster ; dct:subject dbc:Prohibition-era_gangsters },Average of all prompts,0,0,22,0.0,0.0,0.0,0
71,Give me all spacecrafts that flew to Mars.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?s WHERE { ?s dct:subject dbc:Mars_rovers ; rdf:type ?type FILTER ( ?type IN (dbo:Satellite, dbo:ArtificialSatellite) ) }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Spacecraft> ; <http://dbpedia.org/ontology/destinationPlanet> <http://dbpedia.org/resource/Mars> },0,0,14,0.0,0.0,0.0,0
71,Give me all spacecrafts that flew to Mars.,Average of all prompts,"SELECT DISTINCT ?s WHERE { ?s dct:subject dbc:Mars_rovers ; rdf:type ?type FILTER ( ?type IN (dbo:Satellite, dbo:ArtificialSatellite) ) }",Average of all prompts,0,0,14,0.0,0.0,0.0,0
213,Show me all Czech movies.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> },48,0,0,1.0,1.0,1.0,1
213,Show me all Czech movies.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> },Average of all prompts,48,0,0,1.0,1.0,1.0,1
209,Give me all taikonauts.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/People's_Republic_of_China> } UNION { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/China> } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Taikonaut> },0,0,7,0.0,0.0,0.0,0
209,Give me all taikonauts.,Average of all prompts,SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/People's_Republic_of_China> } UNION { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/China> } },Average of all prompts,0,0,7,0.0,0.0,0.0,0
105,Which countries have more than ten volcanoes?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?x a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> ?uri . ?uri a <http://dbpedia.org/ontology/Country> } GROUP BY ?uri HAVING ( COUNT(?x) > 10 ),SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PopulatedPlace> { ?volcano a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/country> ?uri } UNION { ?volcano a <http://dbpedia.org/class/yago-GeoObject110020067> ; <http://dbpedia.org/property/country> ?uri } } GROUP BY ?uri HAVING ( COUNT(?volcano) > 10 ),0,0,18,0.0,0.0,0.0,0
105,Which countries have more than ten volcanoes?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?x a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> ?uri . ?uri a <http://dbpedia.org/ontology/Country> } GROUP BY ?uri HAVING ( COUNT(?x) > 10 ),Average of all prompts,0,0,18,0.0,0.0,0.0,0
52,Give me all movies with Tom Cruise.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Film { ?uri prop:starring res:Tom_Cruise } UNION { ?uri onto:starring res:Tom_Cruise } OPTIONAL { ?uri rdfs:label ?string FILTER ( lang(?string) = ""en"" ) } }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Tom_Cruise> },26,0,0,1.0,1.0,1.0,1
52,Give me all movies with Tom Cruise.,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Film { ?uri prop:starring res:Tom_Cruise } UNION { ?uri onto:starring res:Tom_Cruise } OPTIONAL { ?uri rdfs:label ?string FILTER ( lang(?string) = ""en"" ) } }",Average of all prompts,26,0,0,1.0,1.0,1.0,1
102,When did Dracula's creator die?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT xsd:date(?date) WHERE { <http://dbpedia.org/resource/Count_Dracula> <http://dbpedia.org/ontology/creator> ?x . ?x <http://dbpedia.org/ontology/deathDate> ?date. },SELECT DISTINCT ?date WHERE { res:Bram_Stoker dbo:notableWork ?work . ?work dbo:author ?author . ?author dbo:deathDate ?date },1,1,0,0.5,1.0,0.6666666666666666,0
102,When did Dracula's creator die?,Average of all prompts,SELECT DISTINCT xsd:date(?date) WHERE { <http://dbpedia.org/resource/Count_Dracula> <http://dbpedia.org/ontology/creator> ?x . ?x <http://dbpedia.org/ontology/deathDate> ?date. },Average of all prompts,1,1,0,0.5,1.0,0.6666666666666666,0
21,Who created English Wikipedia?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri WHERE { <http://dbpedia.org/resource/Wikipedia> onto:author ?uri },SELECT DISTINCT ?uri WHERE { res:English_Wikipedia dbo:author ?uri },2,0,0,1.0,1.0,1.0,1
21,Who created English Wikipedia?,Average of all prompts,SELECT ?uri WHERE { <http://dbpedia.org/resource/Wikipedia> onto:author ?uri },Average of all prompts,2,0,0,1.0,1.0,1.0,1
34,Give me all female German chancellors.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:Chancellor_of_Germany dbp:incumbent ?uri },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Chancellor> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> ; <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Female> },0,0,1,0.0,0.0,0.0,0
34,Give me all female German chancellors.,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Chancellor_of_Germany dbp:incumbent ?uri },Average of all prompts,0,0,1,0.0,0.0,0.0,0
145,Who owns Aldi?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:Aldi dbp:founders ?uri },SELECT DISTINCT ?uri WHERE { res:Aldi dbo:owner ?uri },0,0,2,0.0,0.0,0.0,0
145,Who owns Aldi?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Aldi dbp:founders ?uri },Average of all prompts,0,0,2,0.0,0.0,0.0,0
154,Which books were written by Danielle Steel?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri WHERE { ?uri rdf:type onto:Book ; onto:author <http://dbpedia.org/resource/Danielle_Steel> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Danielle_Steel> },47,0,0,1.0,1.0,1.0,1
154,Which books were written by Danielle Steel?,Average of all prompts,SELECT ?uri WHERE { ?uri rdf:type onto:Book ; onto:author <http://dbpedia.org/resource/Danielle_Steel> },Average of all prompts,47,0,0,1.0,1.0,1.0,1
198,Who was influenced by Socrates?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Socrates> },SELECT DISTINCT ?uri WHERE { res:Socrates dbo:influenced ?uri },4,1,18,0.8,0.18181818181818182,0.2962962962962963,0
198,Who was influenced by Socrates?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Socrates> },Average of all prompts,4,1,18,0.8,0.18181818181818182,0.2962962962962963,0
162,How deep is Lake Chiemsee?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Chiemsee> <http://dbpedia.org/ontology/maximumDepth> ?n },SELECT DISTINCT ?num WHERE { res:Lake_Chiemsee dbo:maximumDepth ?num },0,0,1,0.0,0.0,0.0,0
162,How deep is Lake Chiemsee?,Average of all prompts,SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Chiemsee> <http://dbpedia.org/ontology/maximumDepth> ?n },Average of all prompts,0,0,1,0.0,0.0,0.0,0
212,Which companies work in the aerospace industry as well as in medicine?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a dbo:Company ; dbo:industry dbr:Aerospace ; dbo:industry dbr:Medical },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Aerospace> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Medicine> } },2,737,0,0.0027063599458728013,1.0,0.005398110661268557,0
212,Which companies work in the aerospace industry as well as in medicine?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a dbo:Company ; dbo:industry dbr:Aerospace ; dbo:industry dbr:Medical },Average of all prompts,2,737,0,0.0027063599458728013,1.0,0.005398110661268557,0
96,Which professional surfers were born on the Philippines?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Surfer ; dbo:birthPlace res:Philippines },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Surfboarder> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Philippines> },0,0,1,0.0,0.0,0.0,0
96,Which professional surfers were born on the Philippines?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Surfer ; dbo:birthPlace res:Philippines },Average of all prompts,0,0,1,0.0,0.0,0.0,0
40,Who were the parents of Queen Victoria?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:Queen_Victoria dbo:parent ?uri },SELECT DISTINCT ?uri WHERE { res:Queen_Victoria dbo:parent ?uri },2,0,0,1.0,1.0,1.0,1
40,Who were the parents of Queen Victoria?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Queen_Victoria dbo:parent ?uri },Average of all prompts,2,0,0,1.0,1.0,1.0,1
79,Are there any castles in the United States?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",ASK WHERE { ?uri dct:subject dbc:Castles_in_the_United_States },ASK WHERE { ?uri rdf:type dbo:Castle ; dbo:country res:United_States },0,1,1,0.0,0.0,0.0,0
79,Are there any castles in the United States?,Average of all prompts,ASK WHERE { ?uri dct:subject dbc:Castles_in_the_United_States },Average of all prompts,0,1,1,0.0,0.0,0.0,0
141,Which languages are spoken in Estonia?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spokenIn> <http://dbpedia.org/resource/Estonia> },SELECT DISTINCT ?uri WHERE { res:Estonia dbo:language ?uri },2,1,6,0.6666666666666666,0.25,0.36363636363636365,0
141,Which languages are spoken in Estonia?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spokenIn> <http://dbpedia.org/resource/Estonia> },Average of all prompts,2,1,6,0.6666666666666666,0.25,0.36363636363636365,0
80,Give me a list of all critically endangered birds.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?uri ?p WHERE { ?uri rdf:type dbo:Bird { ?uri dbo:conservationStatus ""CR"" } UNION { ?uri dct:subject dbc:Critically_endangered_animals } }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Bird> ; <http://dbpedia.org/ontology/conservationStatus> <http://dbpedia.org/resource/Critically_Endangered> },0,0,198,0.0,0.0,0.0,0
80,Give me a list of all critically endangered birds.,Average of all prompts,"SELECT DISTINCT ?uri ?p WHERE { ?uri rdf:type dbo:Bird { ?uri dbo:conservationStatus ""CR"" } UNION { ?uri dct:subject dbc:Critically_endangered_animals } }",Average of all prompts,0,0,198,0.0,0.0,0.0,0
159,Which countries are connected by the Rhine?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { {<http://dbpedia.org/resource/Rhine> dbo:country ?uri } UNION {dbr:Rhine dbp:country ?uri} },SELECT DISTINCT ?uri WHERE { res:Rhine dbo:country ?uri },5,0,6,1.0,0.45454545454545453,0.625,0
159,Which countries are connected by the Rhine?,Average of all prompts,SELECT DISTINCT ?uri WHERE { {<http://dbpedia.org/resource/Rhine> dbo:country ?uri } UNION {dbr:Rhine dbp:country ?uri} },Average of all prompts,5,0,6,1.0,0.45454545454545453,0.625,0
107,Who was the father of Queen Elizabeth II?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT * WHERE { res:Elizabeth_II dbo:parent ?uri . ?uri <http://xmlns.com/foaf/0.1/gender> ""male""@en }",SELECT DISTINCT ?uri WHERE { res:Elizabeth_II dbo:parent ?uri . ?uri dbo:birthDate ?date } ORDER BY ASC(?date) OFFSET 0 LIMIT 1,1,0,0,1.0,1.0,1.0,1
107,Who was the father of Queen Elizabeth II?,Average of all prompts,"SELECT DISTINCT * WHERE { res:Elizabeth_II dbo:parent ?uri . ?uri <http://xmlns.com/foaf/0.1/gender> ""male""@en }",Average of all prompts,1,0,0,1.0,1.0,1.0,1
163,Give me all chemical elements.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri rdf:type owl:Thing ; dct:subject dbc:Chemical_elements },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ChemicalElement> },0,1,119,0.0,0.0,0.0,0
163,Give me all chemical elements.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type owl:Thing ; dct:subject dbc:Chemical_elements },Average of all prompts,0,1,119,0.0,0.0,0.0,0
211,Give me all American presidents of the last 20 years.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Person ; dct:subject dbc:Presidents_of_the_United_States ; dbo:activeYearsEndDate ?termEnd FILTER ( ( year(now()) - year(?termEnd) ) <= 20 ) },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/President> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> ; <http://dbpedia.org/ontology/years> ?date FILTER ( year(?date) > 1996 ) },0,0,2,0.0,0.0,0.0,0
211,Give me all American presidents of the last 20 years.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Person ; dct:subject dbc:Presidents_of_the_United_States ; dbo:activeYearsEndDate ?termEnd FILTER ( ( year(now()) - year(?termEnd) ) <= 20 ) },Average of all prompts,0,0,2,0.0,0.0,0.0,0
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?rel WHERE { <http://dbpedia.org/resource/Worst_Case_Scenario_(film)> ?p ?o ; dbo:releaseDate ?rel FILTER contains(lcase(str(?o)), ""netherlands"") }",SELECT DISTINCT ?d WHERE { res:Worst_Case_Scenario dbo:country res:Netherlands ; dbo:releaseDate ?d },0,0,1,0.0,0.0,0.0,0
51,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,Average of all prompts,"SELECT DISTINCT ?rel WHERE { <http://dbpedia.org/resource/Worst_Case_Scenario_(film)> ?p ?o ; dbo:releaseDate ?rel FILTER contains(lcase(str(?o)), ""netherlands"") }",Average of all prompts,0,0,1,0.0,0.0,0.0,0
144,Whom did Lance Bass marry?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { {<http://dbpedia.org/resource/Lance_Bass> dbo:spouse ?uri} UNION {?uri dbo:spouse <http://dbpedia.org/resource/Lance_Bass>} },SELECT DISTINCT ?uri WHERE { res:Lance_Bass dbo:spouse ?uri },1,0,0,1.0,1.0,1.0,1
144,Whom did Lance Bass marry?,Average of all prompts,SELECT DISTINCT ?uri WHERE { {<http://dbpedia.org/resource/Lance_Bass> dbo:spouse ?uri} UNION {?uri dbo:spouse <http://dbpedia.org/resource/Lance_Bass>} },Average of all prompts,1,0,0,1.0,1.0,1.0,1
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/TUI_Travel> <http://dbpedia.org/ontology/subsidiary> ?uri . ?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_International_Airport> ; <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Dublin_Airport> },SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:subsidiary res:TUI_Travel ; dbo:serviceArea res:Glasgow ; dbo:serviceArea res:Dublin },0,0,1,0.0,0.0,0.0,0
167,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/TUI_Travel> <http://dbpedia.org/ontology/subsidiary> ?uri . ?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_International_Airport> ; <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Dublin_Airport> },Average of all prompts,0,0,1,0.0,0.0,0.0,0
131,What languages are spoken in Pakistan?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pakistan> <http://dbpedia.org/ontology/language> ?uri },SELECT DISTINCT ?uri WHERE { res:Pakistan dbo:language ?uri },16,0,0,1.0,1.0,1.0,1
131,What languages are spoken in Pakistan?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pakistan> <http://dbpedia.org/ontology/language> ?uri },Average of all prompts,16,0,0,1.0,1.0,1.0,1
120,Who is the daughter of Bill Clinton married to?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { dbr:Bill_Clinton dbo:child ?child . ?child dbo:spouse ?uri . ?uri rdfs:label ?string },SELECT DISTINCT ?uri WHERE { res:Chelsea_Clinton dbo:spouse ?uri },1,0,0,1.0,1.0,1.0,1
120,Who is the daughter of Bill Clinton married to?,Average of all prompts,SELECT DISTINCT ?uri WHERE { dbr:Bill_Clinton dbo:child ?child . ?child dbo:spouse ?uri . ?uri rdfs:label ?string },Average of all prompts,1,0,0,1.0,1.0,1.0,1
164,Who was on the Apollo 11 mission?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apollo_11> <http://dbpedia.org/property/crewMembers> ?uri },SELECT DISTINCT ?uri WHERE { res:Apollo_11 dbo:astronaut ?uri },0,0,3,0.0,0.0,0.0,0
164,Who was on the Apollo 11 mission?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apollo_11> <http://dbpedia.org/property/crewMembers> ?uri },Average of all prompts,0,0,3,0.0,0.0,0.0,0
88,What is the wavelength of Indigo?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?n WHERE { dbr:Indigo dbo:wavelength ?n },SELECT DISTINCT ?num WHERE { res:Indigo dbo:wavelength ?num },1,0,0,1.0,1.0,1.0,1
88,What is the wavelength of Indigo?,Average of all prompts,SELECT ?n WHERE { dbr:Indigo dbo:wavelength ?n },Average of all prompts,1,0,0,1.0,1.0,1.0,1
151,Give me all B-sides of the Ramones.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?string WHERE { ?x dbo:musicalArtist res:Ramones ; dbo:bSide ?string },SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/bSide> <http://dbpedia.org/resource/Ramones> },0,0,11,0.0,0.0,0.0,0
151,Give me all B-sides of the Ramones.,Average of all prompts,SELECT DISTINCT ?string WHERE { ?x dbo:musicalArtist res:Ramones ; dbo:bSide ?string },Average of all prompts,0,0,11,0.0,0.0,0.0,0
63,Who was called Scarface?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT ?uri WHERE { ?uri dbo:alias ?alias FILTER contains(lcase(?alias), ""scarface"") }",SELECT DISTINCT ?uri WHERE { ?uri dbo:alias res:Scarface },0,0,2,0.0,0.0,0.0,0
63,Who was called Scarface?,Average of all prompts,"SELECT ?uri WHERE { ?uri dbo:alias ?alias FILTER contains(lcase(?alias), ""scarface"") }",Average of all prompts,0,0,2,0.0,0.0,0.0,0
27,Which rivers flow into the North Sea?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea> },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/North_Sea> },0,11,17,0.0,0.0,0.0,0
27,Which rivers flow into the North Sea?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea> },Average of all prompts,0,11,17,0.0,0.0,0.0,0
156,Where is Fort Knox located?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Knox> <http://dbpedia.org/ontology/location> ?uri. ?uri a <http://dbpedia.org/ontology/Place>. },SELECT DISTINCT ?uri WHERE { res:Fort_Knox dbo:location ?uri },1,0,0,1.0,1.0,1.0,1
156,Where is Fort Knox located?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Knox> <http://dbpedia.org/ontology/location> ?uri. ?uri a <http://dbpedia.org/ontology/Place>. },Average of all prompts,1,0,0,1.0,1.0,1.0,1
207,Which daughters of British earls died at the same place they were born at?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatDaughtersOfBritishEarls ; dbo:birthPlace ?x ; dbo:deathPlace ?y FILTER ( ?x = ?y ) },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology:Earl> ; <http://dbpedia.org/ontology:child> ?child ; <http://dbpedia.org/ontology:birthPlace> ?bp1 ; <http://dbpedia.org/ontology:deathPlace> ?dp1 . ?child <http://dbpedia.org/ontology:birthPlace> ?bp2 ; <http://dbpedia.org/ontology:deathPlace> ?dp2 FILTER ( ?bp1 = ?bp2 && ?dp1 = ?dp2 ) },0,0,13,0.0,0.0,0.0,0
207,Which daughters of British earls died at the same place they were born at?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatDaughtersOfBritishEarls ; dbo:birthPlace ?x ; dbo:deathPlace ?y FILTER ( ?x = ?y ) },Average of all prompts,0,0,13,0.0,0.0,0.0,0
24,How many emperors did China have?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT COUNT(DISTINCT ?uri AS ?uri) WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Emperor_of_China> . },"SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Emperor> ; <http://dbpedia.org/ontology/reign> ?r FILTER regex(?r, ""China"") }",0,1,1,0.0,0.0,0.0,0
24,How many emperors did China have?,Average of all prompts,SELECT COUNT(DISTINCT ?uri AS ?uri) WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Emperor_of_China> . },Average of all prompts,0,1,1,0.0,0.0,0.0,0
133,What are the names of the Teenage Mutant Ninja Turtles?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles> <http://dbpedia.org/property/members> ?x . ?x foaf:givenName ?s },SELECT DISTINCT ?uri WHERE { res:Teenage_Mutant_Ninja_Turtles dbo:character ?uri },0,0,4,0.0,0.0,0.0,0
133,What are the names of the Teenage Mutant Ninja Turtles?,Average of all prompts,PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles> <http://dbpedia.org/property/members> ?x . ?x foaf:givenName ?s },Average of all prompts,0,0,4,0.0,0.0,0.0,0
103,Where does Piccadilly start?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Piccadilly> },SELECT DISTINCT ?uri WHERE { res:Piccadilly ?uri ?x . ?x dbo:direction <http://dbpedia.org/resource/West> },0,0,1,0.0,0.0,0.0,0
103,Where does Piccadilly start?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Piccadilly> },Average of all prompts,0,0,1,0.0,0.0,0.0,0
165,What is the name of the university where Obama's wife studied?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Barack_Obama> <http://dbpedia.org/ontology/spouse> ?x . ?x <http://dbpedia.org/ontology/almaMater> ?s },SELECT DISTINCT ?uri WHERE { res:Michelle_Obama dbo:almaMater ?uri . ?uri dbo:type res:University },0,0,2,0.0,0.0,0.0,0
165,What is the name of the university where Obama's wife studied?,Average of all prompts,SELECT DISTINCT ?s WHERE { <http://dbpedia.org/resource/Barack_Obama> <http://dbpedia.org/ontology/spouse> ?x . ?x <http://dbpedia.org/ontology/almaMater> ?s },Average of all prompts,0,0,2,0.0,0.0,0.0,0
108,When did Paraguay proclaim its independence?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Paraguay> <http://dbpedia.org/ontology/foundingDate> ?date },SELECT DISTINCT ?d WHERE { res:Paraguay dbo:independenceDate ?d },0,0,2,0.0,0.0,0.0,0
108,When did Paraguay proclaim its independence?,Average of all prompts,SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Paraguay> <http://dbpedia.org/ontology/foundingDate> ?date },Average of all prompts,0,0,2,0.0,0.0,0.0,0
15,How short is the shortest active NBA player?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?n WHERE { ?x a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association> ; <http://dbpedia.org/ontology/height> ?n FILTER NOT EXISTS { ?x <http://dbpedia.org/ontology/activeYearsEndYear> ?d } } ORDER BY ASC(?n) OFFSET 0 LIMIT 1,"SELECT (MIN(?height) AS ?min) WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_States> ; <http://dbpedia.org/ontology/height> ?height FILTER regex(?uri, ""NBA"") }",0,0,1,0.0,0.0,0.0,0
15,How short is the shortest active NBA player?,Average of all prompts,SELECT DISTINCT ?n WHERE { ?x a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association> ; <http://dbpedia.org/ontology/height> ?n FILTER NOT EXISTS { ?x <http://dbpedia.org/ontology/activeYearsEndYear> ?d } } ORDER BY ASC(?n) OFFSET 0 LIMIT 1,Average of all prompts,0,0,1,0.0,0.0,0.0,0
45,Where did Abraham Lincoln die?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri },SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri },2,0,0,1.0,1.0,1.0,1
45,Where did Abraham Lincoln die?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri },Average of all prompts,2,0,0,1.0,1.0,1.0,1
82,When was Jack Wolfskin founded?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT xsd:date(?year) WHERE { res:Jack_Wolfskin dbo:foundingYear ?year },SELECT DISTINCT ?date WHERE { res:Jack_Wolfskin dbo:foundationDate ?date },0,0,1,0.0,0.0,0.0,0
82,When was Jack Wolfskin founded?,Average of all prompts,SELECT DISTINCT xsd:date(?year) WHERE { res:Jack_Wolfskin dbo:foundingYear ?year },Average of all prompts,0,0,1,0.0,0.0,0.0,0
9,In which city is the headquarter of Air China?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_China> <http://dbpedia.org/ontology/headquarter> ?uri . ?uri a <http://dbpedia.org/class/yago/City108524735> },SELECT DISTINCT ?uri WHERE { res:Air_China dbo:headquarter ?x . ?x dbo:city ?uri },0,0,1,0.0,0.0,0.0,0
9,In which city is the headquarter of Air China?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_China> <http://dbpedia.org/ontology/headquarter> ?uri . ?uri a <http://dbpedia.org/class/yago/City108524735> },Average of all prompts,0,0,1,0.0,0.0,0.0,0
201,What is the founding year of the brewery that produces Pilsner Urquell?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT xsd:date(?num) WHERE { <http://dbpedia.org/resource/Pilsner_Urquell> <http://dbpedia.org/property/brewery> ?uri . ?uri dbo:foundingYear ?num },SELECT DISTINCT ?uri WHERE { res:Pilsner_Urquell dbo:producer ?x . ?x dbo:foundationYear ?uri },0,0,1,0.0,0.0,0.0,0
201,What is the founding year of the brewery that produces Pilsner Urquell?,Average of all prompts,SELECT DISTINCT xsd:date(?num) WHERE { <http://dbpedia.org/resource/Pilsner_Urquell> <http://dbpedia.org/property/brewery> ?uri . ?uri dbo:foundingYear ?num },Average of all prompts,0,0,1,0.0,0.0,0.0,0
171,When did the Boston Tea Party take place?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?d WHERE { <http://dbpedia.org/resource/Boston_Tea_Party> <http://dbpedia.org/property/date> ?d },SELECT DISTINCT ?d WHERE { res:Boston_Tea_Party dbo:date ?d },0,0,1,0.0,0.0,0.0,0
171,When did the Boston Tea Party take place?,Average of all prompts,SELECT DISTINCT ?d WHERE { <http://dbpedia.org/resource/Boston_Tea_Party> <http://dbpedia.org/property/date> ?d },Average of all prompts,0,0,1,0.0,0.0,0.0,0
182,Which animals are critically endangered?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/conservationStatus> ""CR"" }",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/conservationStatus> <http://dbpedia.org/resource/Critically_Endangered> },0,0,1503,0.0,0.0,0.0,0
182,Which animals are critically endangered?,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/conservationStatus> ""CR"" }",Average of all prompts,0,0,1503,0.0,0.0,0.0,0
13,Which politicians were married to a German?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/spouse> ?spouse { ?spouse <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> } UNION { ?spouse <http://dbpedia.org/ontology/birthPlace> ?p . ?p <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/spouse> ?s . ?s <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> },0,0,11,0.0,0.0,0.0,0
13,Which politicians were married to a German?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/spouse> ?spouse { ?spouse <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> } UNION { ?spouse <http://dbpedia.org/ontology/birthPlace> ?p . ?p <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> } },Average of all prompts,0,0,11,0.0,0.0,0.0,0
114,How big is the earth's diameter?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT (( xsd:double(?radius) * 2 ) AS ?diameter) WHERE { res:Earth dbo:meanRadius ?radius },SELECT ?diameter WHERE { dbr:Earth dbo:diameter ?diameter },0,0,1,0.0,0.0,0.0,0
114,How big is the earth's diameter?,Average of all prompts,SELECT DISTINCT (( xsd:double(?radius) * 2 ) AS ?diameter) WHERE { res:Earth dbo:meanRadius ?radius },Average of all prompts,0,0,1,0.0,0.0,0.0,0
92,Is the wife of President Obama called Michelle?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","ASK WHERE { res:Barack_Obama onto:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, ""Michelle"") }",ASK WHERE { res:Barack_Obama dbo:spouse res:Michelle_Obama },1,0,0,1.0,1.0,1.0,1
92,Is the wife of President Obama called Michelle?,Average of all prompts,"ASK WHERE { res:Barack_Obama onto:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, ""Michelle"") }",Average of all prompts,1,0,0,1.0,1.0,1.0,1
194,Which U.S. state has the abbreviation MN?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?uri WHERE { ?uri a yago:WikicatStatesOfTheUnitedStates ; <http://dbpedia.org/property/postalabbreviation> ""MN""^^<http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> }","SELECT DISTINCT ?uri WHERE { ?uri dbo:country res:United_States ; dbp:postalabbreviation ""MN"" }",0,0,1,0.0,0.0,0.0,0
194,Which U.S. state has the abbreviation MN?,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri a yago:WikicatStatesOfTheUnitedStates ; <http://dbpedia.org/property/postalabbreviation> ""MN""^^<http://www.w3.org/1999/02/22-rdf-syntax-ns#langString> }",Average of all prompts,0,0,1,0.0,0.0,0.0,0
175,When did Muhammad die?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT xsd:date(?date) WHERE { res:Muhammad dbo:deathDate ?date },SELECT DISTINCT ?d WHERE { res:Muhammad dbo:deathDate ?d },1,1,0,0.5,1.0,0.6666666666666666,0
175,When did Muhammad die?,Average of all prompts,SELECT DISTINCT xsd:date(?date) WHERE { res:Muhammad dbo:deathDate ?date },Average of all prompts,1,1,0,0.5,1.0,0.6666666666666666,0
26,What is the atmosphere of the Moon composed of?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moon> <http://dbpedia.org/property/atmosphereComposition> ?uri },SELECT DISTINCT ?uri WHERE { res:Moon dbo:atmosphere ?uri },0,0,7,0.0,0.0,0.0,0
26,What is the atmosphere of the Moon composed of?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moon> <http://dbpedia.org/property/atmosphereComposition> ?uri },Average of all prompts,0,0,7,0.0,0.0,0.0,0
60,Who is the governor of Texas?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?string WHERE { res:Texas dbp:governor ?string },SELECT DISTINCT ?uri WHERE { res:Texas dbo:governor ?uri },0,0,1,0.0,0.0,0.0,0
60,Who is the governor of Texas?,Average of all prompts,SELECT DISTINCT ?string WHERE { res:Texas dbp:governor ?string },Average of all prompts,0,0,1,0.0,0.0,0.0,0
110,Which movies did Kurosawa direct?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:director res:Akira_Kurosawa },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Akira_Kurosawa> },32,0,0,1.0,1.0,1.0,1
110,Which movies did Kurosawa direct?,Average of all prompts,SELECT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:director res:Akira_Kurosawa },Average of all prompts,32,0,0,1.0,1.0,1.0,1
206,What was the name of the famous battle in 1836 in San Antonio?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT ?uri WHERE { ?uri a dbo:MilitaryConflict ; dbo:place dbr:San_Antonio ; dbo:date ?date FILTER ( ?date > ""1835-12-31T00:00:00Z""^^xsd:dateTime ) FILTER ( ?date <= ""1836-12-31T00:00:00Z""^^xsd:dateTime ) }","SELECT DISTINCT ?uri WHERE { ?uri dbo:date ""1836-03-06""^^xsd:date ; dbo:place res:San_Antonio }",1,0,0,1.0,1.0,1.0,1
206,What was the name of the famous battle in 1836 in San Antonio?,Average of all prompts,"SELECT ?uri WHERE { ?uri a dbo:MilitaryConflict ; dbo:place dbr:San_Antonio ; dbo:date ?date FILTER ( ?date > ""1835-12-31T00:00:00Z""^^xsd:dateTime ) FILTER ( ?date <= ""1836-12-31T00:00:00Z""^^xsd:dateTime ) }",Average of all prompts,1,0,0,1.0,1.0,1.0,1
97,Give me the official websites of actors of the television show Charmed.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charmed> onto:starring ?actors . ?actors foaf:homepage ?uri },SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/officialWebsite> ?uri },0,0,2,0.0,0.0,0.0,0
97,Give me the official websites of actors of the television show Charmed.,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charmed> onto:starring ?actors . ?actors foaf:homepage ?uri },Average of all prompts,0,0,2,0.0,0.0,0.0,0
20,How many calories does a baguette have?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Baguette> <http://dbpedia.org/property/calories> ?n },SELECT DISTINCT ?calories WHERE { res:Baguette dbo:calories ?calories },0,0,1,0.0,0.0,0.0,0
20,How many calories does a baguette have?,Average of all prompts,SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Baguette> <http://dbpedia.org/property/calories> ?n },Average of all prompts,0,0,1,0.0,0.0,0.0,0
169,Give me all libraries established before 1400.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/property/established> ?year FILTER ( ?year < 1400 ) },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/ontology/openingYear> ?date FILTER ( ?date < 1400 ) },0,0,11,0.0,0.0,0.0,0
169,Give me all libraries established before 1400.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/property/established> ?year FILTER ( ?year < 1400 ) },Average of all prompts,0,0,11,0.0,0.0,0.0,0
38,Give me all Frisian islands that belong to the Netherlands.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatFrisianIslands ; dbo:country res:Netherlands },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Island> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> ; <http://dbpedia.org/ontology/ethnicGroups> <http://dbpedia.org/resource/Frisians> },0,0,1,0.0,0.0,0.0,0
38,Give me all Frisian islands that belong to the Netherlands.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatFrisianIslands ; dbo:country res:Netherlands },Average of all prompts,0,0,1,0.0,0.0,0.0,0
192,Which museum exhibits The Scream by Munch?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:The_Scream dbo:museum ?uri },SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Museum ; dbo:exhibition res:The_Scream },0,0,1,0.0,0.0,0.0,0
192,Which museum exhibits The Scream by Munch?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:The_Scream dbo:museum ?uri },Average of all prompts,0,0,1,0.0,0.0,0.0,0
78,When was the De Beers company founded?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT xsd:date(?date) WHERE { res:De_Beers dbo:foundingYear ?date },SELECT DISTINCT ?date WHERE { res:De_Beers dbo:foundationDate ?date },0,0,1,0.0,0.0,0.0,0
78,When was the De Beers company founded?,Average of all prompts,SELECT DISTINCT xsd:date(?date) WHERE { res:De_Beers dbo:foundingYear ?date },Average of all prompts,0,0,1,0.0,0.0,0.0,0
19,Who became president after JFK died?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/property/presidentEnd> ?x . ?uri <http://dbpedia.org/property/presidentStart> ?x; a <http://dbpedia.org/ontology/Person>. },SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathDate ?date . ?uri dbo:birthDate ?date },0,28,1,0.0,0.0,0.0,0
19,Who became president after JFK died?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/property/presidentEnd> ?x . ?uri <http://dbpedia.org/property/presidentStart> ?x; a <http://dbpedia.org/ontology/Person>. },Average of all prompts,0,28,1,0.0,0.0,0.0,0
190,Who are the parents of the wife of Juan Carlos I?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { res:Juan_Carlos_I_of_Spain dbo:spouse ?x . ?x dbo:parent ?uri },SELECT DISTINCT ?uri WHERE { res:Juan_Carlos_I_of_Spain dbo:spouse ?spouse . ?spouse dbo:parent ?uri },2,0,0,1.0,1.0,1.0,1
190,Who are the parents of the wife of Juan Carlos I?,Average of all prompts,SELECT DISTINCT ?uri WHERE { res:Juan_Carlos_I_of_Spain dbo:spouse ?x . ?x dbo:parent ?uri },Average of all prompts,2,0,0,1.0,1.0,1.0,1
174,Who is the novelist of the work a song of ice and fire?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?Novelist WHERE { dbr:A_Song_of_Ice_and_Fire dbp:author ?Novelist },SELECT DISTINCT ?uri WHERE { res:A_Song_of_Ice_and_Fire dbo:author ?uri },0,0,1,0.0,0.0,0.0,0
174,Who is the novelist of the work a song of ice and fire?,Average of all prompts,SELECT ?Novelist WHERE { dbr:A_Song_of_Ice_and_Fire dbp:author ?Novelist },Average of all prompts,0,0,1,0.0,0.0,0.0,0
189,In which studio did the Beatles record their first album?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?studio WHERE { ?album dbo:artist dbr:The_Beatles ; rdf:type dbo:Album ; dbo:releaseDate ?date ; dbp:studio ?studio } ORDER BY ASC(?date) LIMIT 1,SELECT DISTINCT ?uri WHERE { res:The_Beatles dbo:recordedIn ?uri },0,0,1,0.0,0.0,0.0,0
189,In which studio did the Beatles record their first album?,Average of all prompts,SELECT ?studio WHERE { ?album dbo:artist dbr:The_Beatles ; rdf:type dbo:Album ; dbo:releaseDate ?date ; dbp:studio ?studio } ORDER BY ASC(?date) LIMIT 1,Average of all prompts,0,0,1,0.0,0.0,0.0,0
152,Which beer brewing companies are located in North-Rhine Westphalia?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?company WHERE { ?company dct:subject dbc:Companies_based_in_North_Rhine-Westphalia ; rdf:type dbo:Brewery },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Brewery> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/North_Rhine-Westphalia> },0,0,4,0.0,0.0,0.0,0
152,Which beer brewing companies are located in North-Rhine Westphalia?,Average of all prompts,SELECT ?company WHERE { ?company dct:subject dbc:Companies_based_in_North_Rhine-Westphalia ; rdf:type dbo:Brewery },Average of all prompts,0,0,4,0.0,0.0,0.0,0
94,When did princess Diana die?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT xsd:date(?d) WHERE { <http://dbpedia.org/resource/Diana,_Princess_of_Wales> <http://dbpedia.org/ontology/deathDate> ?d }","SELECT DISTINCT ?d WHERE { res:Diana,_Princess_of_Wales dbo:deathDate ?d }",0,0,1,0.0,0.0,0.0,0
94,When did princess Diana die?,Average of all prompts,"SELECT DISTINCT xsd:date(?d) WHERE { <http://dbpedia.org/resource/Diana,_Princess_of_Wales> <http://dbpedia.org/ontology/deathDate> ?d }",Average of all prompts,0,0,1,0.0,0.0,0.0,0
8,Who founded Intel?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Intel> <http://dbpedia.org/property/founders> ?uri },SELECT DISTINCT ?uri WHERE { res:Intel dbo:companyFounded ?uri },0,0,2,0.0,0.0,0.0,0
8,Who founded Intel?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Intel> <http://dbpedia.org/property/founders> ?uri },Average of all prompts,0,0,2,0.0,0.0,0.0,0
95,Who is the youngest player in the Premier League?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri dbo:team ?team . ?league dbo:league res:Premier_League . ?league dbo:team ?team . ?uri dbo:birthDate ?date } ORDER BY DESC(?date) LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:SoccerPlayer ; dbo:league res:Premier_League ; dbo:birthDate ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1,0,0,1,0.0,0.0,0.0,0
95,Who is the youngest player in the Premier League?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri dbo:team ?team . ?league dbo:league res:Premier_League . ?league dbo:team ?team . ?uri dbo:birthDate ?date } ORDER BY DESC(?date) LIMIT 1,Average of all prompts,0,0,1,0.0,0.0,0.0,0
119,Which instruments does Cat Stevens play?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cat_Stevens> <http://dbpedia.org/ontology/instrument> ?uri },SELECT DISTINCT ?uri WHERE { res:Cat_Stevens dbo:instrument ?uri },10,0,0,1.0,1.0,1.0,1
119,Which instruments does Cat Stevens play?,Average of all prompts,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cat_Stevens> <http://dbpedia.org/ontology/instrument> ?uri },Average of all prompts,10,0,0,1.0,1.0,1.0,1
115,How many rivers and lakes are in South Carolina?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT (COUNT(DISTINCT ?uri) AS ?count) WHERE { { ?uri dbo:location dbr:South_Carolina ; rdf:type dbo:Lake } UNION { ?uri dct:subject dbc:Rivers_and_streams_of_South_Carolina } },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/South_Carolina> } UNION { ?uri a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/South_Carolina> },0,0,1,0.0,0.0,0.0,0
115,How many rivers and lakes are in South Carolina?,Average of all prompts,SELECT (COUNT(DISTINCT ?uri) AS ?count) WHERE { { ?uri dbo:location dbr:South_Carolina ; rdf:type dbo:Lake } UNION { ?uri dct:subject dbc:Rivers_and_streams_of_South_Carolina } },Average of all prompts,0,0,1,0.0,0.0,0.0,0
116,Who was called Rodzilla?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.","SELECT DISTINCT ?uri WHERE { ?uri <http://xmlns.com/foaf/0.1/nick> ""Rodzilla""@en }","SELECT DISTINCT ?uri WHERE { ?uri dbo:alias ""Rodzilla""@en }",0,0,1,0.0,0.0,0.0,0
116,Who was called Rodzilla?,Average of all prompts,"SELECT DISTINCT ?uri WHERE { ?uri <http://xmlns.com/foaf/0.1/nick> ""Rodzilla""@en }",Average of all prompts,0,0,1,0.0,0.0,0.0,0
138,Give me the capitals of all countries in Africa.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?country dct:subject dbc:Countries_in_Africa ; dbo:capital ?uri },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Settlement> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Countries_in_Africa> },0,0,59,0.0,0.0,0.0,0
138,Give me the capitals of all countries in Africa.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?country dct:subject dbc:Countries_in_Africa ; dbo:capital ?uri },Average of all prompts,0,0,59,0.0,0.0,0.0,0
177,Which bridges are of the same type as the Manhattan Bridge?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?bridge WHERE { dbr:Manhattan_Bridge dbo:type ?type . ?bridge dbo:type ?type ; rdf:type dbo:Bridge },SELECT DISTINCT ?uri WHERE { res:Manhattan_Bridge dbo:bridgeType ?x . ?uri dbo:bridgeType ?x FILTER ( ?uri != res:Manhattan_Bridge ) },0,0,160,0.0,0.0,0.0,0
177,Which bridges are of the same type as the Manhattan Bridge?,Average of all prompts,SELECT DISTINCT ?bridge WHERE { dbr:Manhattan_Bridge dbo:type ?type . ?bridge dbo:type ?type ; rdf:type dbo:Bridge },Average of all prompts,0,0,160,0.0,0.0,0.0,0
101,How many companies were founded by the founder of Facebook?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT (COUNT(DISTINCT ?x) AS ?c) WHERE { <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/foundedBy> ?uri . ?x <http://dbpedia.org/ontology/foundedBy> ?uri },SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Company> ; <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Mark_Zuckerberg> },0,1,1,0.0,0.0,0.0,0
101,How many companies were founded by the founder of Facebook?,Average of all prompts,SELECT (COUNT(DISTINCT ?x) AS ?c) WHERE { <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/foundedBy> ?uri . ?x <http://dbpedia.org/ontology/foundedBy> ?uri },Average of all prompts,0,1,1,0.0,0.0,0.0,0
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/trailheads> <http://dbpedia.org/resource/Grand_Canyon> FILTER NOT EXISTS { ?uri <http://dbpedia.org/property/hazards> <http://dbpedia.org/resource/Flash_flood> } },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/HikingTrail> ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Grand_Canyon> ; <http://dbpedia.org/ontology/elevationChange> ?elevation { ?uri <http://dbpedia.org/ontology/danger> <http://dbpedia.org/resource/Flash_flood> } UNION { FILTER NOT EXISTS { ?uri <http://dbpedia.org/ontology/danger> <http://dbpedia.org/resource/Flash_flood> } } } ORDER BY ?elevation OFFSET 0 LIMIT 100,0,0,1,0.0,0.0,0.0,0
14,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/trailheads> <http://dbpedia.org/resource/Grand_Canyon> FILTER NOT EXISTS { ?uri <http://dbpedia.org/property/hazards> <http://dbpedia.org/resource/Flash_flood> } },Average of all prompts,0,0,1,0.0,0.0,0.0,0
87,Which book has the most pages?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:numberOfPages ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/numberOfPages> ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1,1,0,0,1.0,1.0,1.0,1
87,Which book has the most pages?,Average of all prompts,SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:numberOfPages ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1,Average of all prompts,1,0,0,1.0,1.0,1.0,1
148,What is the largest state in the United States?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri WHERE { ?uri dct:subject dbc:States_of_the_United_States ; rdf:type dbo:AdministrativeRegion ; dbo:areaTotal ?area } ORDER BY DESC(?area) OFFSET 0 LIMIT 1,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PopulatedPlace> ; <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/United_States> },0,0,1,0.0,0.0,0.0,0
148,What is the largest state in the United States?,Average of all prompts,SELECT ?uri WHERE { ?uri dct:subject dbc:States_of_the_United_States ; rdf:type dbo:AdministrativeRegion ; dbo:areaTotal ?area } ORDER BY DESC(?area) OFFSET 0 LIMIT 1,Average of all prompts,0,0,1,0.0,0.0,0.0,0
43,Give me the websites of companies with more than 500000 employees.,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT distinct ?web WHERE { ?sub dbo:numberOfEmployees ?obj . ?sub foaf:homepage ?web FILTER( xsd:integer(?obj) > 500000 ) . },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Information_technology_consulting> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Information_technology> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Computer_hardware> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Computer_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Telecommunication> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Internet> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Telecommunications_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_hardware_and_software> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_service> } UNION { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Networking_equipment> } UNION { ?uri <http://dbpedia.org/ontology/industry,0,0,37,0.0,0.0,0.0,0
43,Give me the websites of companies with more than 500000 employees.,Average of all prompts,SELECT distinct ?web WHERE { ?sub dbo:numberOfEmployees ?obj . ?sub foaf:homepage ?web FILTER( xsd:integer(?obj) > 500000 ) . },Average of all prompts,0,0,37,0.0,0.0,0.0,0
179,What were the names of the three ships by Columbus?,"Develop a system capable of generating SPARQL queries for DBPedia based on user questions in natural language, with a knowledge base updated until October 2016. The system should exclusively respond with SPARQL queries and no additional information.",SELECT ?uri WHERE { ?uri rdf:type dbo:Ship ; dct:subject dbc:Christopher_Columbus ; dct:subject dbc:Exploration_ships },SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Ship> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> ; <http://dbpedia.org/ontology/captain> <http://dbpedia.org/resource/Christopher_Columbus> },0,0,3,0.0,0.0,0.0,0
179,What were the names of the three ships by Columbus?,Average of all prompts,SELECT ?uri WHERE { ?uri rdf:type dbo:Ship ; dct:subject dbc:Christopher_Columbus ; dct:subject dbc:Exploration_ships },Average of all prompts,0,0,3,0.0,0.0,0.0,0
