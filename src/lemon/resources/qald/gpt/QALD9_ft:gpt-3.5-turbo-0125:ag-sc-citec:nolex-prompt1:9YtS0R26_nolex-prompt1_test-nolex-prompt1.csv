id,question,sparql,prompt
,What is the time zone of Salt Lake City?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Salt_Lake_City dbo:timeZone ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who killed Caesar?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Assassination_of_Julius_Caesar dbo:deathPlace ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the highest mountain in Germany?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:type dbr:Mountain ; dbo:elevation ?elevation ; dbo:locatedInArea dbr:Germany } ORDER BY DESC(?elevation) LIMIT 1,Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which American presidents were in office during the Vietnam War?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/President> ; <http://dbpedia.org/ontology/office> <http://dbpedia.org/resource/Presidency_of_the_United_States> ; <http://dbpedia.org/ontology/termPeriod> <http://dbpedia.org/resource/Vietnam_War> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Butch Otter is the governor of which U.S. state?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:governor res:Butch_Otter },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many gold medals did Michael Phelps win at the 2008 Olympics?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri dbo:goldMedal res:Swimming_at_the_2008_Summer_Olympics_%E2%80%93_Men's_4_x_100_metre_medley_relay ; dbo:goldMedal res:Swimming_at_the_2008_Summer_Olympics_%E2%80%93_Men's_100_metre_butterfly ; dbo:goldMedal res:Swimming_at_the_2008_Summer_Olympics_%E2%80%93_Men's_200_metre_butterfly ; dbo:goldMedal res:Swimming_at_the_2008_Summer_Olympics_%E2%80%93_Men's_200_metre_freestyle ; dbo:goldMedal res:Swimming_at_the_2008_Summer_Olympics_%E2%80%93_Men's_400_metre_individual_medley ; dbo:goldMedal res:Swimming_at_the_2008_Summer_Olympics_%E2%80%93_Men's_4_x_100_metre_freestyle_relay ; dbo:goldMedal res:Swimming_at_the_2008_Summer_Olympics_%E2%80%93_Men's_4_x_200_metre_freestyle_relay },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which artists were born on the same date as Rachel Stevens?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rachel_Stevens dbo:birthDate ?date . ?uri dbo:birthDate ?date FILTER ( ?uri != res:Rachel_Stevens ) },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the profession of Frank Herbert?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Frank_Herbert dbo:occupation ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Are Taiko some kind of Japanese musical instrument?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Taiko dbo:classification ""Japanese percussion instrument""@en }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many seats does the home stadium of FC Porto have?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:FC_Porto dbo:ground ?x . ?x dbo:seatingCapacity ?n },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which frequent flyer program has the most airlines?,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/FrequentFlyerProgram> { ?airline a <http://dbpedia.org/ontology/Airline> ; <http://dbpedia.org/ontology/frequentFlyer> ?uri } UNION { ?airline a <http://dbpedia.org/ontology/Airline> ; <http://dbpedia.org/ontology/award> ?award FILTER regex(?award, ""Frequent-flyer program"") } } ORDER BY DESC(COUNT(DISTINCT ?airline)) OFFSET 0 LIMIT 1",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which European countries have a constitutional monarchy?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Constitutional_monarchy> ; <http://dbpedia.org/ontology/continent> <http://dbpedia.org/resource/Europe> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which countries have places with more than two caves?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> { ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place> . ?x <http://dbpedia.org/ontology/location> ?uri . ?x <http://dbpedia.org/property/caves> ?caves . FILTER ( ?caves > 2 ) } UNION { ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cave> . ?x <http://dbpedia.org/ontology/location> ?uri } },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,"Which airports are located in California, USA?",SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airport> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What are the nicknames of San Francisco?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:San_Francisco dbo:nickname ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is Angela Merkelâ€™s birth name?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Angela_Merkel dbo:birthName ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who is the mayor of Berlin?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Berlin dbo:mayor ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which countries in the European Union adopted the Euro?,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> ; <http://dbpedia.org/property/officialLanguages> ?lang FILTER regex(?lang, ""European Union"") }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which software has been published by Mean Hamster Software?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:publisher res:Mean_Hamster_Software },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which country was Bill Gates born in?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bill_Gates dbo:birthPlace ?uri . ?uri dbo:country ?x },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many grand-children did Jacques Cousteau have?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:Jacques_Cousteau dbo:grandChild ?uri . ?uri dbo:wikiPageID ?n },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all professional skateboarders from Sweden.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Skateboarder> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Sweden> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which monarchs of the United Kingdom were married to a German?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Monarch> ; <http://dbpedia.org/ontology/spouse> ?s . ?s <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all Argentine films.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Argentina> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How did Michael Jackson die?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?abstract WHERE { res:Michael_Jackson dbo:abstract ?abstract . FILTER langMatches(lang(?abstract), ""en"") }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which U.S. state has been admitted latest?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PopulatedPlace> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> ; <http://dbpedia.org/ontology/formationDate> ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1,Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which classes does the Millepede belong to?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Millepede dbo:wikiPageWikiLink ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me the homepage of Forbes.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Forbes dbo:homepage ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who is the husband of Amanda Palmer?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Amanda_Palmer dbo:spouse ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who painted The Storm on the Sea of Galilee?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Storm_on_the_Sea_of_Galilee dbo:author ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the highest place of Karakoram?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Karakoram dbo:elevationAsl ?uri } ORDER BY DESC(?uri) OFFSET 0 LIMIT 1,Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,When did Finland join the EU?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Finland dbo:accessionDate ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which actors play in Big Bang Theory?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:starring res:The_Big_Bang_Theory },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which computer scientist won an oscar?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Scientist> ; <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Academy_Award> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who wrote Harry Potter?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Harry_Potter dbo:author ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all writers that won the Nobel Prize in literature.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me English actors starring in Lovesick.,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:starring res:Lovesick ; dbo:birthPlace res:England },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the nick name of Baghdad?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Baghdad dbo:nickname ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,In which city was the president of Montenegro born?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:President_of_Montenegro dbo:birthPlace ?uri . ?uri dbo:country res:Montenegro },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which U.S. state has the highest population density?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PopulatedPlace> ; <http://dbpedia.org/ontology/populationDensity> ?density ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> } ORDER BY DESC(?density) OFFSET 0 LIMIT 1,Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the longest river in China?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:River ; dbo:length ?l ; dbo:country res:China . } ORDER BY DESC(?l) OFFSET 0 LIMIT 1,Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the area code of Berlin?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Berlin dbo:areaCode ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many scientists graduated from an Ivy League university?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Scientist> ; <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ivy_League> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which professional surfers were born in Australia?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Surfer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Australia> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all Dutch parties.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many moons does Mars have?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?numMoons WHERE { res:Mars dbo:numberOfMoons ?numMoons },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is Batman's real name?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Batman dbo:realName ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is Elon Musk famous for?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Elon_Musk dbo:knownFor ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who is the author of WikiLeaks?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:WikiLeaks dbo:author ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Sean Parnell was the governor of which U.S. state?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:governor <http://dbpedia.org/resource/Sean_Parnell> . ?uri dbo:country res:United_States },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many years was the Ford Model T manufactured?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?date) AS ?c) WHERE { res:Ford_Model_T dbo:assemblyEndDate ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,When was Carlo Giuliani shot?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Carlo_Giuliani dbo:date ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all animals that are extinct.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/extinct> <http://dbpedia.org/resource/Extinction> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who was the wife of President Lincoln?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:spouse ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many awards has Bertrand Russell?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Bertrand_Russell dbo:award ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Is Pamela Anderson a vegan?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Pamela_Anderson dbo:diet <http://dbpedia.org/resource/Veganism> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which space probes were sent into orbit around the sun?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SpaceProbe> ; <http://dbpedia.org/ontology/Orbit> <http://dbpedia.org/resource/Sun> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which German cities have more than 250000 inhabitants?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/City> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> ; <http://dbpedia.org/ontology/populationTotal> ?n FILTER ( ?n > 250000 ) },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who is the daughter of Robert Kennedy married to?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Robert_F._Kennedy dbo:child ?child . ?child dbo:spouse ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many students does the Free University of Amsterdam have?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Vrije_Universiteit_Amsterdam dbo:numberOfStudents ?num },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the revenue of IBM?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:IBM dbo:revenue ?num },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many James Bond movies do exist?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/agent> <http://dbpedia.org/resource/James_Bond> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who does the voice of Bart Simpson?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bart_Simpson dbo:voiceActor ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who was Tom Hanks married to?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Tom_Hanks dbo:spouse ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Through which countries does the Yenisei river flow?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Yenisei dbo:mouthThrough ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all cars that are produced in Germany.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Automobile> ; <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Germany> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,When did Michael Jackson die?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Michael_Jackson dbo:deathDate ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the highest volcano in Africa?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/elevation> ?elevation ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Africa> } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1,Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which poet wrote the most books?,SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . ?x <http://dbpedia.org/ontology/author> ?uri . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1,Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all gangsters from the prohibition era.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Gangster> ; <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Prohibition_era> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all spacecrafts that flew to Mars.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Spacecraft> ; <http://dbpedia.org/ontology/destination> <http://dbpedia.org/resource/Mars> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Show me all Czech movies.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Czech_Republic> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all taikonauts.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Taikonaut> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which countries have more than ten volcanoes?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PopulatedPlace> ; <http://dbpedia.org/ontology/numberOfVolcanoes> ?n FILTER ( ?n > 10 ) },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all movies with Tom Cruise.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Tom_Cruise> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,When did Dracula's creator die?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Bram_Stoker dbo:deathDate ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who created English Wikipedia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:English_Wikipedia dbo:author ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all female German chancellors.,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Chancellor> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> ; <http://dbpedia.org/ontology/gender> ""female"" }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who owns Aldi?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Aldi dbo:owner ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which books were written by Danielle Steel?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Danielle_Steel> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who was influenced by Socrates?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Socrates dbo:influenced ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How deep is Lake Chiemsee?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Lake_Chiemsee dbo:maxDepth ?num },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which companies work in the aerospace industry as well as in medicine?,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> ; <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Aerospace> , <http://dbpedia.org/resource/Medicine> }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which professional surfers were born on the Philippines?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Surfer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Philippines> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who were the parents of Queen Victoria?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Queen_Victoria dbo:parent ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Are there any castles in the United States?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?uri rdf:type dbo:Castle ; dbo:country res:United_States },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which languages are spoken in Estonia?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Estonia dbo:language ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me a list of all critically endangered birds.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Bird> ; <http://dbpedia.org/ontology/conservationStatus> <http://dbpedia.org/resource/Critically_Endangered> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which countries are connected by the Rhine?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rhine dbo:country ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who was the father of Queen Elizabeth II?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Elizabeth_II dbo:parent ?uri . ?uri dbo:deathDate ?date } ORDER BY ASC(?date) OFFSET 1 LIMIT 1,Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all chemical elements.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ChemicalElement> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all American presidents of the last 20 years.,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/President> ; <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> ; <http://dbpedia.org/ontology/office> <http://dbpedia.org/resource/President_of_the_United_States> ; <http://dbpedia.org/ontology/years> ?date FILTER ( ?date > ""1996-01-01""^^xsd:date ) }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Worst_Case_Scenario dbo:country res:Netherlands ; dbo:releaseDate ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Whom did Lance Bass marry?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Lance_Bass dbo:spouse ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which subsidiary of TUI Travel serves both Glasgow and Dublin?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:subsidiary res:TUI_Travel ; dbo:serviceArea res:Glasgow_International_Airport , res:Dublin_Airport }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What languages are spoken in Pakistan?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Pakistan dbo:language ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who is the daughter of Bill Clinton married to?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chelsea_Clinton dbo:spouse ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who was on the Apollo 11 mission?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Apollo_11 dbo:astronaut ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the wavelength of Indigo?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Indigo dbo:wavelength ?num },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all B-sides of the Ramones.,SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/bSide> <http://dbpedia.org/resource/Ramones> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who was called Scarface?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:alias res:Scarface },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which rivers flow into the North Sea?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> ; <http://dbpedia.org/ontology/mouth> <http://dbpedia.org/resource/North_Sea> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Where is Fort Knox located?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Fort_Knox dbo:location ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which daughters of British earls died at the same place they were born at?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/ontology/deathPlace> ?x ; <http://dbpedia.org/ontology/birthPlace> ?y ; <http://dbpedia.org/ontology/parent> ?z . ?z <http://dbpedia.org/ontology/title> <http://dbpedia.org/resource/Earl> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> FILTER ( ?x = ?y ) },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many emperors did China have?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Emperor> ; <http://dbpedia.org/ontology/reign> <http://dbpedia.org/resource/China> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What are the names of the Teenage Mutant Ninja Turtles?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Teenage_Mutant_Ninja_Turtles dbo:character ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Where does Piccadilly start?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Piccadilly_line dbo:start ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the name of the university where Obama's wife studied?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Michelle_Obama dbo:almaMater ?uri . ?uri dbo:type res:University },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,When did Paraguay proclaim its independence?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Paraguay dbo:independenceDate ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How short is the shortest active NBA player?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (MIN(?height) AS ?minHeight) WHERE { ?player dbo:height ?height ; dbo:activeYearsStartYear ?year FILTER ( ?year > 2015 ) },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Where did Abraham Lincoln die?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,When was Jack Wolfskin founded?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Jack_Wolfskin dbo:formationDate ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,In which city is the headquarter of Air China?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Air_China dbo:headquarter ?x . ?x dbo:city ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the founding year of the brewery that produces Pilsner Urquell?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Pilsner_Urquell dbo:producer ?x . ?x dbo:foundationYear ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,When did the Boston Tea Party take place?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Boston_Tea_Party dbo:date ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which animals are critically endangered?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Animal> ; <http://dbpedia.org/ontology/threatenedstatus> <http://dbpedia.org/resource/Critically_Endangered> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which politicians were married to a German?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/spouse> ?s . ?s <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Germany> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How big is the earth's diameter?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?diameter WHERE { dbr:Earth dbo:diameter ?diameter },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Is the wife of President Obama called Michelle?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:spouse res:Michelle_Obama },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which U.S. state has the abbreviation MN?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:country res:United_States ; dbo:postalAbbreviation ""MN"" }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,When did Muhammad die?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Muhammad dbo:deathDate ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the atmosphere of the Moon composed of?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Moon dbo:atmosphere ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who is the governor of Texas?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Texas dbo:governor ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which movies did Kurosawa direct?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Akira_Kurosawa },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What was the name of the famous battle in 1836 in San Antonio?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Battle_of_the_Alamo dbo:date ""1836-03-06""^^xsd:date ; dbo:battleName ?uri }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me the official websites of actors of the television show Charmed.,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/officialWebsite> ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many calories does a baguette have?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?calories WHERE { res:Baguette dbo:calories ?calories },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all libraries established before 1400.,"SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/ontology/openingYear> ?date FILTER ( ?date < ""1400-01-01""^^xsd:date ) }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me all Frisian islands that belong to the Netherlands.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Island> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Frisian_Islands> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which museum exhibits The Scream by Munch?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:exhibition res:The_Scream },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,When was the De Beers company founded?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:De_Beers dbo:foundationDate ?date },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who became president after JFK died?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:succeededBy ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who are the parents of the wife of Juan Carlos I?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Juan_Carlos_I dbo:spouse ?spouse . ?spouse dbo:parent ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who is the novelist of the work a song of ice and fire?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:A_Song_of_Ice_and_Fire dbo:author ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,In which studio did the Beatles record their first album?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Please_Please_Me dbo:recordedIn ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which beer brewing companies are located in North-Rhine Westphalia?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> ; <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Beer> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/North_Rhine-Westphalia> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,When did princess Diana die?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Diana,_Princess_of_Wales dbo:deathDate ?date }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who founded Intel?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Intel dbo:companyFounder ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who is the youngest player in the Premier League?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerPlayer> ; <http://dbpedia.org/ontology/birthDate> ?date ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Premier_League> } ORDER BY DESC(?date) OFFSET 0 LIMIT 1,Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which instruments does Cat Stevens play?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Cat_Stevens dbo:instrument ?uri },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many rivers and lakes are in South Carolina?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/BodyOfWater> ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/South_Carolina> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Who was called Rodzilla?,"PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri dbo:alias ""Rodzilla""@en }",Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me the capitals of all countries in Africa.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Settlement> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Countries_in_Africa> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which bridges are of the same type as the Manhattan Bridge?,SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manhattan_Bridge> <http://dbpedia.org/ontology/type> ?type . ?uri <http://dbpedia.org/ontology/type> ?type },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,How many companies were founded by the founder of Facebook?,SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { <http://dbpedia.org/resource/Mark_Zuckerberg> <http://dbpedia.org/ontology/founder> ?x . ?uri <http://dbpedia.org/ontology/founder> ?x },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Show me hiking trails in the Grand Canyon where there's no danger of flash floods.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/HikingTrail> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Grand_Canyon> ; <http://dbpedia.org/ontology/flashFloodRisk> <http://dbpedia.org/resource/Low> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Which book has the most pages?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/numberOfPages> ?x } ORDER BY DESC(?x) OFFSET 0 LIMIT 1,Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What is the largest state in the United States?,PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:type dbr:U.S._state ; dbo:areaTotal ?n } ORDER BY DESC(?n) LIMIT 1,Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,Give me the websites of companies with more than 500000 employees.,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> ; <http://dbpedia.org/ontology/numberOfEmployees> ?n FILTER ( ?n > 500000 ) },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
,What were the names of the three ships by Columbus?,SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Ship> ; <http://dbpedia.org/ontology/captain> <http://dbpedia.org/resource/Christopher_Columbus> },Generate SPARQL queries from user questions for DBpedia from October 2016. Answer solely with SPARQL queries.
